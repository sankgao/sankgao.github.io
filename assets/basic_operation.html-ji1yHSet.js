import{_ as t}from"./welcome-aS8qKLdu.js";import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as d,c,b as e,e as a,d as s,f as n}from"./app-Km5fQS2n.js";const g="/assets/search-yqN_XlaH.jpg",u="/assets/browse-L7HA7OSu.jpg",h="/assets/upload-XhSuUKNm.jpg",m="/assets/server_admin_config-wvWy2P3y.jpg",f="/assets/manage_repo-9FYS3Mlp.jpg",b="/assets/config_blob-jm_DkdlH.jpg",v="/assets/create_blob-_D4wBrPn.jpg",_="/assets/create_maven_proxy-Tp77YPEy.jpg",y="/assets/config_maven_proxy01-9DJ0EbgO.jpg",x="/assets/config_maven_proxy02-YhRI3ULi.jpg",i="/assets/config_maven_proxy03-FsFBXqxK.jpg",r="/assets/create_maven_hosted-V12vbvlu.jpg",k="/assets/config_maven_hosted01-yPS56QRq.jpg",B="/assets/config_maven_snapshot-w5L5ppi5.jpg",S="/assets/create_maven_group-erXwp5Uz.jpg",z="/assets/config_maven_group01-7qHXDkhZ.jpg",w="/assets/config_maven_group02-tAe5hwXm.jpg",j="/assets/upload_component-H2aL1R-k.jpg",N="/assets/config_upload01-9vqBChHc.jpg",R="/assets/look_upload--LqDAovs.jpg",q="/assets/config_upload02-vCVJB1SN.jpg",P={},U=n('<figure><img src="'+t+'" alt="Welcome 页面" tabindex="0" loading="lazy"><figcaption>Welcome 页面</figcaption></figure><h2 id="主页面功能" tabindex="-1"><a class="header-anchor" href="#主页面功能" aria-hidden="true">#</a> 主页面功能</h2><p>主页面功能描述。</p><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> Search</h3><p>搜索组件使您可以快速识别和访问有关特定组件的信息（例如：可用版本、安全性和许可证数据等），还可以添加其他条件进行搜索。</p><figure><img src="'+g+'" alt="Search" tabindex="0" loading="lazy"><figcaption>Search</figcaption></figure><h3 id="browse" tabindex="-1"><a class="header-anchor" href="#browse" aria-hidden="true">#</a> Browse</h3><p>这将显示所有存储库和存储库组的列表，当您选择组件或资产时，右侧会出现一个信息视图。</p><figure><img src="'+u+'" alt="Browse" tabindex="0" loading="lazy"><figcaption>Browse</figcaption></figure><h3 id="upload" tabindex="-1"><a class="header-anchor" href="#upload" aria-hidden="true">#</a> Upload</h3><p>当您的构建使用公共存储库中无法提供的专有或自定义依赖项时，可以将这些第三方组件上传到您的 <code>hosted</code> 托管的本地存储库中。</p><figure><img src="'+h+'" alt="Upload" tabindex="0" loading="lazy"><figcaption>Upload</figcaption></figure><h2 id="服务器管理和配置" tabindex="-1"><a class="header-anchor" href="#服务器管理和配置" aria-hidden="true">#</a> 服务器管理和配置</h2><p>简单介绍一些服务器管理和配置功能，这些功能和下面概述的功能只有授权用户才能访问。</p><figure><img src="'+m+'" alt="服务器管理和配置" tabindex="0" loading="lazy"><figcaption>服务器管理和配置</figcaption></figure><h3 id="repository-管理存储库" tabindex="-1"><a class="header-anchor" href="#repository-管理存储库" aria-hidden="true">#</a> Repository 管理存储库</h3><p>负责管理所有存储库和相关配置。</p>',17),C=e("strong",null,"Repositories",-1),I={href:"https://help.sonatype.com/en/repository-management.html",target:"_blank",rel:"noopener noreferrer"},G=n('<figure><img src="'+f+'" alt="管理存储库" tabindex="0" loading="lazy"><figcaption>管理存储库</figcaption></figure><p>存储库类型如下：</p><ul><li><strong>proxy</strong>：代理存储库。用来代理远程公共仓库。例如：Maven 中央仓库、JBoss 远程仓库</li><li><strong>hosted</strong>：本地存储库。该仓库通常用来部署本地项目所产生的构件。<code>hosted</code> 宿主仓库又分为：<code>releases</code> 和 <code>snapshots</code>，分别表示依赖的版本的发行版、快照版。快照版依赖不能上传到发布版仓库，反之亦然。nexus 做了限制</li><li><strong>group</strong>：存储库组，用来将多个代理存储库或本地存储库组合成一个存储库，为这些仓库提供统一的服务地址，以便 Maven 可以更加方便地获得这些仓库中的构件</li></ul><p>Nexus 服务提供了以下默认的 maven2 仓库，可供我们直接使用：</p><ul><li><strong>maven-central</strong>：代理存储库（Type：<code>proxy</code>）。代理 Maven 中央库，默认从 <code>https://repo1.maven.org/maven2/</code> 拉取 jar 包</li><li><strong>maven-releases</strong>：发布版存储库（Type：<code>hosted</code>）。用于组织发布内部版本的存储库</li><li><strong>maven-snapshots</strong>：快照版存储库（Type：<code>hosted</code>、Version policy：<code>Snapshot</code>），用于组织发布内部开发版本的存储库</li><li><strong>maven-public</strong>：maven2 存储库集合（Type：<code>group</code>），用于整合以上三个仓库，用户可以直接使用集合仓库的地址拉取依赖 jar 包</li></ul>',5),L=e("strong",null,"Blob Stores",-1),T={href:"https://help.sonatype.com/en/configuring-blob-stores.html",target:"_blank",rel:"noopener noreferrer"},A=e("figure",null,[e("img",{src:b,alt:"Blob Stores",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Blob Stores")],-1),V=e("p",null,"Blob 存储类型如下：",-1),D=e("ul",null,[e("li",null,[e("strong",null,"File"),a("：文件 blob 存储允许 Nexus Repository 将 blob 作为文件存储在目录中。创建 Blob 存储期间提供的参数 Path 确定 Blob 文件的位置")]),e("li",null,[e("strong",null,"S3"),a("：S3 Blob 存储将 Blob 作为对象保存在 AWS S3 上的 "),e("code",null,"bucket"),a(" 中。仅建议将 S3 Blob 存储用于 AWS 中托管的 Nexus 存储库安装")])],-1),H=e("h3",{id:"security",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#security","aria-hidden":"true"},"#"),a(" Security")],-1),M=e("p",null,"用于提供对与用户身份验证和授权相关的所有配置功能，包括 Privileges、Roles、Users，还有 LDAP、Atlassian Crowd（仅限专业版）、SSL 证书和用户令牌（仅限专业版）。",-1),E=e("h3",{id:"iq-server",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iq-server","aria-hidden":"true"},"#"),a(" IQ Server")],-1),F={href:"https://help.sonatype.com/en/sonatype-lifecycle.html",target:"_blank",rel:"noopener noreferrer"},X=n('<h3 id="support" tabindex="-1"><a class="header-anchor" href="#support" aria-hidden="true">#</a> Support</h3><p>用于管理和监视存储库管理器的功能，例如：日志记录和系统信息。</p><h3 id="system" tabindex="-1"><a class="header-anchor" href="#system" aria-hidden="true">#</a> System</h3><p>用于开始和运行存储库管理器的常规配置，例如：HTTP 或电子邮件服务器设置，以及定期运行的功能和任务以及其他配置。</p><h2 id="创建存储库" tabindex="-1"><a class="header-anchor" href="#创建存储库" aria-hidden="true">#</a> 创建存储库</h2><h3 id="创建-blob-存储" tabindex="-1"><a class="header-anchor" href="#创建-blob-存储" aria-hidden="true">#</a> 创建 Blob 存储</h3><p>在创建 repository 之前，还需要先指定文件存储目录，便于统一管理。就需要创建 <code>Blob Stores</code>，不创建则使用的是 <code>default</code>。</p><p>在主页点击 <em>⚙（管理） -&gt; Repository-&gt; Blob Stores -&gt; Create Blob Store</em> 创建 Blob 存储。</p><figure><img src="'+v+'" alt="创建 Blob 存储" tabindex="0" loading="lazy"><figcaption>创建 Blob 存储</figcaption></figure><ul><li><strong>Type</strong>：Blob 存储的类型为 <em>File</em></li><li><strong>Name</strong>：Blob 存储的名称</li><li><strong>Path</strong>：Blob 存储的存放路径</li></ul><p>创建完成后点击 <em>Save</em> 保存。</p><h3 id="创建-proxy-存储库" tabindex="-1"><a class="header-anchor" href="#创建-proxy-存储库" aria-hidden="true">#</a> 创建 proxy 存储库</h3><p>在主页点击 <em>⚙（管理） -&gt; Repository-&gt; Repositories</em> 进入存储库管理。</p><p>依次点击 <em>Create repository -&gt; maven2(proxy)</em>。</p><figure><img src="'+_+'" alt="创建 maven2(proxy)" tabindex="0" loading="lazy"><figcaption>创建 maven2(proxy)</figcaption></figure>',15),W={href:"https://developer.aliyun.com/mvn/view",target:"_blank",rel:"noopener noreferrer"},J=e("code",null,"gradle-public",-1),O=n('<p>配置 <code>proxy</code> 仓库名称 <em>Name</em>（例如：<code>gradle-public</code>）和 <em>Proxy URL</em>（例如：<code>https://maven.aliyun.com/repository/public</code>）。</p><figure><img src="'+y+'" alt="配置 maven2(proxy)" tabindex="0" loading="lazy"><figcaption>配置 maven2(proxy)</figcaption></figure><p>选择 <em>Blob store</em> 存储位置。</p><figure><img src="'+x+'" alt="配置 maven2(proxy)" tabindex="0" loading="lazy"><figcaption>配置 maven2(proxy)</figcaption></figure><p>点击 <em>Create repository</em> 创建存储库。</p><figure><img src="'+i+'" alt="配置 maven2(proxy)" tabindex="0" loading="lazy"><figcaption>配置 maven2(proxy)</figcaption></figure><p>其他的可以采用默认，以后需要修改的可以再修改。</p><p>按上面的操作，依次添加以下代理存储库。</p><ul><li><strong>gradle-plugin</strong>：<code>https://maven.aliyun.com/repository/gradle-plugin</code></li><li><strong>gradle-google</strong>：<code>https://maven.aliyun.com/repository/google</code></li><li><strong>gradle-jcenter</strong>：<code>https://maven.aliyun.com/repository/jcenter</code></li></ul><h3 id="创建-hosted-存储库" tabindex="-1"><a class="header-anchor" href="#创建-hosted-存储库" aria-hidden="true">#</a> 创建 hosted 存储库</h3><p>在主页点击 <em>⚙（管理） -&gt; Repository-&gt; Repositories</em> 进入存储库管理。</p><p>依次点击 <em>Create repository -&gt; maven2(hosted)</em>。</p><figure><img src="'+r+'" alt="创建 maven2(hosted)" tabindex="0" loading="lazy"><figcaption>创建 maven2(hosted)</figcaption></figure><p>配置 <code>hosted</code> 仓库名称 <em>Name</em>（例如：<code>gradle-hosted</code>）和 <em>Blob store</em> 存储位置。</p><figure><img src="'+k+'" alt="配置 maven2(hosted)" tabindex="0" loading="lazy"><figcaption>配置 maven2(hosted)</figcaption></figure><p>点击 <em>Create repository</em> 创建存储库。</p><figure><img src="'+i+'" alt="配置 maven2(hosted)" tabindex="0" loading="lazy"><figcaption>配置 maven2(hosted)</figcaption></figure><p>其他的可以采用默认，以后需要修改的可以再修改。</p><h3 id="创建-snapshot-存储库" tabindex="-1"><a class="header-anchor" href="#创建-snapshot-存储库" aria-hidden="true">#</a> 创建 snapshot 存储库</h3><p>在主页点击 <em>⚙（管理） -&gt; Repository-&gt; Repositories</em> 进入存储库管理。</p><p>依次点击 <em>Create repository -&gt; maven2(hosted)</em>。</p><figure><img src="'+r+'" alt="创建 maven2(hosted)" tabindex="0" loading="lazy"><figcaption>创建 maven2(hosted)</figcaption></figure><p>配置 <code>snapshot</code> 仓库 <em>Name</em>（例如：<code>gradle-snapshot</code>）、<em>Versin policy</em>（<code>Snapshot</code>）和 <em>Blob store</em> 存储位置。</p><p>Hosted <code>Versin policy</code> 有三种方式：</p><ul><li><strong>Releases</strong>：一般是已经发布的 Jar 包</li><li><strong>Snapshot</strong>：未发布的版本</li><li><strong>Mixed</strong>：混合的</li></ul><figure><img src="'+B+'" alt="配置 maven2(proxy)" tabindex="0" loading="lazy"><figcaption>配置 maven2(proxy)</figcaption></figure><p>点击 <em>Create repository</em> 创建存储库。</p><figure><img src="'+i+'" alt="配置 maven2(proxy)" tabindex="0" loading="lazy"><figcaption>配置 maven2(proxy)</figcaption></figure><p>其他的可以采用默认，以后需要修改的可以再修改。</p><h3 id="创建-group-存储库" tabindex="-1"><a class="header-anchor" href="#创建-group-存储库" aria-hidden="true">#</a> 创建 group 存储库</h3><p>在主页点击 <em>⚙（管理） -&gt; Repository-&gt; Repositories</em> 进入存储库管理。</p><p>依次点击 <em>Create repository -&gt; maven2(group)</em>。</p><figure><img src="'+S+'" alt="创建 maven2(group)" tabindex="0" loading="lazy"><figcaption>创建 maven2(group)</figcaption></figure><p>配置 <code>group</code> 仓库 <em>Name</em>（例如：<code>gradle-group</code>）和 <em>Blob store</em> 存储位置。</p><figure><img src="'+z+'" alt="配置 maven2(group)" tabindex="0" loading="lazy"><figcaption>配置 maven2(group)</figcaption></figure><p>添加成员存储库 <em>Member repositories</em>，并点击 <em>Create repository</em> 创建存储库。</p><p>将上面添加的所有存储库，添加到 <code>gradle-group</code> 组存储库中。<code>maven-public</code> 是 Nexus 默认存在的组存储库，包含了 Maven 中央存储库。</p><figure><img src="'+w+'" alt="配置 maven2(group)" tabindex="0" loading="lazy"><figcaption>配置 maven2(group)</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">注意顺序</p><p>建议将本地存储库放在列表中高于代理存储库的位置。对于代理存储库，存储库管理器可能需要检查远程存储库，这将比本地存储库查找产生更多开销</p><p>可以用 <strong>拖动</strong> 的方式修改顺序</p></div><h2 id="本地上传" tabindex="-1"><a class="header-anchor" href="#本地上传" aria-hidden="true">#</a> 本地上传</h2><p>在主页点击 <em>Upload</em>，选择要保存的存储库 <code>gradle-hosted</code>（之前创建的本地存储库）。这将弹出一个表单，供您选择要上传的文件并提供其他详细信息。</p><figure><img src="'+j+'" alt="本地上传" tabindex="0" loading="lazy"><figcaption>本地上传</figcaption></figure><p>例如：上传 Gradle 软件包（<code>gradle-6.5-all.zip</code>。</p><figure><img src="'+N+'" alt="配置本地上传" tabindex="0" loading="lazy"><figcaption>配置本地上传</figcaption></figure><ul><li><strong>File</strong>：本地保存文件地址</li><li><strong>Extension</strong>：包的后缀名。默认自动生成，否则手动填写</li><li><strong>Group ID</strong>：组 ID</li><li><strong>Artifact ID</strong>：包的名字</li><li><strong>Version</strong>：版本号</li><li><strong>Generate a POM file with these coordinates</strong>：是否生成 POM 文件。默认没有勾选，这里勾选</li></ul><p>查看上传的包 <code>gradle-6.5-all.zip</code>。依次点击 <em>Browse -&gt; gradle-hosted</em>。包含 pom、path 等信息。</p><figure><img src="'+R+'" alt="查看上传的包" tabindex="0" loading="lazy"><figcaption>查看上传的包</figcaption></figure><figure><img src="'+q+`" alt="查看上传的包" tabindex="0" loading="lazy"><figcaption>查看上传的包</figcaption></figure><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用" aria-hidden="true">#</a> 引用</h2><p>在 Gradle 中配置 Nexus 仓库地址。</p><h3 id="gradle-存储库配置" tabindex="-1"><a class="header-anchor" href="#gradle-存储库配置" aria-hidden="true">#</a> Gradle 存储库配置</h3><div class="language-gradle line-numbers-mode" data-ext="gradle"><pre class="language-gradle"><code><span class="token keyword">repositories</span> <span class="token punctuation">{</span>
    maven <span class="token punctuation">{</span>
        url <span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/repository/gradle-group/&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="allowinsecureprotocol-参数" tabindex="-1"><a class="header-anchor" href="#allowinsecureprotocol-参数" aria-hidden="true">#</a> allowInsecureProtocol 参数</h3>`,53),Q=e("code",null,"http",-1),Y={href:"https://docs.gradle.org/7.0.2/dsl/org.gradle.api.artifacts.repositories.UrlArtifactRepository.html#org.gradle.api.artifacts.repositories.UrlArtifactRepository:allowInsecureProtocol",target:"_blank",rel:"noopener noreferrer"},K=n(`<div class="language-gradle line-numbers-mode" data-ext="gradle"><pre class="language-gradle"><code><span class="token keyword">repositories</span> <span class="token punctuation">{</span>
    maven <span class="token punctuation">{</span>
        allowInsecureProtocol <span class="token boolean">true</span>
        url <span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/repository/gradle-group/&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>allowInsecureProtocol</strong>：参数指定是否可以接受通过不安全的 HTTP 连接与存储库进行通信</li></ul><h3 id="gradle-安装包" tabindex="-1"><a class="header-anchor" href="#gradle-安装包" aria-hidden="true">#</a> Gradle 安装包</h3><p>Gradle 安装包不能自动上传到 Nexus 存储库，只能手动上传到 Nexus 存储库。</p><p>在 Gradle 项目中下载安装包方法：</p><ol><li>使用官网地址下载：<code>distributionUrl=https\\://services.gradle.org/distributions/gradle-7.0.2-bin.zip</code></li><li>上传到 Nexus 存储库，从 Nexus 存储库下载：<code>distributionUrl=http\\://localhost:8081/repository/gradle-group/packages/gradle/7.0.2/gradle-7.0.2-bin.zip</code></li><li>从国内腾讯源下载：<code>distributionUrl=https\\://mirrors.cloud.tencent.com/gradle/gradle-7.0.2-bin.zip</code></li></ol><h3 id="gradle-中的代理和身份验证" tabindex="-1"><a class="header-anchor" href="#gradle-中的代理和身份验证" aria-hidden="true">#</a> Gradle 中的代理和身份验证</h3><p>使用类似于以下示例的块配置身份验证：</p><div class="language-gradle line-numbers-mode" data-ext="gradle"><pre class="language-gradle"><code><span class="token keyword">repositories</span> <span class="token punctuation">{</span>
    maven <span class="token punctuation">{</span>    
        credentials <span class="token punctuation">{</span>
            username <span class="token interpolation-string"><span class="token string">&quot;user&quot;</span></span>
            password <span class="token interpolation-string"><span class="token string">&quot;passwd&quot;</span></span>
        <span class="token punctuation">}</span>
        url <span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/repository/gradle-group/&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 Gradle 安装包从 Nexus 存储库中下载，而 Nexus 存储库又拒绝匿名用户访问，在配置 <code>distributionUrl</code> 时，在 URL 中包含用户名和密码即可。</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">distributionUrl</span><span class="token punctuation">=</span><span class="token value attr-value">http\\://user:passwd@localhost:8081/repository/gradle-group/packages/gradle/7.0.2/gradle-7.0.2-bin.zip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function Z($,ee){const o=p("ExternalLinkIcon");return d(),c("div",null,[U,e("ul",null,[e("li",null,[e("p",null,[C,a("：管理存储库，查看官网 "),e("a",I,[a("管理存储库"),s(o)]),a(" 说明")]),G]),e("li",null,[e("p",null,[L,a("：配置 Blob 存储，查看官网 "),e("a",T,[a("配置 Blob 存储"),s(o)]),a(" 说明")]),A,V,D])]),H,M,E,e("p",null,[a("管理 Sonatype 存储库防火墙和 Sonatype 生命周期配置。IQ Server 项目（对具有 nx-all 或 nx-settings 权限的用户可见）允许您配置 Sonatype Nexus Repository 到 IQ Server 的连接。更多文档可在 "),e("a",F,[a("Sonatype Lifecycle"),s(o)]),a(" 中找到。")]),X,e("p",null,[a("使用阿里云的 "),e("a",W,[a("maven 仓库文件"),s(o)]),a("，创建 "),J,a(" 代理仓库。")]),O,e("p",null,[a("由于使用 Gradle 高版本进行构建时，Gradle 默认不接受 maven 通过不安全的 "),Q,a(" 连接与存储库进行通信。参考 "),e("a",Y,[a("gradle-7.0.2 官网描述"),s(o)]),a("。")]),K])}const ne=l(P,[["render",Z],["__file","basic_operation.html.vue"]]);export{ne as default};
