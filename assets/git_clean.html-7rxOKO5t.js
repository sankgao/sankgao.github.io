import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as a,f as d}from"./app-2nYpxWCx.js";const n={},s=d(`<h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p><code>git clean</code> 用于删除工作目录中未跟踪的文件和目录。这些未跟踪的文件和目录是那些没有被 Git 管理的文件，也就是说它们没有被添加到暂存区或提交到仓库中。</p><p>使用 <code>git clean</code> 时需要谨慎，因为它会永久删除文件，而且无法恢复。通常，这个命令用于清理构建产物、临时文件或其他不想保留的未跟踪文件。</p><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>-d</code></td><td style="text-align:left;">删除目录</td></tr><tr><td style="text-align:center;"><code>-f, --force</code></td><td style="text-align:left;">删除文件</td></tr><tr><td style="text-align:center;"><code>-i, --interactive</code></td><td style="text-align:left;">以交互方式清理文件</td></tr><tr><td style="text-align:center;"><code>-n, --dry-run</code></td><td style="text-align:left;">只显示删除的文件或目录，而不做任何改变</td></tr><tr><td style="text-align:center;"><code>-q, --quiet</code></td><td style="text-align:left;">不显示输出内容</td></tr><tr><td style="text-align:center;"><code>-e &lt;模式&gt;, --exclude &lt;模式&gt;</code></td><td style="text-align:left;">在标准的忽略规则之外，使用给定的排除模式</td></tr><tr><td style="text-align:center;"><code>-X</code></td><td style="text-align:left;">只删除被 <code>.gitignore</code> 文件忽略的文件</td></tr></tbody></table><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>Git 配置变量 <code>clean.requireForce</code> 默认为 <code>true</code>，如果该变量没有设置为 <code>false</code>，<code>git clean</code> 将拒绝删除文件或目录，除非给出 <code>-f</code> 或 <code>-i</code>。除非给出第二个 <code>-f</code>，否则 Git 将拒绝修改未跟踪的嵌套 git 仓库（有 <code>.git</code> 子目录的目录）。</p><p>例如：删除所有未跟踪的文件和目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：删除未跟踪的目录及其内容。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-fd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：删除忽略文件匹配的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-fX</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：交互式删除。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-i</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),c=[s];function l(i,r){return t(),a("div",null,c)}const p=e(n,[["render",l],["__file","git_clean.html.vue"]]);export{p as default};
