import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,b as n,e as a,d as p,f as s}from"./app-83XRFzu1.js";const i={},r=s(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>无法使用 <code>always</code> 策略拉取镜像。</p><p><strong>报错日志如下：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>WARNING: Failed to pull image with policy <span class="token string">&quot;always&quot;</span><span class="token builtin class-name">:</span> error pulling image configuration: download failed after <span class="token assign-left variable">attempts</span><span class="token operator">=</span><span class="token number">6</span>: dial tcp <span class="token punctuation">[</span>2a03:2880:f11f:83:face:b00c:0:25de<span class="token punctuation">]</span>:443: connect: network is unreachable <span class="token punctuation">(</span>manager.go:250:108s<span class="token punctuation">)</span>
ERROR: Job failed: failed to pull image <span class="token string">&quot;docker:latest&quot;</span> with specified policies <span class="token punctuation">[</span>always<span class="token punctuation">]</span>: error pulling image configuration: download failed after <span class="token assign-left variable">attempts</span><span class="token operator">=</span><span class="token number">6</span>: dial tcp <span class="token punctuation">[</span>2a03:2880:f11f:83:face:b00c:0:25de<span class="token punctuation">]</span>:443: connect: network is unreachable <span class="token punctuation">(</span>manager.go:250:108s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p><code>config.toml</code> 配置中的拉取策略 <code>pull_policy</code> 以定义运行器如何从注册表中拉取 Docker 镜像。默认为 <code>always</code> 即使本地镜像存在，也会拉取镜像。</p>`,6),u={href:"https://docs.gitlab.com/runner/executors/docker.html#configure-how-runners-pull-images",target:"_blank",rel:"noopener noreferrer"},d=s(`<h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><p>将 <code>/etc/gitlab-runner/config.toml</code> 文件中 <code>pull_policy</code> 配置为 <code>if-not-present</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token punctuation">[</span>runners<span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token comment"># ......省略部分内容</span>
  <span class="token punctuation">[</span>runners.docker<span class="token punctuation">]</span>
    pull_policy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;if-not-present&quot;</span>, <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span>
    <span class="token comment"># ......省略部分内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function m(k,h){const e=o("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[a("查看 "),n("a",u,[a("官网解释"),p(e)]),a("。")]),d])}const b=t(i,[["render",m],["__file","unable_use_always_pull_images.html.vue"]]);export{b as default};
