import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as n}from"./app-2h3lGgj8.js";const t={},i=n(`<h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p><code>git clone</code> 用于从远程仓库中克隆代码库到本地，创建一个新的目录，并将该仓库的内容完整地下载到这个新目录中。</p><p>Git 支持 <code>ssh</code>、<code>git</code>、<code>http</code> 和 <code>https</code> 协议（此外，可以使用 <code>ftp</code> 和 <code>ftps</code> 进行抓取，但这效率低下且不建议使用；请勿使用）。</p><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>-b, --branch</code></td><td style="text-align:left;">克隆指定分支</td></tr><tr><td style="text-align:center;"><code>-o &lt;name&gt;, --origin &lt;name&gt;</code></td><td style="text-align:left;">使用指定远程名称 <code>&lt;name&gt;</code> 来跟踪上游存储库</td></tr><tr><td style="text-align:center;"><code>-q, --quiet</code></td><td style="text-align:left;">不显示输出内容</td></tr><tr><td style="text-align:center;"><code>--bare</code></td><td style="text-align:left;">创建裸仓库</td></tr><tr><td style="text-align:center;"><code>--mirror</code></td><td style="text-align:left;">创建镜像仓库（也是裸仓库）</td></tr><tr><td style="text-align:center;"><code>--depth</code></td><td style="text-align:left;">创建一个历史记录被截断为指定提交次数的 “浅” 克隆</td></tr></tbody></table><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><h3 id="远程仓库克隆到本地" tabindex="-1"><a class="header-anchor" href="#远程仓库克隆到本地" aria-hidden="true">#</a> 远程仓库克隆到本地</h3><p>例如：从远程仓库 <code>test_demo.git</code> 中克隆代码库到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone ssh://git@10.1.1.10/tests/test_demo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：从远程仓库 <code>test_demo.git</code> 中克隆代码库到本地指定 <code>test</code> 目录中。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone ssh://git@10.1.1.10/tests/test_demo.git <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：从远程仓库 <code>test_demo.git</code> 中克隆代码库到 <strong>当前</strong> 目录中。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone ssh://git@10.1.1.10/tests/test_demo.git <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="克隆指定分支" tabindex="-1"><a class="header-anchor" href="#克隆指定分支" aria-hidden="true">#</a> 克隆指定分支</h3><p>例如：从远程仓库 <code>test_demo.git</code> 中克隆 <code>dev</code> 分支到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">-b</span> dev ssh://git@10.1.1.10/tests/test_demo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="克隆指定远程名称" tabindex="-1"><a class="header-anchor" href="#克隆指定远程名称" aria-hidden="true">#</a> 克隆指定远程名称</h3><p>例如：从远程仓库 <code>test_demo.git</code> 中克隆克隆代码库到本地，并指定 <code>test_demo</code> 为远程名称。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">-o</span> test_demo ssh://git@10.1.1.10/tests/test_demo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建裸仓库" tabindex="-1"><a class="header-anchor" href="#创建裸仓库" aria-hidden="true">#</a> 创建裸仓库</h3><p>裸仓库是一个不包含工作目录（working directory）的仓库，只有 <code>.git</code> 目录下的内容。这意味着它只包含版本控制历史和其他元数据，但没有检出（checkout）到工作目录的文件。</p><p>例如：克隆一个裸仓库 <code>test_demo.git</code> 到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--bare</span> ssh://git@10.1.1.10/tests/test_demo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>普通存储库</strong>：包含工作目录，即你可以看到和编辑的文件，以及一个名为 <code>.git</code> 的隐藏目录，其中包含了版本控制的元数据和对象数据库</li><li><strong>裸仓库</strong>：只包含版本控制的元数据和对象数据库，没有工作目录。裸存储库的结构类似于普通存储库中的 <code>.git</code> 目录</li></ul><p>裸存储库通常被用作团队协作的中央仓库。由于裸存储库不包含工作目录，它们适合作为 <code>push</code> 和 <code>pull</code> 操作的目标。这避免了直接在中央仓库上工作可能导致的问题，如：未提交的更改和工作目录的冲突。</p><ol><li><p>创建 <code>test_demo.git</code> 裸仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /projects/test_demo.git
<span class="token builtin class-name">cd</span> /projects/test_demo.git
<span class="token function">git</span> init <span class="token parameter variable">--bare</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建普通库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/
<span class="token function">mkdir</span> <span class="token builtin class-name">test</span>
<span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span>
<span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在普通库中创建文件，指定 <code>test_demo.git</code> 裸仓库为远程仓库，并上传</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">&gt;</span> test.txt
<span class="token function">git</span> <span class="token function">add</span> test.txt
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;add test.txt&#39;</span>
<span class="token function">git</span> remote <span class="token function">add</span> origin /projects/test_demo.git
<span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看裸仓库信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>./test_demo.git
<span class="token function">git</span> log

commit a925932f970ea8dc91d8225883c17a4b39e6dc2b <span class="token punctuation">(</span>HEAD -<span class="token operator">&gt;</span> master<span class="token punctuation">)</span>
Author: Administrator <span class="token operator">&lt;</span>admin@example.com<span class="token operator">&gt;</span>
Date:   Mon May <span class="token number">13</span> <span class="token number">17</span>:24:06 <span class="token number">2024</span> +0800

    <span class="token function">add</span> test.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>克隆裸仓库，查看是否有工作目录数据文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/
<span class="token function">git</span> clone /projects/test_demo.git

Cloning into <span class="token string">&#39;test_demo&#39;</span><span class="token punctuation">..</span>.
done.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将裸仓库上传到新的仓库中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push <span class="token parameter variable">--mirror</span> new_test.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="创建镜像仓库" tabindex="-1"><a class="header-anchor" href="#创建镜像仓库" aria-hidden="true">#</a> 创建镜像仓库</h3><p>镜像克隆不仅包含了所有分支和标签的引用，而且当原始仓库更新时，镜像克隆也会自动更新以保持与原始仓库的完全同步。这意味着，如果原始仓库添加了新的分支或标签，或者已有的分支或标签被删除或更新，这些变化都会反映到镜像克隆中。这种克隆类型主要用于备份或作为其他克隆操作的源。</p><p>例如：克隆一个镜像仓库 <code>test_demo.git</code> 到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--mirror</span> ssh://git@10.1.1.10/tests/test_demo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建浅克隆" tabindex="-1"><a class="header-anchor" href="#创建浅克隆" aria-hidden="true">#</a> 创建浅克隆</h3><p>当代码仓库比较大的时候，可以使用浅克隆来拉取代码。</p><p>例如：克隆远程 <code>test_demo.git</code> 仓库最近两次的提交。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">2</span> ssh://git@10.1.1.10/tests/test_demo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="备份克隆" tabindex="-1"><a class="header-anchor" href="#备份克隆" aria-hidden="true">#</a> 备份克隆</h3><p>例如：对项目做备份。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone test_demo test_demo-backup

Cloning into <span class="token string">&#39;.\\test_demo-backup&#39;</span><span class="token punctuation">..</span>.
done.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),d=[i];function l(c,o){return s(),a("div",null,d)}const u=e(t,[["render",l],["__file","git_clone.html.vue"]]);export{u as default};
