import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as l,f as d}from"./app--JV41Orw.js";const a={},n=d('<h2 id="css-选择器" tabindex="-1"><a class="header-anchor" href="#css-选择器" aria-hidden="true">#</a> CSS 选择器</h2><p>在 CSS 中，选择器是选取需设置样式的元素的模式。</p><table><thead><tr><th style="text-align:center;">选择器</th><th style="text-align:left;">例子</th><th style="text-align:left;">例子描述</th></tr></thead><tbody><tr><td style="text-align:center;">.class</td><td style="text-align:left;">.intro</td><td style="text-align:left;">选择 class=&quot;intro&quot; 的所有元素</td></tr><tr><td style="text-align:center;">.class1.class2</td><td style="text-align:left;">.name1.name2</td><td style="text-align:left;">选择 class 属性中同时有 name1 和 name2 的所有元素</td></tr><tr><td style="text-align:center;">.class1 .class2</td><td style="text-align:left;">.name1 .name2</td><td style="text-align:left;">选择作为类名 name1 元素后代的所有类名 name2 元素</td></tr><tr><td style="text-align:center;">#id</td><td style="text-align:left;">#firstname</td><td style="text-align:left;">选择 id=&quot;firstname&quot; 的元素</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:left;">*</td><td style="text-align:left;">选择所有元素</td></tr><tr><td style="text-align:center;">element</td><td style="text-align:left;">p</td><td style="text-align:left;">选择所有 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">element.class</td><td style="text-align:left;">p.intro</td><td style="text-align:left;">选择 class=&quot;intro&quot; 的所有 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">element,element</td><td style="text-align:left;">div, p</td><td style="text-align:left;">选择所有 <code>&lt;div&gt;</code> 元素和所有 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">element element</td><td style="text-align:left;">div p</td><td style="text-align:left;">选择 <code>&lt;div&gt;</code> 元素内的所有 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">element&gt;element</td><td style="text-align:left;">div &gt; p</td><td style="text-align:left;">选择父元素是 <code>&lt;div&gt;</code> 的所有 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">element+element</td><td style="text-align:left;">div + p</td><td style="text-align:left;">选择紧跟 <code>&lt;div&gt;</code> 元素的首个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">element1~element2</td><td style="text-align:left;">p ~ ul</td><td style="text-align:left;">选择前面有 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;ul&gt;</code> 元素</td></tr><tr><td style="text-align:center;">[attribute]</td><td style="text-align:left;">[target]</td><td style="text-align:left;">选择带有 target 属性的所有元素</td></tr><tr><td style="text-align:center;">[attribute=value]</td><td style="text-align:left;">[target=_blank]</td><td style="text-align:left;">选择带有 target=&quot;_blank&quot; 属性的所有元素</td></tr><tr><td style="text-align:center;">[attribute~=value]</td><td style="text-align:left;">[title~=flower]</td><td style="text-align:left;">选择 title 属性包含单词 &quot;flower&quot; 的所有元素</td></tr><tr><td style="text-align:center;">[attribute</td><td style="text-align:left;">=value]</td><td style="text-align:left;">[lang</td></tr><tr><td style="text-align:center;">[attribute^=value]</td><td style="text-align:left;">a[href^=&quot;https&quot;]</td><td style="text-align:left;">选择其 src 属性值以 &quot;https&quot; 开头的每个 <code>&lt;a&gt;</code> 元素</td></tr><tr><td style="text-align:center;">[attribute$=value]</td><td style="text-align:left;">a[href$=&quot;.pdf&quot;]</td><td style="text-align:left;">选择其 src 属性以 &quot;.pdf&quot; 结尾的所有 <code>&lt;a&gt;</code> 元素</td></tr><tr><td style="text-align:center;">[attribute*=value]</td><td style="text-align:left;">a[href*=&quot;w3school&quot;]</td><td style="text-align:left;">选择其 href 属性值中包含 &quot;abc&quot; 子串的每个 <code>&lt;a&gt;</code> 元素</td></tr></tbody></table>',3),s=[n];function r(i,c){return e(),l("div",null,s)}const x=t(a,[["render",r],["__file","selectors.html.vue"]]);export{x as default};
