import{_ as o,r as s,o as a,c as l,d as t,e,b as n,f as i}from"./app-48b2e2e2.js";const h={},_=t("p",null,"我们相信在 Web 的世界里没有一种方案可以解决所有问题。正因如此，Vue 被设计成一个灵活的、可以渐进式集成的框架。根据使用场景的不同需要，相应地有多种不同的方式来使用 Vue，以此在技术栈复杂度、开发体验和性能表现间取得最佳平衡。",-1),u=t("h2",{id:"独立脚本",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#独立脚本","aria-hidden":"true"},"#"),e(" 独立脚本")],-1),c=t("p",null,[e("Vue 可以以一个单独 JS 文件的形式使用，无需构建步骤！如果您的后端框架已经渲染了大部分的 HTML，或者您的前端逻辑并不复杂，不需要构建步骤，这是最简单的使用 Vue 的方式。在这些场景中您可以将 Vue 看作一个更加声明式的 jQuery "),t("strong",null,"替代品。")],-1),d={href:"https://github.com/vuejs/petite-vue",target:"_blank",rel:"noopener noreferrer"},p=i('<h2 id="作为-web-component-嵌入" tabindex="-1"><a class="header-anchor" href="#作为-web-component-嵌入" aria-hidden="true">#</a> 作为 Web Component 嵌入</h2><p>您可以用 Vue 来 <a href="">构建标准的 Web Component</a>，这些 <code>Web Component</code> 可以嵌入到任何 HTML 页面中，无论它们是如何被渲染的。这个方式让您能够在不需要顾虑最终使用场景的情况下使用 Vue。因为生成的 Web Component 可以 <strong>嵌入</strong> 到旧应用、静态 HTML，甚至用其他框架构建的应用中。</p><h2 id="单页面应用-spa" tabindex="-1"><a class="header-anchor" href="#单页面应用-spa" aria-hidden="true">#</a> 单页面应用（SPA）</h2><p>一些应用在前端需要具有丰富的 <strong>交互性</strong>、<strong>较深的会话</strong> 和 <strong>复杂的状态逻辑</strong>。构建这类应用的最佳方法是使用这样一种架构。Vue 不仅控制整个页面，还负责处理抓取新数据，并在无需重新加载的前提下处理页面切换。这种类型的应用通常称为 <strong>单页应用</strong>（Single-Page application，缩写为 <code>SPA</code>）。</p><p>Vue 提供了核心功能库和<a href="">全面的工具链支持</a>，为现代 SPA 提供了极佳的开发体验，覆盖以下方面：</p><ul><li>客户端路由</li><li>极其快速的构建工具</li><li>IDE 支持</li><li>浏览器开发工具</li><li>TypeScript 支持</li><li>测试工具</li></ul>',6),S={href:"https://inertiajs.com",target:"_blank",rel:"noopener noreferrer"},f=t("h2",{id:"全栈-ssr",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#全栈-ssr","aria-hidden":"true"},"#"),e(" 全栈/SSR")],-1),g=t("p",null,"纯客户端的 SPA 在首屏加载和 SEO 方面有显著的问题，因为浏览器会收到一个巨大的 HTML 空页面，只有等到 JavaScript 加载完毕才会渲染出内容。",-1),b=t("strong",null,"直接返回",-1),V=t("strong",null,"激活（hydrate）",-1),m=t("a",{href:""},"服务端渲染（SSR）",-1),k={href:"https://web.dev/lcp/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://nuxt.com/",target:"_blank",rel:"noopener noreferrer"},x=t("h2",{id:"jamstack-ssg",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#jamstack-ssg","aria-hidden":"true"},"#"),e(" JAMStack/SSG")],-1),L={href:"https://jamstack.org/what-is-jamstack/",target:"_blank",rel:"noopener noreferrer"},P=t("p",null,[e("SSG 有两种风格："),t("strong",null,"单页"),e(" 和 "),t("strong",null,"多页"),e("。这两种风格都能将站点 "),t("strong",null,"预渲染"),e(" 为静态 HTML，区别在于：")],-1),w=t("li",null,[t("strong",null,"单页 SSG"),e("：在初始页面加载后将其 “激活” 为 SPA。这需要更多的前期 JS 加载和激活成本，但后续的导航将更快，因为它只需要部分地更新页面内容，而无需重新加载整个页面")],-1),A=t("strong",null,"多页 SSG",-1),T={href:"https://astro.build/",target:"_blank",rel:"noopener noreferrer"},G=t("p",null,[e("单页 SSG 更适合于 "),t("strong",null,"重交互"),e("、"),t("strong",null,"深会话"),e(" 的场景，或需要在导航之间持久化元素或状态。否则，多页 SSG 将是更好的选择。")],-1),M={href:"https://vitepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://nuxt.com/",target:"_blank",rel:"noopener noreferrer"},J=t("h2",{id:"web-之外",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#web-之外","aria-hidden":"true"},"#"),e(" Web 之外...")],-1),H=t("p",null,"尽管 Vue 主要是为构建 Web 应用而设计的，但它绝不仅仅局限于浏览器。您还可以：",-1),W={href:"https://www.electronjs.org/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://tauri.studio/en/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://ionicframework.com/docs/vue/overview",target:"_blank",rel:"noopener noreferrer"},C={href:"https://quasar.dev/",target:"_blank",rel:"noopener noreferrer"},E=t("a",{href:""},"自定义渲染 API",-1),y={href:"https://troisjs.github.io/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/vue-terminal/vue-termui",target:"_blank",rel:"noopener noreferrer"};function R(Q,q){const r=s("ExternalLinkIcon");return a(),l("div",null,[_,u,c,t("p",null,[e("Vue 也提供了另一个更适用于此类无构建步骤场景的版本 "),t("a",d,[e("petite-vue"),n(r)]),e("。它为渐进式增强已有的 HTML 作了特别的优化，功能更加精简，十分轻量。")]),p,t("p",null,[e("SPA 一般要求后端提供 API 数据接口，但您也可以将 Vue 和如："),t("a",S,[e("Inertia.js"),n(r)]),e(" 之类的解决方案搭配使用，在保留侧重服务端的开发模型的同时获得 SPA 的益处。")]),f,g,t("p",null,[e("Vue 提供了一系列 API，支持将一个 Vue 应用在服务端渲染成 HTML 字符串。这能让服务器 "),b,e(" 渲染好的 HTML，让用户在 JavaScript 下载完毕前就看到页面内容。Vue 之后会在客户端对应用进行 "),V,e(" 使其重获可交互性。这被称为 "),m,e("，它能够极大地改善应用在 Web 核心指标上的性能表现，如："),t("a",k,[e("最大内容绘制 (LCP)"),n(r)]),e("。")]),t("p",null,[e("Vue 生态中有一些针对此类场景的、基于 Vue 的上层框架，比如："),t("a",v,[e("NuxtJS"),n(r)]),e("，能让您用 Vue 和 JavaScript 开发一个全栈应用。")]),x,t("p",null,[e("如果所需的数据是静态的，那么服务端渲染可以提前完成。这意味着我们可以将整个应用预渲染为 HTML，并将其作为静态文件部署。这增强了站点的性能表现，也使部署变得更容易，因为我们无需根据请求动态地渲染页面。Vue 仍可通过激活在客户端提供交互。这一技术通常被称为静态站点生成（SSG），也被称为 "),t("a",L,[e("JAMStack"),n(r)]),e("。")]),P,t("ul",null,[w,t("li",null,[A,e("：每次导航都会加载一个新页面。好处是它可以仅需最少的 JS——或者如果页面无需交互则根本不需要 JS！一些多页面 SSG 框架，如："),t("a",T,[e("Astro"),n(r)]),e(" 也支持 “部分激活”——它允许您通过 Vue 组件在静态 HTML 中创建交互式的 “孤岛”。")])]),G,t("p",null,[e("Vue 团队也维护了一个名为 "),t("a",M,[e("VitePress"),n(r)]),e(" 的静态站点生成器，VitePress 支持两种形式的 SSG。另外，"),t("a",j,[e("NuxtJS"),n(r)]),e(" 也支持 SSG。您甚至可以在同一个 Nuxt 应用中通过不同的路由提供 SSR 和 SSG。")]),J,H,t("ul",null,[t("li",null,[e("配合 "),t("a",W,[e("Electron"),n(r)]),e(" 或 "),t("a",I,[e("Tauri"),n(r)]),e(" 构建桌面应用")]),t("li",null,[e("配合 "),t("a",N,[e("Ionic Vue"),n(r)]),e(" 构建移动端应用")]),t("li",null,[e("使用 "),t("a",C,[e("Quasar"),n(r)]),e(" 用同一套代码同时开发桌面端和移动端应用")]),t("li",null,[e("使用 Vue 的 "),E,e(" 来构建不同目标的渲染器，比如："),t("a",y,[e("WebGL"),n(r)]),e(" 甚至是 "),t("a",B,[e("终端命令行"),n(r)])])])])}const O=o(h,[["render",R],["__file","ways_of_using_vue.html.vue"]]);export{O as default};
