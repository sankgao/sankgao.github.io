import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as t,f as s}from"./app-OEeKShJw.js";const n={},r=s(`<h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p><code>git archive</code> 用于创建项目仓库的归档文件。它允许您获取仓库中特定提交或分支的文件快照，并将其打包为 ZIP、TAR 或其他格式的压缩文件。这对于备份、发布版本或创建项目的快照特别有用。</p><p><code>git archive</code> 命令是创建项目快照或发布版本的强大工具，因为它只包含指定提交或分支的文件，而不包括 Git 仓库的元数据（如：<code>.git</code> 目录）。这使得归档文件更小，更适合于分发和备份。</p><p>在建立归档时，如果使用树对象 ID 进行归档，则使用当前时间作为归档中文件的修改时间；而如果使用提交 ID 或里程碑 ID 进行归档，则使用提交建立的时间作为归档中文件的修改时间。</p><p>此外，如果使用 <code>tar</code> 格式，提交 ID 会存储在全局扩展 <code>pax</code> 标头中；可以使用 <code>git get-tar-commit-id</code> 提取。在 ZIP 文件中，它被存储为文件注释。</p><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>--format=&lt;format&gt;</code></td><td style="text-align:left;">归档文件的格式。如果没有给出 <code>--format</code>，并且指定了输出文件，将从文件名中推断出格式（例如：写入 <code>foo.zip</code> 会使输出为 <code>zip</code> 格式）。否则，输出格式为 <code>tar</code></td></tr><tr><td style="text-align:center;"><code>-l, --list</code></td><td style="text-align:left;">显示所有可用的格式</td></tr><tr><td style="text-align:center;"><code>--prefix=&lt;prefix&gt;/</code></td><td style="text-align:left;">在归档文件内部为所有文件和目录添加一个前缀</td></tr><tr><td style="text-align:center;"><code>-v, --verbose</code></td><td style="text-align:left;">向标准错误流报告进度，显示更多详细信息</td></tr><tr><td style="text-align:center;"><code>-o &lt;file&gt;, --output=&lt;file&gt;</code></td><td style="text-align:left;">将存档写入文件而不是标准输出流</td></tr><tr><td style="text-align:center;"><code>--add-file=&lt;file&gt;</code></td><td style="text-align:left;">添加一个非跟踪的文件到存档。可以重复添加多个文件</td></tr><tr><td style="text-align:center;"><code>-f, --force</code></td><td style="text-align:left;">强制添加忽略的文件，即使文件被 <code>.gitignore</code> 文件忽略，也可以使用此选项将其添加到暂存区</td></tr><tr><td style="text-align:center;"><code>--remote=&lt;repository&gt;</code></td><td style="text-align:left;">从远程仓库创建归档，而不是本地仓库</td></tr><tr><td style="text-align:center;"><code>&lt;tree-ish&gt;</code></td><td style="text-align:left;">要制作存档的树目录或提交</td></tr></tbody></table><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法:</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token operator">&lt;</span>format<span class="token operator">&gt;</span> <span class="token parameter variable">--output</span><span class="token operator">=</span><span class="token operator">&lt;</span>file<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>tree-ish<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>--format=&lt;format&gt;</strong>：指定输出格式，如：<code>zip</code>、<code>tar</code>、<code>tar.gz</code> 等</li><li><strong>--output=&lt;file&gt;</strong>：归档文件的输出路径和名称</li><li><strong>&lt;tree-ish&gt;</strong>：可以是一个提交哈希、分支名、标签名或任何其他指向树对象的引用</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>例如：创建当前 HEAD 提交的 ZIP 归档。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span>zip <span class="token parameter variable">--output</span><span class="token operator">=</span>my-project.zip HEAD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：为特定提交创建 TAR.GZ 归档。假设您有一个提交哈希 <code>abc123</code>，您可以这样创建归档。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span>tar.gz <span class="token parameter variable">--output</span><span class="token operator">=</span>my-project-abc123.tar.gz abc123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：为分支创建带前缀的 TAR 归档。为 <code>develop</code> 分支创建归档，并在归档内部的所有文件和目录前添加 <code>project-</code> 前缀。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span>tar <span class="token parameter variable">--prefix</span><span class="token operator">=</span>project/ <span class="token parameter variable">--output</span><span class="token operator">=</span>project-develop.tar develop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：为 <code>v1.4.0</code> 版本创建一个压缩的压缩包。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span>tar <span class="token parameter variable">--prefix</span><span class="token operator">=</span>git-1.4.0/ v1.4.0 <span class="token operator">|</span> <span class="token function">gzip</span> <span class="token operator">&gt;</span> git-1.4.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：为 <code>v1.4.0</code> 版本创建一个压缩的压缩包，但用内置的 TAR.GZ 处理。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span>tar.gz <span class="token parameter variable">--prefix</span><span class="token operator">=</span>git-1.4.0/ v1.4.0 <span class="token operator">&gt;</span> git-1.4.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：为 <code>v1.4.0</code> 版本创建一个压缩的压缩包，但用格式是从输出文件中推断出来。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--prefix</span><span class="token operator">=</span>git-1.4.0/ <span class="token parameter variable">-o</span> git-1.4.0.tar.gz v1.4.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：为 <code>v1.4.0</code> 版本创建一个压缩的 <code>tarball</code>，但没有全局扩展的 <code>pax</code> 头。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> archive <span class="token parameter variable">--format</span><span class="token operator">=</span>tar <span class="token parameter variable">--prefix</span><span class="token operator">=</span>git-1.4.0/ v1.4.0^<span class="token punctuation">{</span>tree<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">gzip</span> <span class="token operator">&gt;</span> git-1.4.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),o=[r];function l(c,d){return a(),t("div",null,o)}const g=e(n,[["render",l],["__file","git_archive.html.vue"]]);export{g as default};
