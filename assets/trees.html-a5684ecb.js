const t=JSON.parse(`{"key":"v-d1eb06c0","path":"/languages/python3/algorithm_data_structure/trees.html","title":"树","lang":"zh-CN","frontmatter":{"title":"树","icon":"directory","date":"2023-06-30T00:00:00.000Z","category":"Languages","tag":["Python","Algorithm"],"description":"树和二叉树 有许多逻辑关系并不是简单的 线性关系，在实际场景中，常常存在一对多，甚至多对多的情况。其中 树 和 图 就是典型的 非线性数据结构。 树 树（tree） 是 n(n ≥ 0) 个节点的有限集。当 n = 0 时，称为 空树。 在任意一个非空树中，有如下特点： 有且仅有一个特定的称为 根节点; 当 n > 1 时，其余节点可分为 m(m > ...","head":[["meta",{"property":"og:url","content":"https://sankgao.github.io/languages/python3/algorithm_data_structure/trees.html"}],["meta",{"property":"og:site_name","content":"Sank's blog"}],["meta",{"property":"og:title","content":"树"}],["meta",{"property":"og:description","content":"树和二叉树 有许多逻辑关系并不是简单的 线性关系，在实际场景中，常常存在一对多，甚至多对多的情况。其中 树 和 图 就是典型的 非线性数据结构。 树 树（tree） 是 n(n ≥ 0) 个节点的有限集。当 n = 0 时，称为 空树。 在任意一个非空树中，有如下特点： 有且仅有一个特定的称为 根节点; 当 n > 1 时，其余节点可分为 m(m > ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://sankgao.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-11T10:06:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"树"}],["meta",{"property":"article:author","content":"Sankgao"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:published_time","content":"2023-06-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-11T10:06:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树\\",\\"image\\":[\\"https://sankgao.github.io/\\"],\\"datePublished\\":\\"2023-06-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-11T10:06:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Sankgao\\",\\"url\\":\\"https://sankgao.github.io\\"}]}"]]},"headers":[{"level":2,"title":"树和二叉树","slug":"树和二叉树","link":"#树和二叉树","children":[{"level":3,"title":"树","slug":"树","link":"#树","children":[]},{"level":3,"title":"二叉树","slug":"二叉树","link":"#二叉树","children":[]},{"level":3,"title":"二叉树的应用","slug":"二叉树的应用","link":"#二叉树的应用","children":[]}]},{"level":2,"title":"二叉树的遍历","slug":"二叉树的遍历","link":"#二叉树的遍历","children":[{"level":3,"title":"深度优先遍历","slug":"深度优先遍历","link":"#深度优先遍历","children":[]},{"level":3,"title":"广度优先遍历","slug":"广度优先遍历","link":"#广度优先遍历","children":[]}]},{"level":2,"title":"二叉堆","slug":"二叉堆","link":"#二叉堆","children":[{"level":3,"title":"二叉堆的自我调整","slug":"二叉堆的自我调整","link":"#二叉堆的自我调整","children":[]},{"level":3,"title":"二叉堆的代码实现","slug":"二叉堆的代码实现","link":"#二叉堆的代码实现","children":[]}]},{"level":2,"title":"优先队列","slug":"优先队列","link":"#优先队列","children":[{"level":3,"title":"优先队列的特点","slug":"优先队列的特点","link":"#优先队列的特点","children":[]},{"level":3,"title":"优先队列的实现","slug":"优先队列的实现","link":"#优先队列的实现","children":[]}]}],"git":{"createdTime":1691748380000,"updatedTime":1691748380000,"contributors":[{"name":"Sankgao","email":"sankgao@163.com","commits":1}]},"readingTime":{"minutes":22.04,"words":6611},"filePathRelative":"languages/python3/algorithm_data_structure/trees.md","localizedDate":"2023年6月30日","excerpt":"","autoDesc":true}`);export{t as data};
