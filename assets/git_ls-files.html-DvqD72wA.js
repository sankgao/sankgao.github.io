import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as n,c as s,b as t,e,d as i,w as c,f as r}from"./app-O51FdoXw.js";const o={},u=t("h2",{id:"描述",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),e(" 描述")],-1),g=t("code",null,"git ls-files",-1),h=r(`<h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>-c, --cached</code></td><td style="text-align:left;">仅显示已经暂存（<code>cached</code>）的文件，即那些存在于索引（<code>index</code>）中但可能尚未提交的文件</td></tr><tr><td style="text-align:center;"><code>-d, --deleted</code></td><td style="text-align:left;">显示那些在工作目录中已删除，但尚未从索引中删除的文件</td></tr><tr><td style="text-align:center;"><code>-m, --modified</code></td><td style="text-align:left;">显示那些在工作目录中已修改，但尚未暂存的文件</td></tr><tr><td style="text-align:center;"><code>-o, --others</code></td><td style="text-align:left;">显示那些不在 Git 索引中，但存在于工作目录中的文件。这些通常是未被 Git 追踪的文件</td></tr><tr><td style="text-align:center;"><code>-k, --killed</code></td><td style="text-align:left;">显示那些被 Git 忽略的文件</td></tr><tr><td style="text-align:center;"><code>-s, --stage</code></td><td style="text-align:left;">显示暂存文件的暂存信息</td></tr><tr><td style="text-align:center;"><code>-u, --unmerged</code></td><td style="text-align:left;">显示那些存在未解决冲突的文件</td></tr><tr><td style="text-align:center;"><code>-x &lt;pattern&gt;, --exclude=&lt;pattern&gt;</code></td><td style="text-align:left;">排除与指定模式匹配的文件</td></tr><tr><td style="text-align:center;"><code>-X &lt;file&gt;, --exclude-from=&lt;file&gt;</code></td><td style="text-align:left;">从给定文件中读取排除模式</td></tr><tr><td style="text-align:center;"><code>--exclude-standard</code></td><td style="text-align:left;">添加 Git 默认的标准排除模式</td></tr></tbody></table><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>例如：查看所有被 Git 追踪的文件（包括已暂存和未暂存的文件）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-files

a/b/c/hello.txt
welcome.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：查看那些在工作目录中已修改但尚未暂存的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-files <span class="token parameter variable">-m</span>

a/b/c/hello.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：显示暂存文件的暂存信息。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-files <span class="token parameter variable">-s</span>

<span class="token number">100644</span> 18832d35117ef2f013c4009f5b2128dfaeff354f <span class="token number">0</span>       a/b/c/hello.txt
<span class="token number">100644</span> 51dbfd25a804c30e9d8dc441740452534de8264b <span class="token number">0</span>       welcome.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function m(f,b){const d=l("RouterLink");return n(),s("div",null,[u,t("p",null,[g,e(" 用于列出 Git 仓库中所有被追踪的文件，即那些已经通过 "),i(d,{to:"/computers/commands/git/git_add.html"},{default:c(()=>[e("git add")]),_:1}),e(" 命令添加到暂存区的文件。这个命令在多种场景下都很有用，比如当您想要查看哪些文件被 Git 追踪时，或者当您想要对仓库中的文件进行某些批量操作时。")]),h])}const v=a(o,[["render",m],["__file","git_ls-files.html.vue"]]);export{v as default};
