import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as r,b as e,e as s,d,f as n}from"./app-HgYDRmp_.js";const t={},l=n(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>使用 <code>/opt/jenkins_home</code> 作为 Jenkins 服务的挂载数据目录时，权限被拒绝。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> /opt/jenkins_home:/var/jenkins_home <span class="token parameter variable">-u</span> jenkins <span class="token parameter variable">--name</span> jenkins jenkins/jenkins:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>报错日志如下：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs jenkins

touch: cannot <span class="token function">touch</span> <span class="token string">&#39;/var/jenkins_home/copy_reference_file.log&#39;</span><span class="token builtin class-name">:</span> Permission denied
INSTALL WARNING: User:  missing rw permissions on JENKINS_HOME: /var/jenkins_home
Can not <span class="token function">write</span> to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>当前 <code>/opt/jenkins_home</code> 目录的属主 UID 和容器中的 <code>jenkins</code> 用户的 UID 值不同，导致的权限拒绝。</p><p>通过以下命令查看 <code>/opt/jenkins_home</code> 目录的属主 UID：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">ls</span> <span class="token parameter variable">-l</span> /opt <span class="token operator">|</span> <span class="token function">grep</span> jenkins_home

drwxr-xr-x <span class="token number">11</span> jenkins jenkins <span class="token number">4096</span> Apr <span class="token number">22</span> 02:03 jenkins_home

$ <span class="token function">cat</span> /etc/passwd <span class="token operator">|</span> <span class="token function">grep</span> jenkins

jenkins:x:1002:1002::/opt/jenkins_home:/bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),p={class:"hint-container warning"},u=e("p",{class:"hint-container-title"},"注意",-1),m={href:"https://github.com/jenkinsci/docker?tab=readme-ov-file#usage",target:"_blank",rel:"noopener noreferrer"},k=n("<p>避免使用从主机上的文件夹（<code>/opt/jenkins_home</code>）到 <code>/var/jenkins_home</code> 的绑定装载，因为这可能会导致文件权限问题（在容器中使用的用户可能没有访问主机上文件夹的权限）。如果您真的需要绑定 <code>jenkins_home</code>，请确保容器内的 <code>jenkins</code> 用户可以访问主机上的目录（容器内 <code>jenkins</code> 用户 UID 是 <code>1000</code>），或者在 <code>docker run</code> 中使用 <code>-u some_other_user</code> 参数。</p>",1),v=n(`<h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><h3 id="解决方法-1" tabindex="-1"><a class="header-anchor" href="#解决方法-1" aria-hidden="true">#</a> 解决方法 1</h3><p>修改 <code>/opt/jenkins_home</code> 目录属主属组权限为 <code>1000</code>，使挂载目录权限和容器内用户权限一样。例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token number">1000</span>:1000 /ope/jenkins_home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="解决方法-2" tabindex="-1"><a class="header-anchor" href="#解决方法-2" aria-hidden="true">#</a> 解决方法 2</h3><p>在 <code>docker run</code> 中使用 <code>-u uid:gid</code> 参数，指定容器内使用的用户。例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-u</span> <span class="token number">1002</span>:1002 <span class="token parameter variable">--name</span> jenkins jenkins/jenkins:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由于该 ID 不存在于容器内的 <code>/etc/passwd</code> 文件中，所以进入容器后，容器名显示为 <code>I have no name!</code>。例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> jenkins /bin/bash

I have no name<span class="token operator">!</span>@87396e208b2e:/$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以进入容器中，通过修改容器内 jenkins 用户 UID 和 GID 解决。例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">-u</span> <span class="token number">0</span> jenkins /bin/bash

root@87396e208b2e:/$ <span class="token function">usermod</span> <span class="token parameter variable">-u</span> <span class="token number">1002</span> jenkins
root@87396e208b2e:/$ <span class="token function">groupmod</span> <span class="token parameter variable">-u</span> <span class="token number">1002</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function h(b,_){const a=o("ExternalLinkIcon");return c(),r("div",null,[l,e("div",p,[u,e("p",null,[s("参考官网："),e("a",m,[s("https://github.com/jenkinsci/docker?tab=readme-ov-file#usage"),d(a)])]),k]),v])}const j=i(t,[["render",h],["__file","permission_denied.html.vue"]]);export{j as default};
