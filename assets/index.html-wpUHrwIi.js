import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as r,a as t,b as o,f as n}from"./app-b5mRNyUk.js";const c={},d=o("p",null,"记录一些编程语言相关的信息。",-1),i=n('<p>计算机编程语言分为 <strong>编译型语言</strong> 和 <strong>解释型语言。</strong></p><h2 id="编译型语言" tabindex="-1"><a class="header-anchor" href="#编译型语言" aria-hidden="true">#</a> 编译型语言</h2><p>编译型语言写的程序执行之前，需要一个专门的编译过程，把程序编译成为机器语言的文件（如：<code>exe</code> 文件），以后要运行的话就不用重新翻译了，直接使用编译的结果就行了，因为翻译只做了一次，运行时不需要翻译，所以编译型语言的程序执行效率高。例如：C、C++、Go 等。</p><h2 id="解释型语言" tabindex="-1"><a class="header-anchor" href="#解释型语言" aria-hidden="true">#</a> 解释型语言</h2><p>解释型语言的程序不需要编译，在运行程序的时候才翻译，每个语句都是执行的时候才翻译。这样解释型语言每执行一次就需要逐行翻译一次，效率比较低。例如：Shell、Python、JavaScript 等。</p><h2 id="脚本语言" tabindex="-1"><a class="header-anchor" href="#脚本语言" aria-hidden="true">#</a> 脚本语言</h2><p>脚本语言是一种解释型的语言，脚本语言是为了缩短传统的 <em>编写-编译-链接-运行（edit-compile-link-run）</em> 过程而创建的计算机编程语言。脚本语言一般都有相应的脚本引擎来解释执行，他们一般需要解释器才能运行。</p><p>一个脚本通常是解释运行而非编译，脚本语言通常都有简单、易学、易用的特性，目的就是希望能让程序员快速完成程序的编写工作。而宏语言则可视为脚本语言的分支，两者也有实质上的相同之处。脚本语言一般都是以文本形式存在，类似于一种命令。</p>',8);function s(h,l){return a(),r("div",null,[d,t(" more "),i])}const m=e(c,[["render",s],["__file","index.html.vue"]]);export{m as default};
