import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-2a87c575.js";const t={},p=e(`<h2 id="server-sent-事件" tabindex="-1"><a class="header-anchor" href="#server-sent-事件" aria-hidden="true">#</a> Server-Sent 事件</h2><p><strong>Server-Sent 事件</strong> 指的是网页自动从服务器获得更新。</p><p>以前也可能做到这一点，前提是网页不得不询问是否有可用的更新。通过 Server-Sent 事件，更新能够自动到达。</p><p>例如：Facebook/Twitter 更新、股价更新、新的博文、赛事结果，等等。</p><h2 id="接收-server-sent-事件通知" tabindex="-1"><a class="header-anchor" href="#接收-server-sent-事件通知" aria-hidden="true">#</a> 接收 Server-Sent 事件通知</h2><p><strong>EventSource 对象</strong> 用于接收服务器发送事件通知。例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>获得服务器更新<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> EventSource <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventSource</span><span class="token punctuation">(</span><span class="token string">&quot;/example/html5/demo_sse.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    source<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> event<span class="token punctuation">.</span>data <span class="token operator">+</span> <span class="token string">&quot;&lt;br /&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>
      <span class="token string">&quot;抱歉，您的浏览器不支持 server-sent 事件 ...&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建一个新的 <strong>EventSource 对象</strong>，然后规定发送更新的页面的 URL（本例中是 <code>demo_sse.php</code>）</li><li>每当接收到一次更新，就会发生 <strong>onmessage 事件</strong></li><li>当 <strong>onmessage 事件</strong> 发生时，把已接收的数据推入 id 为 <code>result</code> 的元素中</li></ul><h2 id="检测-server-sent-事件支持" tabindex="-1"><a class="header-anchor" href="#检测-server-sent-事件支持" aria-hidden="true">#</a> 检测 Server-Sent 事件支持</h2><p>编写了一段额外的代码来检测服务器发送事件的浏览器支持。例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>EventSource<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 是的！支持服务器发送事件！</span>
    <span class="token comment">// 一些代码.....</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 抱歉！不支持服务器发送事件！</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务器端代码实例" tabindex="-1"><a class="header-anchor" href="#服务器端代码实例" aria-hidden="true">#</a> 服务器端代码实例</h2><p>为了使上例运行，您需要能够发送数据更新的服务器（比如 PHP 或 ASP）。</p><p>服务器端事件流的语法非常简单。把 <code>Content-Type</code> 报头设置为 <code>text/event-stream</code> 后就可以开始发送事件流了。例如：</p><p><code>PHP</code> 中的代码（demo_sse.php）：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Content-Type: text/event-stream&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Cache-Control: no-cache&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token variable">$time</span> <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;data: The server time is: <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$time</span><span class="token punctuation">}</span></span>\\n\\n&quot;</span><span class="token punctuation">;</span>
  <span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ASP</code> 中的代码（VB）（demo_sse.asp）：</p><div class="language-asp line-numbers-mode" data-ext="asp"><pre class="language-asp"><code>&lt;%
  Response.ContentType = &quot;text/event-stream&quot;
  Response.Expires = -1
  Response.Write(&quot;data: The server time is: &quot; &amp; now())
  Response.Flush()
%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>把 <code>Content-Type</code> 报头设置为 <code>text/event-stream</code></li><li>规定不对页面进行缓存</li><li>输出要发送的日期（始终以 <code>data: </code> 开头）</li><li>向网页刷新输出数据</li></ul>`,19),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","serversentevents.html.vue"]]);export{d as default};
