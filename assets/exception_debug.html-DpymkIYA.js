import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as e,c as o,d as a,f as n}from"./app-i0zF7vkB.js";const i={},c=n(`<h2 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理" aria-hidden="true">#</a> 异常处理</h2><p>在程序运行过程中，经常会遇到各种各样的错误，这些错误统称为 <strong>异常</strong>。这些异常有的是由于开发者将关键字敲错导致的，这类错误多数产生的是 <code>SyntaxError:invalid syntax</code>（无效的语法），这些直接导致程序不能运行。</p><p>程序运行出错时会有 <code>Traceback</code> 信息，<code>Traceback</code> 指的是 <strong>异常堆栈信息</strong>，描述了程序运行的过程及引发异常的信息。</p><h3 id="python-中常见的异常" tabindex="-1"><a class="header-anchor" href="#python-中常见的异常" aria-hidden="true">#</a> Python 中常见的异常</h3><table><thead><tr><th style="text-align:center;">异常</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>NameError</strong></td><td style="text-align:left;">尝试访问一个没有声明的变量引发的错误</td></tr><tr><td style="text-align:center;"><strong>IndexError</strong></td><td style="text-align:left;">索引超出序列范围引发的错误</td></tr><tr><td style="text-align:center;"><strong>IndentationError</strong></td><td style="text-align:left;">缩进错误</td></tr><tr><td style="text-align:center;"><strong>ValueError</strong></td><td style="text-align:left;">传入的值错误</td></tr><tr><td style="text-align:center;"><strong>KeyError</strong></td><td style="text-align:left;">请求一个不存在的字典关键字引发的错误</td></tr><tr><td style="text-align:center;"><strong>IOError</strong></td><td style="text-align:left;">输入输出错误（如要读取的文件不存在）</td></tr><tr><td style="text-align:center;"><strong>ImportError</strong></td><td style="text-align:left;">当 import 语句无法找到模块或 from 无法在模块中找到相应的名称时引发的错误</td></tr><tr><td style="text-align:center;"><strong>AttributeError</strong></td><td style="text-align:left;">尝试访问未知的对象属性引发的错误</td></tr><tr><td style="text-align:center;"><strong>TypeError</strong></td><td style="text-align:left;">类型不合适引发的错误</td></tr><tr><td style="text-align:center;"><strong>MemoryError</strong></td><td style="text-align:left;">内存不足</td></tr><tr><td style="text-align:center;"><strong>ZeroDivisionError</strong></td><td style="text-align:left;">除数为 0 引发的错误</td></tr></tbody></table><h3 id="异常处理语句" tabindex="-1"><a class="header-anchor" href="#异常处理语句" aria-hidden="true">#</a> 异常处理语句</h3><h4 id="try···except-语句" tabindex="-1"><a class="header-anchor" href="#try···except-语句" aria-hidden="true">#</a> try···except 语句</h4><p>在使用时，把可能产生异常的代码放在 <code>try</code> 语句块中，把处理结果放在 <code>except</code> 语句块中，如果 <code>try</code> 语句块中的代码出现错误时，就会执行 <code>except</code> 语句块中的代码；如果 <code>try</code> 语句块中的代码没有错误，就不执行 <code>except</code> 语句块中的代码。</p><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">1</span>
<span class="token keyword">except</span> <span class="token punctuation">[</span>ExceptionName <span class="token punctuation">[</span><span class="token keyword">as</span> alias<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>执行的代码 1</strong>：指定可能出现错误的代码块</li><li><strong>[ExceptionName [as alias]]</strong>：可选参数，指定要捕获的异常。<code>ExceptionName</code> 表示要捕获异常的名称；<code>al alias</code> 表示为捕获异常的名称指定一个别名，通过该别名，可以记录异常的具体内容</li><li><strong>执行的代码 2</strong>：指定出现异常时，执行的代码</li></ul><p><strong>try···except 语句流程：</strong></p>`,12),l=n(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>except</code> 后面不指定异常名称，则表示捕获全部异常。通过 <code>try···except</code> 语句捕获到异常后，程序会继续执行</p></div><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">division</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    功能：分苹果
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;分苹果了&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    apple <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入苹果的个数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    children <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入来了几个下朋友：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> apple <span class="token operator">//</span> children
    remain <span class="token operator">=</span> apple <span class="token operator">%</span> children

    <span class="token keyword">if</span> remain <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个，剩下 </span><span class="token interpolation"><span class="token punctuation">{</span>remain<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>


<span class="token comment"># 多个 except 语句</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>


<span class="token comment"># 同时处理多个类似异常，可以将 except 语句进行合并处理</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> <span class="token punctuation">(</span>ZeroDivisionError<span class="token punctuation">,</span> ValueError<span class="token punctuation">)</span> <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！原因是：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="try···except···else-语句" tabindex="-1"><a class="header-anchor" href="#try···except···else-语句" aria-hidden="true">#</a> try···except···else 语句</h4><p>当 <code>try</code> 语句块中没有发现异常时要执行的语句，当 <code>try</code> 语句块中发现异常，将不执行。</p><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">1</span>
<span class="token keyword">except</span> <span class="token punctuation">[</span>ExceptionName <span class="token punctuation">[</span><span class="token keyword">as</span> alias<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>try···except 语句流程：</strong></p>`,8),u=n(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>依赖于 <code>try</code> 代码块成功执行的代码都应放到 <code>else</code> 代码块中</p></div><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">division</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    功能：分苹果
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;分苹果了&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    apple <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入苹果的个数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    children <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入来了几个下朋友：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> apple <span class="token operator">//</span> children
    remain <span class="token operator">=</span> apple <span class="token operator">-</span> result <span class="token operator">*</span> children

    <span class="token keyword">if</span> remain <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个，剩下 </span><span class="token interpolation"><span class="token punctuation">{</span>remain<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;苹果顺利分完！&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="try···except···finally-语句" tabindex="-1"><a class="header-anchor" href="#try···except···finally-语句" aria-hidden="true">#</a> try···except···finally 语句</h4><p>有时在 <code>try···except</code> 语句中会占用一些资源。例如：打开的文件、网络连接、打开的数据库等。如果要释放这些资源，就要用 <code>finally</code> 进行清理代码。</p><p>完整的异常处理语句应该包含 <code>finally</code> 代码块，通常情况下无论程序中有无异常产生，<code>finally</code> 代码块都会执行。</p><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">1</span>
<span class="token keyword">except</span> <span class="token punctuation">[</span>ExceptionName <span class="token punctuation">[</span><span class="token keyword">as</span> alias<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">3</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>try···except···finally 语句流程：</strong></p>`,9),r=n(`<p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">division</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    功能：分苹果
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;分苹果了&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    apple <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入苹果的个数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    children <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入来了几个下朋友：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> apple <span class="token operator">//</span> children
    remain <span class="token operator">=</span> apple <span class="token operator">-</span> result <span class="token operator">*</span> children

    <span class="token keyword">if</span> remain <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个，剩下 </span><span class="token interpolation"><span class="token punctuation">{</span>remain<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;苹果顺利分完！&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;进行分苹果操作&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-raise-语句抛出异常" tabindex="-1"><a class="header-anchor" href="#使用-raise-语句抛出异常" aria-hidden="true">#</a> 使用 raise 语句抛出异常</h4><p>如果某个函数或方法可能会产生异常，但不想在当前函数或方法中处理这个异常，则可以使用 <code>raise</code> 语句在函数或方法中抛出异常。</p><p><strong>语法格式</strong>：<code>raise [ExceptionName [(reason)]]</code></p><ul><li><strong>ExceptionName</strong>：可选参数，指定抛出异常名称以及异常信息的相关描述，如果省略将错误原样抛出</li><li><strong>(reason)</strong>：可选参数，指定抛出异常时附带相关描述信息，如果省略将不附带相关描述信息</li></ul><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">division</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    功能：分苹果
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;分苹果了&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    apple <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入苹果的个数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    children <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入来了几个下朋友：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> apple <span class="token operator">&lt;</span> children<span class="token punctuation">:</span>
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;苹果太少了，不够分！&quot;</span><span class="token punctuation">)</span>

    result <span class="token operator">=</span> apple <span class="token operator">//</span> children
    remain <span class="token operator">=</span> apple <span class="token operator">-</span> result <span class="token operator">*</span> children

    <span class="token keyword">if</span> remain <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个，剩下 </span><span class="token interpolation"><span class="token punctuation">{</span>remain<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;苹果顺利分完！&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;进行分苹果操作&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="程序调试" tabindex="-1"><a class="header-anchor" href="#程序调试" aria-hidden="true">#</a> 程序调试</h2><p>在程序开发过程中，有语法和逻辑方面的错误。当语法错误时，程序会直接停止；当逻辑错误时，程序会一直执行但结果是错误的。这时需要掌握一定的程序调试方法。</p><h3 id="使用自带的-idle-进行程序调试" tabindex="-1"><a class="header-anchor" href="#使用自带的-idle-进行程序调试" aria-hidden="true">#</a> 使用自带的 IDLE 进行程序调试</h3><p>在继承开发工具中打开 <code>Debug</code> 功能，然后添加需要的 <strong>断点</strong>，按下 <kbd>F5</kbd> 继续执行程序。</p><div class="hint-container tip"><p class="hint-container-title">断点的作用</p><p>设置断点后，程序执行到断点时就会暂时中断执行，可以查看某些变量的值，程序可以随时继续执行</p></div><h3 id="使用-assert-语句调试程序" tabindex="-1"><a class="header-anchor" href="#使用-assert-语句调试程序" aria-hidden="true">#</a> 使用 assert 语句调试程序</h3><p>Python 提供了 <code>assert</code> 语句调试程序，<code>assert</code> 意思是 <strong>断言</strong>，一般用于对程序某个时刻必须满足的条件进行验证。</p><p><strong>语法格式</strong>：<code>assert expression [, reason]</code></p><ul><li><strong>expression</strong>：条件表达式，如果该表达式的值为真时，什么都不做；如果为假时，则抛出 <code>AssertionError</code> 异常</li><li><strong>reason</strong>：可选参数，用于对判断条件进行描述</li></ul><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">division</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    功能：分苹果
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;分苹果了&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    apple <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入苹果的个数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    children <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入来了几个下朋友：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># 断言调试</span>
    <span class="token keyword">assert</span> apple <span class="token operator">&gt;</span> children<span class="token punctuation">,</span> <span class="token string">&quot;苹果不够分！&quot;</span>

    result <span class="token operator">=</span> apple <span class="token operator">//</span> children
    remain <span class="token operator">=</span> apple <span class="token operator">-</span> result <span class="token operator">*</span> children

    <span class="token keyword">if</span> remain <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个，剩下 </span><span class="token interpolation"><span class="token punctuation">{</span>remain<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>apple<span class="token punctuation">}</span></span><span class="token string"> 个苹果，平均分给 </span><span class="token interpolation"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token string"> 个小朋友，每个人分 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string"> 个苹果&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;苹果顺利分完！&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;进行分苹果操作&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常情况下，<code>assert</code> 语句可以和异常处理语句结合使用。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        division<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了！苹果不能被 0 个小朋友分&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token comment"># assert 和异常处理语句结合使用</span>
    <span class="token keyword">except</span> AssertionError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入错误：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;苹果顺利分完！&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;进行分苹果操作&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>assert</code> 语句只在调试阶段有效。可以通过在执行 python 命令时加入 <code>-O</code>（大写）参数来关闭 assert 语句</p></div><h3 id="自定义异常类" tabindex="-1"><a class="header-anchor" href="#自定义异常类" aria-hidden="true">#</a> 自定义异常类</h3><p>自定义的异常类，需要继承 <code>Exception</code> 类或子类，之前的 <code>ZeroDivisionError</code> 和 <code>ValueError</code> 异常都属于 <code>Exception</code> 的子类。</p><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">TestExcept</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>massage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>TestExcept</strong>：定义异常类的名称</li><li><strong>message</strong>：定义异常的描述信息</li><li><strong>super()</strong>：调用父类构造方法，并把参数 <code>massage</code> 传给父类构造方法</li></ul><p>例如：用户输入的密码不能低于 6 位数。自定义一个异常，用于检测用户输入的密码是否符合规定，不符合则引发异常，提示当前输入的密码长度和最小密码长度不能低于 6 位数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 异常捕获的类</span>
<span class="token keyword">class</span> <span class="token class-name">MyError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># length 为用户输入的密码长度，min_len 为规定的最小长度</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> length<span class="token punctuation">,</span> min_len<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>length <span class="token operator">=</span> length
        self<span class="token punctuation">.</span>min_len <span class="token operator">=</span> min_len

    <span class="token comment"># 设置抛出异常的描述信息</span>
    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;您输入的长度是 %s，不能少于 %s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>length<span class="token punctuation">,</span> self<span class="token punctuation">.</span>min_len<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取用户输入的密码</span>
        con <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入密码：&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 获取用户输入的密码长度</span>
        l <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span>

        <span class="token keyword">if</span> l <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">:</span>
            <span class="token comment"># 长度低于设定的 6 位数则引发异常</span>
            <span class="token keyword">raise</span> MyError<span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
        
        <span class="token comment"># assert l &gt;= 6, MyError(l, 6)</span>
    
    <span class="token comment"># 有错误则提示</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> ss<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token comment"># 没有错误则执行</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;您的密码输入完毕&quot;</span><span class="token punctuation">)</span>


main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29);function d(k,v){const s=p("Mermaid");return e(),o("div",null,[c,a(s,{id:"mermaid-147",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3Ay1HjWufzFwh6FkqJKhSe7Fz9f0AiRca5+NmP90wnLnvZPfD5l/tM9TU937KgFm+EMlFeITC2GGGAEMyC1Ijm1oATFDBeN6Oe7Jz+bOz9WE6HTLx8ixwUAKIo+aA=="}),l,a(s,{id:"mermaid-170",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3Ay1HjWufzFwh6FkqJKhSe7Fz9f0AiRca5+NmP90wnLnvZPfD5l/tM9TU937KgFm+EMlFeITC2GGGAEMyC1Ijm1oATFDBeN6Oe7Jz+bOz9WE6HTLx+i0RiuMac4FVUbFwCCsEpk"}),u,a(s,{id:"mermaid-196",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3Ay1HjWufzFwh6FkqJKhSe7Fz9f0AiRca5+NmP90wnLnvZPfD5l/tM9TU937KgFm+EMlFeITC2GGGAEMyC1Ijm1oATFDCcTmGRaZl5iTg6qDS4a0c93T342d36sJsJcv3yITmO4sTnFqWiGcgEA70JX2Q=="}),r])}const g=t(i,[["render",d],["__file","exception_debug.html.vue"]]);export{g as default};
