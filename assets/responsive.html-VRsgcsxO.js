import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as l,c as i,b as s,e as n,d as p,f as a}from"./app-TPnmj7Up.js";const u={},r=a('<h2 id="gui" tabindex="-1"><a class="header-anchor" href="#gui" aria-hidden="true">#</a> GUI</h2><p>GUI 是 Graphical User Interface（图像用户界面）的缩写。在 GUI 中并不只是键入文本和返回文本，用户可以看到窗口、按钮、文本框等图形，而且可以用鼠标单击，还可以通过键盘输入。</p><p>GUI 是与程序交互的一种方式。GUI 的程序有三个基本要素：<strong>输入</strong>、<strong>处理</strong> 和 <strong>输出</strong></p><h3 id="常用的-gui-框架" tabindex="-1"><a class="header-anchor" href="#常用的-gui-框架" aria-hidden="true">#</a> 常用的 GUI 框架</h3><table><thead><tr><th style="text-align:center;">工具包</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>wxPython</strong></td><td style="text-align:left;">wxPython 是 Python 语言的一套优秀的 GUI 图形库，支持跨平台。提供了丰富的控件，可用于开发复杂的图形用户界面</td></tr><tr><td style="text-align:center;"><strong>Kivy</strong></td><td style="text-align:left;">Kivy 是一个开源工具包能够让使用相同源代码创建的程序能跨平台运行。主要关注创新型用户界面开发。如：多点触摸应用程序</td></tr><tr><td style="text-align:center;"><strong>Flexx</strong></td><td style="text-align:left;">Flexx 是一个纯 Python 工具包，用来创建图形化界面应用程序，可使用 Web 技术进行界面的渲染</td></tr><tr><td style="text-align:center;"><strong>PyQt</strong></td><td style="text-align:left;">PyQt 是 Qt 库的 Python 版本，支持跨平台。若使用 PyQt 工具包，需要额外安装软件包</td></tr><tr><td style="text-align:center;"><strong>Tkinter</strong></td><td style="text-align:left;">Tkinter（也叫 Tk 接口）是 Python 官方提供的图形用户界面开发库，用于封装 TK GUI 工具包，跨平台。但 Tkinter 工具包包含的控件少，帮助文档不健全</td></tr><tr><td style="text-align:center;"><strong>Pywin32</strong></td><td style="text-align:left;">Windows Pywin32 允许您像 VC 一样的形式来使用 Python 开发 win32 应用</td></tr><tr><td style="text-align:center;"><strong>PyGTK</strong></td><td style="text-align:left;">PyGTK 让您用 Python 轻松创建具有图形用户界面的程序</td></tr><tr><td style="text-align:center;"><strong>pyui4win</strong></td><td style="text-align:left;">Pyui4win 是一个开源的采用自绘技术的界面库</td></tr></tbody></table><h3 id="安装-wxpython" tabindex="-1"><a class="header-anchor" href="#安装-wxpython" aria-hidden="true">#</a> 安装 wxPython</h3>',6),k=s("code",null,"wxPython",-1),d={href:"https://wxPython.org",target:"_blank",rel:"noopener noreferrer"},m=a('<p>使用 pip 命令安装 wxPython 库：<code>pip install wxPython</code>。</p><h2 id="创建应用程序" tabindex="-1"><a class="header-anchor" href="#创建应用程序" aria-hidden="true">#</a> 创建应用程序</h2><p>在使用 wxPython 之前，先了解两个基础对象：</p><ul><li><strong>应用程序对象</strong>：应用管理主事件循环，主事件循环是一种事件或消息分发处理机制，大部分图形用户界面在界面中的显示及响应用户事件的处理都是通过主事件循环实现的</li><li><strong>顶级窗口</strong>：通常用于管理最重要的数据，控制并呈现给用户</li></ul><p>这两个基础对象和应用程序的其它部分之间的关系：</p>',5),v=a(`<p>这个应用程序对象拥有顶级窗口和主循环事件。顶级窗口管理其窗口中的组件和其它的分配给它的数据对象属性。窗口和它的组件触发的事件基于用户的动作，并接受事件通知以便改变显示。</p><h3 id="创建一个-wx-app-的子类" tabindex="-1"><a class="header-anchor" href="#创建一个-wx-app-的子类" aria-hidden="true">#</a> 创建一个 wx.App 的子类</h3><p>创建一个没有任何功能的子类。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">App</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>App<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 初始化方法</span>
    <span class="token keyword">def</span> <span class="token function">OnInit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 创建窗口对象</span>
        frame <span class="token operator">=</span> wx<span class="token punctuation">.</span>Frame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;Hello wyPython&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 显示窗口。窗口默认隐藏，需要调用 Show() 方法显示</span>
        frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 返回值</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token comment"># App 类的实例用于创建应用程序对象</span>
    app <span class="token operator">=</span> App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 调用 App 类的 MainLoop() 主循环方法，让应用程序进入主事件循环中</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接创建 <code>wx.App</code>。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx

<span class="token comment"># 创建应用程序对象</span>
app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 创建窗口对象</span>
frame <span class="token operator">=</span> wx<span class="token punctuation">.</span>Frame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;第一个 wxPython 程序！&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 显示窗口</span>
frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 调用 wx.app 类的 MainLoop() 主循环方法，让应用程序进入主事件循环中</span>
app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-wx-frame-框架" tabindex="-1"><a class="header-anchor" href="#使用-wx-frame-框架" aria-hidden="true">#</a> 使用 wx.Frame 框架</h3><p>在 GUI 中框架通常称为 <strong>窗口</strong>。框架是一个容器，用户可以将它在屏幕上任意移动，并对它进行缩放，通常包含标题栏、菜单等。</p><p>在 wxPython 中，wx.Frame 是所有框架的父类，当创建 wx.Frame 的子类时，子类应该调用其父类的构造器 <code>wx.Frame.__init__()</code>。</p><p><strong>wx.Frame 语法格式：</strong></p><p><code>wx.Frame(parent, id=-1, title=&quot;&quot;, pos=ws.DefaultPosition, size=ws.DefaultSize, style=wx.DEFAULT_FRAME_STLE, name=&quot;frame&quot;)</code></p><ul><li><strong>parent</strong>：框架的父窗口，如果是顶级窗口，这个值是 <code>None</code></li><li><strong>id</strong>：关于新窗口的 wxPython <strong>ID 号</strong>。通常设为 <code>-1</code>，让 wxPython 自动生成一个新的 <code>ID</code></li><li><strong>title</strong>：窗口的标题</li><li><strong>pos</strong>：一个 wx.Point 对象，指定这个窗口的左上角在屏幕中的位置。在图形用户界面程序中，通常 <code>(0, 0)</code> 是显示器的左上角，默认值 <code>(-1, -1)</code> 将让系统决定窗口的位置</li><li><strong>size</strong>：一个 wx.size 对象，指定这个窗口的初始尺寸。默认值是 <code>(-1, -1)</code> 将让系统决定窗口的初始尺寸</li><li><strong>style</strong>：指定窗口的类型常量。可以使用或运算来组合它们</li><li><strong>name</strong>：框架内在的名字。可以使用 <code>name</code> 来寻找这个窗口</li></ul><p>自定义窗口类。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 初始化方法</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;myframe&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token comment"># 创建应用程序对象</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建窗口对象</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment"># 显示窗口</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用控件" tabindex="-1"><a class="header-anchor" href="#常用控件" aria-hidden="true">#</a> 常用控件</h2><p>创建完窗口以后，可以在窗口内添加一些控件。控件就是经常使用的按钮、文本、输入框、单选框等。</p><h3 id="wx-statictext-文本类" tabindex="-1"><a class="header-anchor" href="#wx-statictext-文本类" aria-hidden="true">#</a> wx.StaticText 文本类</h3><p>通过使用 <code>wx.StaticText</code> 类来完成在屏幕上绘制纯文本，使用 wx.StaticText 能够改变文本的对齐方式、字体和颜色等。</p><p><strong>wx.StaticText 语法格式：</strong></p><p><code>wx.StaticText(parent, id, label, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=&quot;staticText&quot;)</code></p><ul><li><strong>parent</strong>：父窗口部件</li><li><strong>id</strong>：标识符。使用 <code>-1</code> 可以自动创建一个唯一的标识</li><li><strong>label</strong>：显示在静态控件中的文本内容</li><li><strong>pos</strong>：一个 wx.Point 或一个 Python 元组，它是窗口部件的位置</li><li><strong>size</strong>：一个 wx.size 或一个 Python 元组，它的窗口部件的尺寸</li><li><strong>style</strong>：样式标记</li><li><strong>name</strong>：对象的名字</li></ul><p>使用 <code>panel = wx.Panel(self)</code> 来创建画板，并将 <code>panel</code> 作为父类，然后将组件放入窗体中，使用 <code>wx.Font</code> 类设置字体。</p><p><strong>wx.Font 语法格式：</strong></p><p><code>wx.Font(pointSize, family, style, weight, underline=False, faceName=&quot;&quot;, encoding=wx.FONTENCODING_DEFAULT)</code></p><ul><li><strong>pointSize</strong>：字体的整体尺寸，单位为磅</li><li><strong>family</strong>：用于快速指定一个字体而不需要知道该字体实际的名字</li><li><strong>style</strong>：指明字体是否倾斜</li><li><strong>weight</strong>：指明字体的醒目程度</li><li><strong>underline</strong>：仅在 Windows 下有效，如果值为 <code>True</code> 则加下划线；如果值为 <code>False</code> 则无下划线</li><li><strong>faceName</strong>：指定字体名</li><li><strong>encoding</strong>：允许在几个编码中选择一个，大多数情况可以使用默认编码</li></ul><p>例如：输出一篇古文。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;创建 StaticText 类&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 创建画板</span>
        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>parent<span class="token operator">=</span>self<span class="token punctuation">)</span>

        <span class="token comment"># 创建标题，并设置字体</span>
        title <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>parent<span class="token operator">=</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;江雪&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        font <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span>
        title<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>font<span class="token punctuation">)</span>
        <span class="token comment"># 创建文本</span>
        wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;唐 柳宗元&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;千山鸟飞绝&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;万径人踪灭&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;孤舟蓑笠翁&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;独钓寒江雪&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token comment"># 初始化应用</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建窗口对象</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment"># 显示窗口</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wx-textctrl-输入文本类" tabindex="-1"><a class="header-anchor" href="#wx-textctrl-输入文本类" aria-hidden="true">#</a> wx.TextCtrl 输入文本类</h3><p><code>wx.StaticText</code> 类只能够用于显示纯碎的静态文本，使用 <code>wx.TextCtrl</code> 类可以与用户进行交互，允许输入单行或多行文本。也可以作为密码输入控件，掩饰所按下的按键。</p><p><strong>wx.TextCtrl 语法格式：</strong></p><p><code>wx.TextCtrl(parent, id, value = &quot;&quot;, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, validator=wx.DefaultValidator name=wx.TextCtrNameStr)</code></p><ul><li><p><strong>parent</strong>：父窗口部件</p></li><li><p><strong>id</strong>：标识符。使用 <code>-1</code> 可以自动创建一个唯一的标识</p></li><li><p><strong>value</strong>：显示在该控件中的初始文本</p></li><li><p><strong>pos</strong>：一个 <code>wx.Point</code> 或一个 Python 元组，它是窗口部件的位置</p></li><li><p><strong>size</strong>：一个 <code>wx.size</code> 或一个 Python 元组，它的窗口部件的尺寸</p></li><li><p><strong>style</strong>：单行 <code>wx.TextCtrl</code> 的样式。<strong>取值如下：</strong></p><ul><li><strong>wx.TE_CENTER</strong>：控件中的文本居中</li><li><strong>wx.TE_LEFT</strong>：控件中的文本左对齐</li><li><strong>wx.TE_RIGHT</strong>：控件中的文本右对齐</li><li><strong>wx.TE_NOHIDESEL</strong>：文本始终高亮显示，只适用与 Windows</li><li><strong>wx.TE_PASSWORD</strong>：不显示所键入的文本，以星号 <code>*</code> 代替显示</li><li><strong>wx.TE_PROCESS_ENTER</strong>：如果使用该参数，那么当用户在控件内按下 <kbd>Enter</kbd> 键时，一个文本输入事件将被触发，否则按键事件由该文本控件或该对话框管理</li><li><strong>wx.TE_PROCESS_TAB</strong>：如果指定该样式，那么通常的字符事件在按下 <kbd>Tab</kbd> 键时，创建（一般意味一个制表符将被插入文本），否则 <code>tab</code> 由对话框管理，通常是控件间的切换</li><li><strong>wx.TE_READONLY</strong>：文本控件为只读，用户不能修改其中的文本</li></ul></li><li><p><strong>validator</strong>：常用于过滤数据以确保只能键入要接受的数据</p></li><li><p><strong>name</strong>：框架内在的名字。可以使用 <code>name</code> 来寻找这个窗口</p></li></ul><p>例如：实现一个包含用户名和密码的登录界面。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;创建 TextCtrl 类&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;请输入用户名和密码&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;用户名：&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;密  码：&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_PASSWORD<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wx-button-按钮类" tabindex="-1"><a class="header-anchor" href="#wx-button-按钮类" aria-hidden="true">#</a> wx.Button 按钮类</h3><p>按钮是 GUI 界面中应用最为广泛的控件，常用于捕获用户生成的单击事件，最明显的用途是触发绑定到一个处理函数。</p><p>wxPython 中最常用的按钮类型是 <code>wx.Button</code> 类。</p><p><strong>wx.Button 语法格式：</strong></p><p><code>wx.Button(parent, id, label, pos, size=wxDefaultSize, style=0, validator, name=&quot;button&quot;)</code></p><ul><li><p><strong>parent</strong>：父窗口部件</p></li><li><p><strong>id</strong>：标识符。使用 <code>-1</code> 可以自动创建一个唯一的标识</p></li><li><p><strong>label</strong>：显示在静态控件中的文本内容</p></li><li><p><strong>pos</strong>：一个 <code>wx.Point</code> 或一个 Python 元组，它是窗口部件的位置</p></li><li><p><strong>size</strong>：一个 <code>wx.size</code> 或一个 Python 元组，它的窗口部件的尺寸</p></li><li><p><strong>style</strong>：单行 wx.TextCtrl 的样式。<strong>取值如下：</strong></p><ul><li><strong>wx.TE_CENTER</strong>：控件中的文本居中</li><li><strong>wx.TE_LEFT</strong>：控件中的文本左对齐</li><li><strong>wx.TE_RIGHT</strong>：控件中的文本右对齐</li><li><strong>wx.TE_NOHIDESEL</strong>：文本始终高亮显示，只适用与 Windows</li><li><strong>wx.TE_MULTILINE</strong>：控件中的文本可以换行，是多行文本</li><li><strong>wx.TE_PASSWORD</strong>：不显示所键入的文本，以星号 <code>*</code> 代替显示</li><li><strong>wx.TE_PROCESS_ENTER</strong>：如果使用该参数，那么当用户在控件内按下 <kbd>Enter</kbd> 键时，一个文本输入事件将被触发，否则按键事件由该文本控件或该对话框管理</li><li><strong>wx.TE_PROCESS_TAB</strong>：如果指定该样式，那么通常的字符事件在按下 <kbd>Tab</kbd> 键时，创建（一般意味一个制表符将被插入文本），否则 <code>tab</code> 由对话框管理，通常是控件间的切换</li><li><strong>wx.TE_READONLY</strong>：文本控件为只读，用户不能修改其中的文本</li></ul></li><li><p><strong>validator</strong>：常用于过滤数据以确保只能键入要接受的数据</p></li><li><p><strong>name</strong>：框架内在的名字。可以使用 <code>name</code> 来寻找这个窗口</p></li></ul><p>例如：为登录界面添加 “确认” 和 “取消” 按钮。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;My TextCtrl class&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;请输入用户名和密码&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;用户名：&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;密  码：&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_PASSWORD<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>bt_confirm <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;确认&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>bt_cancel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;取消&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="boxsizer-布局" tabindex="-1"><a class="header-anchor" href="#boxsizer-布局" aria-hidden="true">#</a> BoxSizer 布局</h2><p>控件的几何位置是 <strong>绝对位置</strong>，也就是固定的，当调整窗口大小时，界面会不美观。在 wxPython 中有一种更智能的布局方式——<code>sizer</code>（尺寸器）。<code>sizer</code> 是用于自动布局一组窗口控件的算法。<code>sizer</code> 被附加到一个容器，通常是一个框架或面板。在父容器中创建的子窗口控件必须被分别添加到 <code>sizer</code>。当 <code>sizer</code> 被附加到容器时，它随后就可以管理它所包含的子布局。</p><p><strong>wxPython 提供的 sizer：</strong></p><table><thead><tr><th style="text-align:center;">sizer 名称</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>BoxSizer</strong></td><td style="text-align:left;">在一条水平或垂直线上的窗口部件的布局。当尺寸改变时，控制窗口部件的行为上很灵活。通常用于嵌套的样式，可用于几乎任何类型的布局</td></tr><tr><td style="text-align:center;"><strong>GridSizer</strong></td><td style="text-align:left;">一个十分基础的网络布局。当您要设置的窗口部件都是同样的尺寸且整齐地放入一个规则的网格中可以使用</td></tr><tr><td style="text-align:center;"><strong>FlexGridSizer</strong></td><td style="text-align:left;">对 GridSizer 稍微做了些改变，当窗口部件有不同的尺寸时，可以有更好的结果</td></tr><tr><td style="text-align:center;"><strong>GridBagSizer</strong></td><td style="text-align:left;">GridSizer 系列中最灵活的成员。使网格中的窗口部件可以随意放置</td></tr><tr><td style="text-align:center;"><strong>StaticBoxSizer</strong></td><td style="text-align:left;">一个标准的 BoxSizer，带有标题和环线</td></tr></tbody></table><h3 id="什么是-boxsizer" tabindex="-1"><a class="header-anchor" href="#什么是-boxsizer" aria-hidden="true">#</a> 什么是 BoxSizer</h3><p>BoxSizer 是一个垂直列或水平行，窗口部件在其中从左至右或从上到下布置在一条线上。sizer 相互之间嵌套可以使您能够在每行或每列很容易放置不同数量的项目。由于每个 sizer 都是一个独立的实体，因此您的布局就有了更多的灵活性，对于大多数的应用程序，一个嵌套水平 sizer 的垂直 sizer 将使您能够创建您所需要的布局。</p><h3 id="使用-boxsizer-布局" tabindex="-1"><a class="header-anchor" href="#使用-boxsizer-布局" aria-hidden="true">#</a> 使用 BoxSizer 布局</h3><p>尺寸器会管理组件的尺寸，只要将部件添加到尺寸器上，再加上一些布局参数，就可以让尺寸器自己去管理父组件的尺寸。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;用户登录&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;请输入用户名和密码&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        vsizer <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span>
        vsizer<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>title<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>BOTTOM <span class="token operator">|</span> wx<span class="token punctuation">.</span>TOP <span class="token operator">|</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
        <span class="token comment"># 设定尺寸器</span>
        panel<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>vsizer<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Add()</code> 方法添加子窗口（或控件）到父窗口。</p><p><strong>Add() 语法格式：</strong></p><p><code>Box.Add(control, proportion, flag, border)</code></p><ul><li><p><strong>control</strong>：要添加的控件</p></li><li><p><strong>proportion</strong>：所添加控件在定义的定位方式所代表方向上占据的空间比例。如果有三个按钮，它们的比例值分别为 <code>0</code>、<code>1</code>、<code>2</code>，它们都已经添加到一个宽度为 <code>30</code> 的水平排列 <code>wx.BoxSizer</code>，起始宽度都是 <code>10</code>。当 <code>sizer</code> 的宽度从 <code>30</code> 变成 <code>60</code> 时，按钮 <code>1</code> 的宽度保持不变，仍然是 <code>10</code>；按钮 <code>2</code> 的宽度约为 <code>10 + (60 - 30) * 1 / (1 + 2) = 20</code>，按钮 <code>2</code> 约为 <code>20</code></p></li><li><p><strong>flag</strong>：用于控制对齐方式、边框和调整尺寸，flag 参数与 border 参数结合使用可以指定边框边距宽度。<strong>包括以下选项：</strong></p><ul><li><strong>wx.LEFT</strong>：左边距</li><li><strong>wx.RIGHT</strong>：右边距</li><li><strong>wx.BOTTOM</strong>：底边距</li><li><strong>wx.TOP</strong>：上边距</li><li><strong>wx.ALL</strong>：上下左右 4 个边距</li></ul><p>通过竖线 <code>|</code> 操作符，来联合使用这些标志，比如：<code>wx.LEFT | wx.BOTTOM</code>。此外，flag 参数还可以与 proportion 参数结合，指定控件本身的对齐（排列）方式。<strong>包括以下选项：</strong></p><ul><li><strong>wx.ALIGN_LEFT</strong>：左边对齐</li><li><strong>wx.ALIGN_RIGHT</strong>：右边对齐</li><li><strong>wx.ALIGN_TOP</strong>：顶部对齐</li><li><strong>wx.ALIGN_BOTTOM</strong>：底边对齐</li><li><strong>wx.ALIGN_CENTER_VERTICAL</strong>：垂直居中对齐</li><li><strong>wx.ALIGN_CENTER_HORIZONTAL</strong>：水平居中对齐</li><li><strong>wx.ALIGN_CENTER</strong>：居中对齐</li></ul><p>调整尺寸。<strong>选项如下：</strong></p><ul><li><strong>wx.EXPAND</strong>：所添加控件将占有 sizer 定位方向上所有可用的空间</li><li><strong>wx.SHAPED</strong>：调整子窗口（或控件）填充有效空间，但保存高度比</li><li><strong>wx.FIXED_MINSIZE</strong>：调整子窗口（或控件）为最小尺寸</li><li><strong>wx.RESERVE_SPACE_EVEN_IF_HIDDEN</strong>：设置此标志后，子窗口（或控件）如果被隐藏，则所占空间保留</li></ul></li><li><p><strong>border</strong>：用于设置边框的宽度，控制所添加控件的边距，就是在部件之间添加一些像素的空白</p></li></ul><p>首先设置了增加面板控件（<code>wx.Panel</code>），并创建了一个 <code>wx.BoxSizer</code>，它带有一个决定其是水平还是垂直的参数（<code>wx.HORIZONTAL</code> 或 <code>wx.VERTICAL</code>）默认为水平，然后使用 <code>Add()</code> 方法将控件加入 <code>sizer</code>，最后使用面板的 <code>SetSizer()</code> 方法设定它的尺寸器。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;用户登录&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># 创建面板</span>
        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

        <span class="token comment"># 创建文本，左对齐</span>
        self<span class="token punctuation">.</span>title <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;请输入用户名和密码&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;用户名：&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;密  码：&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_PASSWORD<span class="token punctuation">)</span>

        <span class="token comment"># 创建 “确定” 和 “取消” 按钮</span>
        self<span class="token punctuation">.</span>bt_confirm <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;确认&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>bt_cancel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;取消&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># 添加容器，容器中控件横向排列</span>
        hsizer_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span>
        hsizer_user<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label_user<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_user<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_user<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span>
        hsizer_passwd<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label_passwd<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_passwd<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_passwd<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_button <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span>
        hsizer_button<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bt_confirm<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_button<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bt_cancel<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

        <span class="token comment"># 添加容器，容器中控件纵向排列</span>
        vsizer_all <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>title<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>BOTTOM <span class="token operator">|</span> wx<span class="token punctuation">.</span>TOP <span class="token operator">|</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hsizer_user<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span> wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hsizer_passwd<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span> wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hsizer_button<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALIGN_CENTER <span class="token operator">|</span> wx<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>

        <span class="token comment"># 设定尺寸器</span>
        panel<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>vsizer_all<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件处理" tabindex="-1"><a class="header-anchor" href="#事件处理" aria-hidden="true">#</a> 事件处理</h2><p>当单击 “确定” 按钮时，验证输入的用户名和密码是否正确，并输出相应的提示信息；当点击 “取消” 按钮时，清空已经输入的用户名和密码。如果要实现这种功能，就需要使用 wxPython 的事件处理。</p><p>用户执行的动作就叫作事件（<code>event</code>）。如：单击按钮，就是一个单击事件。</p><h3 id="绑定事件" tabindex="-1"><a class="header-anchor" href="#绑定事件" aria-hidden="true">#</a> 绑定事件</h3><p>通过使用 <code>Bind()</code> 方法可以将事件处理函数绑定到给定的事件上，当发送一个事件时，可以让程序注意这些事件并且做出反应。</p><p><strong>Bind() 语法格式：</strong></p><p><code>bt_confirm.Bind(wx.EVT_BUTTON, OnclickSubmit)</code></p><ul><li><p><strong>bt_confirm.Bind</strong>：需要绑定的事件</p></li><li><p><strong>wx.EVT_BUTTON</strong>：事件类型为按钮类型。在 wxPython 中有很多 <strong>wx.EVT_</strong> 开头的事件类型。例如：</p><ul><li><strong>wx.EVT_MOTION</strong>：产生于用户移动鼠标</li><li><strong>wx.ENTER_WINDOW</strong>：产生于当用户鼠标进入一个窗口控件</li><li><strong>wx.LEAVE_WINDOW</strong>：产生于当用户鼠标离开一个窗口控件</li><li><strong>wx.EVT_MOUSEWHEEL</strong>：被绑定到鼠标滚轮的活动</li></ul></li><li><p><strong>OnclickSubmit</strong>：方法名。事件发送时执行该方法</p></li></ul><p>当用户输入用户名和密码后，单击 “确定” 按钮，如果输入的用户名为 “zhangsan” 并且密码为 “123”，则弹出对话框提示 “登录成功”，否则提示 “用户名和密码不匹配”；当用户点击 “取消” 按钮时，清空用户输入的用户名和密码。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;用户登录&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># 创建面板</span>
        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

        <span class="token comment"># 创建文本，左对齐</span>
        self<span class="token punctuation">.</span>title <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;请输入用户名和密码&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;用户名：&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;密  码：&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>text_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>TE_PASSWORD<span class="token punctuation">)</span>

        <span class="token comment"># 创建 “确定” 和 “取消” 按钮，并绑定事件</span>
        self<span class="token punctuation">.</span>bt_confirm <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;确认&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>bt_confirm<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>OnclickSubmit<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>bt_cancel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;取消&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>bt_cancel<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>OnclickCancel<span class="token punctuation">)</span>

        <span class="token comment"># 添加容器，容器中控件横向排列</span>
        hsizer_user <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span>
        hsizer_user<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label_user<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_user<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_user<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_passwd <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span>
        hsizer_passwd<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label_passwd<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_passwd<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_passwd<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_button <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span>
        hsizer_button<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bt_confirm<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hsizer_button<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bt_cancel<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

        <span class="token comment"># 添加容器，容器中控件纵向排列</span>
        vsizer_all <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>title<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>BOTTOM <span class="token operator">|</span> wx<span class="token punctuation">.</span>TOP <span class="token operator">|</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hsizer_user<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span> wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hsizer_passwd<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span> wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>
        vsizer_all<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hsizer_button<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALIGN_CENTER <span class="token operator">|</span> wx<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>

        <span class="token comment"># 设定尺寸器</span>
        panel<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>vsizer_all<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">OnclickSubmit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        单击 “确定按钮”，执行方法
        :param self:
        :param event:
        :return:
        &quot;&quot;&quot;</span>
        message <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
        <span class="token comment"># 获取输入的用户名</span>
        user <span class="token operator">=</span> self<span class="token punctuation">.</span>text_user<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 获取输入的密码</span>
        passwd <span class="token operator">=</span> self<span class="token punctuation">.</span>text_passwd<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># 判断用户名和密码是否为空</span>
        <span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">or</span> passwd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
            message <span class="token operator">=</span> <span class="token string">&quot;用户名或密码不能为空！&quot;</span>
        <span class="token keyword">elif</span> user <span class="token operator">==</span> <span class="token string">&quot;zhangsan&quot;</span> <span class="token keyword">and</span> passwd <span class="token operator">==</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">:</span>
            message <span class="token operator">=</span> <span class="token string">&quot;登录成功！&quot;</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            message <span class="token operator">=</span> <span class="token string">&quot;用户名和密码不匹配！&quot;</span>
        
        <span class="token comment"># 弹出提示框</span>
        wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span>message<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">OnclickCancel</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        单击 ”取消“ 按钮，执行方法
        :param event:
        :return:
        &quot;&quot;&quot;</span>
        <span class="token comment"># 清空输入的用户名</span>
        self<span class="token punctuation">.</span>text_user<span class="token punctuation">.</span>SetValue<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 清空输入的密码</span>
        self<span class="token punctuation">.</span>text_passwd<span class="token punctuation">.</span>SetValue<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 初始化应用</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 实例 MyFrame 类，并传递参数</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 显示窗口</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 调用主循环方法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="复选框和单选框" tabindex="-1"><a class="header-anchor" href="#复选框和单选框" aria-hidden="true">#</a> 复选框和单选框</h3><p>多选控件是复选框（<code>wx.CheckBox</code>），复选框有时也能单独使用，能提供两种状态的开和关。</p><p>单选控件是单选框（<code>wx.RadioButton</code>），同一组的多个单选框应该具有互斥性，就是当一个按钮按下时，其它按钮一定释放。</p><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;复选框和单选框&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        motion <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;选择您喜欢的运动：&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 创建复选框</span>
        run <span class="token operator">=</span> wx<span class="token punctuation">.</span>CheckBox<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;跑步&quot;</span><span class="token punctuation">)</span>
        swimming <span class="token operator">=</span> wx<span class="token punctuation">.</span>CheckBox<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;游泳&quot;</span><span class="token punctuation">)</span>
        mountain_climbing <span class="token operator">=</span> wx<span class="token punctuation">.</span>CheckBox<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;爬山&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 设置 swimming 为初始状态选中</span>
        swimming<span class="token punctuation">.</span>SetValue<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token comment"># 绑定 id 为 1~3 的所有控件的事件处理到 on_motion_click() 方法</span>
        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_CHECKBOX<span class="token punctuation">,</span> self<span class="token punctuation">.</span>on_motion_click<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> id2<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>

        gender <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;选择性别：&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 创建单选框按钮，设置 style=wx.RB_GROUP 的单选按钮，说明是一个组开始，直到遇到另外设置 style=wx.RB_GROUP 的 wx.RadioButto 单选按钮为止都是同一个组。所以 man 和 woman 是同一个组，即这两个单选按钮是互斥的</span>
        man <span class="token operator">=</span> wx<span class="token punctuation">.</span>RadioButton<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>RB_GROUP<span class="token punctuation">)</span>
        woman <span class="token operator">=</span> wx<span class="token punctuation">.</span>RadioButton<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># 绑定 id 为 4~5 的控件的事件处理到 on_gender_click() 方法</span>
        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_RADIOBUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>on_gender_click<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> id2<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

        hbox_motion <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span><span class="token punctuation">)</span>
        hbox_motion<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>motion<span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hbox_motion<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>run<span class="token punctuation">)</span>
        hbox_motion<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>swimming<span class="token punctuation">)</span>
        hbox_motion<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>mountain_climbing<span class="token punctuation">)</span>

        hbox_gender <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span><span class="token punctuation">)</span>
        hbox_gender<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>gender<span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hbox_gender<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>man<span class="token punctuation">)</span>
        hbox_gender<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>woman<span class="token punctuation">)</span>

        vbox <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hbox_motion<span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hbox_gender<span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>

        panel<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>vbox<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">on_motion_click</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        选择喜欢的运动，执行方法
        :param event:
        :return:
        &quot;&quot;&quot;</span>
        motion <span class="token operator">=</span> event<span class="token punctuation">.</span>GetEventObject<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 从事件对象中取出事件源对象（复选框）。GetLabel 获得复选框标签；IsChecked 获得复选状态</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;选择 {0}，状态 {1}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>motion<span class="token punctuation">.</span>GetLabel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>IsChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">on_gender_click</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        选择性别，执行方法
        :param event:
        :return:
        &quot;&quot;&quot;</span>
        gender <span class="token operator">=</span> event<span class="token punctuation">.</span>GetEventObject<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 从事件对象中取出事件源对象（单选框）。GetLabel 获得单选框标签</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;第一组 {0} 被选中&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>gender<span class="token punctuation">.</span>GetLabel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表</h3><p>对列表控件可以进行单选或多选，列表控件类是 <code>wx.ListBox</code>。</p><p><strong>wx.ListBox 语法格式：</strong></p><p><code>wx.ListBox(parent, choices, style)</code></p><ul><li><p><strong>parent</strong>：父窗口部件</p></li><li><p><strong>choices</strong>：指定选项列表</p></li><li><p><strong>style</strong>：选择列表控件类型</p><ul><li><strong>wx.LB_SINGLE</strong>：单选</li><li><strong>wx.LB_MULTIPLE</strong>：多选</li><li><strong>wx.LB_EXTENDED</strong>：多选，但是需要在按住 <kbd>Ctrl</kbd> 或 <kbd>Shift</kbd> 键时选择项目</li><li><strong>wx.LB_SORT</strong>：对列表选择项进行排序</li></ul></li></ul><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;选择列表&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        motion <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;选择您喜欢的运动：&quot;</span><span class="token punctuation">)</span>
        motion_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;跑步&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;游泳&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;爬山&quot;</span><span class="token punctuation">]</span>
        <span class="token comment"># 创建列表控件。choices 用于设置列表选项；style 用于设置列表风格样式 wx.LB_SINGLE 指单选列表控件</span>
        motion_box <span class="token operator">=</span> wx<span class="token punctuation">.</span>ListBox<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> choices<span class="token operator">=</span>motion_list<span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>LB_SINGLE<span class="token punctuation">)</span>
        <span class="token comment"># 绑定列表选择事件 wx.EVT_LISTBOX 到 self.on_motion_box() 方法</span>
        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_LISTBOX<span class="token punctuation">,</span> self<span class="token punctuation">.</span>on_motion_box<span class="token punctuation">,</span> motion_box<span class="token punctuation">)</span>

        fruits <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;选择您喜欢的水果：&quot;</span><span class="token punctuation">)</span>
        fruits_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;苹果&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;香蕉&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">]</span>
        <span class="token comment"># 创建列表控件。wx.LB_EXTENDED 指多选列表控件</span>
        fruits_box <span class="token operator">=</span> wx<span class="token punctuation">.</span>ListBox<span class="token punctuation">(</span>panel<span class="token punctuation">,</span> choices<span class="token operator">=</span>fruits_list<span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>LB_EXTENDED<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_LISTBOX<span class="token punctuation">,</span> self<span class="token punctuation">.</span>on_fruits_box<span class="token punctuation">,</span> fruits_box<span class="token punctuation">)</span>

        hbox_motion <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span><span class="token punctuation">)</span>
        hbox_motion<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>motion<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hbox_motion<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>motion_box<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

        hbox_fruits <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span><span class="token punctuation">)</span>
        hbox_fruits<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>fruits<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>LEFT <span class="token operator">|</span> wx<span class="token punctuation">.</span>RIGHT<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        hbox_fruits<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>fruits_box<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

        vbox <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hbox_motion<span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL <span class="token operator">|</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>hbox_fruits<span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>ALL <span class="token operator">|</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> border<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

        panel<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>vbox<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">on_motion_box</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        选择喜欢运动，执行的方法
        :param event:
        :return:
        &quot;&quot;&quot;</span>
        motion <span class="token operator">=</span> event<span class="token punctuation">.</span>GetEventObject<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 返回单个选项的列表索引序号</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;选择 {0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>motion<span class="token punctuation">.</span>GetSelection<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">on_fruits_box</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        选择喜欢水果，执行的方法
        :param event:
        :return:
        &quot;&quot;&quot;</span>
        fruits <span class="token operator">=</span> event<span class="token punctuation">.</span>GetEventObject<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 返回多个选项的列表索引序号列表</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;选择 {0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>fruits<span class="token punctuation">.</span>GetSelections<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态图片控件" tabindex="-1"><a class="header-anchor" href="#静态图片控件" aria-hidden="true">#</a> 静态图片控件</h3><p>静态图片控件用于显示一张图片，图片可以是 wx.Python 所支持的任意图片格式，静态图片控件类是 <code>wx.StaticBitmap</code>。</p><p>可以使用 <code>self.panel.Layout()</code> 语句重新设置 panel 面板，在图片替换后，需要重写绘制窗口，否则布局会发生混乱。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> wx


<span class="token keyword">class</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;静态图片控件&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 创建面板，是该类的实例变量</span>
        self<span class="token punctuation">.</span>panel <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>parent<span class="token operator">=</span>self<span class="token punctuation">)</span>

        <span class="token comment"># 创建 wx.Bitmap 图片对象的列表</span>
        self<span class="token punctuation">.</span>bmps <span class="token operator">=</span> <span class="token punctuation">[</span>
            wx<span class="token punctuation">.</span>Bitmap<span class="token punctuation">(</span><span class="token string">&#39;images/img13.jpg&#39;</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>BITMAP_TYPE_ANY<span class="token punctuation">)</span><span class="token punctuation">,</span>
            wx<span class="token punctuation">.</span>Bitmap<span class="token punctuation">(</span><span class="token string">&#39;images/img14.jpg&#39;</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>BITMAP_TYPE_ANY<span class="token punctuation">)</span><span class="token punctuation">,</span>
            wx<span class="token punctuation">.</span>Bitmap<span class="token punctuation">(</span><span class="token string">&#39;images/img15.jpg&#39;</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>BITMAP_TYPE_ANY<span class="token punctuation">)</span>
        <span class="token punctuation">]</span>

        picture1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Button1&quot;</span><span class="token punctuation">)</span>
        picture2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>panel<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Button2&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>on_picture_click<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> id2<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>

        <span class="token comment"># 静态图片控件对象，self.bmps[0] 是静态图片控件要显示的图片对象</span>
        self<span class="token punctuation">.</span>image <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticBitmap<span class="token punctuation">(</span>self<span class="token punctuation">.</span>panel<span class="token punctuation">,</span> bitmap<span class="token operator">=</span>self<span class="token punctuation">.</span>bmps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        vbox <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>picture1<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>picture2<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">)</span>
        vbox<span class="token punctuation">.</span>Add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> proportion<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>panel<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>vbox<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">on_picture_click</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        event_id <span class="token operator">=</span> event<span class="token punctuation">.</span>GetId<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> event_id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token comment"># 重新设置图片，实现图片切换</span>
            self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>SetBitmap<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bmps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>SetBitmap<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bmps<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        
        <span class="token comment"># 重新设置 panel 面板布局</span>
        self<span class="token punctuation">.</span>panel<span class="token punctuation">.</span>Layout<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame <span class="token operator">=</span> MyFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
    frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,83);function b(x,g){const o=t("ExternalLinkIcon"),e=t("Mermaid");return l(),i("div",null,[r,s("p",null,[k,n(" 的官方网址是："),s("a",d,[n("https://wxPython.org"),p(o)]),n("。")]),m,p(e,{id:"mermaid-120",code:"eJxVjs9qwkAQxu8+xR7jIfQNCokee5Cec7GtrYeyKdbi1YItpYJRDIggQlDMIqgEIWiCPs2OE9/C2fWgzm2+Pz++13e38Vwt1+rs4THH6D6/nt5q5Y8qc3lFC5YBiY++QNGGxIPVNouCPDPNbLnH3RLnA4fLXR+i8aEZmuY9s41jEGMSkgPeJK8ZFf5yC683XC0UDIpRHdOWTGOFhZE4P3KzcHgWzsDryaRNgoIXDblJYT/Hzuos3vItAqAfMatUYrSU+lGgEP9Cl3XGVpm/+A4WXYfTTvhZ4zpVfkH7xesRMG1h99fhMBS049j8vkyxcyf2U5i7"}),v])}const f=c(u,[["render",b],["__file","responsive.html.vue"]]);export{f as default};
