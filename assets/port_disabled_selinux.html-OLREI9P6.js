import{_ as s}from"./bad_gateway-g98XlIDk.js";import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as e,f as o}from"./app-ZbIPljzD.js";const t={},p=o(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p><strong>报错日志如下：</strong></p><div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code><span class="token date number">2024/03/19</span> <span class="token time number">15:32:54</span> <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> <span class="token number">3874</span><span class="token operator">#</span><span class="token number">0</span><span class="token operator">:</span> bind<span class="token operator">(</span><span class="token operator">)</span> to <span class="token ip-address constant">0.0.0.0</span><span class="token operator">:</span><span class="token number">8081</span> failed <span class="token operator">(</span><span class="token number">13</span><span class="token operator">:</span> Permission denied<span class="token operator">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>SELinux 默认是启动的，SELinux 影响端口的开放。SELinux 只使用标准的端口，非标准的端口被 SELinux 禁用。</p><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><p>端口小于 <code>1024</code>。例如：端口为 <code>80</code>。</p><div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code><span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> <span class="token number">3874</span><span class="token operator">#</span><span class="token number">0</span><span class="token operator">:</span> bind<span class="token operator">(</span><span class="token operator">)</span> to <span class="token ip-address constant">0.0.0.0</span><span class="token operator">:</span><span class="token number">80</span> failed <span class="token operator">(</span><span class="token number">13</span><span class="token operator">:</span> Permission denied<span class="token operator">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Nginx 用 <code>1024</code> 以下端口启动时需要 <code>root</code> 用户权限，所以使用 <code>root</code> 启动 Nginx 服务即可。</p><p>此次端口为 <code>8081</code> 大于 <code>1024</code>，使用以下方法解决。</p><h3 id="解决方法-1" tabindex="-1"><a class="header-anchor" href="#解决方法-1" aria-hidden="true">#</a> 解决方法 1</h3><p>关闭 <code>SELinux</code>。此方法对端口小于 <code>1024</code> 也有用。</p><ul><li><p>临时配置，重启后失效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> setenforce <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>写入配置文件，永久生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/\\(^SELINUX=\\).*/\\SELINUX=disabled/&#39;</span> /etc/selinux/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="解决方法-2" tabindex="-1"><a class="header-anchor" href="#解决方法-2" aria-hidden="true">#</a> 解决方法 2</h3><div class="hint-container info"><p class="hint-container-title">semanage 命令安装</p><p><code>semanage</code> 命令用于管理 SELinux。</p><p>安装 <code>semanage</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> semanage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回 <code>Error: Unable to find a match: semanage</code> 错误，表示找不到此包，使用 <code>sudo yum provides semanage</code> 命令查看 <code>semanage</code> 此命令在哪个软件包中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum provides semanage

policycoreutils-python-utils-2.9-24.el8.noarch <span class="token builtin class-name">:</span> SELinux policy core python utilities
Repo        <span class="token builtin class-name">:</span> baseos
Matched from:
Filename    <span class="token builtin class-name">:</span> /usr/sbin/semanage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 <code>policycoreutils-python-utils-2.9-24.el8.noarch</code> 此包，即可使用 <code>semanage</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> policycoreutils-python-utils-2.9-24.el8.noarch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>semanage</code> 命令常用选项：</p><ul><li><strong>-a</strong>：添加端口</li><li><strong>-t</strong>：添加端口到哪个端口列表</li><li><strong>-p</strong>：添加端口到哪个协议</li><li><strong>-m</strong>：修改端口</li><li><strong>-l</strong>：查看所有端口</li></ul></div><p>查看 <code>http</code> 允许访问的端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> semanage port <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">grep</span> http_port_t

http_port_t                    tcp      <span class="token number">80</span>, <span class="token number">81</span>, <span class="token number">443</span>, <span class="token number">488</span>, <span class="token number">8008</span>, <span class="token number">8009</span>, <span class="token number">8443</span>, <span class="token number">9000</span>
pegasus_http_port_t            tcp      <span class="token number">5988</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将要启动的端口加入到 <code>http_port_t</code> 端口列表中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> semanage port <span class="token parameter variable">-a</span> <span class="token parameter variable">-t</span> http_port_t <span class="token parameter variable">-p</span> tcp <span class="token number">8081</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回 <code>ValueError: Port tcp/8081 already defined</code> 错误，表示 <code>tcp/8081</code> 端口已定义，两种解决方法：</p><ul><li><p><strong>更换没有使用过的端口添加</strong></p><p>查看已使用过的端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> semanage port <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加没有使用过的端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> semanage port <span class="token parameter variable">-a</span> <span class="token parameter variable">-t</span> http_port_t <span class="token parameter variable">-p</span> tcp <span class="token number">8085</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>使用此方法，不要忘记修改 Nginx 的监听端口</p></div></li><li><p><strong>重新定义 8081 端口</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> semanage port <span class="token parameter variable">-m</span> <span class="token parameter variable">-t</span> http_port_t <span class="token parameter variable">-p</span> tcp <span class="token number">8081</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>重启 Nginx 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再次访问 <code>http://localhost:8085</code> 地址：</p><figure><img src="`+s+`" alt="502 Bad Gateway" tabindex="0" loading="lazy"><figcaption>502 Bad Gateway</figcaption></figure><p><strong>报错日志如下：</strong></p><div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code><span class="token date number">2024/03/19</span> <span class="token time number">16:16:26</span> <span class="token punctuation">[</span>crit<span class="token punctuation">]</span> <span class="token number">13490</span><span class="token operator">#</span><span class="token number">0</span><span class="token operator">:</span> <span class="token operator">*</span><span class="token number">1</span> connect<span class="token operator">(</span><span class="token operator">)</span> to <span class="token ip-address constant">10.1.1.10</span><span class="token operator">:</span><span class="token number">8088</span> 
<span class="token property">failed (13:</span> Permission denied<span class="token operator">)</span> while connecting to upstream<span class="token punctuation">,</span> client<span class="token operator">:</span> <span class="token ip-address constant">10.1.1.1</span><span class="token punctuation">,</span> 
<span class="token property">server:</span> localhost<span class="token punctuation">,</span> request<span class="token operator">:</span> <span class="token string">&quot;GET /favicon.ico HTTP/1.1&quot;</span><span class="token punctuation">,</span> 
<span class="token property">upstream:</span> <span class="token string">&quot;http://10.1.1.10:8088/favicon.ico&quot;</span><span class="token punctuation">,</span> host<span class="token operator">:</span> <span class="token string">&quot;10.1.1.10:8085&quot;</span><span class="token punctuation">,</span> 
<span class="token property">referrer:</span> <span class="token string">&quot;http://10.1.1.10:8085/dashboard/self&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SELinux</code> 拒绝 <code>httpd</code> 网络访问。设置 <code>SELinux</code> 允许 <code>httpd</code> 连接到网络。</p><ul><li><p><strong>临时配置，重启后失效</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> setsebool <span class="token assign-left variable">httpd_can_network_connect</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>写入配置文件，永久生效</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> setsebool <span class="token parameter variable">-P</span> httpd_can_network_connect <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>再次访问 <code>http://localhost:8085</code> 地址即可。</p>`,30),l=[p];function i(r,c){return n(),e("div",null,l)}const b=a(t,[["render",i],["__file","port_disabled_selinux.html.vue"]]);export{b as default};
