import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c as o,d as a,f as n}from"./app-b2c54da8.js";const i={},c=n(`<p>跳转语句能够改变程序的执行顺序，包括 <code>break</code>、<code>continue</code> 和 <code>return</code>。</p><p><code>break</code> 和 <code>continue</code> 用于循环体中，而 <code>return</code> 用于函数中。</p><h2 id="break-语句" tabindex="-1"><a class="header-anchor" href="#break-语句" aria-hidden="true">#</a> break 语句</h2><p>break 语句用于 <strong>强制退出循环</strong>，不再执行循环体中尚未执行的语句。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>break 语句</strong> 一般会结合 <strong>if 语句</strong> 进行搭配使用，表示在某种条件下，跳出循环。如果使用嵌套循环，break 语句将跳出最内层的循环</p></div><h3 id="在-while-循环语句中使用-break-语句" tabindex="-1"><a class="header-anchor" href="#在-while-循环语句中使用-break-语句" aria-hidden="true">#</a> 在 while 循环语句中使用 break 语句</h3><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">while</span> 条件表达式 <span class="token number">1</span><span class="token punctuation">:</span>
    重复执行的代码
    <span class="token keyword">if</span> 条件表达式 <span class="token number">2</span><span class="token punctuation">:</span>
        执行的代码 <span class="token number">1</span>
        <span class="token keyword">break</span>
<span class="token punctuation">[</span><span class="token keyword">else</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在 while 循环语句中使用 break 语句流程：</strong></p>`,9),l=n(`<p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">:</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;这个数是&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
        <span class="token keyword">break</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-for-循环语句中使用-break-语句" tabindex="-1"><a class="header-anchor" href="#在-for-循环语句中使用-break-语句" aria-hidden="true">#</a> 在 for 循环语句中使用 break 语句</h3><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> 迭代变量 <span class="token keyword">in</span> 序列<span class="token punctuation">:</span>
    重复执行的代码
    <span class="token keyword">if</span> 条件表达式<span class="token punctuation">:</span>
        执行的代码 <span class="token number">1</span>
        <span class="token keyword">break</span>
<span class="token punctuation">[</span><span class="token keyword">else</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在 for 循环语句中使用 break 语句流程：</strong></p>`,6),r=n(`<p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>number <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>number <span class="token operator">%</span> <span class="token number">7</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;这个数是&quot;</span><span class="token punctuation">,</span> number<span class="token punctuation">)</span>
        <span class="token keyword">break</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="continue-语句" tabindex="-1"><a class="header-anchor" href="#continue-语句" aria-hidden="true">#</a> continue 语句</h2><p>continue 语句用于 <strong>结束本次循环</strong>，跳过循环体中尚未执行的语句，接着进行终止条件的判断，以决定是否继续循环。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>continue 语句</strong> 一般会结合 <strong>if 语句</strong> 进行搭配使用，表示在某种条件下，跳出当前循环中尚未执行的语句，然后进行下一轮循环。如果使用嵌套循环，continue 语句将只跳出最内层循环中尚未执行的语句</p></div><h3 id="在-while-循环语句中使用-continue-语句" tabindex="-1"><a class="header-anchor" href="#在-while-循环语句中使用-continue-语句" aria-hidden="true">#</a> 在 while 循环语句中使用 continue 语句</h3><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">while</span> 条件表达式 <span class="token number">1</span><span class="token punctuation">:</span>
    重复执行的代码
    <span class="token keyword">if</span> 条件表达式 <span class="token number">2</span><span class="token punctuation">:</span>
        执行的代码 <span class="token number">1</span>
        <span class="token keyword">continue</span>
<span class="token punctuation">[</span><span class="token keyword">else</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在 while 循环语句中使用 continue 语句流程：</strong></p>`,9),d=n(`<p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;跳过 &quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
        i <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">continue</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-for-循环语句中使用-continue-语句" tabindex="-1"><a class="header-anchor" href="#在-for-循环语句中使用-continue-语句" aria-hidden="true">#</a> 在 for 循环语句中使用 continue 语句</h3><p><strong>语法格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> 迭代变量 <span class="token keyword">in</span> 序列<span class="token punctuation">:</span>
    重复执行的代码
    <span class="token keyword">if</span> 条件表达式<span class="token punctuation">:</span>
        执行的代码 <span class="token number">1</span>
        <span class="token keyword">continue</span>
<span class="token punctuation">[</span><span class="token keyword">else</span><span class="token punctuation">:</span>
    执行的代码 <span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在 for 循环语句中使用 continue 语句流程：</strong></p>`,6),u=n(`<p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&#39;itheima&#39;</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;跳过 &quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
        <span class="token keyword">continue</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pass-语句" tabindex="-1"><a class="header-anchor" href="#pass-语句" aria-hidden="true">#</a> pass 语句</h2><p>Python 中还有一个 pass 语句，表示 <strong>空语句</strong>。不做任何事情，一般起占位作用。</p><p>在不是偶数时，使用 pass 语句占个位置，方便以后对不是偶数是数进行处理，例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function k(v,m){const s=p("Mermaid");return t(),o("div",null,[c,a(s,{id:"mermaid-27",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3AyrC7PyMxJVXg2d+GT3dteLFzxYt++p3v6FQxrweqdDIHKFCJTi8GqnQ01Xrb3Pl3S+6xz+YuFPc9ntTzZvfj5gkaoWUbVmWkYBhkhG+SXDzHHSAPNBAUjTQWwlItG9PPdk5/NnR+rCdFnhOIAYwyNhhDLnU00kopSE7MhPGRTAKI5awU="}),l,a(s,{id:"mermaid-42",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3AyrE7LL1J4uqv/acf0JzvWPpux/umEZc/mdD5tbX6+ZUEtWJOTIVCtQmRqMViLs6HG0/5pT3Z0P9nR8HLhTojCpw17nu+e+WL/2ie7Fz/tn/GyvR9ivrORxsv23qdLep91Ln+xsOf5rBaggucLGqG2G1Vnpik8m7vwye5tLxaueLFv39M9/ch2+uUrQIwx1kAzQMEIYoSLRvTz3ZOfzZ0fqwnRZ4TiVhMMfYZQh5lqJBWlJmZjmgIA9WqKng=="}),r,a(s,{id:"mermaid-68",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3AyrC7PyMxJVXg2d+GT3dteLFzxYt++p3v6FQxrweqdDIHKFCJTi8GqnQ01Xrb3Pl3S+6xz+YuFPc9ntTzZvfj5gkaoWUbVmWkYBhkhG+SXDzHHSAPNBAUjTQWwlItG9PPdk5/NnR+rCdFnhOIAYwyNhhDLnU00kvPzSjLzSlNhPuMCACjjZzQ="}),d,a(s,{id:"mermaid-83",code:"eJxLy8kvT85ILCpRCHHiUgACR43op3sani7vjtVU0NW1U3AyrE7LL1J4uqv/acf0JzvWPpux/umEZc/mdD5tbX6+ZUEtWJOTIVCtQmRqMViLs6HG0/5pT3Z0P9nR8HLhTojCpw17nu+e+WL/2ie7Fz/tn/GyvR9ivrORxsv23qdLep91Ln+xsOf5rBaggucLGqG2G1Vnpik8m7vwye5tLxaueLFv39M9/ch2+uUrQIwx1kAzQMEIYoSLRvTz3ZOfzZ0fqwnRZ4TiVhMMfYZQh5lqJOfnlWTmlabCQoILAL5vhs0="}),u])}const y=e(i,[["render",k],["__file","jumps.html.vue"]]);export{y as default};
