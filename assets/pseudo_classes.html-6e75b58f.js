import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,f as d}from"./app-d16d6fa5.js";const n={},i=d('<h2 id="所有-css-伪类" tabindex="-1"><a class="header-anchor" href="#所有-css-伪类" aria-hidden="true">#</a> 所有 CSS 伪类</h2><table><thead><tr><th style="text-align:center;">选择器</th><th style="text-align:left;">例子</th><th style="text-align:left;">例子描述</th></tr></thead><tbody><tr><td style="text-align:center;">:active</td><td style="text-align:left;">a:active</td><td style="text-align:left;">选择活动的链接</td></tr><tr><td style="text-align:center;">:checked</td><td style="text-align:left;">input:checked</td><td style="text-align:left;">选择每个被选中的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:disabled</td><td style="text-align:left;">input:disabled</td><td style="text-align:left;">选择每个被禁用的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:empty</td><td style="text-align:left;">p:empty</td><td style="text-align:left;">选择没有子元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:enabled</td><td style="text-align:left;">input:enabled</td><td style="text-align:left;">选择每个已启用的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:first-child</td><td style="text-align:left;">p:first-child</td><td style="text-align:left;">选择作为其父的首个子元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:first-of-type</td><td style="text-align:left;">p:first-of-type</td><td style="text-align:left;">选择作为其父的首个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:focus</td><td style="text-align:left;">input:focus</td><td style="text-align:left;">选择获得焦点的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:hover</td><td style="text-align:left;">a:hover</td><td style="text-align:left;">选择鼠标悬停其上的链接</td></tr><tr><td style="text-align:center;">:in-range</td><td style="text-align:left;">input:in-range</td><td style="text-align:left;">选择具有指定范围内的值的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:invalid</td><td style="text-align:left;">input:invalid</td><td style="text-align:left;">选择所有具有无效值的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:lang(language)</td><td style="text-align:left;">p:lang(it)</td><td style="text-align:left;">选择每个 lang 属性值以 &quot;it&quot; 开头的 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:last-child</td><td style="text-align:left;">p:last-child</td><td style="text-align:left;">选择作为其父的最后一个子元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:last-of-type</td><td style="text-align:left;">p:last-of-type</td><td style="text-align:left;">选择作为其父的最后一个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:link</td><td style="text-align:left;">a:link</td><td style="text-align:left;">选择所有未被访问的链接</td></tr><tr><td style="text-align:center;">:not(selector)</td><td style="text-align:left;">:not(p)</td><td style="text-align:left;">选择每个非 <code>&lt;p&gt;</code> 元素的元素</td></tr><tr><td style="text-align:center;">:nth-child(n)</td><td style="text-align:left;">p:nth-child(2)</td><td style="text-align:left;">选择作为其父的第二个子元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:nth-last-child(n)</td><td style="text-align:left;">p:nth-last-child(2)</td><td style="text-align:left;">选择作为父的第二个子元素的每个 <code>&lt;p&gt;</code> 元素，从最后一个子元素计数</td></tr><tr><td style="text-align:center;">:nth-last-of-type(n)</td><td style="text-align:left;">p:nth-last-of-type(2)</td><td style="text-align:left;">选择作为父的第二个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素，从最后一个子元素计数</td></tr><tr><td style="text-align:center;">:nth-of-type(n)</td><td style="text-align:left;">p:nth-of-type(2)</td><td style="text-align:left;">选择作为其父的第二个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:only-of-type</td><td style="text-align:left;">p:only-of-type</td><td style="text-align:left;">选择作为其父的唯一 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:only-child</td><td style="text-align:left;">p:only-child</td><td style="text-align:left;">选择作为其父的唯一子元素的 <code>&lt;p&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:optional</td><td style="text-align:left;">input:optional</td><td style="text-align:left;">选择不带 &quot;required&quot; 属性的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:out-of-range</td><td style="text-align:left;">input:out-of-range</td><td style="text-align:left;">选择值在指定范围之外的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:read-only</td><td style="text-align:left;">input:read-only</td><td style="text-align:left;">选择指定了 &quot;readonly&quot; 属性的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:read-write</td><td style="text-align:left;">input:read-write</td><td style="text-align:left;">选择不带 &quot;readonly&quot; 属性的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:required</td><td style="text-align:left;">input:required</td><td style="text-align:left;">选择指定了 &quot;required&quot; 属性的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:root</td><td style="text-align:left;">root</td><td style="text-align:left;">选择元素的根元素</td></tr><tr><td style="text-align:center;">:target</td><td style="text-align:left;">#news:target</td><td style="text-align:left;">选择当前活动的 #news 元素（单击包含该锚名称的 URL）</td></tr><tr><td style="text-align:center;">:valid</td><td style="text-align:left;">input:valid</td><td style="text-align:left;">选择所有具有有效值的 <code>&lt;input&gt;</code> 元素</td></tr><tr><td style="text-align:center;">:visited</td><td style="text-align:left;">a:visited</td><td style="text-align:left;">选择所有已访问的链接</td></tr></tbody></table>',2),a=[i];function r(s,g){return e(),l("div",null,a)}const y=t(n,[["render",r],["__file","pseudo_classes.html.vue"]]);export{y as default};
