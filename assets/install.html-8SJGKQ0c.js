import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as c,c as r,b as n,e as s,d as a,w as p,f as t}from"./app-uf-PQ7u2.js";const d={},u=n("h2",{id:"安装环境",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装环境","aria-hidden":"true"},"#"),s(" 安装环境")],-1),k=n("p",null,"长期支持（LTS）版本和定期发布版本支持的 Java 版本：",-1),v=t("<li><p><strong>2.361.1（2022 年 9 月）及更高版本</strong>：Java 11 或 Java 17</p></li><li><p><strong>2.346.1（2022 年 6 月）及更高版本</strong>：Java 8、Java 11 或 Java 17</p></li><li><p><strong>2.164.1（2019 年 3 月）及更高版本</strong>：Java 8 或 Java 11</p></li><li><p><strong>2.60.1（2017 年 6 月）及更高版本</strong>：Java 8</p></li><li><p><strong>1.625.1（2015 年 10 月）及更高版本</strong>：Java 7</p></li>",5),m=n("h2",{id:"war-文件安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#war-文件安装","aria-hidden":"true"},"#"),s(" WAR 文件安装")],-1),b={href:"https://github.com/jenkinsci/winstone",target:"_blank",rel:"noopener noreferrer"},h={href:"https://eclipse.dev/jetty/",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"jenkins.war",-1),f={href:"https://get.jenkins.io/war-stable/",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"jenkins.war",-1),_={href:"https://get.jenkins.io/war/",target:"_blank",rel:"noopener noreferrer"},y=t(`<ol><li><p>将 Jenkins WAR 文件下载到您机器上的适当目录中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/jenkins
<span class="token function">sudo</span> <span class="token function">wget</span> https://get.jenkins.io/war-stable/2.440.3/jenkins.war
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>suod <span class="token function">java</span> <span class="token parameter variable">-jar</span> jenkins.war

<span class="token comment"># 或</span>

suod <span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span>my-jenkins-config <span class="token function">java</span> <span class="token parameter variable">-jar</span> jenkins.war <span class="token parameter variable">--httpPort</span><span class="token operator">=</span><span class="token number">9090</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>JENKINS_HOME</strong>：指定安装目录，默认是运行用户家目录 <code>.jenkins</code> 中</li><li><strong>--httpPort</strong>：指定端口，默认是 <code>8080</code></li></ul><p>有关可以调整 Jenkins 启动的命令行参数的更多详细信息，请使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> jenkins.war <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>浏览 <code>http://localhost:8080</code> 并等待解锁 Jenkins 页面出现</p></li><li><p>配置安装向导</p></li></ol><h2 id="linux-安装" tabindex="-1"><a class="header-anchor" href="#linux-安装" aria-hidden="true">#</a> Linux 安装</h2><h3 id="debian-系统" tabindex="-1"><a class="header-anchor" href="#debian-系统" aria-hidden="true">#</a> Debian 系统</h3><p>这是 Jenkins 的 Debian 软件包存储库，用于自动安装和升级。要使用此存储库，请首先将密钥添加到您的系统（对于每周发布行）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/share/keyrings/jenkins-keyring.asc <span class="token punctuation">\\</span>
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后添加 Jenkins apt 存储库条目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> deb <span class="token punctuation">[</span>signed-by<span class="token operator">=</span>/usr/share/keyrings/jenkins-keyring.asc<span class="token punctuation">]</span> <span class="token punctuation">\\</span>
  https://pkg.jenkins.io/debian-stable binary/ <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token punctuation">\\</span>
  /etc/apt/sources.list.d/jenkins.list <span class="token operator">&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新本地包索引，然后最后安装 Jenkins：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> fontconfig openjdk-17-jre
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redhat-系统" tabindex="-1"><a class="header-anchor" href="#redhat-系统" aria-hidden="true">#</a> Redhat 系统</h3><p>要使用此存储库，请运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
<span class="token function">sudo</span> <span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您之前从 Jenkins 导入了密钥，则会 <code>rpm --import</code> 失败，因为您已经拥有密钥，请忽略它并继续。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum upgrade
<span class="token function">sudo</span> yum <span class="token function">install</span> fontconfig java-17-openjdk
<span class="token function">sudo</span> yum <span class="token function">install</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="控制-jenkins-服务" tabindex="-1"><a class="header-anchor" href="#控制-jenkins-服务" aria-hidden="true">#</a> 控制 Jenkins 服务</h3><ul><li><strong>开机服务运行</strong>：<code>sudo systemctl enable jenkins</code></li><li><strong>服务运行</strong>：<code>sudo systemctl start jenkins</code></li><li><strong>服务停止</strong>：<code>sudo systemctl stop jenkins</code></li><li><strong>服务重启</strong>：<code>sudo systemctl restart jenkins</code></li><li><strong>查看服务状态</strong>：<code>sudo systemctl status jenkins</code></li></ul><p>配置安装向导。</p><h2 id="docker-安装-jenkins" tabindex="-1"><a class="header-anchor" href="#docker-安装-jenkins" aria-hidden="true">#</a> Docker 安装 Jenkins</h2><h3 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker" aria-hidden="true">#</a> 安装 Docker</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> apt-transport-https ca-certificates <span class="token function">curl</span> software-properties-common
<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
<span class="token function">sudo</span> add-apt-repository <span class="token string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> docker-ce
<span class="token function">sudo</span> <span class="token function">docker</span> <span class="token parameter variable">-v</span>
<span class="token function">sudo</span> <span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF
{
  &quot;registry-mirrors&quot;: [&quot;https://6870dvkt.mirror.aliyuncs.com&quot;]
}
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动-docker" tabindex="-1"><a class="header-anchor" href="#启动-docker" aria-hidden="true">#</a> 启动 Docker</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-jenkins" tabindex="-1"><a class="header-anchor" href="#安装-jenkins" aria-hidden="true">#</a> 安装 Jenkins</h3><p>从 Docker 仓库下载 Jenkins 镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> pull jenkins/jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建挂载目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /opt/jenkins_home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动-jenkins" tabindex="-1"><a class="header-anchor" href="#启动-jenkins" aria-hidden="true">#</a> 启动 jenkins</h3><div class="hint-container warning"><p class="hint-container-title">注意</p><p>避免使用从主机上的文件夹到 <code>/var/jenkins_home</code> 的绑定装载，因为这可能会导致文件权限问题（在容器中使用的用户可能没有访问主机上文件夹的权限）。如果您真的需要绑定 <code>jenkins_home</code>，请确保容器内的 <code>jenkins</code> 用户可以访问主机上的目录（jenkins user uid 1000），或者在 <code>docker run</code> 中使用 <code>-u some_other_user</code> 参数。</p></div><p>使用 <code>docker run</code> 运行 Jenkins 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> /opt/jenkins_home:/var/jenkins_home <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token parameter variable">-p</span> <span class="token number">50000</span>:50000 <span class="token parameter variable">--restart</span><span class="token operator">=</span>on-failure <span class="token parameter variable">-u</span> jenkins jenkins/jenkins:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>docker compose</code> 运行 Jenkins 服务。</p><ul><li><p>编写 <code>docker-compose.yml</code> 文件</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">jenkins</span><span class="token punctuation">:</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jenkins
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 8082<span class="token punctuation">:</span><span class="token number">8080</span>
      <span class="token punctuation">-</span> 50000<span class="token punctuation">:</span><span class="token number">50000</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /opt/jenkins/jenkins_home<span class="token punctuation">:</span>/var/jenkins_home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行 Jenkins 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> compose up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>查看 Jenkins 日志。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> logs jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,35);function x(J,w){const l=i("RouterLink"),e=i("ExternalLinkIcon");return c(),r("div",null,[u,k,n("ul",null,[v,n("li",null,[n("p",null,[s("查看 "),a(l,{to:"/computers/dev_env/jdk.html"},{default:p(()=>[s("Java 安装教程")]),_:1})])])]),m,n("p",null,[s("Jenkins Web 应用程序 ARchive（WAR）文件捆绑了 "),n("a",b,[s("Winstone"),a(e)]),s("（一个 "),n("a",h,[s("Jetty"),a(e)]),s(" servlet 容器包装器），并且可以在具有 Jenkins 支持的 Java 版本的任何操作系统或平台上启动。")]),n("ul",null,[n("li",null,[s("长期支持（LTS）版本 "),g,s(),n("a",f,[s("下载地址"),a(e)])]),n("li",null,[s("定期发布版本 "),j,s(),n("a",_,[s("下载地址"),a(e)])])]),y])}const N=o(d,[["render",x],["__file","install.html.vue"]]);export{N as default};
