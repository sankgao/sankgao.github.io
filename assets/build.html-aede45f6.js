import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as d,c as u,b as n,e as s,d as e,a as v,w as t,f as o}from"./app-ed060d39.js";const m="/assets/build-97e2a33f.png",h={},k={class:"hint-container info"},b=n("p",{class:"hint-container-title"},"相关信息",-1),g={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://theme-hope.vuejs.press/zh/",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"vuepress-介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-介绍","aria-hidden":"true"},"#"),s(" VuePress 介绍")],-1),y={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},x=o('<h3 id="什么是-vuepress" tabindex="-1"><a class="header-anchor" href="#什么是-vuepress" aria-hidden="true">#</a> 什么是 VuePress</h3><p><code>VuePress</code> 是一个以 <code>Markdown</code> 为中心的静态网站生成器。您可以使用 Markdown 来书写内容（如：<strong>文档</strong>、<strong>博客</strong>等），然后 VuePress 会帮助您生成一个静态网站来展示它们。</p><p><code>VuePress</code> 诞生的初衷是为了支持 <code>Vue.js</code> 及其子项目的文档需求，但是现在它已经在帮助大量用户构建他们的文档、博客和其他静态网站。</p><h3 id="它是如何工作的" tabindex="-1"><a class="header-anchor" href="#它是如何工作的" aria-hidden="true">#</a> 它是如何工作的</h3>',4),w=n("code",null,"VuePress",-1),V={href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://router.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},E=n("strong",null,"路由",-1),A={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"HTML",-1),j=n("p",null,[s("在开发过程中，我们启动一个常规的开发服务器（dev-server），并将 VuePress 站点作为一个常规的 "),n("code",null,"SPA"),s("。如果您以前使用过 Vue 的话，您在使用时会感受到非常熟悉的开发体验。")],-1),D=n("strong",null,"服务端渲染（SSR）",-1),z=n("code",null,"HTML",-1),R={href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"nuxt generate",-1),S={href:"https://www.gatsbyjs.com/",target:"_blank",rel:"noopener noreferrer"},T=o('<h3 id="vuepress-优点" tabindex="-1"><a class="header-anchor" href="#vuepress-优点" aria-hidden="true">#</a> VuePress 优点</h3><p>VuePress 是以 Vue 为驱动的 <strong>静态网站生成器</strong>，具有以下优点：</p><ul><li>简洁至上 <ul><li>以 Markdown 为中心的项目结构，以最少的配置帮助您专注于写作</li></ul></li><li>Vue 驱动 <ul><li>享受 Vue 的开发体验，可以在 Markdown 中使用 Vue 组件，又可以使用 Vue 来开发自定义主题</li></ul></li><li>高性能 <ul><li>VuePress 会为每个页面预渲染生成静态的 HTML，同时，每个页面被加载的时候，将作为 SPA 运行</li></ul></li><li>主题 <ul><li>提供了一个开箱即用的默认主题。您也可以挑选一个社区主题，或者创建一个您自己的主题</li></ul></li><li>插件 <ul><li>灵活的插件API，使得插件可以为您的站点提供许多即插即用的功能</li></ul></li><li>打包工具 <ul><li>默认的打包工具是 Vite，也同样支持 Webpack</li></ul></li></ul><h2 id="快速搭建" tabindex="-1"><a class="header-anchor" href="#快速搭建" aria-hidden="true">#</a> 快速搭建</h2><h3 id="依赖环境" tabindex="-1"><a class="header-anchor" href="#依赖环境" aria-hidden="true">#</a> 依赖环境</h3><ul><li><code>Node.js v14.18.0+</code></li><li><code>Yarn v1 classic</code>（可选）</li></ul>',6),q={class:"hint-container tip"},L=n("p",{class:"hint-container-title"},"提示",-1),C={href:"https://pnpm.io/zh/",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"vue",-1),B=n("code",null,"@vuepress/client",-1),F=n("code",null,"peer-dependencies",-1),G=n("code",null,"pnpm add -D vue @vuepress/client@next",-1),U=n("li",null,[s("使用 "),n("code",null,"yarn 2"),s(" 时，您需要在 "),n("code",null,".yarnrc.yml"),s(" 文件中设置 "),n("code",null,"nodeLinker: 'node-modules' ")],-1),I=n("h3",{id:"手动安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#手动安装","aria-hidden":"true"},"#"),s(" 手动安装")],-1),O=o(`<li><p>创建并进入一个新目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> vuepress-starter
<span class="token builtin class-name">cd</span> vuepress-starter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),K=n("p",null,"初始化项目",-1),W=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"git"),s(` init
`),n("span",{class:"token function"},"pnpm"),s(` init
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Y=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"git"),s(` init
`),n("span",{class:"token function"},"yarn"),s(` init
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"git"),s(` init
`),n("span",{class:"token function"},"npm"),s(` init
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=n("p",null,"将 VuePress 安装为本地依赖",-1),Q=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"-D"),s(` vuepress@next @vuepress/client@next vue
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"-D"),s(` vuepress@next
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Z=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(),n("span",{class:"token parameter variable"},"-D"),s(` vuepress@next
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),nn=n("code",null,"package.json",-1),sn={href:"https://classic.yarnpkg.com/zh-Hans/",target:"_blank",rel:"noopener noreferrer"},en=o(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;docs:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev docs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build docs&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),an=o(`<li><p>将默认的临时目录和缓存目录添加到 <code>.gitignore</code> 文件中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;node_modules&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&#39;.temp&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&#39;.cache&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建您的第一篇文档</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> docs
<span class="token builtin class-name">echo</span> <span class="token string">&#39;# Hello VuePress&#39;</span> <span class="token operator">&gt;</span> docs/README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),tn=n("p",null,"在本地启动服务器来开发您的文档网站",-1),ln=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(` docs:dev
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),on=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(` docs:dev
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),cn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(` run docs:dev
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),pn=o('<p>VuePress 会在 <code>http://localhost:8080</code> 启动一个热重载的开发服务器。当您修改您的 Markdown 文件时，浏览器中的内容也会自动更新。</p><p><strong>效果：</strong></p><figure><img src="'+m+`" alt="build" tabindex="0" loading="lazy"><figcaption>build</figcaption></figure><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><p>如果没有任何配置，您的 VuePress 站点仅有一些 <strong>最基础</strong> 的功能。为了更好地自定义您的网站，让我们首先在您的文档目录下创建一个 <code>.vuepress</code> 目录，所有 VuePress 相关的文件都将会被放在这里。您的项目结构可能是这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├─ docs
│  ├─ .vuepress
│  │  └─ config.ts
│  └─ README.md
├─ .gitignore
└─ package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VuePress 站点的基本配置文件是 <code>.vuepress/config.js</code>，但也同样支持 <code>TypeScript</code> 配置文件。您可以使用 <code>.vuepress/config.ts</code> 来得到更好的类型提示。</p><p>具体而言，我们对于配置文件的路径有着约定（按照 <strong>优先顺序</strong>）：</p><p>当前工作目录 <code>cwd</code> 下：</p><ul><li><code>vuepress.config.ts</code></li><li><code>vuepress.config.js</code></li><li><code>vuepress.config.mjs</code></li></ul><p>源文件目录 <code>sourceDir</code> 下：</p><ul><li><code>.vuepress/config.ts</code></li><li><code>.vuepress/config.js</code></li><li><code>.vuepress/config.mjs</code></li></ul>`,13),rn={href:"https://v2.vuepress.vuejs.org/zh/reference/cli.html",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"--config",-1),un=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vuepress dev docs <span class="token parameter variable">--config</span> my-config.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一个基础的配置文件是这样的：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  lang<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;您好， VuePress ！&#39;</span><span class="token punctuation">,</span>
  description<span class="token operator">:</span> <span class="token string">&#39;这是我的第一个 VuePress 站点&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),vn={class:"hint-container tip"},mn=n("p",{class:"hint-container-title"},"提示",-1),hn={href:"https://v2.vuepress.vuejs.org/zh/reference/config.html",target:"_blank",rel:"noopener noreferrer"},kn=o(`<h2 id="页面" tabindex="-1"><a class="header-anchor" href="#页面" aria-hidden="true">#</a> 页面</h2><p>VuePress 是以 Markdown 为中心的。您项目中的每一个 Markdown 文件都是一个单独的页面。</p><h3 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h3><p>默认情况下，页面的路由路径是根据您的 Markdown 文件的 <strong>相对路径</strong> 决定的。</p><p>假设这是您的 Markdown 文件所处的目录结构：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>└─ docs
   ├─ guide
   │  ├─ getting-started.md
   │  └─ README.md
   ├─ contributing.md
   └─ README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>docs</code> 目录作为您的 <code>sourceDir</code>，例如您在运行 <code>vuepress dev docs</code> 命令。此时，您的 Markdown 文件对应的路由路径为：</p><table><thead><tr><th style="text-align:center;">相对路径</th><th style="text-align:center;">路由路径</th></tr></thead><tbody><tr><td style="text-align:center;"><code>/README.md</code></td><td style="text-align:center;"><code>/</code></td></tr><tr><td style="text-align:center;"><code>/index.md</code></td><td style="text-align:center;"><code>/</code></td></tr><tr><td style="text-align:center;"><code>/contributing.md</code></td><td style="text-align:center;"><code>/contributing.html</code></td></tr><tr><td style="text-align:center;"><code>/guide/README.md</code></td><td style="text-align:center;"><code>/guide/</code></td></tr><tr><td style="text-align:center;"><code>/guide/getting-started.md</code></td><td style="text-align:center;"><code>/guide/getting-started.html</code></td></tr></tbody></table>`,8),bn={class:"hint-container tip"},gn=n("p",{class:"hint-container-title"},"提示",-1),_n=n("p",null,[s("默认配置下，"),n("code",null,"README.md"),s(" 和 "),n("code",null,"index.md"),s(" 都会被转换成 "),n("code",null,"index.html"),s("，并且其对应的路由路径都是由斜杠结尾的。然而，如果您想同时保留这两个文件，就可能会造成冲突")],-1),fn={href:"https://v2.vuepress.vuejs.org/zh/reference/config.html#pagepatterns",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"['**/*.md', '!**/README.md', '!.vuepress', '!node_modules']",-1),xn=n("code",null,"README.md",-1),wn=n("h3",{id:"frontmatter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),s(" Frontmatter")],-1),Vn={href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"},Pn=o(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN
<span class="token key atrule">title</span><span class="token punctuation">:</span> 页面的标题
<span class="token key atrule">description</span><span class="token punctuation">:</span> 页面的描述</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您肯定注意到 Frontmatter 中的字段和 <strong>配置文件</strong> 中的 <a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">站点配置</a> 十分类似。您可以通过 Frontmatter 来覆盖当前页面的 <code>lang</code>、<code>title</code>、<code>description</code> 等属性。因此，您可以把 Frontmatter 当作页面级作用域的配置。</p>`,2),En={href:"https://v2.vuepress.vuejs.org/zh/reference/frontmatter.html",target:"_blank",rel:"noopener noreferrer"},An={href:"https://v2.vuepress.vuejs.org/zh/reference/default-theme/frontmatter.html",target:"_blank",rel:"noopener noreferrer"},Mn=o(`<h2 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源" aria-hidden="true">#</a> 静态资源</h2><h3 id="相对路径" tabindex="-1"><a class="header-anchor" href="#相对路径" aria-hidden="true">#</a> 相对路径</h3><p>您可以在您的 Markdown 内容中使用相对路径来引用静态资源：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">图片</span>](<span class="token url">./image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一般情况下，我们推荐您使用这种方式来引用图片，因为人们通常会把图片放在引用它的 Markdown 文件附近。</p><h3 id="public-文件" tabindex="-1"><a class="header-anchor" href="#public-文件" aria-hidden="true">#</a> Public 文件</h3><p>您可以把一些静态资源放在 <code>Public</code> 目录中，它们会被复制到最终生成的网站的根目录下。</p>`,7),jn=n("code",null,"Public",-1),Dn=n("code",null,".vuepress/public",-1),zn={href:"https://v2.vuepress.vuejs.org/zh/reference/config.html#public",target:"_blank",rel:"noopener noreferrer"},Rn=o(`<p>在下列这些情况中，您可能会用到它：</p><ul><li>您可能需要提供一些静态资源，但是它们并不直接被您的 Markdown 文件引用，比如 <code>favicon</code> 和 <code>PWA</code> 图标</li><li>您可能想要托管一些 <strong>共享的静态资源</strong>，甚至可能需要在您的网站外部引用它，比如 <code>Logo</code> 图片</li><li>您可能想在您的 Markdown 内容中通过绝对路径来引入图片</li></ul><p>以我们文档的源文件为例，我们把 VuePress 的 <code>Logo</code> 放在了 <code>Public</code> 目录下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>└─ docs
   ├─ .vuepress
   |  └─ public
   |     └─ images
   |        └─ hero.png  # &lt;- Logo 文件
   └─ guide
      └─ assets.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以这样在当前页面引用 <code>Logo：</code></p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/images/hero.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="多语言支持" tabindex="-1"><a class="header-anchor" href="#多语言支持" aria-hidden="true">#</a> 多语言支持</h2><h3 id="站点多语言配置" tabindex="-1"><a class="header-anchor" href="#站点多语言配置" aria-hidden="true">#</a> 站点多语言配置</h3><p>要启用 VuePress 的多语言支持，首先需要使用如下的文件目录结构：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>docs
├─ README.md
├─ foo.md
├─ nested
│  └─ README.md
└─ zh
   ├─ README.md
   ├─ foo.md
   └─ nested
      └─ README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，在您的配置文件中设置 <code>locales</code> 选项：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  locales<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 键名是该语言所属的子路径</span>
    <span class="token comment">// 作为特例，默认语言可以使用 &#39;/&#39; 作为其路径。</span>
    <span class="token string-property property">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">,</span>
      title<span class="token operator">:</span> <span class="token string">&#39;VuePress&#39;</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token string">&#39;Vue-powered Static Site Generator&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;/zh/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>
      title<span class="token operator">:</span> <span class="token string">&#39;VuePress&#39;</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token string">&#39;Vue 驱动的静态网站生成器&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果一个语言没有声明 <code>lang</code>、<code>title</code>、<code>description</code> 或者 <code>head</code>，VuePress 将会尝试使用顶层配置的对应值。如果每个语言都声明了这些值，那么顶层配置中的对应值可以被省略。</p></div><h3 id="主题多语言配置" tabindex="-1"><a class="header-anchor" href="#主题多语言配置" aria-hidden="true">#</a> 主题多语言配置</h3><p>VuePress 没有限制主题如何提供多语言支持，因此每个主题可能会有不同的多语言配置方式，而且部分主题可能不会提供多语言支持。建议您查看主题本身的文档来获取更详细的指引。</p><p>如果您使用的是默认主题，那么它提供多语言支持的方式和上述是一致的：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    locales<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        selectLanguageName<span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;/zh/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        selectLanguageName<span class="token operator">:</span> <span class="token string">&#39;简体中文&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="github-pages-部署" tabindex="-1"><a class="header-anchor" href="#github-pages-部署" aria-hidden="true">#</a> GitHub Pages 部署</h2><h3 id="设置正确的-base-选项" tabindex="-1"><a class="header-anchor" href="#设置正确的-base-选项" aria-hidden="true">#</a> 设置正确的 base 选项</h3><p>如果您准备发布到 <code>https://&lt;USERNAME&gt;.github.io/</code>，您可以省略这一步，因为 <code>base</code> 默认值就是 <code>&quot;/&quot;</code>。</p><p>如果您准备发布到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>，也就是说您的仓库地址是 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>，则将 <code>base</code> 设置为 <code>&quot;/&lt;REPO&gt;/&quot;</code>。</p><h3 id="选择您想要使用的-ci-工具" tabindex="-1"><a class="header-anchor" href="#选择您想要使用的-ci-工具" aria-hidden="true">#</a> 选择您想要使用的 CI 工具</h3>`,22),Nn={href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"},Sn=o(`<p>创建 <code>.github/workflows/docs.yml</code> 文件来配置工作流。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> docs

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token comment"># 每当 push 到 main 分支时触发部署</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span>
  <span class="token comment"># 手动触发部署</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">docs</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest

    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token comment"># “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录</span>
          <span class="token key atrule">fetch-depth</span><span class="token punctuation">:</span> <span class="token number">0</span>

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup pnpm
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> pnpm/action<span class="token punctuation">-</span>setup@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token comment"># 选择要使用的 pnpm 版本</span>
          <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">7</span>
          <span class="token comment"># 使用 pnpm 安装依赖</span>
          <span class="token key atrule">run_install</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Node.js
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token comment"># 选择要使用的 node 版本</span>
          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token number">18</span>
          <span class="token comment"># 缓存 pnpm 依赖</span>
          <span class="token key atrule">cache</span><span class="token punctuation">:</span> pnpm

      <span class="token comment"># 运行构建脚本</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build VuePress site
        <span class="token key atrule">run</span><span class="token punctuation">:</span> pnpm docs<span class="token punctuation">:</span>build

      <span class="token comment"># 查看 workflow 的文档来获取更多信息</span>
      <span class="token comment"># @see https://github.com/crazy-max/ghaction-github-pages</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> crazy<span class="token punctuation">-</span>max/ghaction<span class="token punctuation">-</span>github<span class="token punctuation">-</span>pages@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token comment"># 部署到 gh-pages 分支</span>
          <span class="token key atrule">target_branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages
          <span class="token comment"># 部署目录为 VuePress 的默认输出目录</span>
          <span class="token key atrule">build_dir</span><span class="token punctuation">:</span> docs/.vuepress/dist
        <span class="token key atrule">env</span><span class="token punctuation">:</span>
          <span class="token comment"># @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret</span>
          <span class="token key atrule">GITHUB_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Tn={class:"hint-container tip"},qn=n("p",{class:"hint-container-title"},"提示",-1),Ln={href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"},Cn=o(`<h2 id="默认主题" tabindex="-1"><a class="header-anchor" href="#默认主题" aria-hidden="true">#</a> 默认主题</h2><p>VuePress 有一个开箱即用的默认主题，正使用在您当前正在浏览的文档网站上。</p><p>如果您不指定要使用的主题，那么就会自动使用默认主题。</p><p>为了配置默认主题，您需要在您的配置文件中通过 <code>theme</code> 配置项来使用它。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 默认主题配置</span>
    navbar<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">&#39;首页&#39;</span><span class="token punctuation">,</span>
        link<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Hn={href:"https://v2.vuepress.vuejs.org/zh/reference/default-theme/config.html",target:"_blank",rel:"noopener noreferrer"},Bn=n("p",null,"然而，您可能觉得默认主题不够出色，又或者您不想搭建一个文档网站，而是一个其他类型的网站，比如博客。此时，您可以尝试使用社区主题或者创建本地主题。",-1);function Fn(Gn,Un){const a=p("ExternalLinkIcon"),c=p("CodeTabs");return d(),u("div",null,[n("div",k,[b,n("p",null,[s("本博客使用的是 "),n("a",g,[s("VuePress-v2"),e(a)]),s(" 版本加 "),n("a",_,[s("vuepress-theme-hope 主题"),e(a)]),s(" 搭建")])]),v(" more "),f,n("p",null,[n("a",y,[s("VuePress-v2 官网"),e(a)])]),x,n("p",null,[s("一个 "),w,s(" 站点本质上是一个由 "),n("a",V,[s("Vue"),e(a)]),s(" 和 "),n("a",P,[s("Vue Router"),e(a)]),s(" 驱动组成的单页面应用（SPA）。")]),n("p",null,[E,s(" 会根据您的 Markdown 文件的相对路径来自动生成。每个 Markdown 文件都通过 "),n("a",A,[s("markdown-it"),e(a)]),s(" 编译为 "),M,s("，然后将其作为 Vue 组件的模板。因此，您可以在 Markdown 文件中直接使用 Vue 语法，便于您嵌入一些动态内容。")]),j,n("p",null,[s("在构建过程中，我们会为 VuePress 站点创建一个 "),D,s(" 的版本，然后通过虚拟访问每一条路径来渲染对应的 "),z,s("。这种做法的灵感来源于 "),n("a",R,[s("Nuxt"),e(a)]),s(" 的 "),N,s(" 命令，以及其他的一些项目，比如 "),n("a",S,[s("Gatsby"),e(a)]),s("。")]),T,n("div",q,[L,n("ul",null,[n("li",null,[s("使用 "),n("a",C,[s("pnpm"),e(a)]),s(" 时，您可能需要安装 "),H,s(" 和 "),B,s(" 作为 "),F,s("（对等依赖关系），即 "),G]),U])]),I,n("ol",null,[O,n("li",null,[K,e(c,{id:"162",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:0,"tab-id":"language"},{title0:t(({value:i,isActive:l})=>[s("pnpm")]),title1:t(({value:i,isActive:l})=>[s("yarn")]),title2:t(({value:i,isActive:l})=>[s("npm")]),tab0:t(({value:i,isActive:l})=>[W]),tab1:t(({value:i,isActive:l})=>[Y]),tab2:t(({value:i,isActive:l})=>[$]),_:1})]),n("li",null,[J,e(c,{id:"178",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:0,"tab-id":"language"},{title0:t(({value:i,isActive:l})=>[s("pnpm")]),title1:t(({value:i,isActive:l})=>[s("yarn")]),title2:t(({value:i,isActive:l})=>[s("npm")]),tab0:t(({value:i,isActive:l})=>[Q]),tab1:t(({value:i,isActive:l})=>[X]),tab2:t(({value:i,isActive:l})=>[Z]),_:1})]),n("li",null,[n("p",null,[s("在 "),nn,s(" 中添加一些 "),n("a",sn,[s("scripts"),e(a)])]),en]),an,n("li",null,[tn,e(c,{id:"212",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:0,"tab-id":"language"},{title0:t(({value:i,isActive:l})=>[s("pnpm")]),title1:t(({value:i,isActive:l})=>[s("yarn")]),title2:t(({value:i,isActive:l})=>[s("npm")]),tab0:t(({value:i,isActive:l})=>[ln]),tab1:t(({value:i,isActive:l})=>[on]),tab2:t(({value:i,isActive:l})=>[cn]),_:1})])]),pn,n("p",null,[s("您也可以通过 "),n("a",rn,[s("命令行接口"),e(a)]),s(" 的 "),dn,s(" 选项来指定配置文件：")]),un,n("div",vn,[mn,n("p",null,[s("前往官网 "),n("a",hn,[s("配置参考"),e(a)]),s(" 查看所有 VuePress 配置")])]),kn,n("div",bn,[gn,_n,n("p",null,[s("在这种情况下，您可以设置 "),n("a",fn,[s("pagePatterns"),e(a)]),s(" 来避免某个文件被 VuePress 处理，例如使用 "),yn,s(" 来排除所有的 "),xn,s(" 文件")])]),wn,n("p",null,[s("Markdown 文件可以包含一个 "),n("a",Vn,[s("YAML"),e(a)]),s(" Frontmatter。Frontmatter 必须在 Markdown 文件的顶部，并且被包裹在一对三短划线中间。下面是一个基本的示例：")]),Pn,n("p",null,[s("同样的，VuePress 有一些内置支持的 "),n("a",En,[s("Frontmatter 字段"),e(a)]),s("，而您使用的主题也可能有它自己的特殊 "),n("a",An,[s("Frontmatter"),e(a)]),s("。")]),Mn,n("p",null,[s("默认的 "),jn,s(" 目录是 "),Dn,s("，可以通过 "),n("a",zn,[s("public"),e(a)]),s(" 配置项来修改。")]),Rn,n("p",null,[s("这里我们以 "),n("a",Nn,[s("GitHub Actions"),e(a)]),s(" 为例。")]),Sn,n("div",Tn,[qn,n("p",null,[s("请参考 "),n("a",Ln,[s("GitHub Pages 官方指南"),e(a)]),s(" 来获取更多信息")])]),Cn,n("p",null,[s("默认主题为文档网站提供了基础且实用的功能，您可以前往 "),n("a",Hn,[s("默认主题配置参考"),e(a)]),s(" 获取全部的配置列表。")]),Bn])}const Kn=r(h,[["render",Fn],["__file","build.html.vue"]]);export{Kn as default};
