import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as n}from"./app-KpFkFcJ9.js";const i="/assets/settings-h3T1nj7A.jpg",t="/assets/full_name-xoGihzHm.jpg",o="/assets/time_format-shorgSK5.jpg",c="/assets/number-xUuH__iq.jpg",d="/assets/mail-huQawvcn.jpg",r="/assets/ssh_key-xfJMfOj5.jpg",l="/assets/new_group-bp_rtO6V.jpg",p="/assets/add_group-yzlrbELA.jpg",u="/assets/new_project-L-3C0J8R.jpg",g="/assets/change_rights-h1W7Kn4k.jpg",m="/assets/group_rights-TvvbGHpA.jpg",h="/assets/submit_info-jo7nvCz0.jpg",b="/assets/details_page-TPNjn5mk.jpg",v="/assets/reply-SMKltyKf.jpg",f="/assets/reply01-ZrW6I6Zh.jpg",k="/assets/verified-tQXdcFWw.jpg",_="/assets/submit-cu0l5IqM.jpg",x="/assets/gitiles-FyUY0JhW.jpg",y={},E=n('<h2 id="管理员配置" tabindex="-1"><a class="header-anchor" href="#管理员配置" aria-hidden="true">#</a> 管理员配置</h2><p>在 Gerrit web 页面，右上角点击 <em>用户名 -&gt; settings</em> 或直接点击 <em>⚙</em> 图标，进入用户设置页面。</p><figure><img src="'+i+'" alt="设置" tabindex="0" loading="lazy"><figcaption>设置</figcaption></figure><h3 id="添加全名" tabindex="-1"><a class="header-anchor" href="#添加全名" aria-hidden="true">#</a> 添加全名</h3><p>在 <code>Profile</code> 中修改 <code>Full name</code> 值，完成后点击 <em>SAVE CHANGES</em> 保存。</p><figure><img src="'+t+'" alt="添加全名" tabindex="0" loading="lazy"><figcaption>添加全名</figcaption></figure><h3 id="日期格式" tabindex="-1"><a class="header-anchor" href="#日期格式" aria-hidden="true">#</a> 日期格式</h3><p>在 <code>Preferences</code> 中修改 <code>Date/time format</code> 值为 <code>24</code> 小时制，完成后点击 <em>SAVE CHANGES</em> 保存。</p><figure><img src="'+o+'" alt="日期格式" tabindex="0" loading="lazy"><figcaption>日期格式</figcaption></figure><h3 id="勾选-number" tabindex="-1"><a class="header-anchor" href="#勾选-number" aria-hidden="true">#</a> 勾选 Number</h3><p>在 <code>Change Table Columns</code> 中勾选 <code>Number</code> 值，用于查看每个审核的编号，邮件里面显示的编号也是这个，完成后点击 <em>SAVE CHANGES</em> 保存。</p><figure><img src="'+c+'" alt="number" tabindex="0" loading="lazy"><figcaption>number</figcaption></figure><h3 id="添加邮箱" tabindex="-1"><a class="header-anchor" href="#添加邮箱" aria-hidden="true">#</a> 添加邮箱</h3><p>在 <code>Email Addresses</code> 中添加 <code>New email address</code> 值，完成后点击 <em>SAVE CHANGES</em> 保存。</p><p>登录邮箱验证是否成功接收邮件。</p><figure><img src="'+d+`" alt="添加邮箱" tabindex="0" loading="lazy"><figcaption>添加邮箱</figcaption></figure><h3 id="添加-ssh-key" tabindex="-1"><a class="header-anchor" href="#添加-ssh-key" aria-hidden="true">#</a> 添加 SSH Key</h3><p>在 <code>gerrit</code> 用户中生成 <code>ssh</code> 公私钥对：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看公钥，在 <code>SSH keys</code> 中添加 <code>New SSH key</code> 值，点击 <em>ADD NEW SSH KEY</em> 添加，完成后点击 <em>SAVE CHANGES</em> 保存。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /home/gerrit/.ssh/id_rsa.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="添加 SSH Key" tabindex="0" loading="lazy"><figcaption>添加 SSH Key</figcaption></figure><h2 id="管理员远程-gerrit" tabindex="-1"><a class="header-anchor" href="#管理员远程-gerrit" aria-hidden="true">#</a> 管理员远程 Gerrit</h2><p>以下命令用于连接远程 Gerrit 服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token number">29418</span> gerrit@10.1.1.10 <span class="token parameter variable">-l</span> gerrit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加 <code>~/.ssh/confg</code> 配置文件，可以实现免密、更改名称的登陆方法，不论您的 <code>username</code>、<code>server address</code>、<code>port</code> 是什么，都可以不用输入，只需要输入一个别名即可登陆该服务器。</p><p>在管理员用户中配置 <code>./ssh/config</code> 文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Host gerrit
    HostName <span class="token string">&quot;10.1.1.10&quot;</span>
    User <span class="token string">&quot;gerrit&quot;</span>
    IdentityFile <span class="token string">&quot;~/.ssh/id_rsa&quot;</span>
    Port <span class="token number">29418</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Host</strong>：别名</li><li><strong>HostName</strong>：主机名</li><li><strong>User</strong>：用户名</li><li><strong>IdentityFile</strong>：私钥文件认证路径</li><li><strong>Port</strong>：端口</li></ul><p><code>User</code> 要和 Gerrit 服务器上注册的名称保持一致（不是 Full name），认证文件为 <code>User</code> 的私钥文件，端口为 Gerrit 服务的 SSH 端口号，这里是默认的 <code>29418</code>。</p><p>修改 <code>~/.ssh/confg</code> 文件权限：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">600</span> ~/.ssh/confg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入 <code>ssh gerrit -l gerrit</code> 命令测试 SSH 连接 Gerrit 服务器，显示以下信息说明连接成功：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> gerrit <span class="token parameter variable">-l</span> gerrit

  ****    Welcome to Gerrit Code Review    ****

  Hi gerrit, you have successfully connected over SSH.

  Unfortunately, interactive shells are disabled.
  To clone a hosted Git repository, use:

  <span class="token function">git</span> clone ssh://gerrit@10.1.1.10:29418/REPOSITORY_NAME.git

Connection to <span class="token number">10.1</span>.1.10 closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加并修改普通用户" tabindex="-1"><a class="header-anchor" href="#添加并修改普通用户" aria-hidden="true">#</a> 添加并修改普通用户</h2><p>用 <code>htpasswd</code> 命令在 <code>.password</code> 文件中添加普通用户 HTTP 认证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>htpasswd <span class="token parameter variable">-m</span> review_site/etc/.password zhangsan
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用以下命令修改普通用户：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> .ssh/zhangsan_id_rsa.pub <span class="token operator">|</span> <span class="token function">ssh</span> gerrit gerrit set-account --full-name zhangsan --add-email zhangsan@mail.example.com --add-ssh-key - zhangsan
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改用户所在组：</p><p>默认 Gerrit 服务将普通用户加入 <code>Anonymous Users</code> 组中。创建 <code>tests</code> 组，将 <code>zhangsan</code> 加入 <code>tests</code> 组中。</p><p>依次点击 <em>BROWSE -&gt; Groups -&gt; CREATE NEW</em>。</p><figure><img src="`+l+'" alt="创建组" tabindex="0" loading="lazy"><figcaption>创建组</figcaption></figure><figure><img src="'+p+'" alt="加入组" tabindex="0" loading="lazy"><figcaption>加入组</figcaption></figure><h2 id="新建和修改项目" tabindex="-1"><a class="header-anchor" href="#新建和修改项目" aria-hidden="true">#</a> 新建和修改项目</h2><p>创建 <code>test</code> 项目，依次点击 <em>BROWSE -&gt; Repositories -&gt; CREATE NEW</em>。</p><figure><img src="'+u+'" alt="创建项目" tabindex="0" loading="lazy"><figcaption>创建项目</figcaption></figure><ul><li><strong>Repository name</strong>：项目名</li><li><strong>Default Branch</strong>：默认分支为 <code>master</code></li><li><strong>Rights inherit from</strong>：默认权限继承为 <code>All-Projects</code></li><li><strong>Owner</strong>：属主</li><li><strong>Create initial empty commit</strong>：是否创建初始空提交</li><li><strong>Only serve as parent for other repositories</strong>：是否仅作为其他存储库的父存储库</li></ul><p>修改 <code>test</code> 项目权限，将 Reference 改为 <code>refs/*</code>，添加 <code>Read</code> 权限。</p><p>依次点击 <em>BROWSE -&gt; Repositories -&gt; tests -&gt; Access -&gt; EDIT -&gt; ADD REFERENCE</em>。</p><p><code>test</code> 项目默认继承 <code>All-Projects</code> 组的权限，在修改权限时不要直接修改 <code>All-Projects</code> 组的权限，<code>All-Projects</code> 组是所有项目的依赖权限组，修改后所有的项目权限都会跟着改变。</p><figure><img src="'+g+'" alt="修改权限" tabindex="0" loading="lazy"><figcaption>修改权限</figcaption></figure><p>将 <code>Anonymous Users</code> 组设置为 <code>DENY</code>；<code>tests</code> 组设置为 <code>ALLOW</code>。只有 <code>tests</code> 组可以访问，其他组无法访问：</p><figure><img src="'+m+`" alt="分组权限" tabindex="0" loading="lazy"><figcaption>分组权限</figcaption></figure><h2 id="普通用户测试" tabindex="-1"><a class="header-anchor" href="#普通用户测试" aria-hidden="true">#</a> 普通用户测试</h2><h3 id="克隆项目" tabindex="-1"><a class="header-anchor" href="#克隆项目" aria-hidden="true">#</a> 克隆项目</h3><p>使用 <code>zhangsan</code> 用户登录 Gerrit Web 服务器，查看 <code>test</code> 项目的克隆地址。</p><p>用 <code>zhangsan</code> 用户克隆 <code>test</code> 项目。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">su</span> - zhangsan
<span class="token function">mkdir</span> projects
<span class="token builtin class-name">cd</span> projects
<span class="token function">git</span> clone <span class="token string">&quot;ssh://zhangsan@10.1.1.10:29418/test&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加用户身份信息" tabindex="-1"><a class="header-anchor" href="#添加用户身份信息" aria-hidden="true">#</a> 添加用户身份信息</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name zhangsan
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email zhangsan@mail.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="推送到-gerrit-服务器中" tabindex="-1"><a class="header-anchor" href="#推送到-gerrit-服务器中" aria-hidden="true">#</a> 推送到 Gerrit 服务器中</h3><p>由于需要 Gerrit 进行审核代码，不能直接推送到远程 Git 仓库中，而是推送到 Gerrit 特有的 <code>refs/for/*</code> 分支中。修改推送远程的默认分支：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config remote.origin.push refs/heads/*:refs/for/*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加-change-id" tabindex="-1"><a class="header-anchor" href="#添加-change-id" aria-hidden="true">#</a> 添加 Change-Id</h3><p>推送时需要带有 <code>Change-Id</code>，而当前的提交没有 <code>Change-Id</code>。</p><p>从 Gerrit 服务器上拉取 <code>hooks</code> 文件，<code>hooks</code> 文件下的 <code>commit-msg</code> 脚本会自动生成 <code>Change-Id</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">gitdir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> rev-parse --git-dir<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token function">scp</span> <span class="token parameter variable">-p</span> <span class="token parameter variable">-P</span> <span class="token number">29418</span> zhangsan@10.1.1.10:hooks/commit-msg <span class="token variable">\${gitdir}</span>/hooks/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在第一次克隆项目时，使用提交消息挂钩进行克隆（Clone with commit-msg hook）会直接拉取 <code>hooks</code> 文件</p></div><h3 id="推送到本地仓库" tabindex="-1"><a class="header-anchor" href="#推送到本地仓库" aria-hidden="true">#</a> 推送到本地仓库</h3><p>添加测试文件并提交到本地仓库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;Hello World!&quot;</span> <span class="token operator">&gt;</span> <span class="token builtin class-name">test</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">test</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;add test&quot;</span>

<span class="token punctuation">[</span>master e33ee12<span class="token punctuation">]</span> <span class="token function">add</span> <span class="token builtin class-name">test</span>
 <span class="token number">1</span> <span class="token function">file</span> changed, <span class="token number">1</span> insertion<span class="token punctuation">(</span>+<span class="token punctuation">)</span>
 create mode <span class="token number">100644</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看本次 <code>log</code> 信息是否带 <code>Change-Id</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log

commit e564c39767b949b77814ff6ca9fd319d12b43857 <span class="token punctuation">(</span>HEAD -<span class="token operator">&gt;</span> master<span class="token punctuation">)</span>
Author: zhangsan <span class="token operator">&lt;</span>zhangsan@mail.example.com<span class="token operator">&gt;</span>
Date:   Mon Mar <span class="token number">25</span> <span class="token number">15</span>:45:23 <span class="token number">2024</span> +0800

    <span class="token function">add</span> <span class="token builtin class-name">test</span>

    Change-Id: Ic8e2f63e1be2a00f42dd97513e91902754a057c7

commit 9cb4e0bbcd27a7f9fb5ff62dc0aca34cdc9c1874 <span class="token punctuation">(</span>origin/master, origin/HEAD<span class="token punctuation">)</span>
Author: gerrit <span class="token operator">&lt;</span>gerrit@mail.example.com<span class="token operator">&gt;</span>
Date:   Mon Mar <span class="token number">25</span> <span class="token number">14</span>:00:22 <span class="token number">2024</span> +0800

    Initial empty repository
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上传到 Gerrit 服务器中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin master

Enumerating objects: <span class="token number">4</span>, done.
Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">4</span>/4<span class="token punctuation">)</span>, done.
Writing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">3</span>/3<span class="token punctuation">)</span>, <span class="token number">288</span> bytes <span class="token operator">|</span> <span class="token number">288.00</span> KiB/s, done.
Total <span class="token number">3</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, pack-reused <span class="token number">0</span> <span class="token punctuation">(</span>from <span class="token number">0</span><span class="token punctuation">)</span>
remote: Processing changes: refs: <span class="token number">1</span>, new: <span class="token number">1</span>, <span class="token keyword">done</span>
remote:
remote: SUCCESS
remote:
remote:   http://10.1.1.10:8088/c/test/+/1 <span class="token function">add</span> <span class="token builtin class-name">test</span> <span class="token punctuation">[</span>NEW<span class="token punctuation">]</span>
remote:
To ssh://10.1.1.10:29418/test
 * <span class="token punctuation">[</span>new reference<span class="token punctuation">]</span>   master -<span class="token operator">&gt;</span> refs/for/master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="code-review-代码审核" tabindex="-1"><a class="header-anchor" href="#code-review-代码审核" aria-hidden="true">#</a> Code-Review 代码审核</h3><p>使用 <code>zhangsan</code> 用户登录 Gerrit Web 服务器，依次点击 <em>CHANGES -&gt; Open</em> 即可查看已打开的提交信息：</p><figure><img src="`+h+'" alt="提交的信息" tabindex="0" loading="lazy"><figcaption>提交的信息</figcaption></figure><p>点击 <code>add test</code> 进入到当前事件的详情页面，此页面记录了生成的 <code>Change-Id</code>、修改的文件、评论等：</p><figure><img src="'+b+'" alt="详情页面" tabindex="0" loading="lazy"><figcaption>详情页面</figcaption></figure><p>点击 <code>Reply</code> 对此次事件进行打分，<code>Code-Review</code> 一共有五个选项：<code>-2</code>、<code>-1</code>、<code>0</code>、<code>+1</code> 和 <code>+2</code>。普通用户只有 <code>-1</code>、<code>0</code>、<code>1</code> 三个选项，只有管理员有五个选项。</p><p>各个选项含义如下：</p><ul><li><strong>-2</strong>：代码有严重的问题，绝对不可以进行合并。<strong>注意</strong>：Any -2 blocks submit</li><li><strong>-1</strong>：代码看上去不太好，但需要其他评审人再次确认</li><li><strong>0</strong>：还没仔细去看代码</li><li><strong>+1</strong>：代码看上去没问题，但需要其他评审人再次确认</li><li><strong>+2</strong>：代码看看上去不错，同意合并。<strong>注意</strong>：Any +2 enables submit</li></ul><p>值得注意的是 <code>Code-Review</code> 都是针对于评审者自身的意见而言的，并不代表所有人的意见。</p><p>添加 <code>gerrit</code> 管理审核人员、自己打分、添加评论：</p><figure><img src="'+v+'" alt="Reply" tabindex="0" loading="lazy"><figcaption>Reply</figcaption></figure><p>使用 <code>gerrit</code> 管理员用户登录 Gerrit Web 服务器，对 <code>test</code> 项目进行审核、评论：</p><figure><img src="'+f+'" alt="Reply" tabindex="0" loading="lazy"><figcaption>Reply</figcaption></figure><h3 id="verified-代码审核" tabindex="-1"><a class="header-anchor" href="#verified-代码审核" aria-hidden="true">#</a> Verified 代码审核</h3><p><code>Verified</code> 审核，需要安装 <code>Verified label</code> 插件。在初始化安装 Gerrit 时，已经安装上了。</p><p>使用 <code>gerrit</code> 管理员用户登录 Gerrit Web 服务器，依次点击 <em>BROWSE -&gt; Repositories -&gt; All-Projects -&gt; Access -&gt; EDIT</em>。</p><p>在 <em>Reference: refs/heads/*</em> 中添加 <em>Label Verified</em> 审核，并添加 <code>tests</code> 组并保存。</p><p>对 <code>add test</code> 事件进行 <code>Verified</code> 打分：</p><figure><img src="'+k+'" alt="Verified" tabindex="0" loading="lazy"><figcaption>Verified</figcaption></figure><h3 id="提交到主线" tabindex="-1"><a class="header-anchor" href="#提交到主线" aria-hidden="true">#</a> 提交到主线</h3><p><code>Code-Review</code> 和 <code>Verified</code> 审核结束后，就可以提交到 <code>master</code> 分支中。</p><figure><img src="'+_+'" alt="提交" tabindex="0" loading="lazy"><figcaption>提交</figcaption></figure><h3 id="查看-test-项目" tabindex="-1"><a class="header-anchor" href="#查看-test-项目" aria-hidden="true">#</a> 查看 test 项目</h3><p>依次点击 <em>BROWSE -&gt; Repositories -&gt; tests -&gt; browse</em>，进入 <code>Gitiles</code> 浏览页面。<code>Gitiles</code> 是 Git 的可视化工具，在初始化安装 Gerrit 时，已经安装上了。</p><p>在 <code>Gitiles</code> 浏览页面中，即可查看添加到 <code>master</code> 分支的 <code>test</code> 文件。</p><figure><img src="'+x+'" alt="Gitiles" tabindex="0" loading="lazy"><figcaption>Gitiles</figcaption></figure>',102),S=[E];function z(A,G){return s(),a("div",null,S)}const R=e(y,[["render",z],["__file","basic_operation.html.vue"]]);export{R as default};
