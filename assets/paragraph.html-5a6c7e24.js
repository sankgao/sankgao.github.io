import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c as i,b as t,w as e,d as a,e as n,f as o}from"./app-9bd468f1.js";const r={},u=a("p",null,[n("段落是通过 "),a("code",null,"<p>"),n(" 标签定义的。例如：")],-1),d=a("div",{class:"language-html line-numbers-mode","data-ext":"html"},[a("pre",{class:"language-html"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n("This is a paragraph."),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n("This is another paragraph."),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),g=o('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>浏览器会自动地在段落的前后添加空行。（<code>&lt;p&gt;</code> 是块级元素）</p><p>不要忘记结束标签 <code>&lt;/p&gt;</code>。即时忘记结束标签，在大多数浏览器中也会正确显示，但在未来的 HTML 版本中，<strong>不允许省略</strong> 结束标签</p></div><h2 id="html-折行" tabindex="-1"><a class="header-anchor" href="#html-折行" aria-hidden="true">#</a> HTML 折行</h2><p>使用空的段落标记 <code>&lt;p&gt;&lt;/p&gt;</code> 去插入一个空行是个坏习惯，应该使用 <code>&lt;br /&gt;</code> 标签代替。</p><p>如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 <code>&lt;br /&gt;</code> 标签。例如：</p>',4),k=a("div",{class:"language-html line-numbers-mode","data-ext":"html"},[a("pre",{class:"language-html"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n("This is"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("br")]),n(),a("span",{class:"token punctuation"},"/>")]),n("a para"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("br")]),n(),a("span",{class:"token punctuation"},"/>")]),n("graph with line breaks"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),h=o('<div class="hint-container note"><p class="hint-container-title">注</p><p><code>&lt;br /&gt;</code> 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签</p></div><h2 id="br-还是-br" tabindex="-1"><a class="header-anchor" href="#br-还是-br" aria-hidden="true">#</a> &lt;br&gt; 还是 &lt;br /&gt;</h2><p>即使 <code>&lt;br&gt;</code> 在大多数浏览器中也会正确显示，但使用 <code>&lt;br /&gt;</code> 是更长远的保障。</p><h2 id="html-输出" tabindex="-1"><a class="header-anchor" href="#html-输出" aria-hidden="true">#</a> HTML 输出</h2><p>当显示页面时，浏览器会移除源代码中 <strong>多余的</strong> 空格和空行。所有连续的空格或空行都会被算作 <strong>一个空格</strong>。需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</p>',5),m=a("div",{class:"language-html line-numbers-mode","data-ext":"html"},[a("pre",{class:"language-html"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("h1")]),a("span",{class:"token punctuation"},">")]),n("春晓"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("h1")]),a("span",{class:"token punctuation"},">")]),n(`

`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`
    春眠不觉晓，
      处处闻啼鸟。
        夜来风雨声，
          花落知多少。
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`

`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n("注意，浏览器忽略了源代码中的排版（省略了多余的空格和换行）。"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1);function b(v,_){const s=l("CodeDemo");return p(),i("div",null,[u,t(s,{id:"code-demo-3",type:"normal",title:"%E6%BC%94%E7%A4%BA",code:"eJyrVsooyc1RslKyKbALycgsVgCiRIWCxKLE9KLEggw9G/0Cu5g8ZMm8/JKM1CIMJUq1AMYOGcw="},{default:e(()=>[d]),_:1}),g,t(s,{id:"code-demo-23",type:"normal",title:"%E6%BC%94%E7%A4%BA",code:"eJyrVsooyc1RslKyKbALycgsVsgstkkqUtC3S1QoSCxKhLDTixILMhTKM0syFHIy81IVkopSE7OLbfQL7GLylGoB7jwWfg=="},{default:e(()=>[k]),_:1}),h,t(s,{id:"code-demo-43",type:"normal",title:"%E6%BC%94%E7%A4%BA",code:"eJxNTU0KglAQvop4gWgb0kk6QIuKFu0iqJDQsH+iLCPLJFsERgSiTzpM7817rrxCoxL0MTDD9zNfV653mg25Iiv1chW2LpgrpYRnrVVrKW1cEgJ5btk0mIirjoaUGAUvSeyi4iSbiK1JEhw//eFPyTQLDm7iTJO9xxz/L5VBjB9iHvOjyy475i/ypFLKGvNieHqgzjADr5m4asz02Dvma5eGIwjnNHK4PaDBne9UmC65rqVE49agMOBHGpso8VsINmFLAyZncTJSomNNUSL3vm+FjIs="},{default:e(()=>[m]),_:1})])}const x=c(r,[["render",b],["__file","paragraph.html.vue"]]);export{x as default};
