const t=JSON.parse(`{"key":"v-5026fbe0","path":"/languages/python/algorithm_data_structure/sorting.html","title":"排序算法","lang":"zh-CN","frontmatter":{"title":"排序算法","icon":"list","date":"2023-07-04T00:00:00.000Z","category":"Languages","tag":["Python","Algorithm"],"description":"根据时间复杂度的不同，主流的排序算法可以分为三大类： 时间复杂度为 O(n^2^) 的排序算法; 冒泡排序; 选择排序; 插入排序; 希尔排序（希尔排序比较特殊，它的性能略优于 O(n^2^)，但又比不上 O(nlog~2~n)，姑且把它归入本类）; 时间复杂度为 O(nlog~2~n) 的排序算法; 快速排序; 归并排序; 堆排序; 时间复杂度为线性...","head":[["meta",{"property":"og:url","content":"https://sankgao.github.io/languages/python/algorithm_data_structure/sorting.html"}],["meta",{"property":"og:site_name","content":"Sank's blog"}],["meta",{"property":"og:title","content":"排序算法"}],["meta",{"property":"og:description","content":"根据时间复杂度的不同，主流的排序算法可以分为三大类： 时间复杂度为 O(n^2^) 的排序算法; 冒泡排序; 选择排序; 插入排序; 希尔排序（希尔排序比较特殊，它的性能略优于 O(n^2^)，但又比不上 O(nlog~2~n)，姑且把它归入本类）; 时间复杂度为 O(nlog~2~n) 的排序算法; 快速排序; 归并排序; 堆排序; 时间复杂度为线性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://sankgao.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-07T06:05:31.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"排序算法"}],["meta",{"property":"article:author","content":"Sankgao"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:published_time","content":"2023-07-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-07T06:05:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"排序算法\\",\\"image\\":[\\"https://sankgao.github.io/\\"],\\"datePublished\\":\\"2023-07-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-07T06:05:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Sankgao\\",\\"url\\":\\"https://sankgao.github.io\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://sankgao.github.io/atom.xml","title":"Sank's blog Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://sankgao.github.io/feed.json","title":"Sank's blog JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://sankgao.github.io/rss.xml","title":"Sank's blog RSS Feed"}]]},"headers":[{"level":2,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[{"level":3,"title":"冒泡排序的优化","slug":"冒泡排序的优化","link":"#冒泡排序的优化","children":[]},{"level":3,"title":"进一步优化冒泡排序性能。","slug":"进一步优化冒泡排序性能。","link":"#进一步优化冒泡排序性能。","children":[]},{"level":3,"title":"鸡尾酒排序","slug":"鸡尾酒排序","link":"#鸡尾酒排序","children":[]}]},{"level":2,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[{"level":3,"title":"基准元素的选择","slug":"基准元素的选择","link":"#基准元素的选择","children":[]},{"level":3,"title":"元素的交换","slug":"元素的交换","link":"#元素的交换","children":[]},{"level":3,"title":"单边循环法","slug":"单边循环法","link":"#单边循环法","children":[]},{"level":3,"title":"非递归实现","slug":"非递归实现","link":"#非递归实现","children":[]}]},{"level":2,"title":"堆排序","slug":"堆排序","link":"#堆排序","children":[]},{"level":2,"title":"快速排序和堆排序对比","slug":"快速排序和堆排序对比","link":"#快速排序和堆排序对比","children":[]},{"level":2,"title":"计数排序和桶排序","slug":"计数排序和桶排序","link":"#计数排序和桶排序","children":[{"level":3,"title":"线性时间的排序","slug":"线性时间的排序","link":"#线性时间的排序","children":[]},{"level":3,"title":"计数排序","slug":"计数排序","link":"#计数排序","children":[]},{"level":3,"title":"计数排序的优化","slug":"计数排序的优化","link":"#计数排序的优化","children":[]},{"level":3,"title":"桶排序","slug":"桶排序","link":"#桶排序","children":[]}]},{"level":2,"title":"排序算法对比","slug":"排序算法对比","link":"#排序算法对比","children":[]}],"git":{"createdTime":1688466687000,"updatedTime":1688709931000,"contributors":[{"name":"Sankgao","email":"sankgao@163.com","commits":2}]},"readingTime":{"minutes":30.86,"words":9257},"filePathRelative":"languages/python/algorithm_data_structure/sorting.md","localizedDate":"2023年7月4日","excerpt":"","autoDesc":true}`);export{t as data};
