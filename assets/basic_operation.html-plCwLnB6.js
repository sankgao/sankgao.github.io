import{_ as e}from"./welcome-aS8qKLdu.js";import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as r,f as a}from"./app-vFXqY2jP.js";const s="/assets/manage_repo-D6Ce5mhQ.jpg",i={},n=a('<figure><img src="'+e+'" alt="Welcome 页面" tabindex="0" loading="lazy"><figcaption>Welcome 页面</figcaption></figure><h2 id="管理存储库" tabindex="-1"><a class="header-anchor" href="#管理存储库" aria-hidden="true">#</a> 管理存储库</h2><p>在主页点击 <em>⚙（管理） -&gt; Repository-&gt; Repositories</em> 进入管理存储库。</p><figure><img src="'+s+'" alt="管理存储库" tabindex="0" loading="lazy"><figcaption>管理存储库</figcaption></figure><p>存储库类型，这里一共有三种：</p><ul><li><strong>proxy</strong>：代理存储库。用来代理远程公共仓库。例如：Maven 中央仓库、JBoss 远程仓库</li><li><strong>hosted</strong>：本地存储库。该仓库通常用来部署本地项目所产生的构件。<code>hosted</code> 宿主仓库又分为：<code>releases</code> 和 <code>snapshots</code>，分别表示依赖的版本的发行版、快照版。快照版依赖不能上传到发布版仓库，反之亦然。nexus 做了限制</li><li><strong>group</strong>：存储库组，用来将多个代理存储库或本地存储库组合成一个存储库，为这些仓库提供统一的服务地址，以便 Maven 可以更加方便地获得这些仓库中的构件</li></ul><p>Nexus 服务提供了以下默认的 maven2 仓库，可供我们直接使用：</p><ul><li><strong>maven-central</strong>：代理存储库（Type：<code>proxy</code>）。代理 Maven 中央库，默认从 <code>https://repo1.maven.org/maven2/</code> 拉取 jar 包</li><li><strong>maven-releases</strong>：发布版存储库（Type：<code>hosted</code>）。用于组织发布内部版本的存储库</li><li><strong>maven-snapshots</strong>：快照版存储库（Type：<code>hosted</code>、Version policy：<code>Snapshot</code>），用于组织发布内部开发版本的存储库</li><li><strong>maven-public</strong>：maven2 存储库集合（Type：<code>group</code>），用于整合以上三个仓库，用户可以直接使用集合仓库的地址拉取依赖 jar 包</li></ul><h3 id="创建其他代理" tabindex="-1"><a class="header-anchor" href="#创建其他代理" aria-hidden="true">#</a> 创建其他代理</h3><p>依次点击 <em>Create repository -&gt; maven2(proxy)</em></p>',10),c=[n];function d(p,l){return t(),r("div",null,c)}const _=o(i,[["render",d],["__file","basic_operation.html.vue"]]);export{_ as default};
