import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as d,c,b as s,e as n,d as a,w as p,f as l}from"./app-akG07Bo0.js";const u="/assets/war_setup-g5HiB3yR.jpg",t="/assets/linux_setup-oJUYviJe.jpg",v="/assets/plugins_install-Y_S8hSP0.jpg",k="/assets/plugins_install02-0numIahk.jpg",m="/assets/create_admin-RWRdPNvg.jpg",b="/assets/config_url-7GiUrx9Y.jpg",h="/assets/done_setup-J_Kv3TDw.jpg",g="/assets/jenkins_page-sI9O-wqB.jpg",f={},j=l('<h2 id="安装环境" tabindex="-1"><a class="header-anchor" href="#安装环境" aria-hidden="true">#</a> 安装环境</h2><p>长期支持（LTS）版本和定期发布版本支持的 Java 版本：</p><ul><li><strong>2.361.1（2022 年 9 月）及更高版本</strong>：Java 11 或 Java 17</li><li><strong>2.346.1（2022 年 6 月）及更高版本</strong>：Java 8、Java 11 或 Java 17</li><li><strong>2.164.1（2019 年 3 月）及更高版本</strong>：Java 8 或 Java 11</li><li><strong>2.60.1（2017 年 6 月）及更高版本</strong>：Java 8</li><li><strong>1.625.1（2015 年 10 月）及更高版本</strong>：Java 7</li></ul>',3),y=s("h2",{id:"war-文件安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#war-文件安装","aria-hidden":"true"},"#"),n(" WAR 文件安装")],-1),x={href:"https://github.com/jenkinsci/winstone",target:"_blank",rel:"noopener noreferrer"},_={href:"https://eclipse.dev/jetty/",target:"_blank",rel:"noopener noreferrer"},J=s("code",null,"jenkins.war",-1),w={href:"https://get.jenkins.io/war-stable/",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"jenkins.war",-1),A={href:"https://get.jenkins.io/war/",target:"_blank",rel:"noopener noreferrer"},R=l(`<h3 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /opt/jenkins
<span class="token function">sudo</span> <span class="token function">useradd</span> jenkins <span class="token parameter variable">-M</span> <span class="token parameter variable">-d</span> /opt/jenkins <span class="token parameter variable">-s</span> /bin/bash
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> jenkins:jenkins /opt/jenkins/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下载并运行-war-文件" tabindex="-1"><a class="header-anchor" href="#下载并运行-war-文件" aria-hidden="true">#</a> 下载并运行 WAR 文件</h3><p>将 Jenkins WAR 文件下载到您机器上的适当目录中。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">su</span> - jenkins
<span class="token function">wget</span> https://get.jenkins.io/war-stable/2.440.3/jenkins.war
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>用 <code>java</code> 命令运行 WAR 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> jenkins.war <span class="token operator">&amp;</span>
<span class="token comment"># 或</span>
<span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span>/opt/jenkins <span class="token function">java</span> <span class="token parameter variable">-jar</span> jenkins.war <span class="token parameter variable">--httpPort</span><span class="token operator">=</span><span class="token number">9090</span> <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>JENKINS_HOME</strong>：指定安装目录，默认安装目录在运行用户家目录下的 <code>.jenkins</code> 目录中</li><li><strong>--httpPort</strong>：指定端口，默认是 <code>8080</code></li></ul><p>有关可以调整 Jenkins 启动的命令行参数的更多详细信息，请使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> jenkins.war <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="访问-jenkins" tabindex="-1"><a class="header-anchor" href="#访问-jenkins" aria-hidden="true">#</a> 访问 Jenkins</h3><p>在终端中看见以下信息，Jenkins 启动成功。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Jenkins initial setup is required. An admin user has been created and a password generated.
Please use the following password to proceed to installation:

f7e85bf2608f41a09e41fb27fc6b6098

This may also be found at: /opt/jenkins/secrets/initialAdminPassword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问地址：<code>http://localhost:8080</code>。</p><figure><img src="`+u+`" alt="解锁 Jenkins" tabindex="0" loading="lazy"><figcaption>解锁 Jenkins</figcaption></figure><p><a href="#%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC">配置安装向导</a>。</p><h3 id="开机自启" tabindex="-1"><a class="header-anchor" href="#开机自启" aria-hidden="true">#</a> 开机自启</h3><ul><li><strong>Debian 系统</strong>：在 <code>/lib/systemd/system/</code> 目录下创建</li><li><strong>Redhat 系统</strong>：在 <code>/usr/lib/systemd/system/</code> 目录下创建</li></ul><p>创建 <code>jenkins.service</code> 文件，添加以下内容：</p><div class="language-service line-numbers-mode" data-ext="service"><pre class="language-service"><code>[Unit]
Description=Jenkins Continuous Integration Server
Requires=network.target
After=network.target

[Service]
Type=notify
NotifyAccess=main
ExecStart=/usr/bin/java -jar /opt/jenkins/jenkins.war --httpPort=9090
ExecReload=/bin/kill -HUP $MAINPID
Restart=on-failure
SuccessExitStatus=143

User=jenkins
Group=jenkins
Environment=&quot;JENKINS_HOME=/opt/jenkins&quot;

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新加载 systemd 管理器的配置，启用并启动 Jenkins 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> jenkins
<span class="token function">sudo</span> systemctl start jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="linux-安装" tabindex="-1"><a class="header-anchor" href="#linux-安装" aria-hidden="true">#</a> Linux 安装</h2><p>分别在 Debian/Ubuntu-18.04 和 RedHat/CentOS-Stream-8 系统中安装。</p><h3 id="debian-ubuntu-系统" tabindex="-1"><a class="header-anchor" href="#debian-ubuntu-系统" aria-hidden="true">#</a> Debian/Ubuntu 系统</h3><p>添加 LTS 版本密钥：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/share/keyrings/jenkins-keyring.asc <span class="token punctuation">\\</span>
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>添加 Jenkins 的 Debian 软件包存储库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> deb <span class="token punctuation">[</span>signed-by<span class="token operator">=</span>/usr/share/keyrings/jenkins-keyring.asc<span class="token punctuation">]</span> <span class="token punctuation">\\</span>
  https://pkg.jenkins.io/debian-stable binary/ <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token punctuation">\\</span>
  /etc/apt/sources.list.d/jenkins.list <span class="token operator">&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新本地包索引，然后安装 Jenkins：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redhat-centos-系统" tabindex="-1"><a class="header-anchor" href="#redhat-centos-系统" aria-hidden="true">#</a> RedHat/CentOS 系统</h3><p>添加 Jenkins 的 Redhat 软件包存储库，并添加 LTS 版本密钥：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
<span class="token function">sudo</span> <span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您之前添加过密钥，则 <code>rpm --import</code> 会失败，因为您已经拥有密钥，请忽略它并继续。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum update
<span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="访问-jenkins-1" tabindex="-1"><a class="header-anchor" href="#访问-jenkins-1" aria-hidden="true">#</a> 访问 Jenkins</h3><p>访问地址：<code>http://localhost:8080</code>。</p><figure><img src="`+t+`" alt="解锁 Jenkins" tabindex="0" loading="lazy"><figcaption>解锁 Jenkins</figcaption></figure><p><a href="#%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC">配置安装向导</a>。</p><h3 id="控制-jenkins-服务" tabindex="-1"><a class="header-anchor" href="#控制-jenkins-服务" aria-hidden="true">#</a> 控制 Jenkins 服务</h3><p>使用 <code>systemd</code> 控制 GitLab 服务命令：</p><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sudo systemctl start jenkins</code></td><td style="text-align:left;">启动服务</td></tr><tr><td style="text-align:left;"><code>sudo systemctl stop jenkins</code></td><td style="text-align:left;">停止服务</td></tr><tr><td style="text-align:left;"><code>sudo systemctl restart jenkins</code></td><td style="text-align:left;">重启服务</td></tr><tr><td style="text-align:left;"><code>sudo systemctl status jenkins</code></td><td style="text-align:left;">显示所有服务状态</td></tr><tr><td style="text-align:left;"><code>sudo systemctl enable jenkins</code></td><td style="text-align:left;">开机自启</td></tr><tr><td style="text-align:left;"><code>sudo systemctl disable jenkins</code></td><td style="text-align:left;">禁止开机自启</td></tr></tbody></table><h2 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装" aria-hidden="true">#</a> Docker 安装</h2><h3 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker" aria-hidden="true">#</a> 安装 Docker</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> apt-transport-https ca-certificates <span class="token function">curl</span> software-properties-common
<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
<span class="token function">sudo</span> add-apt-repository <span class="token string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> docker-ce
<span class="token function">sudo</span> <span class="token function">docker</span> <span class="token parameter variable">-v</span>
<span class="token function">sudo</span> <span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF
{
  &quot;registry-mirrors&quot;: [&quot;https://6870dvkt.mirror.aliyuncs.com&quot;]
}
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动-docker" tabindex="-1"><a class="header-anchor" href="#启动-docker" aria-hidden="true">#</a> 启动 Docker</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="挂载目录权限" tabindex="-1"><a class="header-anchor" href="#挂载目录权限" aria-hidden="true">#</a> 挂载目录权限</h3><p>修改挂载目录权限为 <code>1000</code>，由于容器内 <code>jenkins</code> 用户的 UID 和 PID 为 <code>1000</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /opt/jenkins_home
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token number">1000</span>:1000 /opt/jenkins_home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像" aria-hidden="true">#</a> 拉取镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> pull jenkins/jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动-jenkins" tabindex="-1"><a class="header-anchor" href="#启动-jenkins" aria-hidden="true">#</a> 启动 jenkins</h3><ul><li><p>使用 Docker Engine 运行 Jenkins 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> /opt/jenkins_home:/var/jenkins_home <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token parameter variable">-p</span> <span class="token number">50000</span>:50000 <span class="token parameter variable">--restart</span><span class="token operator">=</span>on-failure <span class="token parameter variable">--name</span> jenkins jenkins/jenkins:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用 Docker Compose 运行 Jenkins 服务</p><p>在 <code>/opt/jenkins_home</code> 目录中创建一个 <code>docker-compose.yml</code> 文件，并输入以下内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">jenkins</span><span class="token punctuation">:</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jenkins
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>
      <span class="token punctuation">-</span> 50000<span class="token punctuation">:</span><span class="token number">50000</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /opt/jenkins_home<span class="token punctuation">:</span>/var/jenkins_home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>确保您在与 <code>docker-compose.yml</code> 相同的目录下并启动 Jenkins：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> compose up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>查看 Jenkins 日志。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> logs <span class="token parameter variable">-f</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置安装向导" tabindex="-1"><a class="header-anchor" href="#配置安装向导" aria-hidden="true">#</a> 配置安装向导</h2><p>输入管理员密码，解锁 Jenkins。</p><figure><img src="`+t+'" alt="解锁 Jenkins" tabindex="0" loading="lazy"><figcaption>解锁 Jenkins</figcaption></figure><p>自定义 Jenkins。</p><ul><li><strong>安装推荐的插件</strong>：安装推荐的插件集，这些插件基于最常见的用例。默认选择</li><li><strong>选择要安装的插件</strong>：自定义需要安装的插件</li></ul><figure><img src="'+v+'" alt="安装插件" tabindex="0" loading="lazy"><figcaption>安装插件</figcaption></figure><figure><img src="'+k+'" alt="开始安装插件" tabindex="0" loading="lazy"><figcaption>开始安装插件</figcaption></figure><p>创建管理员用户，点击保存并完成。</p><figure><img src="'+m+'" alt="创建管理员用户" tabindex="0" loading="lazy"><figcaption>创建管理员用户</figcaption></figure><p>实例配置，点击保存并完成</p><figure><img src="'+b+'" alt="实例配置" tabindex="0" loading="lazy"><figcaption>实例配置</figcaption></figure><p>完成配置。</p><figure><img src="'+h+'" alt="完成配置" tabindex="0" loading="lazy"><figcaption>完成配置</figcaption></figure><figure><img src="'+g+'" alt="Jenkins 主页" tabindex="0" loading="lazy"><figcaption>Jenkins 主页</figcaption></figure>',71);function S(D,I){const r=i("RouterLink"),e=i("ExternalLinkIcon");return d(),c("div",null,[j,s("p",null,[n("查看 "),a(r,{to:"/computers/dev_env/jdk.html"},{default:p(()=>[n("Java 安装教程")]),_:1}),n("。")]),y,s("p",null,[n("Jenkins Web 应用程序 ARchive（WAR）文件捆绑了 "),s("a",x,[n("Winstone"),a(e)]),n("（一个 "),s("a",_,[n("Jetty"),a(e)]),n(" servlet 容器包装器），并且可以在具有 Jenkins 支持的 Java 版本的任何操作系统或平台上启动。")]),s("ul",null,[s("li",null,[n("长期支持（LTS）版本 "),J,n(),s("a",w,[n("下载地址"),a(e)])]),s("li",null,[n("定期发布版本 "),E,n(),s("a",A,[n("下载地址"),a(e)])])]),R])}const L=o(f,[["render",S],["__file","install.html.vue"]]);export{L as default};
