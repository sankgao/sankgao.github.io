import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as d,f as l}from"./app-P4kEufil.js";const n={},i=l('<p>CSS 有几种表示长度的不同单位。</p><p>许多 CSS 属性接受 “长度” 值。例如：<code>width</code>、<code>margin</code>、<code>padding</code>、<code>font-size</code> 等。</p><p>长度是一个后面跟着长度单位的数字。例如：<code>10px</code>、<code>2em</code> 等。</p><ul><li>数字和单位之间不能出现空格。但是，如果值为 <code>0</code>，则可以省略单位</li><li>对于某些 CSS 属性，允许使用负的长度</li><li>长度单位有两种类型 <strong>绝对单位</strong> 和 <strong>相对单位</strong></li></ul><h2 id="绝对长度" tabindex="-1"><a class="header-anchor" href="#绝对长度" aria-hidden="true">#</a> 绝对长度</h2><p>绝对长度单位是固定的，用任何一个绝对长度表示的长度都将恰好显示为这个尺寸。</p><p>不建议在屏幕上使用绝对长度单位，因为屏幕尺寸变化很大。但是，如果已知输出介质，则可以使用它们。例如：用于打印布局（print layout）。</p><table><thead><tr><th style="text-align:center;">单位</th><th style="text-align:left;">描述</th><th style="text-align:center;">TIY</th></tr></thead><tbody><tr><td style="text-align:center;">cm</td><td style="text-align:left;">厘米</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">mm</td><td style="text-align:left;">毫米</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">in</td><td style="text-align:left;">英寸（1in = 96px = 2.54cm）</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">px *</td><td style="text-align:left;">像素（1px = 1/96th of 1in）</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">pt</td><td style="text-align:left;">点（1pt = 1/72 of 1in）</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">pc</td><td style="text-align:left;">派卡（1pc = 12 pt）</td><td style="text-align:center;">试一试</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>*</code> 像素（px）是相对于观看设备的。对于低 dpi 的设备，1px 是显示器的一个设备像素（点）。对于打印机和高分辨率屏幕，1px 表示多个设备像素</p></div><h2 id="相对长度" tabindex="-1"><a class="header-anchor" href="#相对长度" aria-hidden="true">#</a> 相对长度</h2><p>相对长度单位规定相对于另一个长度属性的长度。相对长度单位在不同渲染介质之间缩放表现得更好。</p><table><thead><tr><th style="text-align:center;">单位</th><th style="text-align:left;">描述</th><th style="text-align:center;">TIY</th></tr></thead><tbody><tr><td style="text-align:center;">em</td><td style="text-align:left;">相对于元素的字体大小（font-size）（2em 表示当前字体大小的 2 倍）</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">ex</td><td style="text-align:left;">相对于当前字体的 x-height（极少使用）</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">ch</td><td style="text-align:left;">相对于 &quot;0&quot;（零）的宽度</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">rem</td><td style="text-align:left;">相对于根元素的字体大小（font-size）</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">vw</td><td style="text-align:left;">相对于视口 * 宽度的 1%</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">vh</td><td style="text-align:left;">相对于视口 * 高度的 1%</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">vmin</td><td style="text-align:left;">相对于视口 * 较小尺寸的 1%</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">vmax</td><td style="text-align:left;">相对于视口 * 较大尺寸的 1%</td><td style="text-align:center;">试一试</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:left;">相对于父元素</td><td style="text-align:center;">试一试</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>em</code> 和 <code>rem</code> 单元可用于创建完美的可扩展布局</p><p><code>*</code> 视口（Viewport）= 浏览器窗口的尺寸。如果视口宽 <code>50cm</code>，则 <code>1vw = 0.5cm</code></p></div>',13),r=[i];function a(c,s){return e(),d("div",null,r)}const g=t(n,[["render",a],["__file","units.html.vue"]]);export{g as default};
