import{_ as l}from"./welcome-aS8qKLdu.js";import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as p,b as s,e,d as n,w as u,f as i}from"./app-WTf8Na7i.js";const t="/assets/home_page-UHoECB4u.jpg",m="/assets/sign_in-nT3_XhYk.jpg",v="/assets/setup-ib18oBXQ.jpg",h="/assets/new_passwd-kwASALbc.jpg",b="/assets/anonymous_access-8zUSxqxY.jpg",g="/assets/complete-Ro-BiTuv.jpg",x={},k={href:"https://help.sonatype.com/en/download-archives---repository-manager-3.html",target:"_blank",rel:"noopener noreferrer"},f=i('<p>Nexus Repository <code>3.66.0</code> 及之前版本需要 Java 8 运行时环境（JRE）。</p><p>版本 <code>3.67.0+</code> 还支持 Java 11 JRE。</p><h2 id="基础环境" tabindex="-1"><a class="header-anchor" href="#基础环境" aria-hidden="true">#</a> 基础环境</h2><p>安装 JDK 环境，Nexus 需要 JDK 来运行。Nexus Repository <code>3.66.0</code> 及之前版本需要 Java 8 运行时环境（JRE），<code>3.67.0+</code> 还支持 Java 11 JRE。</p>',4),_={href:"https://help.sonatype.com/en/sonatype-nexus-repository-system-requirements.html",target:"_blank",rel:"noopener noreferrer"},y=i(`<h2 id="linux-安装" tabindex="-1"><a class="header-anchor" href="#linux-安装" aria-hidden="true">#</a> Linux 安装</h2><h3 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h3><p>使用 <code>nexus</code> 用户启动 Nexus 服务。创建 <code>nexus</code> 用户密码，并加入 <code>sudoers</code> 组。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">useradd</span> <span class="token parameter variable">-s</span> /bin/bash <span class="token parameter variable">-m</span> nexus
<span class="token function">sudo</span> <span class="token function">passwd</span> nexus

<span class="token function">sudo</span> <span class="token function">vim</span> /etc/sudoers  <span class="token comment"># 以下内容添加到最后</span>
nexus <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> NOPASSWD:ALL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>切换到 <code>nexus</code> 用户，创建安装目录并修改权限。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">su</span> - nexus
<span class="token function">sudo</span> <span class="token function">mkdir</span> /opt/nexus
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> nexus:nexus /opt/nexus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解压安装包" tabindex="-1"><a class="header-anchor" href="#解压安装包" aria-hidden="true">#</a> 解压安装包</h3>`,7),N={href:"https://help.sonatype.com/en/download-archives---repository-manager-3.html",target:"_blank",rel:"noopener noreferrer"},w=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/nexus
<span class="token function">tar</span> <span class="token parameter variable">-zxf</span> nexus-3.66.0-02-unix.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>解压后有两个文件：</p><ul><li><strong>nexus-3.66.0-02</strong>：安装目录（<code>$install-dir</code>）。包含 Nexus 运行所需的文件以及所有必需的其他组件，如：启动脚本、依赖 jar 包等</li><li><strong>sonatype-work</strong>：数据目录（<code>$data-dir</code>）。包含 Nexus 生成的配置文件、日志文件、仓库文件等</li></ul><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h3><p>在 <code>/etc/profile</code> 文件中添加以下内容，用于在系统任意地方都可以使用 <code>nexus</code> 命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">NEXUS_HOME</span><span class="token operator">=</span>/home/nexus/nexus-3.66.0-02
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$NEXUS_HOME</span>/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使在不重启的情况下，更新 <code>/etc/profile</code> 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加系统服务" tabindex="-1"><a class="header-anchor" href="#添加系统服务" aria-hidden="true">#</a> 添加系统服务</h3><p>用 <code>systemctl</code> 命令管理 Nexus 服务。</p><p>在 <code>/etc/systemd/system/</code> 目录下，创建 <code>nexus.service</code> 文件并添加以下内容：</p><div class="language-sevice line-numbers-mode" data-ext="sevice"><pre class="language-sevice"><code>[Unit]
Description=nexus service
After=syslog.target network.target

[Service]
Type=forking
LimitNPROC=65536
LimitNOFILE=65536
User=nexus
ExecStart=/opt/nexus/nexus-3.66.0-02/bin/nexus start
ExecStop=/opt/nexus/nexus-3.66.0-02/bin/nexus stop
Restart=on-abort

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新加载系统管理守护进程（<code>systemd</code>）的配置文件，并设置开机自启：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> nexus.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="访问服务" tabindex="-1"><a class="header-anchor" href="#访问服务" aria-hidden="true">#</a> 访问服务</h3><p>开启 Nexus 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start nexus.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待一会，用以下命令查看 <code>8081</code> 端口是否启动。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">netstat</span> <span class="token parameter variable">-anpt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看 Nexus 服务 <code>log</code> 日志。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> sonatype-work/nexus3/log/nexus.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>访问 <code>http://localhost:8081/</code> 地址。</p><figure><img src="`+t+'" alt="首页" tabindex="0" loading="lazy"><figcaption>首页</figcaption></figure><h3 id="nexus-命令" tabindex="-1"><a class="header-anchor" href="#nexus-命令" aria-hidden="true">#</a> nexus 命令</h3><p><code>nexus</code> 命令如下：</p><ul><li><strong>./nexus start</strong>：后台运行服务。在后台运行时，所有日志记录都将保存到应用程序日志文件（<code>sonatype-work/nexus3/log/nexus.log</code>）中</li><li><strong>./nexus stop</strong>：停止服务</li><li><strong>./nexus run</strong>：前台运行服务。在当前 shell 中运行并显示日志输出，<kbd>CTRL</kbd> + <kbd>C</kbd> 可以在相应的控制台上停止正在运行的应用程序</li><li><strong>./nexus run-redirect</strong>：前台运行服务</li><li><strong>./nexus status</strong>：查看服务状态</li><li><strong>./nexus restart</strong>：重启服务</li><li><strong>./nexus force-reload</strong>：重装服务</li></ul><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3>',27),L={href:"https://help.sonatype.com/en/configuring-the-runtime-environment.html",target:"_blank",rel:"noopener noreferrer"},E=i(`<p>Nexus 服务一些配置文件作用。</p><ul><li><strong>nexus-3.66.0-02/bin/nexus</strong>：<code>nexus</code> 命令脚本文件</li><li><strong>nexus-3.66.0-02/bin/nexus.rc</strong>：配置 Nexus 服务运行用户文件</li><li><strong>nexus-3.66.0-02/bin/nexus.vmoptions</strong>：配置运行时环境。根据服务器内存设置合适参数，并可根据自身需求修改 Nexus 的数据和日志存储位置</li><li><strong>nexus-3.66.0-02/etc/nexus-default.properties</strong>：默认配置 Nexus 服务 IP 地址和端口文件。如果要修改 IP 或端口，将此文件在当前目录下复制为 <code>nexus.properties</code> 文件，在 <code>nexus.properties</code> 文件中修改</li><li><strong>sonatype-work/nexus3/admin.password</strong>：Nexus 服务的初始化密码文件</li><li><strong>sonatype-work/nexus3/blobs</strong>：所有未使用绝对存储路径定义的基于文件系统的 Blob 存储的父目录</li><li><strong>sonatype-work/nexus3/log</strong>：Nexus 服务的日志文件</li><li><strong>sonatype-work/nexus3/log/nexus.log</strong>：主存储库管理器应用程序日志，每天轮换和压缩。日志消息包含标准日志输出字段，包括日期/时间、日志级别、关联的线程、类和消息</li></ul><h2 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装" aria-hidden="true">#</a> Docker 安装</h2><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像" aria-hidden="true">#</a> 拉取镜像</h3><p>拉取 Gerrit 服务需要的镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull sonatype/nexus3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建用户-1" tabindex="-1"><a class="header-anchor" href="#创建用户-1" aria-hidden="true">#</a> 创建用户</h3><p>使用 <code>nexus</code> 用户启动 Nexus 服务。</p><p>创建 <code>nexus</code> 用户，用户 UID 和 GID 值为 <code>200</code>。因为 Docker <code>nexus</code> 容器中 nexus 用户的 UID 和 GID 为 <code>200</code>，否则 nexus 容器启动失败。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token parameter variable">-g</span> <span class="token number">200</span> nexus
<span class="token function">sudo</span> <span class="token function">useradd</span> <span class="token parameter variable">-u</span> <span class="token number">200</span> <span class="token parameter variable">-g</span> nexus <span class="token parameter variable">-s</span> /bin/bash <span class="token parameter variable">-M</span> nexus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建挂载目录" tabindex="-1"><a class="header-anchor" href="#创建挂载目录" aria-hidden="true">#</a> 创建挂载目录</h3><p>创建挂载数据存储目录，并赋予 <code>nexus</code> 用户权限。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /opt/nexus/nexus-data
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> nexus:nexus /opt/nexus/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编辑-docker-compose-yaml-文件" tabindex="-1"><a class="header-anchor" href="#编辑-docker-compose-yaml-文件" aria-hidden="true">#</a> 编辑 docker-compose.yaml 文件</h3><p>使用 Docker Compose 创建 <code>nexus3</code> 服务。</p><p>在 <code>/opt/nexus/</code> 目录下创建 <code>docker-compose.yml</code> 部署文件，文件内容如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3&quot;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">nexus</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> sonatype/nexus3
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> nexus3
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 8081<span class="token punctuation">:</span><span class="token number">8081</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /opt/nexus/nexus<span class="token punctuation">-</span>data<span class="token punctuation">:</span>/nexus<span class="token punctuation">-</span>data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动-nexus-服务" tabindex="-1"><a class="header-anchor" href="#启动-nexus-服务" aria-hidden="true">#</a> 启动 nexus 服务</h3><p>启动由 Docker Compose 项目定义的服务，并且让这些服务在后台以守护进程（<code>daemon</code>）模式运行。</p><p>在 <code>docker-compose.yml</code> 文件目录中使用以下命令启动服务。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> compose up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>检查 nexus 容器日志，确保 Nexus 服务正常运行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> logs <span class="token parameter variable">-f</span> nexus3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="访问-nexus-仓库" tabindex="-1"><a class="header-anchor" href="#访问-nexus-仓库" aria-hidden="true">#</a> 访问 Nexus 仓库</h3><p>访问 <code>http://localhost:8081</code> 地址。</p><figure><img src="`+t+`" alt="首页" tabindex="0" loading="lazy"><figcaption>首页</figcaption></figure><h2 id="管理员登录-nexus" tabindex="-1"><a class="header-anchor" href="#管理员登录-nexus" aria-hidden="true">#</a> 管理员登录 Nexus</h2><p>点击 <em>Sign In</em> 登录，使用管理员 <code>admin</code> 用户登录，密码在 <code>admin.password</code> 文件中。</p><ul><li><p>Linux 安装 <code>admin.password</code> 文件位置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /opt/nexus/sonatype-work/nexus3/admin.password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Docker 安装 <code>admin.password</code> 文件位置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /opt/nexus/nexus-data/admin.password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><figure><img src="`+m+'" alt="Sign In" tabindex="0" loading="lazy"><figcaption>Sign In</figcaption></figure><p>根据向导完成所需设置，点击 <em>Next</em>。</p><figure><img src="'+v+'" alt="向导设置" tabindex="0" loading="lazy"><figcaption>向导设置</figcaption></figure><p>第一次登录需要修改密码，点击 <em>Next</em>。</p><figure><img src="'+h+'" alt="修改密码" tabindex="0" loading="lazy"><figcaption>修改密码</figcaption></figure><p>是否启用匿名用户访问，点击 <em>Next</em>。</p><figure><img src="'+b+'" alt="匿名访问" tabindex="0" loading="lazy"><figcaption>匿名访问</figcaption></figure><p>完成向导配置，点击 <em>Finish</em>。</p><figure><img src="'+g+'" alt="完成向导配置" tabindex="0" loading="lazy"><figcaption>完成向导配置</figcaption></figure><figure><img src="'+l+'" alt="Welcome 页面" tabindex="0" loading="lazy"><figcaption>Welcome 页面</figcaption></figure>',39);function R(S,D){const a=o("ExternalLinkIcon"),d=o("RouterLink");return c(),p("div",null,[s("p",null,[e("Nexus 3.x 官网 "),s("a",k,[e("下载地址"),n(a)])]),f,s("ul",null,[s("li",null,[n(d,{to:"/dev_env/jdk.html"},{default:u(()=>[e("Java 安装教程")]),_:1})])]),s("p",null,[e("Sonatype Nexus 存储库系统要求 CPU 最小 4 核，"),s("a",_,[e("参考官网"),n(a)]),e("。")]),y,s("p",null,[e("从官网下载 "),s("a",N,[e("nexus-3.66.0-02-unix.tar.gz"),n(a)]),e(" 安装包并解压。")]),w,s("p",null,[e("查看官网 "),s("a",L,[e("配置文件"),n(a)]),e(" 说明。")]),E])}const A=r(x,[["render",R],["__file","install.html.vue"]]);export{A as default};
